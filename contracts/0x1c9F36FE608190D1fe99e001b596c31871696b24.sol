contract main {




// =====================  Runtime code  =====================


#
#  - withdraw(uint256 arg1, uint256 arg2)
#  - updatePool(uint256 arg1)
#  - emergencyWithdraw(uint256 arg1)
#  - deposit(uint256 arg1, uint256 arg2)
#
address owner;
array of struct multLP;
mapping of uint256 stor2;
address HCTAddress;
uint256 hCTPerBlock;
array of struct poolInfo;
mapping of struct userInfo;
mapping of uint256 poolCorrespond;
mapping of uint256 lpOfPid;
uint8 paused;
uint256 stor9;
uint256 totalAllocPoint;
uint256 startBlock;
address multLpChefAddress;
address multLpTokenAddress;
uint256 halvingPeriod;
array of address stor1546678032441257452667456735582814959992782782816731922691272282333561699760;
array of uint256 stor1546678032441257452667456735582814959992782782816731922691272282333561699761;
array of uint256 stor1546678032441257452667456735582814959992782782816731922691272282333561699762;
array of uint256 stor1546678032441257452667456735582814959992782782816731922691272282333561699763;
array of uint256 stor1546678032441257452667456735582814959992782782816731922691272282333561699764;
array of uint256 stor1546678032441257452667456735582814959992782782816731922691272282333561699765;

function poolLength() payable {
    return poolInfo.length
}

function poolInfo(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 < poolInfo.length
    return poolInfo[arg1].field_0, 
           poolInfo[arg1].field_256,
           poolInfo[arg1].field_512,
           poolInfo[arg1].field_768,
           poolInfo[arg1].field_1024,
           poolInfo[arg1].field_1280
}

function totalAllocPoint() payable {
    return totalAllocPoint
}

function HCTPerBlock() payable {
    return hCTPerBlock
}

function getMultLPAddress(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if multLP.length < 1:
        revert with 'NH{q', 17
    if arg1 > multLP.length - 1:
        revert with 0, 'not find this multLP'
    if arg1 >= multLP.length:
        revert with 'NH{q', 50
    return multLP[arg1].field_0
}

function startBlock() payable {
    return startBlock
}

function halvingPeriod() payable {
    return halvingPeriod
}

function paused() payable {
    return bool(uint8(paused))
}

function multLpToken() payable {
    return multLpTokenAddress
}

function isMultLP(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return bool(stor2[address(arg1)])
}

function owner() payable {
    return owner
}

function userInfo(uint256 arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    require arg2 == arg2
    return userInfo[arg1][arg2].field_0, userInfo[arg1][arg2].field_256, userInfo[arg1][arg2].field_512
}

function LpOfPid(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return lpOfPid[arg1]
}

function HCT() payable {
    return HCTAddress
}

function poolCorrespond(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    return poolCorrespond[arg1]
}

function multLpChef() payable {
    return multLpChefAddress
}

function getMultLPLength() payable {
    return multLP.length
}

function _fallback() payable {
    revert
}

function renounceOwnership() payable {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    owner = 0
    emit OwnershipTransferred(owner, 0);
}

function setPause() payable {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    uint256(stor9) = not uint8(paused) or Mask(248, 8, uint256(stor9))
}

function setHalvingPeriod(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    halvingPeriod = arg1
}

function setPoolCorr(uint256 arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if poolInfo.length < 1:
        revert with 'NH{q', 17
    if arg1 > poolInfo.length - 1:
        revert with 0, 'not find this pool'
    poolCorrespond[arg1] = arg2
}

function phase(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if 0 == halvingPeriod:
        return 0
    if arg1 <= startBlock:
        return 0
    if arg1 < startBlock:
        revert with 'NH{q', 17
    if arg1 - startBlock < 1:
        revert with 'NH{q', 17
    if not halvingPeriod:
        revert with 'NH{q', 18
    return (arg1 + -startBlock - 1 / halvingPeriod)
}

function transferOwnership(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Ownable: new owner is the zero address'
    owner = arg1
    emit OwnershipTransferred(owner, arg1);
}

function setMultLP(address arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0, 'is the zero address'
    if not arg2:
        revert with 0, 'is the zero address'
    multLpTokenAddress = arg1
    multLpChefAddress = arg2
}

function reward(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if 0 == halvingPeriod:
        return hCTPerBlock
    if arg1 <= startBlock:
        return hCTPerBlock
    if arg1 < startBlock:
        revert with 'NH{q', 17
    if arg1 - startBlock < 1:
        revert with 'NH{q', 17
    if not halvingPeriod:
        revert with 'NH{q', 18
    if not arg1 + -startBlock - 1 / halvingPeriod:
        return hCTPerBlock
    if arg1 + -startBlock - 1 / halvingPeriod > 255:
        revert with 'NH{q', 17
    if not 1 << arg1 + -startBlock - 1 / halvingPeriod:
        revert with 'NH{q', 18
    return (hCTPerBlock / 1 << arg1 + -startBlock - 1 / halvingPeriod)
}

function addMultLP(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0, 'LP is the zero address'
    require ext_code.size(arg1)
    call arg1.approve(address arg1, uint256 arg2) with:
         gas gas_remaining wei
        args multLpChefAddress, -1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
    if stor2[address(arg1)]:
        return 0
    multLP.length++
    multLP[multLP.length].field_0 = arg1
    multLP[multLP.length].field_160 = 0
    stor2[address(arg1)] = multLP.length
    return 1
}

function replaceMultLP(address arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0, 'is the zero address'
    if not arg2:
        revert with 0, 'is the zero address'
    if bool(uint8(paused)) != 1:
        revert with 0, 'No mining suspension'
    multLpTokenAddress = arg1
    multLpChefAddress = arg2
    idx = multLP.length
    while idx:
        if 0 >= multLP.length:
            revert with 'NH{q', 50
        mem[96] = 0x5312ea8e00000000000000000000000000000000000000000000000000000000
        mem[100] = poolCorrespond[stor8[address(stor1.field_0)]]
        require ext_code.size(multLpChefAddress)
        call multLpChefAddress.0x5312ea8e with:
             gas gas_remaining wei
            args poolCorrespond[stor8[address(stor1.field_0)]]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        mem[0] = address(multLP.field_0)
        mem[32] = 2
        if stor2[address(stor1.field_0)]:
            if stor2[address(stor1.field_0)] < 1:
                revert with 'NH{q', 17
            if multLP.length < 1:
                revert with 'NH{q', 17
            if multLP.length - 1 != stor2[address(stor1.field_0)] - 1:
                if multLP.length - 1 >= multLP.length:
                    revert with 'NH{q', 50
                if stor2[address(stor1.field_0)] - 1 >= multLP.length:
                    revert with 'NH{q', 50
                multLP[stor2[address(multLP.field_0)]].field_0 = multLP[multLP.length].field_0
                stor2[stor1[stor1.length].field_0] = stor2[address(stor1.field_0)]
            if not multLP.length:
                revert with 'NH{q', 49
            multLP[multLP.length].field_0 = 0
            multLP.length--
            mem[0] = address(multLP.field_0)
            mem[32] = 2
            stor2[address(stor1.field_0)] = 0
        if not idx:
            revert with 'NH{q', 17
        idx = idx - 1
        continue 
}

function getHCTBlockReward(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if 0 == halvingPeriod:
        if 0 == halvingPeriod:
            if block.number < arg1:
                revert with 'NH{q', 17
            if block.number - arg1 and hCTPerBlock > -1 / block.number - arg1:
                revert with 'NH{q', 17
            if 0 > !((block.number * hCTPerBlock) - (arg1 * hCTPerBlock)):
                revert with 'NH{q', 17
            return ((block.number * hCTPerBlock) - (arg1 * hCTPerBlock))
        if block.number <= startBlock:
            if block.number < arg1:
                revert with 'NH{q', 17
            if block.number - arg1 and hCTPerBlock > -1 / block.number - arg1:
                revert with 'NH{q', 17
            if 0 > !((block.number * hCTPerBlock) - (arg1 * hCTPerBlock)):
                revert with 'NH{q', 17
            return ((block.number * hCTPerBlock) - (arg1 * hCTPerBlock))
        if block.number < startBlock:
            revert with 'NH{q', 17
        if block.number - startBlock < 1:
            revert with 'NH{q', 17
        if not halvingPeriod:
            revert with 'NH{q', 18
        if not block.number + -startBlock - 1 / halvingPeriod:
            if block.number < arg1:
                revert with 'NH{q', 17
            if block.number - arg1 and hCTPerBlock > -1 / block.number - arg1:
                revert with 'NH{q', 17
            if 0 > !((block.number * hCTPerBlock) - (arg1 * hCTPerBlock)):
                revert with 'NH{q', 17
            return ((block.number * hCTPerBlock) - (arg1 * hCTPerBlock))
        if block.number + -startBlock - 1 / halvingPeriod > 255:
            revert with 'NH{q', 17
        if not 1 << block.number + -startBlock - 1 / halvingPeriod:
            revert with 'NH{q', 18
        if block.number < arg1:
            revert with 'NH{q', 17
        if block.number - arg1 and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - arg1:
            revert with 'NH{q', 17
        if 0 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (arg1 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
            revert with 'NH{q', 17
        return ((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (arg1 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod))
    if arg1 <= startBlock:
        if 0 == halvingPeriod:
            if 0 == halvingPeriod:
                if block.number < arg1:
                    revert with 'NH{q', 17
                if block.number - arg1 and hCTPerBlock > -1 / block.number - arg1:
                    revert with 'NH{q', 17
                if 0 > !((block.number * hCTPerBlock) - (arg1 * hCTPerBlock)):
                    revert with 'NH{q', 17
                return ((block.number * hCTPerBlock) - (arg1 * hCTPerBlock))
            if block.number <= startBlock:
                if block.number < arg1:
                    revert with 'NH{q', 17
                if block.number - arg1 and hCTPerBlock > -1 / block.number - arg1:
                    revert with 'NH{q', 17
                if 0 > !((block.number * hCTPerBlock) - (arg1 * hCTPerBlock)):
                    revert with 'NH{q', 17
                return ((block.number * hCTPerBlock) - (arg1 * hCTPerBlock))
            if block.number < startBlock:
                revert with 'NH{q', 17
            if block.number - startBlock < 1:
                revert with 'NH{q', 17
            if not halvingPeriod:
                revert with 'NH{q', 18
            if not block.number + -startBlock - 1 / halvingPeriod:
                if block.number < arg1:
                    revert with 'NH{q', 17
                if block.number - arg1 and hCTPerBlock > -1 / block.number - arg1:
                    revert with 'NH{q', 17
                if 0 > !((block.number * hCTPerBlock) - (arg1 * hCTPerBlock)):
                    revert with 'NH{q', 17
                return ((block.number * hCTPerBlock) - (arg1 * hCTPerBlock))
            if block.number + -startBlock - 1 / halvingPeriod > 255:
                revert with 'NH{q', 17
            if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                revert with 'NH{q', 18
            if block.number < arg1:
                revert with 'NH{q', 17
            if block.number - arg1 and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - arg1:
                revert with 'NH{q', 17
            if 0 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (arg1 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                revert with 'NH{q', 17
            return ((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (arg1 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod))
        if block.number <= startBlock:
            if 0 == halvingPeriod:
                if block.number < arg1:
                    revert with 'NH{q', 17
                if block.number - arg1 and hCTPerBlock > -1 / block.number - arg1:
                    revert with 'NH{q', 17
                if 0 > !((block.number * hCTPerBlock) - (arg1 * hCTPerBlock)):
                    revert with 'NH{q', 17
                return ((block.number * hCTPerBlock) - (arg1 * hCTPerBlock))
            if block.number <= startBlock:
                if block.number < arg1:
                    revert with 'NH{q', 17
                if block.number - arg1 and hCTPerBlock > -1 / block.number - arg1:
                    revert with 'NH{q', 17
                if 0 > !((block.number * hCTPerBlock) - (arg1 * hCTPerBlock)):
                    revert with 'NH{q', 17
                return ((block.number * hCTPerBlock) - (arg1 * hCTPerBlock))
            if block.number < startBlock:
                revert with 'NH{q', 17
            if block.number - startBlock < 1:
                revert with 'NH{q', 17
            if not halvingPeriod:
                revert with 'NH{q', 18
            if not block.number + -startBlock - 1 / halvingPeriod:
                if block.number < arg1:
                    revert with 'NH{q', 17
                if block.number - arg1 and hCTPerBlock > -1 / block.number - arg1:
                    revert with 'NH{q', 17
                if 0 > !((block.number * hCTPerBlock) - (arg1 * hCTPerBlock)):
                    revert with 'NH{q', 17
                return ((block.number * hCTPerBlock) - (arg1 * hCTPerBlock))
            if block.number + -startBlock - 1 / halvingPeriod > 255:
                revert with 'NH{q', 17
            if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                revert with 'NH{q', 18
            if block.number < arg1:
                revert with 'NH{q', 17
            if block.number - arg1 and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - arg1:
                revert with 'NH{q', 17
            if 0 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (arg1 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                revert with 'NH{q', 17
            return ((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (arg1 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod))
        if block.number < startBlock:
            revert with 'NH{q', 17
        if block.number - startBlock < 1:
            revert with 'NH{q', 17
        if not halvingPeriod:
            revert with 'NH{q', 18
        idx = 0
        s = 0
        t = arg1
        while idx < block.number + -startBlock - 1 / halvingPeriod:
            if idx == -1:
                revert with 'NH{q', 17
            if idx + 1 and halvingPeriod > -1 / idx + 1:
                revert with 'NH{q', 17
            if halvingPeriod + (idx * halvingPeriod) > !startBlock:
                revert with 'NH{q', 17
            if 0 == halvingPeriod:
                if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                    revert with 'NH{q', 17
                if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                    revert with 'NH{q', 17
                if s > !((halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)):
                    revert with 'NH{q', 17
                idx = idx + 1
                s = s + (halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)
                t = halvingPeriod + (idx * halvingPeriod) + startBlock
                continue 
            if halvingPeriod + (idx * halvingPeriod) + startBlock <= startBlock:
                if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                    revert with 'NH{q', 17
                if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                    revert with 'NH{q', 17
                if s > !((halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)):
                    revert with 'NH{q', 17
                idx = idx + 1
                s = s + (halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)
                t = halvingPeriod + (idx * halvingPeriod) + startBlock
                continue 
            if halvingPeriod + (idx * halvingPeriod) + startBlock < startBlock:
                revert with 'NH{q', 17
            if halvingPeriod + (idx * halvingPeriod) < 1:
                revert with 'NH{q', 17
            if not halvingPeriod:
                revert with 'NH{q', 18
            if not halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod:
                if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                    revert with 'NH{q', 17
                if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                    revert with 'NH{q', 17
                if s > !((halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)):
                    revert with 'NH{q', 17
                idx = idx + 1
                s = s + (halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)
                t = halvingPeriod + (idx * halvingPeriod) + startBlock
                continue 
            if halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod > 255:
                revert with 'NH{q', 17
            if not 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod:
                revert with 'NH{q', 18
            if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                revert with 'NH{q', 17
            if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                revert with 'NH{q', 17
            if s > !((halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (idx * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) - (t * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod)):
                revert with 'NH{q', 17
            idx = idx + 1
            s = s + (halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (idx * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) - (t * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod)
            t = halvingPeriod + (idx * halvingPeriod) + startBlock
            continue 
    else:
        if arg1 < startBlock:
            revert with 'NH{q', 17
        if arg1 - startBlock < 1:
            revert with 'NH{q', 17
        if not halvingPeriod:
            revert with 'NH{q', 18
        if 0 == halvingPeriod:
            idx = arg1 + -startBlock - 1 / halvingPeriod
            s = 0
            t = arg1
            while idx < 0:
                if idx == -1:
                    revert with 'NH{q', 17
                if idx + 1 and halvingPeriod > -1 / idx + 1:
                    revert with 'NH{q', 17
                if halvingPeriod + (idx * halvingPeriod) > !startBlock:
                    revert with 'NH{q', 17
                if 0 == halvingPeriod:
                    if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                        revert with 'NH{q', 17
                    if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                        revert with 'NH{q', 17
                    if s > !((halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)):
                        revert with 'NH{q', 17
                    idx = idx + 1
                    s = s + (halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)
                    t = halvingPeriod + (idx * halvingPeriod) + startBlock
                    continue 
                if halvingPeriod + (idx * halvingPeriod) + startBlock <= startBlock:
                    if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                        revert with 'NH{q', 17
                    if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                        revert with 'NH{q', 17
                    if s > !((halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)):
                        revert with 'NH{q', 17
                    idx = idx + 1
                    s = s + (halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)
                    t = halvingPeriod + (idx * halvingPeriod) + startBlock
                    continue 
                if halvingPeriod + (idx * halvingPeriod) + startBlock < startBlock:
                    revert with 'NH{q', 17
                if halvingPeriod + (idx * halvingPeriod) < 1:
                    revert with 'NH{q', 17
                if not halvingPeriod:
                    revert with 'NH{q', 18
                if not halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod:
                    if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                        revert with 'NH{q', 17
                    if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                        revert with 'NH{q', 17
                    if s > !((halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)):
                        revert with 'NH{q', 17
                    idx = idx + 1
                    s = s + (halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)
                    t = halvingPeriod + (idx * halvingPeriod) + startBlock
                    continue 
                if halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod > 255:
                    revert with 'NH{q', 17
                if not 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod:
                    revert with 'NH{q', 18
                if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                    revert with 'NH{q', 17
                if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                    revert with 'NH{q', 17
                if s > !((halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (idx * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) - (t * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod)):
                    revert with 'NH{q', 17
                idx = idx + 1
                s = s + (halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (idx * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) - (t * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod)
                t = halvingPeriod + (idx * halvingPeriod) + startBlock
                continue 
        else:
            if block.number <= startBlock:
                idx = arg1 + -startBlock - 1 / halvingPeriod
                s = 0
                t = arg1
                while idx < 0:
                    if idx == -1:
                        revert with 'NH{q', 17
                    if idx + 1 and halvingPeriod > -1 / idx + 1:
                        revert with 'NH{q', 17
                    if halvingPeriod + (idx * halvingPeriod) > !startBlock:
                        revert with 'NH{q', 17
                    if 0 == halvingPeriod:
                        if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                            revert with 'NH{q', 17
                        if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                            revert with 'NH{q', 17
                        if s > !((halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)):
                            revert with 'NH{q', 17
                        idx = idx + 1
                        s = s + (halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)
                        t = halvingPeriod + (idx * halvingPeriod) + startBlock
                        continue 
                    if halvingPeriod + (idx * halvingPeriod) + startBlock <= startBlock:
                        if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                            revert with 'NH{q', 17
                        if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                            revert with 'NH{q', 17
                        if s > !((halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)):
                            revert with 'NH{q', 17
                        idx = idx + 1
                        s = s + (halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)
                        t = halvingPeriod + (idx * halvingPeriod) + startBlock
                        continue 
                    if halvingPeriod + (idx * halvingPeriod) + startBlock < startBlock:
                        revert with 'NH{q', 17
                    if halvingPeriod + (idx * halvingPeriod) < 1:
                        revert with 'NH{q', 17
                    if not halvingPeriod:
                        revert with 'NH{q', 18
                    if not halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod:
                        if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                            revert with 'NH{q', 17
                        if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                            revert with 'NH{q', 17
                        if s > !((halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)):
                            revert with 'NH{q', 17
                        idx = idx + 1
                        s = s + (halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)
                        t = halvingPeriod + (idx * halvingPeriod) + startBlock
                        continue 
                    if halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod > 255:
                        revert with 'NH{q', 17
                    if not 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod:
                        revert with 'NH{q', 18
                    if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                        revert with 'NH{q', 17
                    if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                        revert with 'NH{q', 17
                    if s > !((halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (idx * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) - (t * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod)):
                        revert with 'NH{q', 17
                    idx = idx + 1
                    s = s + (halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (idx * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) - (t * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod)
                    t = halvingPeriod + (idx * halvingPeriod) + startBlock
                    continue 
            else:
                if block.number < startBlock:
                    revert with 'NH{q', 17
                if block.number - startBlock < 1:
                    revert with 'NH{q', 17
                if not halvingPeriod:
                    revert with 'NH{q', 18
                idx = arg1 + -startBlock - 1 / halvingPeriod
                s = 0
                t = arg1
                while idx < block.number + -startBlock - 1 / halvingPeriod:
                    if idx == -1:
                        revert with 'NH{q', 17
                    if idx + 1 and halvingPeriod > -1 / idx + 1:
                        revert with 'NH{q', 17
                    if halvingPeriod + (idx * halvingPeriod) > !startBlock:
                        revert with 'NH{q', 17
                    if 0 == halvingPeriod:
                        if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                            revert with 'NH{q', 17
                        if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                            revert with 'NH{q', 17
                        if s > !((halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)):
                            revert with 'NH{q', 17
                        idx = idx + 1
                        s = s + (halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)
                        t = halvingPeriod + (idx * halvingPeriod) + startBlock
                        continue 
                    if halvingPeriod + (idx * halvingPeriod) + startBlock <= startBlock:
                        if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                            revert with 'NH{q', 17
                        if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                            revert with 'NH{q', 17
                        if s > !((halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)):
                            revert with 'NH{q', 17
                        idx = idx + 1
                        s = s + (halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)
                        t = halvingPeriod + (idx * halvingPeriod) + startBlock
                        continue 
                    if halvingPeriod + (idx * halvingPeriod) + startBlock < startBlock:
                        revert with 'NH{q', 17
                    if halvingPeriod + (idx * halvingPeriod) < 1:
                        revert with 'NH{q', 17
                    if not halvingPeriod:
                        revert with 'NH{q', 18
                    if not halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod:
                        if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                            revert with 'NH{q', 17
                        if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                            revert with 'NH{q', 17
                        if s > !((halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)):
                            revert with 'NH{q', 17
                        idx = idx + 1
                        s = s + (halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)
                        t = halvingPeriod + (idx * halvingPeriod) + startBlock
                        continue 
                    if halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod > 255:
                        revert with 'NH{q', 17
                    if not 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod:
                        revert with 'NH{q', 18
                    if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                        revert with 'NH{q', 17
                    if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                        revert with 'NH{q', 17
                    if s > !((halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (idx * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) - (t * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod)):
                        revert with 'NH{q', 17
                    idx = idx + 1
                    s = s + (halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (idx * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) - (t * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod)
                    t = halvingPeriod + (idx * halvingPeriod) + startBlock
                    continue 
    if 0 == halvingPeriod:
        if block.number < t:
            revert with 'NH{q', 17
        if block.number - t and hCTPerBlock > -1 / block.number - t:
            revert with 'NH{q', 17
        if s > !((block.number * hCTPerBlock) - (t * hCTPerBlock)):
            revert with 'NH{q', 17
        return (s + (block.number * hCTPerBlock) - (t * hCTPerBlock))
    if block.number <= startBlock:
        if block.number < t:
            revert with 'NH{q', 17
        if block.number - t and hCTPerBlock > -1 / block.number - t:
            revert with 'NH{q', 17
        if s > !((block.number * hCTPerBlock) - (t * hCTPerBlock)):
            revert with 'NH{q', 17
        return (s + (block.number * hCTPerBlock) - (t * hCTPerBlock))
    if block.number < startBlock:
        revert with 'NH{q', 17
    if block.number - startBlock < 1:
        revert with 'NH{q', 17
    if not halvingPeriod:
        revert with 'NH{q', 18
    if not block.number + -startBlock - 1 / halvingPeriod:
        if block.number < t:
            revert with 'NH{q', 17
        if block.number - t and hCTPerBlock > -1 / block.number - t:
            revert with 'NH{q', 17
        if s > !((block.number * hCTPerBlock) - (t * hCTPerBlock)):
            revert with 'NH{q', 17
        return (s + (block.number * hCTPerBlock) - (t * hCTPerBlock))
    if block.number + -startBlock - 1 / halvingPeriod > 255:
        revert with 'NH{q', 17
    if not 1 << block.number + -startBlock - 1 / halvingPeriod:
        revert with 'NH{q', 18
    if block.number < t:
        revert with 'NH{q', 17
    if block.number - t and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - t:
        revert with 'NH{q', 17
    if s > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (t * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
        revert with 'NH{q', 17
    return (s + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (t * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod))
}

function pending(uint256 arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    require arg2 == arg2
    if arg1 >= poolInfo.length:
        revert with 0, 'Hurricane: Pid Non-Existent'
    if arg1 >= poolInfo.length:
        revert with 'NH{q', 50
    if not stor2[stor5[arg1].field_0]:
        require ext_code.size(poolInfo[arg1].field_0)
        staticcall poolInfo[arg1].field_0.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not userInfo[arg1][address(arg2)].field_0:
            return 0
        if block.number <= poolInfo[arg1].field_512:
            if poolInfo[arg1].field_512 != block.number:
                return 0
            if userInfo[arg1][address(arg2)].field_0 and poolInfo[arg1].field_768 > -1 / userInfo[arg1][address(arg2)].field_0:
                revert with 'NH{q', 17
            if userInfo[arg1][address(arg2)].field_0 * poolInfo[arg1].field_768 / 10^12 < userInfo[arg1][address(arg2)].field_256:
                revert with 'NH{q', 17
            return (userInfo[arg1][address(arg2)].field_0 * poolInfo[arg1].field_768 / 10^12) - userInfo[arg1][address(arg2)].field_256, 0
        if 0 == halvingPeriod:
            if 0 == halvingPeriod:
                if block.number < poolInfo[arg1].field_512:
                    revert with 'NH{q', 17
                if block.number - poolInfo[arg1].field_512 and hCTPerBlock > -1 / block.number - poolInfo[arg1].field_512:
                    revert with 'NH{q', 17
                if 0 > !((block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock)):
                    revert with 'NH{q', 17
                if (block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock) and poolInfo[arg1].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock):
                    revert with 'NH{q', 17
                if not totalAllocPoint:
                    revert with 'NH{q', 18
                if (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint and 10^12 > -1 / (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint:
                    revert with 'NH{q', 17
                if not ext_call.return_data[0]:
                    revert with 'NH{q', 18
                if poolInfo[arg1].field_768 > !(10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0]):
                    revert with 'NH{q', 17
                if userInfo[arg1][address(arg2)].field_0 and poolInfo[arg1].field_768 + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0]) > -1 / userInfo[arg1][address(arg2)].field_0:
                    revert with 'NH{q', 17
                if (poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0] * userInfo[arg1][address(arg2)].field_0) / 10^12 < userInfo[arg1][address(arg2)].field_256:
                    revert with 'NH{q', 17
                return ((poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0] * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_256, 
                       0
            if block.number <= startBlock:
                if block.number < poolInfo[arg1].field_512:
                    revert with 'NH{q', 17
                if block.number - poolInfo[arg1].field_512 and hCTPerBlock > -1 / block.number - poolInfo[arg1].field_512:
                    revert with 'NH{q', 17
                if 0 > !((block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock)):
                    revert with 'NH{q', 17
                if (block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock) and poolInfo[arg1].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock):
                    revert with 'NH{q', 17
                if not totalAllocPoint:
                    revert with 'NH{q', 18
                if (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint and 10^12 > -1 / (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint:
                    revert with 'NH{q', 17
                if not ext_call.return_data[0]:
                    revert with 'NH{q', 18
                if poolInfo[arg1].field_768 > !(10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0]):
                    revert with 'NH{q', 17
                if userInfo[arg1][address(arg2)].field_0 and poolInfo[arg1].field_768 + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0]) > -1 / userInfo[arg1][address(arg2)].field_0:
                    revert with 'NH{q', 17
                if (poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0] * userInfo[arg1][address(arg2)].field_0) / 10^12 < userInfo[arg1][address(arg2)].field_256:
                    revert with 'NH{q', 17
                return ((poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0] * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_256, 
                       0
            if block.number < startBlock:
                revert with 'NH{q', 17
            if block.number - startBlock < 1:
                revert with 'NH{q', 17
            if not halvingPeriod:
                revert with 'NH{q', 18
            if not block.number + -startBlock - 1 / halvingPeriod:
                if block.number < poolInfo[arg1].field_512:
                    revert with 'NH{q', 17
                if block.number - poolInfo[arg1].field_512 and hCTPerBlock > -1 / block.number - poolInfo[arg1].field_512:
                    revert with 'NH{q', 17
                if 0 > !((block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock)):
                    revert with 'NH{q', 17
                if (block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock) and poolInfo[arg1].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock):
                    revert with 'NH{q', 17
                if not totalAllocPoint:
                    revert with 'NH{q', 18
                if (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint and 10^12 > -1 / (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint:
                    revert with 'NH{q', 17
                if not ext_call.return_data[0]:
                    revert with 'NH{q', 18
                if poolInfo[arg1].field_768 > !(10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0]):
                    revert with 'NH{q', 17
                if userInfo[arg1][address(arg2)].field_0 and poolInfo[arg1].field_768 + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0]) > -1 / userInfo[arg1][address(arg2)].field_0:
                    revert with 'NH{q', 17
                if (poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0] * userInfo[arg1][address(arg2)].field_0) / 10^12 < userInfo[arg1][address(arg2)].field_256:
                    revert with 'NH{q', 17
                return ((poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0] * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_256, 
                       0
            if block.number + -startBlock - 1 / halvingPeriod > 255:
                revert with 'NH{q', 17
            if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                revert with 'NH{q', 18
            if block.number < poolInfo[arg1].field_512:
                revert with 'NH{q', 17
            if block.number - poolInfo[arg1].field_512 and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - poolInfo[arg1].field_512:
                revert with 'NH{q', 17
            if 0 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                revert with 'NH{q', 17
            if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[arg1].field_256 > -1 / (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                revert with 'NH{q', 17
            if not totalAllocPoint:
                revert with 'NH{q', 18
            if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint and 10^12 > -1 / (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint:
                revert with 'NH{q', 17
            if not ext_call.return_data[0]:
                revert with 'NH{q', 18
            if poolInfo[arg1].field_768 > !(10^12 * (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0]):
                revert with 'NH{q', 17
            if userInfo[arg1][address(arg2)].field_0 and poolInfo[arg1].field_768 + (10^12 * (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0]) > -1 / userInfo[arg1][address(arg2)].field_0:
                revert with 'NH{q', 17
            if (poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0] * userInfo[arg1][address(arg2)].field_0) / 10^12 < userInfo[arg1][address(arg2)].field_256:
                revert with 'NH{q', 17
            return ((poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0] * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_256, 
                   0
        if poolInfo[arg1].field_512 <= startBlock:
            if 0 == halvingPeriod:
                if 0 == halvingPeriod:
                    if block.number < poolInfo[arg1].field_512:
                        revert with 'NH{q', 17
                    if block.number - poolInfo[arg1].field_512 and hCTPerBlock > -1 / block.number - poolInfo[arg1].field_512:
                        revert with 'NH{q', 17
                    if 0 > !((block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock)):
                        revert with 'NH{q', 17
                    if (block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock) and poolInfo[arg1].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock):
                        revert with 'NH{q', 17
                    if not totalAllocPoint:
                        revert with 'NH{q', 18
                    if (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint and 10^12 > -1 / (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint:
                        revert with 'NH{q', 17
                    if not ext_call.return_data[0]:
                        revert with 'NH{q', 18
                    if poolInfo[arg1].field_768 > !(10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    if userInfo[arg1][address(arg2)].field_0 and poolInfo[arg1].field_768 + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0]) > -1 / userInfo[arg1][address(arg2)].field_0:
                        revert with 'NH{q', 17
                    if (poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0] * userInfo[arg1][address(arg2)].field_0) / 10^12 < userInfo[arg1][address(arg2)].field_256:
                        revert with 'NH{q', 17
                    return ((poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0] * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_256, 
                           0
                if block.number <= startBlock:
                    if block.number < poolInfo[arg1].field_512:
                        revert with 'NH{q', 17
                    if block.number - poolInfo[arg1].field_512 and hCTPerBlock > -1 / block.number - poolInfo[arg1].field_512:
                        revert with 'NH{q', 17
                    if 0 > !((block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock)):
                        revert with 'NH{q', 17
                    if (block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock) and poolInfo[arg1].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock):
                        revert with 'NH{q', 17
                    if not totalAllocPoint:
                        revert with 'NH{q', 18
                    if (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint and 10^12 > -1 / (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint:
                        revert with 'NH{q', 17
                    if not ext_call.return_data[0]:
                        revert with 'NH{q', 18
                    if poolInfo[arg1].field_768 > !(10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    if userInfo[arg1][address(arg2)].field_0 and poolInfo[arg1].field_768 + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0]) > -1 / userInfo[arg1][address(arg2)].field_0:
                        revert with 'NH{q', 17
                    if (poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0] * userInfo[arg1][address(arg2)].field_0) / 10^12 < userInfo[arg1][address(arg2)].field_256:
                        revert with 'NH{q', 17
                    return ((poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0] * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_256, 
                           0
                if block.number < startBlock:
                    revert with 'NH{q', 17
                if block.number - startBlock < 1:
                    revert with 'NH{q', 17
                if not halvingPeriod:
                    revert with 'NH{q', 18
                if not block.number + -startBlock - 1 / halvingPeriod:
                    if block.number < poolInfo[arg1].field_512:
                        revert with 'NH{q', 17
                    if block.number - poolInfo[arg1].field_512 and hCTPerBlock > -1 / block.number - poolInfo[arg1].field_512:
                        revert with 'NH{q', 17
                    if 0 > !((block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock)):
                        revert with 'NH{q', 17
                    if (block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock) and poolInfo[arg1].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock):
                        revert with 'NH{q', 17
                    if not totalAllocPoint:
                        revert with 'NH{q', 18
                    if (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint and 10^12 > -1 / (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint:
                        revert with 'NH{q', 17
                    if not ext_call.return_data[0]:
                        revert with 'NH{q', 18
                    if poolInfo[arg1].field_768 > !(10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    if userInfo[arg1][address(arg2)].field_0 and poolInfo[arg1].field_768 + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0]) > -1 / userInfo[arg1][address(arg2)].field_0:
                        revert with 'NH{q', 17
                    if (poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0] * userInfo[arg1][address(arg2)].field_0) / 10^12 < userInfo[arg1][address(arg2)].field_256:
                        revert with 'NH{q', 17
                    return ((poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0] * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_256, 
                           0
                if block.number + -startBlock - 1 / halvingPeriod > 255:
                    revert with 'NH{q', 17
                if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                    revert with 'NH{q', 18
                if block.number < poolInfo[arg1].field_512:
                    revert with 'NH{q', 17
                if block.number - poolInfo[arg1].field_512 and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - poolInfo[arg1].field_512:
                    revert with 'NH{q', 17
                if 0 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                    revert with 'NH{q', 17
                if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[arg1].field_256 > -1 / (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                    revert with 'NH{q', 17
                if not totalAllocPoint:
                    revert with 'NH{q', 18
                if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint and 10^12 > -1 / (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint:
                    revert with 'NH{q', 17
                if not ext_call.return_data[0]:
                    revert with 'NH{q', 18
                if poolInfo[arg1].field_768 > !(10^12 * (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0]):
                    revert with 'NH{q', 17
                if userInfo[arg1][address(arg2)].field_0 and poolInfo[arg1].field_768 + (10^12 * (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0]) > -1 / userInfo[arg1][address(arg2)].field_0:
                    revert with 'NH{q', 17
                if (poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0] * userInfo[arg1][address(arg2)].field_0) / 10^12 < userInfo[arg1][address(arg2)].field_256:
                    revert with 'NH{q', 17
                return ((poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0] * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_256, 
                       0
            if block.number <= startBlock:
                if 0 == halvingPeriod:
                    if block.number < poolInfo[arg1].field_512:
                        revert with 'NH{q', 17
                    if block.number - poolInfo[arg1].field_512 and hCTPerBlock > -1 / block.number - poolInfo[arg1].field_512:
                        revert with 'NH{q', 17
                    if 0 > !((block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock)):
                        revert with 'NH{q', 17
                    if (block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock) and poolInfo[arg1].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock):
                        revert with 'NH{q', 17
                    if not totalAllocPoint:
                        revert with 'NH{q', 18
                    if (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint and 10^12 > -1 / (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint:
                        revert with 'NH{q', 17
                    if not ext_call.return_data[0]:
                        revert with 'NH{q', 18
                    if poolInfo[arg1].field_768 > !(10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    if userInfo[arg1][address(arg2)].field_0 and poolInfo[arg1].field_768 + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0]) > -1 / userInfo[arg1][address(arg2)].field_0:
                        revert with 'NH{q', 17
                    if (poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0] * userInfo[arg1][address(arg2)].field_0) / 10^12 < userInfo[arg1][address(arg2)].field_256:
                        revert with 'NH{q', 17
                    return ((poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0] * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_256, 
                           0
                if block.number <= startBlock:
                    if block.number < poolInfo[arg1].field_512:
                        revert with 'NH{q', 17
                    if block.number - poolInfo[arg1].field_512 and hCTPerBlock > -1 / block.number - poolInfo[arg1].field_512:
                        revert with 'NH{q', 17
                    if 0 > !((block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock)):
                        revert with 'NH{q', 17
                    if (block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock) and poolInfo[arg1].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock):
                        revert with 'NH{q', 17
                    if not totalAllocPoint:
                        revert with 'NH{q', 18
                    if (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint and 10^12 > -1 / (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint:
                        revert with 'NH{q', 17
                    if not ext_call.return_data[0]:
                        revert with 'NH{q', 18
                    if poolInfo[arg1].field_768 > !(10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    if userInfo[arg1][address(arg2)].field_0 and poolInfo[arg1].field_768 + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0]) > -1 / userInfo[arg1][address(arg2)].field_0:
                        revert with 'NH{q', 17
                    if (poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0] * userInfo[arg1][address(arg2)].field_0) / 10^12 < userInfo[arg1][address(arg2)].field_256:
                        revert with 'NH{q', 17
                    return ((poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0] * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_256, 
                           0
                if block.number < startBlock:
                    revert with 'NH{q', 17
                if block.number - startBlock < 1:
                    revert with 'NH{q', 17
                if not halvingPeriod:
                    revert with 'NH{q', 18
                if not block.number + -startBlock - 1 / halvingPeriod:
                    if block.number < poolInfo[arg1].field_512:
                        revert with 'NH{q', 17
                    if block.number - poolInfo[arg1].field_512 and hCTPerBlock > -1 / block.number - poolInfo[arg1].field_512:
                        revert with 'NH{q', 17
                    if 0 > !((block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock)):
                        revert with 'NH{q', 17
                    if (block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock) and poolInfo[arg1].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock):
                        revert with 'NH{q', 17
                    if not totalAllocPoint:
                        revert with 'NH{q', 18
                    if (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint and 10^12 > -1 / (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint:
                        revert with 'NH{q', 17
                    if not ext_call.return_data[0]:
                        revert with 'NH{q', 18
                    if poolInfo[arg1].field_768 > !(10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    if userInfo[arg1][address(arg2)].field_0 and poolInfo[arg1].field_768 + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0]) > -1 / userInfo[arg1][address(arg2)].field_0:
                        revert with 'NH{q', 17
                    if (poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0] * userInfo[arg1][address(arg2)].field_0) / 10^12 < userInfo[arg1][address(arg2)].field_256:
                        revert with 'NH{q', 17
                    return ((poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0] * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_256, 
                           0
                if block.number + -startBlock - 1 / halvingPeriod > 255:
                    revert with 'NH{q', 17
                if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                    revert with 'NH{q', 18
                if block.number < poolInfo[arg1].field_512:
                    revert with 'NH{q', 17
                if block.number - poolInfo[arg1].field_512 and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - poolInfo[arg1].field_512:
                    revert with 'NH{q', 17
                if 0 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                    revert with 'NH{q', 17
                if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[arg1].field_256 > -1 / (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                    revert with 'NH{q', 17
                if not totalAllocPoint:
                    revert with 'NH{q', 18
                if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint and 10^12 > -1 / (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint:
                    revert with 'NH{q', 17
                if not ext_call.return_data[0]:
                    revert with 'NH{q', 18
                if poolInfo[arg1].field_768 > !(10^12 * (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0]):
                    revert with 'NH{q', 17
                if userInfo[arg1][address(arg2)].field_0 and poolInfo[arg1].field_768 + (10^12 * (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0]) > -1 / userInfo[arg1][address(arg2)].field_0:
                    revert with 'NH{q', 17
                if (poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0] * userInfo[arg1][address(arg2)].field_0) / 10^12 < userInfo[arg1][address(arg2)].field_256:
                    revert with 'NH{q', 17
                return ((poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0] * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_256, 
                       0
            if block.number < startBlock:
                revert with 'NH{q', 17
            if block.number - startBlock < 1:
                revert with 'NH{q', 17
            if not halvingPeriod:
                revert with 'NH{q', 18
            idx = 0
            s = 0
            t = poolInfo[arg1].field_512
            while idx < block.number + -startBlock - 1 / halvingPeriod:
                if idx == -1:
                    revert with 'NH{q', 17
                if idx + 1 and halvingPeriod > -1 / idx + 1:
                    revert with 'NH{q', 17
                if halvingPeriod + (idx * halvingPeriod) > !startBlock:
                    revert with 'NH{q', 17
                if 0 == halvingPeriod:
                    if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                        revert with 'NH{q', 17
                    if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                        revert with 'NH{q', 17
                    if s > !((halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)):
                        revert with 'NH{q', 17
                    idx = idx + 1
                    s = s + (halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)
                    t = halvingPeriod + (idx * halvingPeriod) + startBlock
                    continue 
                if halvingPeriod + (idx * halvingPeriod) + startBlock <= startBlock:
                    if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                        revert with 'NH{q', 17
                    if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                        revert with 'NH{q', 17
                    if s > !((halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)):
                        revert with 'NH{q', 17
                    idx = idx + 1
                    s = s + (halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)
                    t = halvingPeriod + (idx * halvingPeriod) + startBlock
                    continue 
                if halvingPeriod + (idx * halvingPeriod) + startBlock < startBlock:
                    revert with 'NH{q', 17
                if halvingPeriod + (idx * halvingPeriod) < 1:
                    revert with 'NH{q', 17
                if not halvingPeriod:
                    revert with 'NH{q', 18
                if not halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod:
                    if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                        revert with 'NH{q', 17
                    if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                        revert with 'NH{q', 17
                    if s > !((halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)):
                        revert with 'NH{q', 17
                    idx = idx + 1
                    s = s + (halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)
                    t = halvingPeriod + (idx * halvingPeriod) + startBlock
                    continue 
                if halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod > 255:
                    revert with 'NH{q', 17
                if not 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod:
                    revert with 'NH{q', 18
                if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                    revert with 'NH{q', 17
                if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                    revert with 'NH{q', 17
                if s > !((halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (idx * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) - (t * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod)):
                    revert with 'NH{q', 17
                idx = idx + 1
                s = s + (halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (idx * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) - (t * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod)
                t = halvingPeriod + (idx * halvingPeriod) + startBlock
                continue 
        else:
            if poolInfo[arg1].field_512 < startBlock:
                revert with 'NH{q', 17
            if poolInfo[arg1].field_512 - startBlock < 1:
                revert with 'NH{q', 17
            if not halvingPeriod:
                revert with 'NH{q', 18
            if 0 == halvingPeriod:
                idx = poolInfo[arg1].field_512 + -startBlock - 1 / halvingPeriod
                s = 0
                t = poolInfo[arg1].field_512
                while idx < 0:
                    if idx == -1:
                        revert with 'NH{q', 17
                    if idx + 1 and halvingPeriod > -1 / idx + 1:
                        revert with 'NH{q', 17
                    if halvingPeriod + (idx * halvingPeriod) > !startBlock:
                        revert with 'NH{q', 17
                    if 0 == halvingPeriod:
                        if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                            revert with 'NH{q', 17
                        if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                            revert with 'NH{q', 17
                        if s > !((halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)):
                            revert with 'NH{q', 17
                        idx = idx + 1
                        s = s + (halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)
                        t = halvingPeriod + (idx * halvingPeriod) + startBlock
                        continue 
                    if halvingPeriod + (idx * halvingPeriod) + startBlock <= startBlock:
                        if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                            revert with 'NH{q', 17
                        if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                            revert with 'NH{q', 17
                        if s > !((halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)):
                            revert with 'NH{q', 17
                        idx = idx + 1
                        s = s + (halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)
                        t = halvingPeriod + (idx * halvingPeriod) + startBlock
                        continue 
                    if halvingPeriod + (idx * halvingPeriod) + startBlock < startBlock:
                        revert with 'NH{q', 17
                    if halvingPeriod + (idx * halvingPeriod) < 1:
                        revert with 'NH{q', 17
                    if not halvingPeriod:
                        revert with 'NH{q', 18
                    if not halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod:
                        if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                            revert with 'NH{q', 17
                        if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                            revert with 'NH{q', 17
                        if s > !((halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)):
                            revert with 'NH{q', 17
                        idx = idx + 1
                        s = s + (halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)
                        t = halvingPeriod + (idx * halvingPeriod) + startBlock
                        continue 
                    if halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod > 255:
                        revert with 'NH{q', 17
                    if not 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod:
                        revert with 'NH{q', 18
                    if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                        revert with 'NH{q', 17
                    if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                        revert with 'NH{q', 17
                    if s > !((halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (idx * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) - (t * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod)):
                        revert with 'NH{q', 17
                    idx = idx + 1
                    s = s + (halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (idx * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) - (t * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod)
                    t = halvingPeriod + (idx * halvingPeriod) + startBlock
                    continue 
            else:
                if block.number <= startBlock:
                    idx = poolInfo[arg1].field_512 + -startBlock - 1 / halvingPeriod
                    s = 0
                    t = poolInfo[arg1].field_512
                    while idx < 0:
                        if idx == -1:
                            revert with 'NH{q', 17
                        if idx + 1 and halvingPeriod > -1 / idx + 1:
                            revert with 'NH{q', 17
                        if halvingPeriod + (idx * halvingPeriod) > !startBlock:
                            revert with 'NH{q', 17
                        if 0 == halvingPeriod:
                            if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                                revert with 'NH{q', 17
                            if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                                revert with 'NH{q', 17
                            if s > !((halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)):
                                revert with 'NH{q', 17
                            idx = idx + 1
                            s = s + (halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)
                            t = halvingPeriod + (idx * halvingPeriod) + startBlock
                            continue 
                        if halvingPeriod + (idx * halvingPeriod) + startBlock <= startBlock:
                            if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                                revert with 'NH{q', 17
                            if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                                revert with 'NH{q', 17
                            if s > !((halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)):
                                revert with 'NH{q', 17
                            idx = idx + 1
                            s = s + (halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)
                            t = halvingPeriod + (idx * halvingPeriod) + startBlock
                            continue 
                        if halvingPeriod + (idx * halvingPeriod) + startBlock < startBlock:
                            revert with 'NH{q', 17
                        if halvingPeriod + (idx * halvingPeriod) < 1:
                            revert with 'NH{q', 17
                        if not halvingPeriod:
                            revert with 'NH{q', 18
                        if not halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod:
                            if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                                revert with 'NH{q', 17
                            if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                                revert with 'NH{q', 17
                            if s > !((halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)):
                                revert with 'NH{q', 17
                            idx = idx + 1
                            s = s + (halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)
                            t = halvingPeriod + (idx * halvingPeriod) + startBlock
                            continue 
                        if halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod > 255:
                            revert with 'NH{q', 17
                        if not 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod:
                            revert with 'NH{q', 18
                        if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                            revert with 'NH{q', 17
                        if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                            revert with 'NH{q', 17
                        if s > !((halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (idx * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) - (t * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod)):
                            revert with 'NH{q', 17
                        idx = idx + 1
                        s = s + (halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (idx * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) - (t * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod)
                        t = halvingPeriod + (idx * halvingPeriod) + startBlock
                        continue 
                else:
                    if block.number < startBlock:
                        revert with 'NH{q', 17
                    if block.number - startBlock < 1:
                        revert with 'NH{q', 17
                    if not halvingPeriod:
                        revert with 'NH{q', 18
                    idx = poolInfo[arg1].field_512 + -startBlock - 1 / halvingPeriod
                    s = 0
                    t = poolInfo[arg1].field_512
                    while idx < block.number + -startBlock - 1 / halvingPeriod:
                        if idx == -1:
                            revert with 'NH{q', 17
                        if idx + 1 and halvingPeriod > -1 / idx + 1:
                            revert with 'NH{q', 17
                        if halvingPeriod + (idx * halvingPeriod) > !startBlock:
                            revert with 'NH{q', 17
                        if 0 == halvingPeriod:
                            if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                                revert with 'NH{q', 17
                            if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                                revert with 'NH{q', 17
                            if s > !((halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)):
                                revert with 'NH{q', 17
                            idx = idx + 1
                            s = s + (halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)
                            t = halvingPeriod + (idx * halvingPeriod) + startBlock
                            continue 
                        if halvingPeriod + (idx * halvingPeriod) + startBlock <= startBlock:
                            if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                                revert with 'NH{q', 17
                            if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                                revert with 'NH{q', 17
                            if s > !((halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)):
                                revert with 'NH{q', 17
                            idx = idx + 1
                            s = s + (halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)
                            t = halvingPeriod + (idx * halvingPeriod) + startBlock
                            continue 
                        if halvingPeriod + (idx * halvingPeriod) + startBlock < startBlock:
                            revert with 'NH{q', 17
                        if halvingPeriod + (idx * halvingPeriod) < 1:
                            revert with 'NH{q', 17
                        if not halvingPeriod:
                            revert with 'NH{q', 18
                        if not halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod:
                            if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                                revert with 'NH{q', 17
                            if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                                revert with 'NH{q', 17
                            if s > !((halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)):
                                revert with 'NH{q', 17
                            idx = idx + 1
                            s = s + (halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)
                            t = halvingPeriod + (idx * halvingPeriod) + startBlock
                            continue 
                        if halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod > 255:
                            revert with 'NH{q', 17
                        if not 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod:
                            revert with 'NH{q', 18
                        if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                            revert with 'NH{q', 17
                        if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                            revert with 'NH{q', 17
                        if s > !((halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (idx * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) - (t * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod)):
                            revert with 'NH{q', 17
                        idx = idx + 1
                        s = s + (halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (idx * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) - (t * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod)
                        t = halvingPeriod + (idx * halvingPeriod) + startBlock
                        continue 
        if 0 == halvingPeriod:
            if block.number < t:
                revert with 'NH{q', 17
            if block.number - t and hCTPerBlock > -1 / block.number - t:
                revert with 'NH{q', 17
            if s > !((block.number * hCTPerBlock) - (t * hCTPerBlock)):
                revert with 'NH{q', 17
            if s + (block.number * hCTPerBlock) - (t * hCTPerBlock) and poolInfo[arg1].field_256 > -1 / s + (block.number * hCTPerBlock) - (t * hCTPerBlock):
                revert with 'NH{q', 17
            if not totalAllocPoint:
                revert with 'NH{q', 18
            if (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (t * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint and 10^12 > -1 / (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (t * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint:
                revert with 'NH{q', 17
            if not ext_call.return_data[0]:
                revert with 'NH{q', 18
            if poolInfo[arg1].field_768 > !(10^12 * (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (t * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0]):
                revert with 'NH{q', 17
            if userInfo[arg1][address(arg2)].field_0 and poolInfo[arg1].field_768 + (10^12 * (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (t * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0]) > -1 / userInfo[arg1][address(arg2)].field_0:
                revert with 'NH{q', 17
            if (poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (t * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0] * userInfo[arg1][address(arg2)].field_0) / 10^12 < userInfo[arg1][address(arg2)].field_256:
                revert with 'NH{q', 17
            return ((poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (t * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0] * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_256, 
                   0
        if block.number <= startBlock:
            if block.number < t:
                revert with 'NH{q', 17
            if block.number - t and hCTPerBlock > -1 / block.number - t:
                revert with 'NH{q', 17
            if s > !((block.number * hCTPerBlock) - (t * hCTPerBlock)):
                revert with 'NH{q', 17
            if s + (block.number * hCTPerBlock) - (t * hCTPerBlock) and poolInfo[arg1].field_256 > -1 / s + (block.number * hCTPerBlock) - (t * hCTPerBlock):
                revert with 'NH{q', 17
            if not totalAllocPoint:
                revert with 'NH{q', 18
            if (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (t * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint and 10^12 > -1 / (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (t * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint:
                revert with 'NH{q', 17
            if not ext_call.return_data[0]:
                revert with 'NH{q', 18
            if poolInfo[arg1].field_768 > !(10^12 * (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (t * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0]):
                revert with 'NH{q', 17
            if userInfo[arg1][address(arg2)].field_0 and poolInfo[arg1].field_768 + (10^12 * (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (t * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0]) > -1 / userInfo[arg1][address(arg2)].field_0:
                revert with 'NH{q', 17
            if (poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (t * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0] * userInfo[arg1][address(arg2)].field_0) / 10^12 < userInfo[arg1][address(arg2)].field_256:
                revert with 'NH{q', 17
            return ((poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (t * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0] * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_256, 
                   0
        if block.number < startBlock:
            revert with 'NH{q', 17
        if block.number - startBlock < 1:
            revert with 'NH{q', 17
        if not halvingPeriod:
            revert with 'NH{q', 18
        if not block.number + -startBlock - 1 / halvingPeriod:
            if block.number < t:
                revert with 'NH{q', 17
            if block.number - t and hCTPerBlock > -1 / block.number - t:
                revert with 'NH{q', 17
            if s > !((block.number * hCTPerBlock) - (t * hCTPerBlock)):
                revert with 'NH{q', 17
            if s + (block.number * hCTPerBlock) - (t * hCTPerBlock) and poolInfo[arg1].field_256 > -1 / s + (block.number * hCTPerBlock) - (t * hCTPerBlock):
                revert with 'NH{q', 17
            if not totalAllocPoint:
                revert with 'NH{q', 18
            if (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (t * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint and 10^12 > -1 / (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (t * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint:
                revert with 'NH{q', 17
            if not ext_call.return_data[0]:
                revert with 'NH{q', 18
            if poolInfo[arg1].field_768 > !(10^12 * (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (t * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0]):
                revert with 'NH{q', 17
            if userInfo[arg1][address(arg2)].field_0 and poolInfo[arg1].field_768 + (10^12 * (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (t * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0]) > -1 / userInfo[arg1][address(arg2)].field_0:
                revert with 'NH{q', 17
            if (poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (t * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0] * userInfo[arg1][address(arg2)].field_0) / 10^12 < userInfo[arg1][address(arg2)].field_256:
                revert with 'NH{q', 17
            return ((poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (t * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0] * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_256, 
                   0
        if block.number + -startBlock - 1 / halvingPeriod > 255:
            revert with 'NH{q', 17
        if not 1 << block.number + -startBlock - 1 / halvingPeriod:
            revert with 'NH{q', 18
        if block.number < t:
            revert with 'NH{q', 17
        if block.number - t and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - t:
            revert with 'NH{q', 17
        if s > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (t * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
            revert with 'NH{q', 17
        if s + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (t * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[arg1].field_256 > -1 / s + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (t * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
            revert with 'NH{q', 17
        if not totalAllocPoint:
            revert with 'NH{q', 18
        if (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (t * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint and 10^12 > -1 / (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (t * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint:
            revert with 'NH{q', 17
        if not ext_call.return_data[0]:
            revert with 'NH{q', 18
        if poolInfo[arg1].field_768 > !(10^12 * (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (t * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0]):
            revert with 'NH{q', 17
        if userInfo[arg1][address(arg2)].field_0 and poolInfo[arg1].field_768 + (10^12 * (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (t * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0]) > -1 / userInfo[arg1][address(arg2)].field_0:
            revert with 'NH{q', 17
        if (poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (t * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0] * userInfo[arg1][address(arg2)].field_0) / 10^12 < userInfo[arg1][address(arg2)].field_256:
            revert with 'NH{q', 17
        return ((poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (t * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint / ext_call.return_data[0] * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_256, 
               0
    if not userInfo[arg1][address(arg2)].field_0:
        return 0
    require ext_code.size(multLpChefAddress)
    staticcall multLpChefAddress.0xe4c75c27 with:
            gas gas_remaining wei
           args poolCorrespond[arg1], this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] and 10^12 > -1 / ext_call.return_data[0]:
        revert with 'NH{q', 17
    if not poolInfo[arg1].field_1280:
        revert with 'NH{q', 18
    if poolInfo[arg1].field_1024 > !(10^12 * ext_call.return_data[0] / poolInfo[arg1].field_1280):
        revert with 'NH{q', 17
    if userInfo[arg1][address(arg2)].field_0 and poolInfo[arg1].field_1024 + (10^12 * ext_call.return_data[0] / poolInfo[arg1].field_1280) > -1 / userInfo[arg1][address(arg2)].field_0:
        revert with 'NH{q', 17
    if (poolInfo[arg1].field_1024 * userInfo[arg1][address(arg2)].field_0) + (10^12 * ext_call.return_data[0] / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12 < userInfo[arg1][address(arg2)].field_512:
        revert with 'NH{q', 17
    if block.number <= poolInfo[arg1].field_512:
        if poolInfo[arg1].field_512 != block.number:
            return 0
        if userInfo[arg1][address(arg2)].field_0 and poolInfo[arg1].field_768 > -1 / userInfo[arg1][address(arg2)].field_0:
            revert with 'NH{q', 17
        if userInfo[arg1][address(arg2)].field_0 * poolInfo[arg1].field_768 / 10^12 < userInfo[arg1][address(arg2)].field_256:
            revert with 'NH{q', 17
        return (userInfo[arg1][address(arg2)].field_0 * poolInfo[arg1].field_768 / 10^12) - userInfo[arg1][address(arg2)].field_256, 
               ((poolInfo[arg1].field_1024 * userInfo[arg1][address(arg2)].field_0) + (10^12 * ext_call.return_data[0] / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_512
    if 0 == halvingPeriod:
        if 0 == halvingPeriod:
            if block.number < poolInfo[arg1].field_512:
                revert with 'NH{q', 17
            if block.number - poolInfo[arg1].field_512 and hCTPerBlock > -1 / block.number - poolInfo[arg1].field_512:
                revert with 'NH{q', 17
            if 0 > !((block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock)):
                revert with 'NH{q', 17
            if (block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock) and poolInfo[arg1].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock):
                revert with 'NH{q', 17
            if not totalAllocPoint:
                revert with 'NH{q', 18
            if (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint and 10^12 > -1 / (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint:
                revert with 'NH{q', 17
            if not poolInfo[arg1].field_1280:
                revert with 'NH{q', 18
            if poolInfo[arg1].field_768 > !(10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280):
                revert with 'NH{q', 17
            if userInfo[arg1][address(arg2)].field_0 and poolInfo[arg1].field_768 + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280) > -1 / userInfo[arg1][address(arg2)].field_0:
                revert with 'NH{q', 17
            if (poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12 < userInfo[arg1][address(arg2)].field_256:
                revert with 'NH{q', 17
            return ((poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_256, 
                   ((poolInfo[arg1].field_1024 * userInfo[arg1][address(arg2)].field_0) + (10^12 * ext_call.return_data[0] / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_512
        if block.number <= startBlock:
            if block.number < poolInfo[arg1].field_512:
                revert with 'NH{q', 17
            if block.number - poolInfo[arg1].field_512 and hCTPerBlock > -1 / block.number - poolInfo[arg1].field_512:
                revert with 'NH{q', 17
            if 0 > !((block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock)):
                revert with 'NH{q', 17
            if (block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock) and poolInfo[arg1].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock):
                revert with 'NH{q', 17
            if not totalAllocPoint:
                revert with 'NH{q', 18
            if (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint and 10^12 > -1 / (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint:
                revert with 'NH{q', 17
            if not poolInfo[arg1].field_1280:
                revert with 'NH{q', 18
            if poolInfo[arg1].field_768 > !(10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280):
                revert with 'NH{q', 17
            if userInfo[arg1][address(arg2)].field_0 and poolInfo[arg1].field_768 + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280) > -1 / userInfo[arg1][address(arg2)].field_0:
                revert with 'NH{q', 17
            if (poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12 < userInfo[arg1][address(arg2)].field_256:
                revert with 'NH{q', 17
            return ((poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_256, 
                   ((poolInfo[arg1].field_1024 * userInfo[arg1][address(arg2)].field_0) + (10^12 * ext_call.return_data[0] / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_512
        if block.number < startBlock:
            revert with 'NH{q', 17
        if block.number - startBlock < 1:
            revert with 'NH{q', 17
        if not halvingPeriod:
            revert with 'NH{q', 18
        if not block.number + -startBlock - 1 / halvingPeriod:
            if block.number < poolInfo[arg1].field_512:
                revert with 'NH{q', 17
            if block.number - poolInfo[arg1].field_512 and hCTPerBlock > -1 / block.number - poolInfo[arg1].field_512:
                revert with 'NH{q', 17
            if 0 > !((block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock)):
                revert with 'NH{q', 17
            if (block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock) and poolInfo[arg1].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock):
                revert with 'NH{q', 17
            if not totalAllocPoint:
                revert with 'NH{q', 18
            if (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint and 10^12 > -1 / (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint:
                revert with 'NH{q', 17
            if not poolInfo[arg1].field_1280:
                revert with 'NH{q', 18
            if poolInfo[arg1].field_768 > !(10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280):
                revert with 'NH{q', 17
            if userInfo[arg1][address(arg2)].field_0 and poolInfo[arg1].field_768 + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280) > -1 / userInfo[arg1][address(arg2)].field_0:
                revert with 'NH{q', 17
            if (poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12 < userInfo[arg1][address(arg2)].field_256:
                revert with 'NH{q', 17
            return ((poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_256, 
                   ((poolInfo[arg1].field_1024 * userInfo[arg1][address(arg2)].field_0) + (10^12 * ext_call.return_data[0] / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_512
        if block.number + -startBlock - 1 / halvingPeriod > 255:
            revert with 'NH{q', 17
        if not 1 << block.number + -startBlock - 1 / halvingPeriod:
            revert with 'NH{q', 18
        if block.number < poolInfo[arg1].field_512:
            revert with 'NH{q', 17
        if block.number - poolInfo[arg1].field_512 and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - poolInfo[arg1].field_512:
            revert with 'NH{q', 17
        if 0 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
            revert with 'NH{q', 17
        if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[arg1].field_256 > -1 / (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
            revert with 'NH{q', 17
        if not totalAllocPoint:
            revert with 'NH{q', 18
        if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint and 10^12 > -1 / (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint:
            revert with 'NH{q', 17
        if not poolInfo[arg1].field_1280:
            revert with 'NH{q', 18
        if poolInfo[arg1].field_768 > !(10^12 * (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280):
            revert with 'NH{q', 17
        if userInfo[arg1][address(arg2)].field_0 and poolInfo[arg1].field_768 + (10^12 * (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280) > -1 / userInfo[arg1][address(arg2)].field_0:
            revert with 'NH{q', 17
        if (poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12 < userInfo[arg1][address(arg2)].field_256:
            revert with 'NH{q', 17
        return ((poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_256, 
               ((poolInfo[arg1].field_1024 * userInfo[arg1][address(arg2)].field_0) + (10^12 * ext_call.return_data[0] / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_512
    if poolInfo[arg1].field_512 <= startBlock:
        if 0 == halvingPeriod:
            if 0 == halvingPeriod:
                if block.number < poolInfo[arg1].field_512:
                    revert with 'NH{q', 17
                if block.number - poolInfo[arg1].field_512 and hCTPerBlock > -1 / block.number - poolInfo[arg1].field_512:
                    revert with 'NH{q', 17
                if 0 > !((block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock)):
                    revert with 'NH{q', 17
                if (block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock) and poolInfo[arg1].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock):
                    revert with 'NH{q', 17
                if not totalAllocPoint:
                    revert with 'NH{q', 18
                if (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint and 10^12 > -1 / (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint:
                    revert with 'NH{q', 17
                if not poolInfo[arg1].field_1280:
                    revert with 'NH{q', 18
                if poolInfo[arg1].field_768 > !(10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280):
                    revert with 'NH{q', 17
                if userInfo[arg1][address(arg2)].field_0 and poolInfo[arg1].field_768 + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280) > -1 / userInfo[arg1][address(arg2)].field_0:
                    revert with 'NH{q', 17
                if (poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12 < userInfo[arg1][address(arg2)].field_256:
                    revert with 'NH{q', 17
                return ((poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_256, 
                       ((poolInfo[arg1].field_1024 * userInfo[arg1][address(arg2)].field_0) + (10^12 * ext_call.return_data[0] / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_512
            if block.number <= startBlock:
                if block.number < poolInfo[arg1].field_512:
                    revert with 'NH{q', 17
                if block.number - poolInfo[arg1].field_512 and hCTPerBlock > -1 / block.number - poolInfo[arg1].field_512:
                    revert with 'NH{q', 17
                if 0 > !((block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock)):
                    revert with 'NH{q', 17
                if (block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock) and poolInfo[arg1].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock):
                    revert with 'NH{q', 17
                if not totalAllocPoint:
                    revert with 'NH{q', 18
                if (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint and 10^12 > -1 / (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint:
                    revert with 'NH{q', 17
                if not poolInfo[arg1].field_1280:
                    revert with 'NH{q', 18
                if poolInfo[arg1].field_768 > !(10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280):
                    revert with 'NH{q', 17
                if userInfo[arg1][address(arg2)].field_0 and poolInfo[arg1].field_768 + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280) > -1 / userInfo[arg1][address(arg2)].field_0:
                    revert with 'NH{q', 17
                if (poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12 < userInfo[arg1][address(arg2)].field_256:
                    revert with 'NH{q', 17
                return ((poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_256, 
                       ((poolInfo[arg1].field_1024 * userInfo[arg1][address(arg2)].field_0) + (10^12 * ext_call.return_data[0] / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_512
            if block.number < startBlock:
                revert with 'NH{q', 17
            if block.number - startBlock < 1:
                revert with 'NH{q', 17
            if not halvingPeriod:
                revert with 'NH{q', 18
            if not block.number + -startBlock - 1 / halvingPeriod:
                if block.number < poolInfo[arg1].field_512:
                    revert with 'NH{q', 17
                if block.number - poolInfo[arg1].field_512 and hCTPerBlock > -1 / block.number - poolInfo[arg1].field_512:
                    revert with 'NH{q', 17
                if 0 > !((block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock)):
                    revert with 'NH{q', 17
                if (block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock) and poolInfo[arg1].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock):
                    revert with 'NH{q', 17
                if not totalAllocPoint:
                    revert with 'NH{q', 18
                if (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint and 10^12 > -1 / (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint:
                    revert with 'NH{q', 17
                if not poolInfo[arg1].field_1280:
                    revert with 'NH{q', 18
                if poolInfo[arg1].field_768 > !(10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280):
                    revert with 'NH{q', 17
                if userInfo[arg1][address(arg2)].field_0 and poolInfo[arg1].field_768 + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280) > -1 / userInfo[arg1][address(arg2)].field_0:
                    revert with 'NH{q', 17
                if (poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12 < userInfo[arg1][address(arg2)].field_256:
                    revert with 'NH{q', 17
                return ((poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_256, 
                       ((poolInfo[arg1].field_1024 * userInfo[arg1][address(arg2)].field_0) + (10^12 * ext_call.return_data[0] / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_512
            if block.number + -startBlock - 1 / halvingPeriod > 255:
                revert with 'NH{q', 17
            if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                revert with 'NH{q', 18
            if block.number < poolInfo[arg1].field_512:
                revert with 'NH{q', 17
            if block.number - poolInfo[arg1].field_512 and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - poolInfo[arg1].field_512:
                revert with 'NH{q', 17
            if 0 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                revert with 'NH{q', 17
            if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[arg1].field_256 > -1 / (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                revert with 'NH{q', 17
            if not totalAllocPoint:
                revert with 'NH{q', 18
            if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint and 10^12 > -1 / (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint:
                revert with 'NH{q', 17
            if not poolInfo[arg1].field_1280:
                revert with 'NH{q', 18
            if poolInfo[arg1].field_768 > !(10^12 * (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280):
                revert with 'NH{q', 17
            if userInfo[arg1][address(arg2)].field_0 and poolInfo[arg1].field_768 + (10^12 * (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280) > -1 / userInfo[arg1][address(arg2)].field_0:
                revert with 'NH{q', 17
            if (poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12 < userInfo[arg1][address(arg2)].field_256:
                revert with 'NH{q', 17
            return ((poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_256, 
                   ((poolInfo[arg1].field_1024 * userInfo[arg1][address(arg2)].field_0) + (10^12 * ext_call.return_data[0] / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_512
        if block.number <= startBlock:
            if 0 == halvingPeriod:
                if block.number < poolInfo[arg1].field_512:
                    revert with 'NH{q', 17
                if block.number - poolInfo[arg1].field_512 and hCTPerBlock > -1 / block.number - poolInfo[arg1].field_512:
                    revert with 'NH{q', 17
                if 0 > !((block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock)):
                    revert with 'NH{q', 17
                if (block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock) and poolInfo[arg1].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock):
                    revert with 'NH{q', 17
                if not totalAllocPoint:
                    revert with 'NH{q', 18
                if (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint and 10^12 > -1 / (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint:
                    revert with 'NH{q', 17
                if not poolInfo[arg1].field_1280:
                    revert with 'NH{q', 18
                if poolInfo[arg1].field_768 > !(10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280):
                    revert with 'NH{q', 17
                if userInfo[arg1][address(arg2)].field_0 and poolInfo[arg1].field_768 + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280) > -1 / userInfo[arg1][address(arg2)].field_0:
                    revert with 'NH{q', 17
                if (poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12 < userInfo[arg1][address(arg2)].field_256:
                    revert with 'NH{q', 17
                return ((poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_256, 
                       ((poolInfo[arg1].field_1024 * userInfo[arg1][address(arg2)].field_0) + (10^12 * ext_call.return_data[0] / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_512
            if block.number <= startBlock:
                if block.number < poolInfo[arg1].field_512:
                    revert with 'NH{q', 17
                if block.number - poolInfo[arg1].field_512 and hCTPerBlock > -1 / block.number - poolInfo[arg1].field_512:
                    revert with 'NH{q', 17
                if 0 > !((block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock)):
                    revert with 'NH{q', 17
                if (block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock) and poolInfo[arg1].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock):
                    revert with 'NH{q', 17
                if not totalAllocPoint:
                    revert with 'NH{q', 18
                if (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint and 10^12 > -1 / (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint:
                    revert with 'NH{q', 17
                if not poolInfo[arg1].field_1280:
                    revert with 'NH{q', 18
                if poolInfo[arg1].field_768 > !(10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280):
                    revert with 'NH{q', 17
                if userInfo[arg1][address(arg2)].field_0 and poolInfo[arg1].field_768 + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280) > -1 / userInfo[arg1][address(arg2)].field_0:
                    revert with 'NH{q', 17
                if (poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12 < userInfo[arg1][address(arg2)].field_256:
                    revert with 'NH{q', 17
                return ((poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_256, 
                       ((poolInfo[arg1].field_1024 * userInfo[arg1][address(arg2)].field_0) + (10^12 * ext_call.return_data[0] / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_512
            if block.number < startBlock:
                revert with 'NH{q', 17
            if block.number - startBlock < 1:
                revert with 'NH{q', 17
            if not halvingPeriod:
                revert with 'NH{q', 18
            if not block.number + -startBlock - 1 / halvingPeriod:
                if block.number < poolInfo[arg1].field_512:
                    revert with 'NH{q', 17
                if block.number - poolInfo[arg1].field_512 and hCTPerBlock > -1 / block.number - poolInfo[arg1].field_512:
                    revert with 'NH{q', 17
                if 0 > !((block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock)):
                    revert with 'NH{q', 17
                if (block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock) and poolInfo[arg1].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[arg1].field_512 * hCTPerBlock):
                    revert with 'NH{q', 17
                if not totalAllocPoint:
                    revert with 'NH{q', 18
                if (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint and 10^12 > -1 / (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint:
                    revert with 'NH{q', 17
                if not poolInfo[arg1].field_1280:
                    revert with 'NH{q', 18
                if poolInfo[arg1].field_768 > !(10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280):
                    revert with 'NH{q', 17
                if userInfo[arg1][address(arg2)].field_0 and poolInfo[arg1].field_768 + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280) > -1 / userInfo[arg1][address(arg2)].field_0:
                    revert with 'NH{q', 17
                if (poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12 < userInfo[arg1][address(arg2)].field_256:
                    revert with 'NH{q', 17
                return ((poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_256, 
                       ((poolInfo[arg1].field_1024 * userInfo[arg1][address(arg2)].field_0) + (10^12 * ext_call.return_data[0] / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_512
            if block.number + -startBlock - 1 / halvingPeriod > 255:
                revert with 'NH{q', 17
            if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                revert with 'NH{q', 18
            if block.number < poolInfo[arg1].field_512:
                revert with 'NH{q', 17
            if block.number - poolInfo[arg1].field_512 and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - poolInfo[arg1].field_512:
                revert with 'NH{q', 17
            if 0 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                revert with 'NH{q', 17
            if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[arg1].field_256 > -1 / (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                revert with 'NH{q', 17
            if not totalAllocPoint:
                revert with 'NH{q', 18
            if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint and 10^12 > -1 / (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint:
                revert with 'NH{q', 17
            if not poolInfo[arg1].field_1280:
                revert with 'NH{q', 18
            if poolInfo[arg1].field_768 > !(10^12 * (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280):
                revert with 'NH{q', 17
            if userInfo[arg1][address(arg2)].field_0 and poolInfo[arg1].field_768 + (10^12 * (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280) > -1 / userInfo[arg1][address(arg2)].field_0:
                revert with 'NH{q', 17
            if (poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12 < userInfo[arg1][address(arg2)].field_256:
                revert with 'NH{q', 17
            return ((poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (poolInfo[arg1].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_256, 
                   ((poolInfo[arg1].field_1024 * userInfo[arg1][address(arg2)].field_0) + (10^12 * ext_call.return_data[0] / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_512
        if block.number < startBlock:
            revert with 'NH{q', 17
        if block.number - startBlock < 1:
            revert with 'NH{q', 17
        if not halvingPeriod:
            revert with 'NH{q', 18
        idx = 0
        s = 0
        t = poolInfo[arg1].field_512
        while idx < block.number + -startBlock - 1 / halvingPeriod:
            if idx == -1:
                revert with 'NH{q', 17
            if idx + 1 and halvingPeriod > -1 / idx + 1:
                revert with 'NH{q', 17
            if halvingPeriod + (idx * halvingPeriod) > !startBlock:
                revert with 'NH{q', 17
            if 0 == halvingPeriod:
                if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                    revert with 'NH{q', 17
                if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                    revert with 'NH{q', 17
                if s > !((halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)):
                    revert with 'NH{q', 17
                idx = idx + 1
                s = s + (halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)
                t = halvingPeriod + (idx * halvingPeriod) + startBlock
                continue 
            if halvingPeriod + (idx * halvingPeriod) + startBlock <= startBlock:
                if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                    revert with 'NH{q', 17
                if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                    revert with 'NH{q', 17
                if s > !((halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)):
                    revert with 'NH{q', 17
                idx = idx + 1
                s = s + (halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)
                t = halvingPeriod + (idx * halvingPeriod) + startBlock
                continue 
            if halvingPeriod + (idx * halvingPeriod) + startBlock < startBlock:
                revert with 'NH{q', 17
            if halvingPeriod + (idx * halvingPeriod) < 1:
                revert with 'NH{q', 17
            if not halvingPeriod:
                revert with 'NH{q', 18
            if not halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod:
                if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                    revert with 'NH{q', 17
                if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                    revert with 'NH{q', 17
                if s > !((halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)):
                    revert with 'NH{q', 17
                idx = idx + 1
                s = s + (halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)
                t = halvingPeriod + (idx * halvingPeriod) + startBlock
                continue 
            if halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod > 255:
                revert with 'NH{q', 17
            if not 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod:
                revert with 'NH{q', 18
            if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                revert with 'NH{q', 17
            if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                revert with 'NH{q', 17
            if s > !((halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (idx * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) - (t * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod)):
                revert with 'NH{q', 17
            idx = idx + 1
            s = s + (halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (idx * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) - (t * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod)
            t = halvingPeriod + (idx * halvingPeriod) + startBlock
            continue 
    else:
        if poolInfo[arg1].field_512 < startBlock:
            revert with 'NH{q', 17
        if poolInfo[arg1].field_512 - startBlock < 1:
            revert with 'NH{q', 17
        if not halvingPeriod:
            revert with 'NH{q', 18
        if 0 == halvingPeriod:
            idx = poolInfo[arg1].field_512 + -startBlock - 1 / halvingPeriod
            s = 0
            t = poolInfo[arg1].field_512
            while idx < 0:
                if idx == -1:
                    revert with 'NH{q', 17
                if idx + 1 and halvingPeriod > -1 / idx + 1:
                    revert with 'NH{q', 17
                if halvingPeriod + (idx * halvingPeriod) > !startBlock:
                    revert with 'NH{q', 17
                if 0 == halvingPeriod:
                    if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                        revert with 'NH{q', 17
                    if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                        revert with 'NH{q', 17
                    if s > !((halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)):
                        revert with 'NH{q', 17
                    idx = idx + 1
                    s = s + (halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)
                    t = halvingPeriod + (idx * halvingPeriod) + startBlock
                    continue 
                if halvingPeriod + (idx * halvingPeriod) + startBlock <= startBlock:
                    if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                        revert with 'NH{q', 17
                    if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                        revert with 'NH{q', 17
                    if s > !((halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)):
                        revert with 'NH{q', 17
                    idx = idx + 1
                    s = s + (halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)
                    t = halvingPeriod + (idx * halvingPeriod) + startBlock
                    continue 
                if halvingPeriod + (idx * halvingPeriod) + startBlock < startBlock:
                    revert with 'NH{q', 17
                if halvingPeriod + (idx * halvingPeriod) < 1:
                    revert with 'NH{q', 17
                if not halvingPeriod:
                    revert with 'NH{q', 18
                if not halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod:
                    if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                        revert with 'NH{q', 17
                    if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                        revert with 'NH{q', 17
                    if s > !((halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)):
                        revert with 'NH{q', 17
                    idx = idx + 1
                    s = s + (halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)
                    t = halvingPeriod + (idx * halvingPeriod) + startBlock
                    continue 
                if halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod > 255:
                    revert with 'NH{q', 17
                if not 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod:
                    revert with 'NH{q', 18
                if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                    revert with 'NH{q', 17
                if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                    revert with 'NH{q', 17
                if s > !((halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (idx * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) - (t * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod)):
                    revert with 'NH{q', 17
                idx = idx + 1
                s = s + (halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (idx * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) - (t * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod)
                t = halvingPeriod + (idx * halvingPeriod) + startBlock
                continue 
        else:
            if block.number <= startBlock:
                idx = poolInfo[arg1].field_512 + -startBlock - 1 / halvingPeriod
                s = 0
                t = poolInfo[arg1].field_512
                while idx < 0:
                    if idx == -1:
                        revert with 'NH{q', 17
                    if idx + 1 and halvingPeriod > -1 / idx + 1:
                        revert with 'NH{q', 17
                    if halvingPeriod + (idx * halvingPeriod) > !startBlock:
                        revert with 'NH{q', 17
                    if 0 == halvingPeriod:
                        if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                            revert with 'NH{q', 17
                        if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                            revert with 'NH{q', 17
                        if s > !((halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)):
                            revert with 'NH{q', 17
                        idx = idx + 1
                        s = s + (halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)
                        t = halvingPeriod + (idx * halvingPeriod) + startBlock
                        continue 
                    if halvingPeriod + (idx * halvingPeriod) + startBlock <= startBlock:
                        if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                            revert with 'NH{q', 17
                        if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                            revert with 'NH{q', 17
                        if s > !((halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)):
                            revert with 'NH{q', 17
                        idx = idx + 1
                        s = s + (halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)
                        t = halvingPeriod + (idx * halvingPeriod) + startBlock
                        continue 
                    if halvingPeriod + (idx * halvingPeriod) + startBlock < startBlock:
                        revert with 'NH{q', 17
                    if halvingPeriod + (idx * halvingPeriod) < 1:
                        revert with 'NH{q', 17
                    if not halvingPeriod:
                        revert with 'NH{q', 18
                    if not halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod:
                        if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                            revert with 'NH{q', 17
                        if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                            revert with 'NH{q', 17
                        if s > !((halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)):
                            revert with 'NH{q', 17
                        idx = idx + 1
                        s = s + (halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)
                        t = halvingPeriod + (idx * halvingPeriod) + startBlock
                        continue 
                    if halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod > 255:
                        revert with 'NH{q', 17
                    if not 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod:
                        revert with 'NH{q', 18
                    if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                        revert with 'NH{q', 17
                    if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                        revert with 'NH{q', 17
                    if s > !((halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (idx * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) - (t * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod)):
                        revert with 'NH{q', 17
                    idx = idx + 1
                    s = s + (halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (idx * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) - (t * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod)
                    t = halvingPeriod + (idx * halvingPeriod) + startBlock
                    continue 
            else:
                if block.number < startBlock:
                    revert with 'NH{q', 17
                if block.number - startBlock < 1:
                    revert with 'NH{q', 17
                if not halvingPeriod:
                    revert with 'NH{q', 18
                idx = poolInfo[arg1].field_512 + -startBlock - 1 / halvingPeriod
                s = 0
                t = poolInfo[arg1].field_512
                while idx < block.number + -startBlock - 1 / halvingPeriod:
                    if idx == -1:
                        revert with 'NH{q', 17
                    if idx + 1 and halvingPeriod > -1 / idx + 1:
                        revert with 'NH{q', 17
                    if halvingPeriod + (idx * halvingPeriod) > !startBlock:
                        revert with 'NH{q', 17
                    if 0 == halvingPeriod:
                        if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                            revert with 'NH{q', 17
                        if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                            revert with 'NH{q', 17
                        if s > !((halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)):
                            revert with 'NH{q', 17
                        idx = idx + 1
                        s = s + (halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)
                        t = halvingPeriod + (idx * halvingPeriod) + startBlock
                        continue 
                    if halvingPeriod + (idx * halvingPeriod) + startBlock <= startBlock:
                        if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                            revert with 'NH{q', 17
                        if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                            revert with 'NH{q', 17
                        if s > !((halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)):
                            revert with 'NH{q', 17
                        idx = idx + 1
                        s = s + (halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)
                        t = halvingPeriod + (idx * halvingPeriod) + startBlock
                        continue 
                    if halvingPeriod + (idx * halvingPeriod) + startBlock < startBlock:
                        revert with 'NH{q', 17
                    if halvingPeriod + (idx * halvingPeriod) < 1:
                        revert with 'NH{q', 17
                    if not halvingPeriod:
                        revert with 'NH{q', 18
                    if not halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod:
                        if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                            revert with 'NH{q', 17
                        if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                            revert with 'NH{q', 17
                        if s > !((halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)):
                            revert with 'NH{q', 17
                        idx = idx + 1
                        s = s + (halvingPeriod * hCTPerBlock) + (idx * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (t * hCTPerBlock)
                        t = halvingPeriod + (idx * halvingPeriod) + startBlock
                        continue 
                    if halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod > 255:
                        revert with 'NH{q', 17
                    if not 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod:
                        revert with 'NH{q', 18
                    if halvingPeriod + (idx * halvingPeriod) + startBlock < t:
                        revert with 'NH{q', 17
                    if halvingPeriod + (idx * halvingPeriod) + startBlock - t and hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod > -1 / halvingPeriod + (idx * halvingPeriod) + startBlock - t:
                        revert with 'NH{q', 17
                    if s > !((halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (idx * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) - (t * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod)):
                        revert with 'NH{q', 17
                    idx = idx + 1
                    s = s + (halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (idx * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod) - (t * hCTPerBlock / 1 << halvingPeriod + (idx * halvingPeriod) - 1 / halvingPeriod)
                    t = halvingPeriod + (idx * halvingPeriod) + startBlock
                    continue 
    if 0 == halvingPeriod:
        if block.number < t:
            revert with 'NH{q', 17
        if block.number - t and hCTPerBlock > -1 / block.number - t:
            revert with 'NH{q', 17
        if s > !((block.number * hCTPerBlock) - (t * hCTPerBlock)):
            revert with 'NH{q', 17
        if s + (block.number * hCTPerBlock) - (t * hCTPerBlock) and poolInfo[arg1].field_256 > -1 / s + (block.number * hCTPerBlock) - (t * hCTPerBlock):
            revert with 'NH{q', 17
        if not totalAllocPoint:
            revert with 'NH{q', 18
        if (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (t * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint and 10^12 > -1 / (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (t * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint:
            revert with 'NH{q', 17
        if not poolInfo[arg1].field_1280:
            revert with 'NH{q', 18
        if poolInfo[arg1].field_768 > !(10^12 * (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (t * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280):
            revert with 'NH{q', 17
        if userInfo[arg1][address(arg2)].field_0 and poolInfo[arg1].field_768 + (10^12 * (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (t * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280) > -1 / userInfo[arg1][address(arg2)].field_0:
            revert with 'NH{q', 17
        if (poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (t * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12 < userInfo[arg1][address(arg2)].field_256:
            revert with 'NH{q', 17
        return ((poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (t * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_256, 
               ((poolInfo[arg1].field_1024 * userInfo[arg1][address(arg2)].field_0) + (10^12 * ext_call.return_data[0] / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_512
    if block.number <= startBlock:
        if block.number < t:
            revert with 'NH{q', 17
        if block.number - t and hCTPerBlock > -1 / block.number - t:
            revert with 'NH{q', 17
        if s > !((block.number * hCTPerBlock) - (t * hCTPerBlock)):
            revert with 'NH{q', 17
        if s + (block.number * hCTPerBlock) - (t * hCTPerBlock) and poolInfo[arg1].field_256 > -1 / s + (block.number * hCTPerBlock) - (t * hCTPerBlock):
            revert with 'NH{q', 17
        if not totalAllocPoint:
            revert with 'NH{q', 18
        if (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (t * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint and 10^12 > -1 / (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (t * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint:
            revert with 'NH{q', 17
        if not poolInfo[arg1].field_1280:
            revert with 'NH{q', 18
        if poolInfo[arg1].field_768 > !(10^12 * (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (t * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280):
            revert with 'NH{q', 17
        if userInfo[arg1][address(arg2)].field_0 and poolInfo[arg1].field_768 + (10^12 * (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (t * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280) > -1 / userInfo[arg1][address(arg2)].field_0:
            revert with 'NH{q', 17
        if (poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (t * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12 < userInfo[arg1][address(arg2)].field_256:
            revert with 'NH{q', 17
        return ((poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (t * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_256, 
               ((poolInfo[arg1].field_1024 * userInfo[arg1][address(arg2)].field_0) + (10^12 * ext_call.return_data[0] / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_512
    if block.number < startBlock:
        revert with 'NH{q', 17
    if block.number - startBlock < 1:
        revert with 'NH{q', 17
    if not halvingPeriod:
        revert with 'NH{q', 18
    if not block.number + -startBlock - 1 / halvingPeriod:
        if block.number < t:
            revert with 'NH{q', 17
        if block.number - t and hCTPerBlock > -1 / block.number - t:
            revert with 'NH{q', 17
        if s > !((block.number * hCTPerBlock) - (t * hCTPerBlock)):
            revert with 'NH{q', 17
        if s + (block.number * hCTPerBlock) - (t * hCTPerBlock) and poolInfo[arg1].field_256 > -1 / s + (block.number * hCTPerBlock) - (t * hCTPerBlock):
            revert with 'NH{q', 17
        if not totalAllocPoint:
            revert with 'NH{q', 18
        if (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (t * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint and 10^12 > -1 / (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (t * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint:
            revert with 'NH{q', 17
        if not poolInfo[arg1].field_1280:
            revert with 'NH{q', 18
        if poolInfo[arg1].field_768 > !(10^12 * (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (t * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280):
            revert with 'NH{q', 17
        if userInfo[arg1][address(arg2)].field_0 and poolInfo[arg1].field_768 + (10^12 * (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (t * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280) > -1 / userInfo[arg1][address(arg2)].field_0:
            revert with 'NH{q', 17
        if (poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (t * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12 < userInfo[arg1][address(arg2)].field_256:
            revert with 'NH{q', 17
        return ((poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock * poolInfo[arg1].field_256) - (t * hCTPerBlock * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_256, 
               ((poolInfo[arg1].field_1024 * userInfo[arg1][address(arg2)].field_0) + (10^12 * ext_call.return_data[0] / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_512
    if block.number + -startBlock - 1 / halvingPeriod > 255:
        revert with 'NH{q', 17
    if not 1 << block.number + -startBlock - 1 / halvingPeriod:
        revert with 'NH{q', 18
    if block.number < t:
        revert with 'NH{q', 17
    if block.number - t and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - t:
        revert with 'NH{q', 17
    if s > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (t * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
        revert with 'NH{q', 17
    if s + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (t * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[arg1].field_256 > -1 / s + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (t * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
        revert with 'NH{q', 17
    if not totalAllocPoint:
        revert with 'NH{q', 18
    if (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (t * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint and 10^12 > -1 / (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (t * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint:
        revert with 'NH{q', 17
    if not poolInfo[arg1].field_1280:
        revert with 'NH{q', 18
    if poolInfo[arg1].field_768 > !(10^12 * (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (t * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280):
        revert with 'NH{q', 17
    if userInfo[arg1][address(arg2)].field_0 and poolInfo[arg1].field_768 + (10^12 * (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (t * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280) > -1 / userInfo[arg1][address(arg2)].field_0:
        revert with 'NH{q', 17
    if (poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (t * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12 < userInfo[arg1][address(arg2)].field_256:
        revert with 'NH{q', 17
    return ((poolInfo[arg1].field_768 * userInfo[arg1][address(arg2)].field_0) + (10^12 * (s * poolInfo[arg1].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) - (t * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[arg1].field_256) / totalAllocPoint / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_256, 
           ((poolInfo[arg1].field_1024 * userInfo[arg1][address(arg2)].field_0) + (10^12 * ext_call.return_data[0] / poolInfo[arg1].field_1280 * userInfo[arg1][address(arg2)].field_0) / 10^12) - userInfo[arg1][address(arg2)].field_512
}

function massUpdatePools() payable {
    mem[64] = 96
    idx = 0
    while idx < poolInfo.length:
        mem[0] = 5
        if block.number > poolInfo[idx].field_512:
            mem[0] = poolInfo[idx].field_0
            mem[32] = 2
            if stor2[stor5[idx].field_0]:
                if not poolInfo[idx].field_1280:
                    poolInfo[idx].field_512 = block.number
                else:
                    if 0 == halvingPeriod:
                        if 0 == halvingPeriod:
                            if block.number < poolInfo[idx].field_512:
                                revert with 'NH{q', 17
                            if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                revert with 'NH{q', 17
                            if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                revert with 'NH{q', 17
                            if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                    revert with 'NH{q', 17
                                if not totalAllocPoint:
                                    revert with 'NH{q', 18
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(HCTAddress)
                                staticcall HCTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1815 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _1824 = mem[_1815]
                                require ext_code.size(HCTAddress)
                                staticcall HCTAddress.0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1857 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _1871 = mem[_1857]
                                require ext_code.size(HCTAddress)
                                staticcall HCTAddress.maxSupply() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1902 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _1917 = mem[_1902]
                                if _1871 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                    revert with 'NH{q', 17
                                if _1871 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_1902]:
                                    if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _2068 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if mem[_2068] < _1824:
                                            revert with 'NH{q', 17
                                        if mem[_2068] - _1824 and 10^12 > -1 / mem[_2068] - _1824:
                                            revert with 'NH{q', 17
                                        if not poolInfo[idx].field_1280:
                                            revert with 'NH{q', 18
                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2068]) - (10^12 * _1824) / poolInfo[idx].field_1280):
                                            revert with 'NH{q', 17
                                        poolInfo[idx].field_768 += (10^12 * mem[_2068]) - (10^12 * _1824) / poolInfo[idx].field_1280
                                    else:
                                        mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                        require ext_code.size(HCTAddress)
                                        call HCTAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _2129 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if mem[_2129] < _1824:
                                            revert with 'NH{q', 17
                                        if mem[_2129] - _1824 and 10^12 > -1 / mem[_2129] - _1824:
                                            revert with 'NH{q', 17
                                        if not poolInfo[idx].field_1280:
                                            revert with 'NH{q', 18
                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2129]) - (10^12 * _1824) / poolInfo[idx].field_1280):
                                            revert with 'NH{q', 17
                                        poolInfo[idx].field_768 += (10^12 * mem[_2129]) - (10^12 * _1824) / poolInfo[idx].field_1280
                                else:
                                    if mem[_1902] < _1871:
                                        revert with 'NH{q', 17
                                    if not mem[_1902] - _1871:
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _2218 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if mem[_2218] < _1824:
                                            revert with 'NH{q', 17
                                        if mem[_2218] - _1824 and 10^12 > -1 / mem[_2218] - _1824:
                                            revert with 'NH{q', 17
                                        if not poolInfo[idx].field_1280:
                                            revert with 'NH{q', 18
                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2218]) - (10^12 * _1824) / poolInfo[idx].field_1280):
                                            revert with 'NH{q', 17
                                        poolInfo[idx].field_768 += (10^12 * mem[_2218]) - (10^12 * _1824) / poolInfo[idx].field_1280
                                    else:
                                        mem[mem[64] + 36] = mem[_1902] - _1871
                                        require ext_code.size(HCTAddress)
                                        call HCTAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args this.address, _1917 - _1871
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _2294 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if mem[_2294] < _1824:
                                            revert with 'NH{q', 17
                                        if mem[_2294] - _1824 and 10^12 > -1 / mem[_2294] - _1824:
                                            revert with 'NH{q', 17
                                        if not poolInfo[idx].field_1280:
                                            revert with 'NH{q', 18
                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2294]) - (10^12 * _1824) / poolInfo[idx].field_1280):
                                            revert with 'NH{q', 17
                                        poolInfo[idx].field_768 += (10^12 * mem[_2294]) - (10^12 * _1824) / poolInfo[idx].field_1280
                                poolInfo[idx].field_512 = block.number
                        else:
                            if block.number <= startBlock:
                                if block.number < poolInfo[idx].field_512:
                                    revert with 'NH{q', 17
                                if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                    revert with 'NH{q', 17
                                if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                    revert with 'NH{q', 17
                                if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                    if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                        revert with 'NH{q', 17
                                    if not totalAllocPoint:
                                        revert with 'NH{q', 18
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(HCTAddress)
                                    staticcall HCTAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1819 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _1831 = mem[_1819]
                                    require ext_code.size(HCTAddress)
                                    staticcall HCTAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1864 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _1879 = mem[_1864]
                                    require ext_code.size(HCTAddress)
                                    staticcall HCTAddress.maxSupply() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1909 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _1928 = mem[_1909]
                                    if _1879 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                        revert with 'NH{q', 17
                                    if _1879 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_1909]:
                                        if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2089 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if mem[_2089] < _1831:
                                                revert with 'NH{q', 17
                                            if mem[_2089] - _1831 and 10^12 > -1 / mem[_2089] - _1831:
                                                revert with 'NH{q', 17
                                            if not poolInfo[idx].field_1280:
                                                revert with 'NH{q', 18
                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2089]) - (10^12 * _1831) / poolInfo[idx].field_1280):
                                                revert with 'NH{q', 17
                                            poolInfo[idx].field_768 += (10^12 * mem[_2089]) - (10^12 * _1831) / poolInfo[idx].field_1280
                                        else:
                                            mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                            require ext_code.size(HCTAddress)
                                            call HCTAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2169 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if mem[_2169] < _1831:
                                                revert with 'NH{q', 17
                                            if mem[_2169] - _1831 and 10^12 > -1 / mem[_2169] - _1831:
                                                revert with 'NH{q', 17
                                            if not poolInfo[idx].field_1280:
                                                revert with 'NH{q', 18
                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2169]) - (10^12 * _1831) / poolInfo[idx].field_1280):
                                                revert with 'NH{q', 17
                                            poolInfo[idx].field_768 += (10^12 * mem[_2169]) - (10^12 * _1831) / poolInfo[idx].field_1280
                                    else:
                                        if mem[_1909] < _1879:
                                            revert with 'NH{q', 17
                                        if not mem[_1909] - _1879:
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2253 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if mem[_2253] < _1831:
                                                revert with 'NH{q', 17
                                            if mem[_2253] - _1831 and 10^12 > -1 / mem[_2253] - _1831:
                                                revert with 'NH{q', 17
                                            if not poolInfo[idx].field_1280:
                                                revert with 'NH{q', 18
                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2253]) - (10^12 * _1831) / poolInfo[idx].field_1280):
                                                revert with 'NH{q', 17
                                            poolInfo[idx].field_768 += (10^12 * mem[_2253]) - (10^12 * _1831) / poolInfo[idx].field_1280
                                        else:
                                            mem[mem[64] + 36] = mem[_1909] - _1879
                                            require ext_code.size(HCTAddress)
                                            call HCTAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args this.address, _1928 - _1879
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2332 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if mem[_2332] < _1831:
                                                revert with 'NH{q', 17
                                            if mem[_2332] - _1831 and 10^12 > -1 / mem[_2332] - _1831:
                                                revert with 'NH{q', 17
                                            if not poolInfo[idx].field_1280:
                                                revert with 'NH{q', 18
                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2332]) - (10^12 * _1831) / poolInfo[idx].field_1280):
                                                revert with 'NH{q', 17
                                            poolInfo[idx].field_768 += (10^12 * mem[_2332]) - (10^12 * _1831) / poolInfo[idx].field_1280
                                    poolInfo[idx].field_512 = block.number
                            else:
                                if block.number < startBlock:
                                    revert with 'NH{q', 17
                                if block.number - startBlock < 1:
                                    revert with 'NH{q', 17
                                if not halvingPeriod:
                                    revert with 'NH{q', 18
                                if not block.number + -startBlock - 1 / halvingPeriod:
                                    if block.number < poolInfo[idx].field_512:
                                        revert with 'NH{q', 17
                                    if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                        revert with 'NH{q', 17
                                    if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                        revert with 'NH{q', 17
                                    if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                        if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                            revert with 'NH{q', 17
                                        if not totalAllocPoint:
                                            revert with 'NH{q', 18
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1959 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _1980 = mem[_1959]
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _2067 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _2127 = mem[_2067]
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.maxSupply() with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _2256 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _2335 = mem[_2256]
                                        if _2127 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                            revert with 'NH{q', 17
                                        if _2127 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2256]:
                                            if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2576 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2576] < _1980:
                                                    revert with 'NH{q', 17
                                                if mem[_2576] - _1980 and 10^12 > -1 / mem[_2576] - _1980:
                                                    revert with 'NH{q', 17
                                                if not poolInfo[idx].field_1280:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2576]) - (10^12 * _1980) / poolInfo[idx].field_1280):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2576]) - (10^12 * _1980) / poolInfo[idx].field_1280
                                            else:
                                                mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                require ext_code.size(HCTAddress)
                                                call HCTAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2661 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2661] < _1980:
                                                    revert with 'NH{q', 17
                                                if mem[_2661] - _1980 and 10^12 > -1 / mem[_2661] - _1980:
                                                    revert with 'NH{q', 17
                                                if not poolInfo[idx].field_1280:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2661]) - (10^12 * _1980) / poolInfo[idx].field_1280):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2661]) - (10^12 * _1980) / poolInfo[idx].field_1280
                                        else:
                                            if mem[_2256] < _2127:
                                                revert with 'NH{q', 17
                                            if not mem[_2256] - _2127:
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2767 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2767] < _1980:
                                                    revert with 'NH{q', 17
                                                if mem[_2767] - _1980 and 10^12 > -1 / mem[_2767] - _1980:
                                                    revert with 'NH{q', 17
                                                if not poolInfo[idx].field_1280:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2767]) - (10^12 * _1980) / poolInfo[idx].field_1280):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2767]) - (10^12 * _1980) / poolInfo[idx].field_1280
                                            else:
                                                mem[mem[64] + 36] = mem[_2256] - _2127
                                                require ext_code.size(HCTAddress)
                                                call HCTAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args this.address, _2335 - _2127
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2879 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2879] < _1980:
                                                    revert with 'NH{q', 17
                                                if mem[_2879] - _1980 and 10^12 > -1 / mem[_2879] - _1980:
                                                    revert with 'NH{q', 17
                                                if not poolInfo[idx].field_1280:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2879]) - (10^12 * _1980) / poolInfo[idx].field_1280):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2879]) - (10^12 * _1980) / poolInfo[idx].field_1280
                                        poolInfo[idx].field_512 = block.number
                                else:
                                    if block.number + -startBlock - 1 / halvingPeriod > 255:
                                        revert with 'NH{q', 17
                                    if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                        revert with 'NH{q', 18
                                    if block.number < poolInfo[idx].field_512:
                                        revert with 'NH{q', 17
                                    if block.number - poolInfo[idx].field_512 and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - poolInfo[idx].field_512:
                                        revert with 'NH{q', 17
                                    if 0 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                        revert with 'NH{q', 17
                                    if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                        if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                            revert with 'NH{q', 17
                                        if not totalAllocPoint:
                                            revert with 'NH{q', 18
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _2019 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _2066 = mem[_2019]
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _2216 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _2292 = mem[_2216]
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.maxSupply() with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _2416 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _2459 = mem[_2416]
                                        if _2292 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                            revert with 'NH{q', 17
                                        if _2292 + ((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2416]:
                                            if not (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2763 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2763] < _2066:
                                                    revert with 'NH{q', 17
                                                if mem[_2763] - _2066 and 10^12 > -1 / mem[_2763] - _2066:
                                                    revert with 'NH{q', 17
                                                if not poolInfo[idx].field_1280:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2763]) - (10^12 * _2066) / poolInfo[idx].field_1280):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2763]) - (10^12 * _2066) / poolInfo[idx].field_1280
                                            else:
                                                mem[mem[64] + 36] = (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                require ext_code.size(HCTAddress)
                                                call HCTAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args this.address, (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2875 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2875] < _2066:
                                                    revert with 'NH{q', 17
                                                if mem[_2875] - _2066 and 10^12 > -1 / mem[_2875] - _2066:
                                                    revert with 'NH{q', 17
                                                if not poolInfo[idx].field_1280:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2875]) - (10^12 * _2066) / poolInfo[idx].field_1280):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2875]) - (10^12 * _2066) / poolInfo[idx].field_1280
                                        else:
                                            if mem[_2416] < _2292:
                                                revert with 'NH{q', 17
                                            if not mem[_2416] - _2292:
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2990 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2990] < _2066:
                                                    revert with 'NH{q', 17
                                                if mem[_2990] - _2066 and 10^12 > -1 / mem[_2990] - _2066:
                                                    revert with 'NH{q', 17
                                                if not poolInfo[idx].field_1280:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2990]) - (10^12 * _2066) / poolInfo[idx].field_1280):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2990]) - (10^12 * _2066) / poolInfo[idx].field_1280
                                            else:
                                                mem[mem[64] + 36] = mem[_2416] - _2292
                                                require ext_code.size(HCTAddress)
                                                call HCTAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args this.address, _2459 - _2292
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3068 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_3068] < _2066:
                                                    revert with 'NH{q', 17
                                                if mem[_3068] - _2066 and 10^12 > -1 / mem[_3068] - _2066:
                                                    revert with 'NH{q', 17
                                                if not poolInfo[idx].field_1280:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_3068]) - (10^12 * _2066) / poolInfo[idx].field_1280):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_3068]) - (10^12 * _2066) / poolInfo[idx].field_1280
                                        poolInfo[idx].field_512 = block.number
                    else:
                        if poolInfo[idx].field_512 <= startBlock:
                            if 0 == halvingPeriod:
                                if 0 == halvingPeriod:
                                    if block.number < poolInfo[idx].field_512:
                                        revert with 'NH{q', 17
                                    if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                        revert with 'NH{q', 17
                                    if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                        revert with 'NH{q', 17
                                    if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                        if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                            revert with 'NH{q', 17
                                        if not totalAllocPoint:
                                            revert with 'NH{q', 18
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1818 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _1830 = mem[_1818]
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1863 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _1878 = mem[_1863]
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.maxSupply() with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1908 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _1925 = mem[_1908]
                                        if _1878 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                            revert with 'NH{q', 17
                                        if _1878 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_1908]:
                                            if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2084 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2084] < _1830:
                                                    revert with 'NH{q', 17
                                                if mem[_2084] - _1830 and 10^12 > -1 / mem[_2084] - _1830:
                                                    revert with 'NH{q', 17
                                                if not poolInfo[idx].field_1280:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2084]) - (10^12 * _1830) / poolInfo[idx].field_1280):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2084]) - (10^12 * _1830) / poolInfo[idx].field_1280
                                            else:
                                                mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                require ext_code.size(HCTAddress)
                                                call HCTAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2161 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2161] < _1830:
                                                    revert with 'NH{q', 17
                                                if mem[_2161] - _1830 and 10^12 > -1 / mem[_2161] - _1830:
                                                    revert with 'NH{q', 17
                                                if not poolInfo[idx].field_1280:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2161]) - (10^12 * _1830) / poolInfo[idx].field_1280):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2161]) - (10^12 * _1830) / poolInfo[idx].field_1280
                                        else:
                                            if mem[_1908] < _1878:
                                                revert with 'NH{q', 17
                                            if not mem[_1908] - _1878:
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2246 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2246] < _1830:
                                                    revert with 'NH{q', 17
                                                if mem[_2246] - _1830 and 10^12 > -1 / mem[_2246] - _1830:
                                                    revert with 'NH{q', 17
                                                if not poolInfo[idx].field_1280:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2246]) - (10^12 * _1830) / poolInfo[idx].field_1280):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2246]) - (10^12 * _1830) / poolInfo[idx].field_1280
                                            else:
                                                mem[mem[64] + 36] = mem[_1908] - _1878
                                                require ext_code.size(HCTAddress)
                                                call HCTAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args this.address, _1925 - _1878
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2328 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2328] < _1830:
                                                    revert with 'NH{q', 17
                                                if mem[_2328] - _1830 and 10^12 > -1 / mem[_2328] - _1830:
                                                    revert with 'NH{q', 17
                                                if not poolInfo[idx].field_1280:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2328]) - (10^12 * _1830) / poolInfo[idx].field_1280):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2328]) - (10^12 * _1830) / poolInfo[idx].field_1280
                                        poolInfo[idx].field_512 = block.number
                                else:
                                    if block.number <= startBlock:
                                        if block.number < poolInfo[idx].field_512:
                                            revert with 'NH{q', 17
                                        if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                            revert with 'NH{q', 17
                                        if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                            if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                revert with 'NH{q', 17
                                            if not totalAllocPoint:
                                                revert with 'NH{q', 18
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _1823 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _1838 = mem[_1823]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _1870 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _1888 = mem[_1870]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.maxSupply() with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _1916 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _1940 = mem[_1916]
                                            if _1888 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                revert with 'NH{q', 17
                                            if _1888 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_1916]:
                                                if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2116 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2116] < _1838:
                                                        revert with 'NH{q', 17
                                                    if mem[_2116] - _1838 and 10^12 > -1 / mem[_2116] - _1838:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2116]) - (10^12 * _1838) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2116]) - (10^12 * _1838) / poolInfo[idx].field_1280
                                                else:
                                                    mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2206 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2206] < _1838:
                                                        revert with 'NH{q', 17
                                                    if mem[_2206] - _1838 and 10^12 > -1 / mem[_2206] - _1838:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2206]) - (10^12 * _1838) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2206]) - (10^12 * _1838) / poolInfo[idx].field_1280
                                            else:
                                                if mem[_1916] < _1888:
                                                    revert with 'NH{q', 17
                                                if not mem[_1916] - _1888:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2286 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2286] < _1838:
                                                        revert with 'NH{q', 17
                                                    if mem[_2286] - _1838 and 10^12 > -1 / mem[_2286] - _1838:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2286]) - (10^12 * _1838) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2286]) - (10^12 * _1838) / poolInfo[idx].field_1280
                                                else:
                                                    mem[mem[64] + 36] = mem[_1916] - _1888
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, _1940 - _1888
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2369 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2369] < _1838:
                                                        revert with 'NH{q', 17
                                                    if mem[_2369] - _1838 and 10^12 > -1 / mem[_2369] - _1838:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2369]) - (10^12 * _1838) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2369]) - (10^12 * _1838) / poolInfo[idx].field_1280
                                            poolInfo[idx].field_512 = block.number
                                    else:
                                        if block.number < startBlock:
                                            revert with 'NH{q', 17
                                        if block.number - startBlock < 1:
                                            revert with 'NH{q', 17
                                        if not halvingPeriod:
                                            revert with 'NH{q', 18
                                        if not block.number + -startBlock - 1 / halvingPeriod:
                                            if block.number < poolInfo[idx].field_512:
                                                revert with 'NH{q', 17
                                            if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                                revert with 'NH{q', 17
                                            if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                                if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _1964 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _1994 = mem[_1964]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2083 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _2159 = mem[_2083]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2289 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _2372 = mem[_2289]
                                                if _2159 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _2159 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2289]:
                                                    if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2596 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2596] < _1994:
                                                            revert with 'NH{q', 17
                                                        if mem[_2596] - _1994 and 10^12 > -1 / mem[_2596] - _1994:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2596]) - (10^12 * _1994) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2596]) - (10^12 * _1994) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2702 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2702] < _1994:
                                                            revert with 'NH{q', 17
                                                        if mem[_2702] - _1994 and 10^12 > -1 / mem[_2702] - _1994:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2702]) - (10^12 * _1994) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2702]) - (10^12 * _1994) / poolInfo[idx].field_1280
                                                else:
                                                    if mem[_2289] < _2159:
                                                        revert with 'NH{q', 17
                                                    if not mem[_2289] - _2159:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2802 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2802] < _1994:
                                                            revert with 'NH{q', 17
                                                        if mem[_2802] - _1994 and 10^12 > -1 / mem[_2802] - _1994:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2802]) - (10^12 * _1994) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2802]) - (10^12 * _1994) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = mem[_2289] - _2159
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _2372 - _2159
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2927 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2927] < _1994:
                                                            revert with 'NH{q', 17
                                                        if mem[_2927] - _1994 and 10^12 > -1 / mem[_2927] - _1994:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2927]) - (10^12 * _1994) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2927]) - (10^12 * _1994) / poolInfo[idx].field_1280
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                revert with 'NH{q', 17
                                            if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                revert with 'NH{q', 18
                                            if block.number < poolInfo[idx].field_512:
                                                revert with 'NH{q', 17
                                            if block.number - poolInfo[idx].field_512 and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - poolInfo[idx].field_512:
                                                revert with 'NH{q', 17
                                            if 0 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                revert with 'NH{q', 17
                                            if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2034 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _2082 = mem[_2034]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2244 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _2326 = mem[_2244]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2435 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _2476 = mem[_2435]
                                                if _2326 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _2326 + ((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2435]:
                                                    if not (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2798 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2798] < _2082:
                                                            revert with 'NH{q', 17
                                                        if mem[_2798] - _2082 and 10^12 > -1 / mem[_2798] - _2082:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2798]) - (10^12 * _2082) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2798]) - (10^12 * _2082) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2923 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2923] < _2082:
                                                            revert with 'NH{q', 17
                                                        if mem[_2923] - _2082 and 10^12 > -1 / mem[_2923] - _2082:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2923]) - (10^12 * _2082) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2923]) - (10^12 * _2082) / poolInfo[idx].field_1280
                                                else:
                                                    if mem[_2435] < _2326:
                                                        revert with 'NH{q', 17
                                                    if not mem[_2435] - _2326:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3021 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_3021] < _2082:
                                                            revert with 'NH{q', 17
                                                        if mem[_3021] - _2082 and 10^12 > -1 / mem[_3021] - _2082:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_3021]) - (10^12 * _2082) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_3021]) - (10^12 * _2082) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = mem[_2435] - _2326
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _2476 - _2326
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3090 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_3090] < _2082:
                                                            revert with 'NH{q', 17
                                                        if mem[_3090] - _2082 and 10^12 > -1 / mem[_3090] - _2082:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_3090]) - (10^12 * _2082) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_3090]) - (10^12 * _2082) / poolInfo[idx].field_1280
                                                poolInfo[idx].field_512 = block.number
                            else:
                                if block.number <= startBlock:
                                    if 0 == halvingPeriod:
                                        if block.number < poolInfo[idx].field_512:
                                            revert with 'NH{q', 17
                                        if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                            revert with 'NH{q', 17
                                        if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                            if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                revert with 'NH{q', 17
                                            if not totalAllocPoint:
                                                revert with 'NH{q', 18
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _1822 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _1837 = mem[_1822]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _1869 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _1887 = mem[_1869]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.maxSupply() with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _1915 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _1937 = mem[_1915]
                                            if _1887 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                revert with 'NH{q', 17
                                            if _1887 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_1915]:
                                                if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2112 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2112] < _1837:
                                                        revert with 'NH{q', 17
                                                    if mem[_2112] - _1837 and 10^12 > -1 / mem[_2112] - _1837:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2112]) - (10^12 * _1837) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2112]) - (10^12 * _1837) / poolInfo[idx].field_1280
                                                else:
                                                    mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2199 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2199] < _1837:
                                                        revert with 'NH{q', 17
                                                    if mem[_2199] - _1837 and 10^12 > -1 / mem[_2199] - _1837:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2199]) - (10^12 * _1837) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2199]) - (10^12 * _1837) / poolInfo[idx].field_1280
                                            else:
                                                if mem[_1915] < _1887:
                                                    revert with 'NH{q', 17
                                                if not mem[_1915] - _1887:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2281 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2281] < _1837:
                                                        revert with 'NH{q', 17
                                                    if mem[_2281] - _1837 and 10^12 > -1 / mem[_2281] - _1837:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2281]) - (10^12 * _1837) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2281]) - (10^12 * _1837) / poolInfo[idx].field_1280
                                                else:
                                                    mem[mem[64] + 36] = mem[_1915] - _1887
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, _1937 - _1887
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2366 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2366] < _1837:
                                                        revert with 'NH{q', 17
                                                    if mem[_2366] - _1837 and 10^12 > -1 / mem[_2366] - _1837:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2366]) - (10^12 * _1837) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2366]) - (10^12 * _1837) / poolInfo[idx].field_1280
                                            poolInfo[idx].field_512 = block.number
                                    else:
                                        if block.number <= startBlock:
                                            if block.number < poolInfo[idx].field_512:
                                                revert with 'NH{q', 17
                                            if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                                revert with 'NH{q', 17
                                            if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                                if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _1829 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _1845 = mem[_1829]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _1877 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _1897 = mem[_1877]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _1924 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _1951 = mem[_1924]
                                                if _1897 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _1897 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_1924]:
                                                    if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2149 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2149] < _1845:
                                                            revert with 'NH{q', 17
                                                        if mem[_2149] - _1845 and 10^12 > -1 / mem[_2149] - _1845:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2149]) - (10^12 * _1845) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2149]) - (10^12 * _1845) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2237 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2237] < _1845:
                                                            revert with 'NH{q', 17
                                                        if mem[_2237] - _1845 and 10^12 > -1 / mem[_2237] - _1845:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2237]) - (10^12 * _1845) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2237]) - (10^12 * _1845) / poolInfo[idx].field_1280
                                                else:
                                                    if mem[_1924] < _1897:
                                                        revert with 'NH{q', 17
                                                    if not mem[_1924] - _1897:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2321 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2321] < _1845:
                                                            revert with 'NH{q', 17
                                                        if mem[_2321] - _1845 and 10^12 > -1 / mem[_2321] - _1845:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2321]) - (10^12 * _1845) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2321]) - (10^12 * _1845) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = mem[_1924] - _1897
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _1951 - _1897
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2402 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2402] < _1845:
                                                            revert with 'NH{q', 17
                                                        if mem[_2402] - _1845 and 10^12 > -1 / mem[_2402] - _1845:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2402]) - (10^12 * _1845) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2402]) - (10^12 * _1845) / poolInfo[idx].field_1280
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number < startBlock:
                                                revert with 'NH{q', 17
                                            if block.number - startBlock < 1:
                                                revert with 'NH{q', 17
                                            if not halvingPeriod:
                                                revert with 'NH{q', 18
                                            if not block.number + -startBlock - 1 / halvingPeriod:
                                                if block.number < poolInfo[idx].field_512:
                                                    revert with 'NH{q', 17
                                                if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                                    revert with 'NH{q', 17
                                                if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                                    if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _1974 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2010 = mem[_1974]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2111 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2197 = mem[_2111]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2324 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2405 = mem[_2324]
                                                    if _2197 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _2197 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2324]:
                                                        if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2631 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2631] < _2010:
                                                                revert with 'NH{q', 17
                                                            if mem[_2631] - _2010 and 10^12 > -1 / mem[_2631] - _2010:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2631]) - (10^12 * _2010) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2631]) - (10^12 * _2010) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2741 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2741] < _2010:
                                                                revert with 'NH{q', 17
                                                            if mem[_2741] - _2010 and 10^12 > -1 / mem[_2741] - _2010:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2741]) - (10^12 * _2010) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2741]) - (10^12 * _2010) / poolInfo[idx].field_1280
                                                    else:
                                                        if mem[_2324] < _2197:
                                                            revert with 'NH{q', 17
                                                        if not mem[_2324] - _2197:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2855 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2855] < _2010:
                                                                revert with 'NH{q', 17
                                                            if mem[_2855] - _2010 and 10^12 > -1 / mem[_2855] - _2010:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2855]) - (10^12 * _2010) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2855]) - (10^12 * _2010) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = mem[_2324] - _2197
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _2405 - _2197
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2974 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2974] < _2010:
                                                                revert with 'NH{q', 17
                                                            if mem[_2974] - _2010 and 10^12 > -1 / mem[_2974] - _2010:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2974]) - (10^12 * _2010) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2974]) - (10^12 * _2010) / poolInfo[idx].field_1280
                                                    poolInfo[idx].field_512 = block.number
                                            else:
                                                if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                    revert with 'NH{q', 17
                                                if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                    revert with 'NH{q', 18
                                                if block.number < poolInfo[idx].field_512:
                                                    revert with 'NH{q', 17
                                                if block.number - poolInfo[idx].field_512 and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - poolInfo[idx].field_512:
                                                    revert with 'NH{q', 17
                                                if 0 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                    revert with 'NH{q', 17
                                                if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                    if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2054 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2110 = mem[_2054]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2279 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2364 = mem[_2279]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2455 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2497 = mem[_2455]
                                                    if _2364 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _2364 + ((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2455]:
                                                        if not (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2851 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2851] < _2110:
                                                                revert with 'NH{q', 17
                                                            if mem[_2851] - _2110 and 10^12 > -1 / mem[_2851] - _2110:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2851]) - (10^12 * _2110) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2851]) - (10^12 * _2110) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2970 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2970] < _2110:
                                                                revert with 'NH{q', 17
                                                            if mem[_2970] - _2110 and 10^12 > -1 / mem[_2970] - _2110:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2970]) - (10^12 * _2110) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2970]) - (10^12 * _2110) / poolInfo[idx].field_1280
                                                    else:
                                                        if mem[_2455] < _2364:
                                                            revert with 'NH{q', 17
                                                        if not mem[_2455] - _2364:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _3058 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_3058] < _2110:
                                                                revert with 'NH{q', 17
                                                            if mem[_3058] - _2110 and 10^12 > -1 / mem[_3058] - _2110:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_3058]) - (10^12 * _2110) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_3058]) - (10^12 * _2110) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = mem[_2455] - _2364
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _2497 - _2364
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _3118 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_3118] < _2110:
                                                                revert with 'NH{q', 17
                                                            if mem[_3118] - _2110 and 10^12 > -1 / mem[_3118] - _2110:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_3118]) - (10^12 * _2110) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_3118]) - (10^12 * _2110) / poolInfo[idx].field_1280
                                                    poolInfo[idx].field_512 = block.number
                                else:
                                    if block.number < startBlock:
                                        revert with 'NH{q', 17
                                    if block.number - startBlock < 1:
                                        revert with 'NH{q', 17
                                    if not halvingPeriod:
                                        revert with 'NH{q', 18
                                    s = 0
                                    t = 0
                                    u = poolInfo[idx].field_512
                                    while s < block.number + -startBlock - 1 / halvingPeriod:
                                        if s == -1:
                                            revert with 'NH{q', 17
                                        if s + 1 and halvingPeriod > -1 / s + 1:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) > !startBlock:
                                            revert with 'NH{q', 17
                                        if 0 == halvingPeriod:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) + startBlock <= startBlock:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) + startBlock < startBlock:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) < 1:
                                            revert with 'NH{q', 17
                                        if not halvingPeriod:
                                            revert with 'NH{q', 18
                                        if not halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > 255:
                                            revert with 'NH{q', 17
                                        if not 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                            revert with 'NH{q', 18
                                        if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                            revert with 'NH{q', 17
                                        if t > !((halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)):
                                            revert with 'NH{q', 17
                                        s = s + 1
                                        t = t + (halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)
                                        u = halvingPeriod + (s * halvingPeriod) + startBlock
                                        continue 
                                    if 0 == halvingPeriod:
                                        if block.number < u:
                                            revert with 'NH{q', 17
                                        if block.number - u and hCTPerBlock > -1 / block.number - u:
                                            revert with 'NH{q', 17
                                        if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                revert with 'NH{q', 17
                                            if not totalAllocPoint:
                                                revert with 'NH{q', 18
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3633 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3649 = mem[_3633]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3697 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3713 = mem[_3697]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.maxSupply() with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3761 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3777 = mem[_3761]
                                            if _3713 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                revert with 'NH{q', 17
                                            if _3713 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3761]:
                                                if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3947 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_3947] < _3649:
                                                        revert with 'NH{q', 17
                                                    if mem[_3947] - _3649 and 10^12 > -1 / mem[_3947] - _3649:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_3947]) - (10^12 * _3649) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_3947]) - (10^12 * _3649) / poolInfo[idx].field_1280
                                                else:
                                                    mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4047 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4047] < _3649:
                                                        revert with 'NH{q', 17
                                                    if mem[_4047] - _3649 and 10^12 > -1 / mem[_4047] - _3649:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4047]) - (10^12 * _3649) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4047]) - (10^12 * _3649) / poolInfo[idx].field_1280
                                            else:
                                                if mem[_3761] < _3713:
                                                    revert with 'NH{q', 17
                                                if not mem[_3761] - _3713:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4147 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4147] < _3649:
                                                        revert with 'NH{q', 17
                                                    if mem[_4147] - _3649 and 10^12 > -1 / mem[_4147] - _3649:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4147]) - (10^12 * _3649) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4147]) - (10^12 * _3649) / poolInfo[idx].field_1280
                                                else:
                                                    mem[mem[64] + 36] = mem[_3761] - _3713
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, _3777 - _3713
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4219 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4219] < _3649:
                                                        revert with 'NH{q', 17
                                                    if mem[_4219] - _3649 and 10^12 > -1 / mem[_4219] - _3649:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4219]) - (10^12 * _3649) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4219]) - (10^12 * _3649) / poolInfo[idx].field_1280
                                            poolInfo[idx].field_512 = block.number
                                    else:
                                        if block.number <= startBlock:
                                            if block.number < u:
                                                revert with 'NH{q', 17
                                            if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                revert with 'NH{q', 17
                                            if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3641 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3657 = mem[_3641]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3705 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3729 = mem[_3705]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3769 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3793 = mem[_3769]
                                                if _3729 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _3729 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3769]:
                                                    if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3985 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_3985] < _3657:
                                                            revert with 'NH{q', 17
                                                        if mem[_3985] - _3657 and 10^12 > -1 / mem[_3985] - _3657:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_3985]) - (10^12 * _3657) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_3985]) - (10^12 * _3657) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4102 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4102] < _3657:
                                                            revert with 'NH{q', 17
                                                        if mem[_4102] - _3657 and 10^12 > -1 / mem[_4102] - _3657:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4102]) - (10^12 * _3657) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4102]) - (10^12 * _3657) / poolInfo[idx].field_1280
                                                else:
                                                    if mem[_3769] < _3729:
                                                        revert with 'NH{q', 17
                                                    if not mem[_3769] - _3729:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4186 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4186] < _3657:
                                                            revert with 'NH{q', 17
                                                        if mem[_4186] - _3657 and 10^12 > -1 / mem[_4186] - _3657:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4186]) - (10^12 * _3657) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4186]) - (10^12 * _3657) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = mem[_3769] - _3729
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _3793 - _3729
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4250 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4250] < _3657:
                                                            revert with 'NH{q', 17
                                                        if mem[_4250] - _3657 and 10^12 > -1 / mem[_4250] - _3657:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4250]) - (10^12 * _3657) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4250]) - (10^12 * _3657) / poolInfo[idx].field_1280
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number < startBlock:
                                                revert with 'NH{q', 17
                                            if block.number - startBlock < 1:
                                                revert with 'NH{q', 17
                                            if not halvingPeriod:
                                                revert with 'NH{q', 18
                                            if not block.number + -startBlock - 1 / halvingPeriod:
                                                if block.number < u:
                                                    revert with 'NH{q', 17
                                                if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                    revert with 'NH{q', 17
                                                if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                    if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3809 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3827 = mem[_3809]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3946 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4045 = mem[_3946]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4189 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4253 = mem[_4189]
                                                    if _4045 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _4045 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4189]:
                                                        if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4345 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4345] < _3827:
                                                                revert with 'NH{q', 17
                                                            if mem[_4345] - _3827 and 10^12 > -1 / mem[_4345] - _3827:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4345]) - (10^12 * _3827) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4345]) - (10^12 * _3827) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4416 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4416] < _3827:
                                                                revert with 'NH{q', 17
                                                            if mem[_4416] - _3827 and 10^12 > -1 / mem[_4416] - _3827:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4416]) - (10^12 * _3827) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4416]) - (10^12 * _3827) / poolInfo[idx].field_1280
                                                    else:
                                                        if mem[_4189] < _4045:
                                                            revert with 'NH{q', 17
                                                        if not mem[_4189] - _4045:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4469 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4469] < _3827:
                                                                revert with 'NH{q', 17
                                                            if mem[_4469] - _3827 and 10^12 > -1 / mem[_4469] - _3827:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4469]) - (10^12 * _3827) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4469]) - (10^12 * _3827) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = mem[_4189] - _4045
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _4253 - _4045
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4538 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4538] < _3827:
                                                                revert with 'NH{q', 17
                                                            if mem[_4538] - _3827 and 10^12 > -1 / mem[_4538] - _3827:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4538]) - (10^12 * _3827) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4538]) - (10^12 * _3827) / poolInfo[idx].field_1280
                                                    poolInfo[idx].field_512 = block.number
                                            else:
                                                if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                    revert with 'NH{q', 17
                                                if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                    revert with 'NH{q', 18
                                                if block.number < u:
                                                    revert with 'NH{q', 17
                                                if block.number - u and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - u:
                                                    revert with 'NH{q', 17
                                                if t > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                    revert with 'NH{q', 17
                                                if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                    if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3883 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3945 = mem[_3883]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4145 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4217 = mem[_4145]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4286 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4297 = mem[_4286]
                                                    if _4217 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _4217 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4286]:
                                                        if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4465 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4465] < _3945:
                                                                revert with 'NH{q', 17
                                                            if mem[_4465] - _3945 and 10^12 > -1 / mem[_4465] - _3945:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4465]) - (10^12 * _3945) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4465]) - (10^12 * _3945) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4534 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4534] < _3945:
                                                                revert with 'NH{q', 17
                                                            if mem[_4534] - _3945 and 10^12 > -1 / mem[_4534] - _3945:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4534]) - (10^12 * _3945) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4534]) - (10^12 * _3945) / poolInfo[idx].field_1280
                                                    else:
                                                        if mem[_4286] < _4217:
                                                            revert with 'NH{q', 17
                                                        if not mem[_4286] - _4217:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4578 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4578] < _3945:
                                                                revert with 'NH{q', 17
                                                            if mem[_4578] - _3945 and 10^12 > -1 / mem[_4578] - _3945:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4578]) - (10^12 * _3945) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4578]) - (10^12 * _3945) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = mem[_4286] - _4217
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _4297 - _4217
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4606 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4606] < _3945:
                                                                revert with 'NH{q', 17
                                                            if mem[_4606] - _3945 and 10^12 > -1 / mem[_4606] - _3945:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4606]) - (10^12 * _3945) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4606]) - (10^12 * _3945) / poolInfo[idx].field_1280
                                                    poolInfo[idx].field_512 = block.number
                        else:
                            if poolInfo[idx].field_512 < startBlock:
                                revert with 'NH{q', 17
                            if poolInfo[idx].field_512 - startBlock < 1:
                                revert with 'NH{q', 17
                            if not halvingPeriod:
                                revert with 'NH{q', 18
                            if 0 == halvingPeriod:
                                s = poolInfo[idx].field_512 + -startBlock - 1 / halvingPeriod
                                t = 0
                                u = poolInfo[idx].field_512
                                while s < 0:
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    if s + 1 and halvingPeriod > -1 / s + 1:
                                        revert with 'NH{q', 17
                                    if halvingPeriod + (s * halvingPeriod) > !startBlock:
                                        revert with 'NH{q', 17
                                    if 0 == halvingPeriod:
                                        if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                            revert with 'NH{q', 17
                                        if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        s = s + 1
                                        t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                        u = halvingPeriod + (s * halvingPeriod) + startBlock
                                        continue 
                                    if halvingPeriod + (s * halvingPeriod) + startBlock <= startBlock:
                                        if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                            revert with 'NH{q', 17
                                        if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        s = s + 1
                                        t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                        u = halvingPeriod + (s * halvingPeriod) + startBlock
                                        continue 
                                    if halvingPeriod + (s * halvingPeriod) + startBlock < startBlock:
                                        revert with 'NH{q', 17
                                    if halvingPeriod + (s * halvingPeriod) < 1:
                                        revert with 'NH{q', 17
                                    if not halvingPeriod:
                                        revert with 'NH{q', 18
                                    if not halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                        if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                            revert with 'NH{q', 17
                                        if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        s = s + 1
                                        t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                        u = halvingPeriod + (s * halvingPeriod) + startBlock
                                        continue 
                                    if halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > 255:
                                        revert with 'NH{q', 17
                                    if not 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                        revert with 'NH{q', 18
                                    if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                        revert with 'NH{q', 17
                                    if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                        revert with 'NH{q', 17
                                    if t > !((halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)):
                                        revert with 'NH{q', 17
                                    s = s + 1
                                    t = t + (halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)
                                    u = halvingPeriod + (s * halvingPeriod) + startBlock
                                    continue 
                                if 0 == halvingPeriod:
                                    if block.number < u:
                                        revert with 'NH{q', 17
                                    if block.number - u and hCTPerBlock > -1 / block.number - u:
                                        revert with 'NH{q', 17
                                    if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                        revert with 'NH{q', 17
                                    if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                        if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                            revert with 'NH{q', 17
                                        if not totalAllocPoint:
                                            revert with 'NH{q', 18
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3636 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _3652 = mem[_3636]
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3700 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _3716 = mem[_3700]
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.maxSupply() with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3764 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _3780 = mem[_3764]
                                        if _3716 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                            revert with 'NH{q', 17
                                        if _3716 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3764]:
                                            if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3962 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_3962] < _3652:
                                                    revert with 'NH{q', 17
                                                if mem[_3962] - _3652 and 10^12 > -1 / mem[_3962] - _3652:
                                                    revert with 'NH{q', 17
                                                if not poolInfo[idx].field_1280:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_3962]) - (10^12 * _3652) / poolInfo[idx].field_1280):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_3962]) - (10^12 * _3652) / poolInfo[idx].field_1280
                                            else:
                                                mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                require ext_code.size(HCTAddress)
                                                call HCTAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _4074 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_4074] < _3652:
                                                    revert with 'NH{q', 17
                                                if mem[_4074] - _3652 and 10^12 > -1 / mem[_4074] - _3652:
                                                    revert with 'NH{q', 17
                                                if not poolInfo[idx].field_1280:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4074]) - (10^12 * _3652) / poolInfo[idx].field_1280):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_4074]) - (10^12 * _3652) / poolInfo[idx].field_1280
                                        else:
                                            if mem[_3764] < _3716:
                                                revert with 'NH{q', 17
                                            if not mem[_3764] - _3716:
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _4162 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_4162] < _3652:
                                                    revert with 'NH{q', 17
                                                if mem[_4162] - _3652 and 10^12 > -1 / mem[_4162] - _3652:
                                                    revert with 'NH{q', 17
                                                if not poolInfo[idx].field_1280:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4162]) - (10^12 * _3652) / poolInfo[idx].field_1280):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_4162]) - (10^12 * _3652) / poolInfo[idx].field_1280
                                            else:
                                                mem[mem[64] + 36] = mem[_3764] - _3716
                                                require ext_code.size(HCTAddress)
                                                call HCTAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args this.address, _3780 - _3716
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _4228 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_4228] < _3652:
                                                    revert with 'NH{q', 17
                                                if mem[_4228] - _3652 and 10^12 > -1 / mem[_4228] - _3652:
                                                    revert with 'NH{q', 17
                                                if not poolInfo[idx].field_1280:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4228]) - (10^12 * _3652) / poolInfo[idx].field_1280):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_4228]) - (10^12 * _3652) / poolInfo[idx].field_1280
                                        poolInfo[idx].field_512 = block.number
                                else:
                                    if block.number <= startBlock:
                                        if block.number < u:
                                            revert with 'NH{q', 17
                                        if block.number - u and hCTPerBlock > -1 / block.number - u:
                                            revert with 'NH{q', 17
                                        if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                revert with 'NH{q', 17
                                            if not totalAllocPoint:
                                                revert with 'NH{q', 18
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3644 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3660 = mem[_3644]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3708 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3738 = mem[_3708]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.maxSupply() with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3772 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3802 = mem[_3772]
                                            if _3738 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                revert with 'NH{q', 17
                                            if _3738 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3772]:
                                                if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4000 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4000] < _3660:
                                                        revert with 'NH{q', 17
                                                    if mem[_4000] - _3660 and 10^12 > -1 / mem[_4000] - _3660:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4000]) - (10^12 * _3660) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4000]) - (10^12 * _3660) / poolInfo[idx].field_1280
                                                else:
                                                    mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4120 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4120] < _3660:
                                                        revert with 'NH{q', 17
                                                    if mem[_4120] - _3660 and 10^12 > -1 / mem[_4120] - _3660:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4120]) - (10^12 * _3660) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4120]) - (10^12 * _3660) / poolInfo[idx].field_1280
                                            else:
                                                if mem[_3772] < _3738:
                                                    revert with 'NH{q', 17
                                                if not mem[_3772] - _3738:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4201 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4201] < _3660:
                                                        revert with 'NH{q', 17
                                                    if mem[_4201] - _3660 and 10^12 > -1 / mem[_4201] - _3660:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4201]) - (10^12 * _3660) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4201]) - (10^12 * _3660) / poolInfo[idx].field_1280
                                                else:
                                                    mem[mem[64] + 36] = mem[_3772] - _3738
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, _3802 - _3738
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4265 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4265] < _3660:
                                                        revert with 'NH{q', 17
                                                    if mem[_4265] - _3660 and 10^12 > -1 / mem[_4265] - _3660:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4265]) - (10^12 * _3660) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4265]) - (10^12 * _3660) / poolInfo[idx].field_1280
                                            poolInfo[idx].field_512 = block.number
                                    else:
                                        if block.number < startBlock:
                                            revert with 'NH{q', 17
                                        if block.number - startBlock < 1:
                                            revert with 'NH{q', 17
                                        if not halvingPeriod:
                                            revert with 'NH{q', 18
                                        if not block.number + -startBlock - 1 / halvingPeriod:
                                            if block.number < u:
                                                revert with 'NH{q', 17
                                            if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                revert with 'NH{q', 17
                                            if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3812 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3836 = mem[_3812]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3961 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _4072 = mem[_3961]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _4204 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _4268 = mem[_4204]
                                                if _4072 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _4072 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4204]:
                                                    if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4354 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4354] < _3836:
                                                            revert with 'NH{q', 17
                                                        if mem[_4354] - _3836 and 10^12 > -1 / mem[_4354] - _3836:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4354]) - (10^12 * _3836) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4354]) - (10^12 * _3836) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4434 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4434] < _3836:
                                                            revert with 'NH{q', 17
                                                        if mem[_4434] - _3836 and 10^12 > -1 / mem[_4434] - _3836:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4434]) - (10^12 * _3836) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4434]) - (10^12 * _3836) / poolInfo[idx].field_1280
                                                else:
                                                    if mem[_4204] < _4072:
                                                        revert with 'NH{q', 17
                                                    if not mem[_4204] - _4072:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4490 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4490] < _3836:
                                                            revert with 'NH{q', 17
                                                        if mem[_4490] - _3836 and 10^12 > -1 / mem[_4490] - _3836:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4490]) - (10^12 * _3836) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4490]) - (10^12 * _3836) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = mem[_4204] - _4072
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _4268 - _4072
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4556 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4556] < _3836:
                                                            revert with 'NH{q', 17
                                                        if mem[_4556] - _3836 and 10^12 > -1 / mem[_4556] - _3836:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4556]) - (10^12 * _3836) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4556]) - (10^12 * _3836) / poolInfo[idx].field_1280
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                revert with 'NH{q', 17
                                            if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                revert with 'NH{q', 18
                                            if block.number < u:
                                                revert with 'NH{q', 17
                                            if block.number - u and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - u:
                                                revert with 'NH{q', 17
                                            if t > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                revert with 'NH{q', 17
                                            if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3904 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3960 = mem[_3904]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _4160 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _4226 = mem[_4160]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _4292 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _4300 = mem[_4292]
                                                if _4226 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _4226 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4292]:
                                                    if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4486 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4486] < _3960:
                                                            revert with 'NH{q', 17
                                                        if mem[_4486] - _3960 and 10^12 > -1 / mem[_4486] - _3960:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4486]) - (10^12 * _3960) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4486]) - (10^12 * _3960) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4552 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4552] < _3960:
                                                            revert with 'NH{q', 17
                                                        if mem[_4552] - _3960 and 10^12 > -1 / mem[_4552] - _3960:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4552]) - (10^12 * _3960) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4552]) - (10^12 * _3960) / poolInfo[idx].field_1280
                                                else:
                                                    if mem[_4292] < _4226:
                                                        revert with 'NH{q', 17
                                                    if not mem[_4292] - _4226:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4593 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4593] < _3960:
                                                            revert with 'NH{q', 17
                                                        if mem[_4593] - _3960 and 10^12 > -1 / mem[_4593] - _3960:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4593]) - (10^12 * _3960) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4593]) - (10^12 * _3960) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = mem[_4292] - _4226
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _4300 - _4226
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4612 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4612] < _3960:
                                                            revert with 'NH{q', 17
                                                        if mem[_4612] - _3960 and 10^12 > -1 / mem[_4612] - _3960:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4612]) - (10^12 * _3960) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4612]) - (10^12 * _3960) / poolInfo[idx].field_1280
                                                poolInfo[idx].field_512 = block.number
                            else:
                                if block.number <= startBlock:
                                    s = poolInfo[idx].field_512 + -startBlock - 1 / halvingPeriod
                                    t = 0
                                    u = poolInfo[idx].field_512
                                    while s < 0:
                                        if s == -1:
                                            revert with 'NH{q', 17
                                        if s + 1 and halvingPeriod > -1 / s + 1:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) > !startBlock:
                                            revert with 'NH{q', 17
                                        if 0 == halvingPeriod:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) + startBlock <= startBlock:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) + startBlock < startBlock:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) < 1:
                                            revert with 'NH{q', 17
                                        if not halvingPeriod:
                                            revert with 'NH{q', 18
                                        if not halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > 255:
                                            revert with 'NH{q', 17
                                        if not 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                            revert with 'NH{q', 18
                                        if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                            revert with 'NH{q', 17
                                        if t > !((halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)):
                                            revert with 'NH{q', 17
                                        s = s + 1
                                        t = t + (halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)
                                        u = halvingPeriod + (s * halvingPeriod) + startBlock
                                        continue 
                                    if 0 == halvingPeriod:
                                        if block.number < u:
                                            revert with 'NH{q', 17
                                        if block.number - u and hCTPerBlock > -1 / block.number - u:
                                            revert with 'NH{q', 17
                                        if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                revert with 'NH{q', 17
                                            if not totalAllocPoint:
                                                revert with 'NH{q', 18
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3634 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3650 = mem[_3634]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3698 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3714 = mem[_3698]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.maxSupply() with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3762 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3778 = mem[_3762]
                                            if _3714 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                revert with 'NH{q', 17
                                            if _3714 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3762]:
                                                if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3952 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_3952] < _3650:
                                                        revert with 'NH{q', 17
                                                    if mem[_3952] - _3650 and 10^12 > -1 / mem[_3952] - _3650:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_3952]) - (10^12 * _3650) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_3952]) - (10^12 * _3650) / poolInfo[idx].field_1280
                                                else:
                                                    mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4056 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4056] < _3650:
                                                        revert with 'NH{q', 17
                                                    if mem[_4056] - _3650 and 10^12 > -1 / mem[_4056] - _3650:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4056]) - (10^12 * _3650) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4056]) - (10^12 * _3650) / poolInfo[idx].field_1280
                                            else:
                                                if mem[_3762] < _3714:
                                                    revert with 'NH{q', 17
                                                if not mem[_3762] - _3714:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4152 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4152] < _3650:
                                                        revert with 'NH{q', 17
                                                    if mem[_4152] - _3650 and 10^12 > -1 / mem[_4152] - _3650:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4152]) - (10^12 * _3650) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4152]) - (10^12 * _3650) / poolInfo[idx].field_1280
                                                else:
                                                    mem[mem[64] + 36] = mem[_3762] - _3714
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, _3778 - _3714
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4222 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4222] < _3650:
                                                        revert with 'NH{q', 17
                                                    if mem[_4222] - _3650 and 10^12 > -1 / mem[_4222] - _3650:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4222]) - (10^12 * _3650) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4222]) - (10^12 * _3650) / poolInfo[idx].field_1280
                                            poolInfo[idx].field_512 = block.number
                                    else:
                                        if block.number <= startBlock:
                                            if block.number < u:
                                                revert with 'NH{q', 17
                                            if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                revert with 'NH{q', 17
                                            if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3642 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3658 = mem[_3642]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3706 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3732 = mem[_3706]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3770 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3796 = mem[_3770]
                                                if _3732 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _3732 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3770]:
                                                    if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3990 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_3990] < _3658:
                                                            revert with 'NH{q', 17
                                                        if mem[_3990] - _3658 and 10^12 > -1 / mem[_3990] - _3658:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_3990]) - (10^12 * _3658) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_3990]) - (10^12 * _3658) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4108 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4108] < _3658:
                                                            revert with 'NH{q', 17
                                                        if mem[_4108] - _3658 and 10^12 > -1 / mem[_4108] - _3658:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4108]) - (10^12 * _3658) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4108]) - (10^12 * _3658) / poolInfo[idx].field_1280
                                                else:
                                                    if mem[_3770] < _3732:
                                                        revert with 'NH{q', 17
                                                    if not mem[_3770] - _3732:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4191 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4191] < _3658:
                                                            revert with 'NH{q', 17
                                                        if mem[_4191] - _3658 and 10^12 > -1 / mem[_4191] - _3658:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4191]) - (10^12 * _3658) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4191]) - (10^12 * _3658) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = mem[_3770] - _3732
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _3796 - _3732
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4255 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4255] < _3658:
                                                            revert with 'NH{q', 17
                                                        if mem[_4255] - _3658 and 10^12 > -1 / mem[_4255] - _3658:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4255]) - (10^12 * _3658) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4255]) - (10^12 * _3658) / poolInfo[idx].field_1280
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number < startBlock:
                                                revert with 'NH{q', 17
                                            if block.number - startBlock < 1:
                                                revert with 'NH{q', 17
                                            if not halvingPeriod:
                                                revert with 'NH{q', 18
                                            if not block.number + -startBlock - 1 / halvingPeriod:
                                                if block.number < u:
                                                    revert with 'NH{q', 17
                                                if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                    revert with 'NH{q', 17
                                                if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                    if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3810 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3830 = mem[_3810]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3951 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4054 = mem[_3951]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4194 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4258 = mem[_4194]
                                                    if _4054 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _4054 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4194]:
                                                        if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4348 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4348] < _3830:
                                                                revert with 'NH{q', 17
                                                            if mem[_4348] - _3830 and 10^12 > -1 / mem[_4348] - _3830:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4348]) - (10^12 * _3830) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4348]) - (10^12 * _3830) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4422 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4422] < _3830:
                                                                revert with 'NH{q', 17
                                                            if mem[_4422] - _3830 and 10^12 > -1 / mem[_4422] - _3830:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4422]) - (10^12 * _3830) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4422]) - (10^12 * _3830) / poolInfo[idx].field_1280
                                                    else:
                                                        if mem[_4194] < _4054:
                                                            revert with 'NH{q', 17
                                                        if not mem[_4194] - _4054:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4476 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4476] < _3830:
                                                                revert with 'NH{q', 17
                                                            if mem[_4476] - _3830 and 10^12 > -1 / mem[_4476] - _3830:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4476]) - (10^12 * _3830) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4476]) - (10^12 * _3830) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = mem[_4194] - _4054
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _4258 - _4054
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4544 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4544] < _3830:
                                                                revert with 'NH{q', 17
                                                            if mem[_4544] - _3830 and 10^12 > -1 / mem[_4544] - _3830:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4544]) - (10^12 * _3830) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4544]) - (10^12 * _3830) / poolInfo[idx].field_1280
                                                    poolInfo[idx].field_512 = block.number
                                            else:
                                                if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                    revert with 'NH{q', 17
                                                if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                    revert with 'NH{q', 18
                                                if block.number < u:
                                                    revert with 'NH{q', 17
                                                if block.number - u and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - u:
                                                    revert with 'NH{q', 17
                                                if t > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                    revert with 'NH{q', 17
                                                if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                    if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3890 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3950 = mem[_3890]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4150 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4220 = mem[_4150]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4288 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4298 = mem[_4288]
                                                    if _4220 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _4220 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4288]:
                                                        if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4472 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4472] < _3950:
                                                                revert with 'NH{q', 17
                                                            if mem[_4472] - _3950 and 10^12 > -1 / mem[_4472] - _3950:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4472]) - (10^12 * _3950) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4472]) - (10^12 * _3950) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4540 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4540] < _3950:
                                                                revert with 'NH{q', 17
                                                            if mem[_4540] - _3950 and 10^12 > -1 / mem[_4540] - _3950:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4540]) - (10^12 * _3950) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4540]) - (10^12 * _3950) / poolInfo[idx].field_1280
                                                    else:
                                                        if mem[_4288] < _4220:
                                                            revert with 'NH{q', 17
                                                        if not mem[_4288] - _4220:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4583 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4583] < _3950:
                                                                revert with 'NH{q', 17
                                                            if mem[_4583] - _3950 and 10^12 > -1 / mem[_4583] - _3950:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4583]) - (10^12 * _3950) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4583]) - (10^12 * _3950) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = mem[_4288] - _4220
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _4298 - _4220
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4608 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4608] < _3950:
                                                                revert with 'NH{q', 17
                                                            if mem[_4608] - _3950 and 10^12 > -1 / mem[_4608] - _3950:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4608]) - (10^12 * _3950) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4608]) - (10^12 * _3950) / poolInfo[idx].field_1280
                                                    poolInfo[idx].field_512 = block.number
                                else:
                                    if block.number < startBlock:
                                        revert with 'NH{q', 17
                                    if block.number - startBlock < 1:
                                        revert with 'NH{q', 17
                                    if not halvingPeriod:
                                        revert with 'NH{q', 18
                                    s = poolInfo[idx].field_512 + -startBlock - 1 / halvingPeriod
                                    t = 0
                                    u = poolInfo[idx].field_512
                                    while s < block.number + -startBlock - 1 / halvingPeriod:
                                        if s == -1:
                                            revert with 'NH{q', 17
                                        if s + 1 and halvingPeriod > -1 / s + 1:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) > !startBlock:
                                            revert with 'NH{q', 17
                                        if 0 == halvingPeriod:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) + startBlock <= startBlock:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) + startBlock < startBlock:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) < 1:
                                            revert with 'NH{q', 17
                                        if not halvingPeriod:
                                            revert with 'NH{q', 18
                                        if not halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > 255:
                                            revert with 'NH{q', 17
                                        if not 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                            revert with 'NH{q', 18
                                        if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                            revert with 'NH{q', 17
                                        if t > !((halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)):
                                            revert with 'NH{q', 17
                                        s = s + 1
                                        t = t + (halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)
                                        u = halvingPeriod + (s * halvingPeriod) + startBlock
                                        continue 
                                    if 0 == halvingPeriod:
                                        if block.number < u:
                                            revert with 'NH{q', 17
                                        if block.number - u and hCTPerBlock > -1 / block.number - u:
                                            revert with 'NH{q', 17
                                        if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                revert with 'NH{q', 17
                                            if not totalAllocPoint:
                                                revert with 'NH{q', 18
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3635 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3651 = mem[_3635]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3699 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3715 = mem[_3699]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.maxSupply() with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3763 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3779 = mem[_3763]
                                            if _3715 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                revert with 'NH{q', 17
                                            if _3715 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3763]:
                                                if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3957 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_3957] < _3651:
                                                        revert with 'NH{q', 17
                                                    if mem[_3957] - _3651 and 10^12 > -1 / mem[_3957] - _3651:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_3957]) - (10^12 * _3651) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_3957]) - (10^12 * _3651) / poolInfo[idx].field_1280
                                                else:
                                                    mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4065 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4065] < _3651:
                                                        revert with 'NH{q', 17
                                                    if mem[_4065] - _3651 and 10^12 > -1 / mem[_4065] - _3651:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4065]) - (10^12 * _3651) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4065]) - (10^12 * _3651) / poolInfo[idx].field_1280
                                            else:
                                                if mem[_3763] < _3715:
                                                    revert with 'NH{q', 17
                                                if not mem[_3763] - _3715:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4157 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4157] < _3651:
                                                        revert with 'NH{q', 17
                                                    if mem[_4157] - _3651 and 10^12 > -1 / mem[_4157] - _3651:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4157]) - (10^12 * _3651) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4157]) - (10^12 * _3651) / poolInfo[idx].field_1280
                                                else:
                                                    mem[mem[64] + 36] = mem[_3763] - _3715
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, _3779 - _3715
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4225 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4225] < _3651:
                                                        revert with 'NH{q', 17
                                                    if mem[_4225] - _3651 and 10^12 > -1 / mem[_4225] - _3651:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4225]) - (10^12 * _3651) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4225]) - (10^12 * _3651) / poolInfo[idx].field_1280
                                            poolInfo[idx].field_512 = block.number
                                    else:
                                        if block.number <= startBlock:
                                            if block.number < u:
                                                revert with 'NH{q', 17
                                            if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                revert with 'NH{q', 17
                                            if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3643 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3659 = mem[_3643]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3707 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3735 = mem[_3707]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3771 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3799 = mem[_3771]
                                                if _3735 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _3735 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3771]:
                                                    if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3995 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_3995] < _3659:
                                                            revert with 'NH{q', 17
                                                        if mem[_3995] - _3659 and 10^12 > -1 / mem[_3995] - _3659:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_3995]) - (10^12 * _3659) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_3995]) - (10^12 * _3659) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4114 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4114] < _3659:
                                                            revert with 'NH{q', 17
                                                        if mem[_4114] - _3659 and 10^12 > -1 / mem[_4114] - _3659:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4114]) - (10^12 * _3659) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4114]) - (10^12 * _3659) / poolInfo[idx].field_1280
                                                else:
                                                    if mem[_3771] < _3735:
                                                        revert with 'NH{q', 17
                                                    if not mem[_3771] - _3735:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4196 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4196] < _3659:
                                                            revert with 'NH{q', 17
                                                        if mem[_4196] - _3659 and 10^12 > -1 / mem[_4196] - _3659:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4196]) - (10^12 * _3659) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4196]) - (10^12 * _3659) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = mem[_3771] - _3735
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _3799 - _3735
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4260 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4260] < _3659:
                                                            revert with 'NH{q', 17
                                                        if mem[_4260] - _3659 and 10^12 > -1 / mem[_4260] - _3659:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4260]) - (10^12 * _3659) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4260]) - (10^12 * _3659) / poolInfo[idx].field_1280
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number < startBlock:
                                                revert with 'NH{q', 17
                                            if block.number - startBlock < 1:
                                                revert with 'NH{q', 17
                                            if not halvingPeriod:
                                                revert with 'NH{q', 18
                                            if not block.number + -startBlock - 1 / halvingPeriod:
                                                if block.number < u:
                                                    revert with 'NH{q', 17
                                                if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                    revert with 'NH{q', 17
                                                if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                    if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3811 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3833 = mem[_3811]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3956 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4063 = mem[_3956]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4199 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4263 = mem[_4199]
                                                    if _4063 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _4063 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4199]:
                                                        if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4351 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4351] < _3833:
                                                                revert with 'NH{q', 17
                                                            if mem[_4351] - _3833 and 10^12 > -1 / mem[_4351] - _3833:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4351]) - (10^12 * _3833) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4351]) - (10^12 * _3833) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4428 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4428] < _3833:
                                                                revert with 'NH{q', 17
                                                            if mem[_4428] - _3833 and 10^12 > -1 / mem[_4428] - _3833:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4428]) - (10^12 * _3833) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4428]) - (10^12 * _3833) / poolInfo[idx].field_1280
                                                    else:
                                                        if mem[_4199] < _4063:
                                                            revert with 'NH{q', 17
                                                        if not mem[_4199] - _4063:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4483 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4483] < _3833:
                                                                revert with 'NH{q', 17
                                                            if mem[_4483] - _3833 and 10^12 > -1 / mem[_4483] - _3833:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4483]) - (10^12 * _3833) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4483]) - (10^12 * _3833) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = mem[_4199] - _4063
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _4263 - _4063
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4550 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4550] < _3833:
                                                                revert with 'NH{q', 17
                                                            if mem[_4550] - _3833 and 10^12 > -1 / mem[_4550] - _3833:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4550]) - (10^12 * _3833) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4550]) - (10^12 * _3833) / poolInfo[idx].field_1280
                                                    poolInfo[idx].field_512 = block.number
                                            else:
                                                if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                    revert with 'NH{q', 17
                                                if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                    revert with 'NH{q', 18
                                                if block.number < u:
                                                    revert with 'NH{q', 17
                                                if block.number - u and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - u:
                                                    revert with 'NH{q', 17
                                                if t > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                    revert with 'NH{q', 17
                                                if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                    if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3897 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3955 = mem[_3897]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4155 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4223 = mem[_4155]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4290 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4299 = mem[_4290]
                                                    if _4223 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _4223 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4290]:
                                                        if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4479 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4479] < _3955:
                                                                revert with 'NH{q', 17
                                                            if mem[_4479] - _3955 and 10^12 > -1 / mem[_4479] - _3955:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4479]) - (10^12 * _3955) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4479]) - (10^12 * _3955) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4546 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4546] < _3955:
                                                                revert with 'NH{q', 17
                                                            if mem[_4546] - _3955 and 10^12 > -1 / mem[_4546] - _3955:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4546]) - (10^12 * _3955) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4546]) - (10^12 * _3955) / poolInfo[idx].field_1280
                                                    else:
                                                        if mem[_4290] < _4223:
                                                            revert with 'NH{q', 17
                                                        if not mem[_4290] - _4223:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4588 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4588] < _3955:
                                                                revert with 'NH{q', 17
                                                            if mem[_4588] - _3955 and 10^12 > -1 / mem[_4588] - _3955:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4588]) - (10^12 * _3955) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4588]) - (10^12 * _3955) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = mem[_4290] - _4223
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _4299 - _4223
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4610 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4610] < _3955:
                                                                revert with 'NH{q', 17
                                                            if mem[_4610] - _3955 and 10^12 > -1 / mem[_4610] - _3955:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4610]) - (10^12 * _3955) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4610]) - (10^12 * _3955) / poolInfo[idx].field_1280
                                                    poolInfo[idx].field_512 = block.number
            else:
                mem[mem[64] + 4] = this.address
                require ext_code.size(poolInfo[idx].field_0)
                staticcall poolInfo[idx].field_0.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1803 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1804 = mem[_1803]
                if not mem[_1803]:
                    poolInfo[idx].field_512 = block.number
                else:
                    if 0 == halvingPeriod:
                        if 0 == halvingPeriod:
                            if block.number < poolInfo[idx].field_512:
                                revert with 'NH{q', 17
                            if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                revert with 'NH{q', 17
                            if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                revert with 'NH{q', 17
                            if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                    revert with 'NH{q', 17
                                if not totalAllocPoint:
                                    revert with 'NH{q', 18
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(HCTAddress)
                                staticcall HCTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1836 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _1852 = mem[_1836]
                                require ext_code.size(HCTAddress)
                                staticcall HCTAddress.0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1886 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _1905 = mem[_1886]
                                require ext_code.size(HCTAddress)
                                staticcall HCTAddress.maxSupply() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1936 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _1962 = mem[_1936]
                                if _1905 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                    revert with 'NH{q', 17
                                if _1905 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_1936]:
                                    if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _2190 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if mem[_2190] < _1852:
                                            revert with 'NH{q', 17
                                        if mem[_2190] - _1852 and 10^12 > -1 / mem[_2190] - _1852:
                                            revert with 'NH{q', 17
                                        if not _1804:
                                            revert with 'NH{q', 18
                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2190]) - (10^12 * _1852) / _1804):
                                            revert with 'NH{q', 17
                                        poolInfo[idx].field_768 += (10^12 * mem[_2190]) - (10^12 * _1852) / _1804
                                    else:
                                        mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                        require ext_code.size(HCTAddress)
                                        call HCTAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _2276 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if mem[_2276] < _1852:
                                            revert with 'NH{q', 17
                                        if mem[_2276] - _1852 and 10^12 > -1 / mem[_2276] - _1852:
                                            revert with 'NH{q', 17
                                        if not _1804:
                                            revert with 'NH{q', 18
                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2276]) - (10^12 * _1852) / _1804):
                                            revert with 'NH{q', 17
                                        poolInfo[idx].field_768 += (10^12 * mem[_2276]) - (10^12 * _1852) / _1804
                                else:
                                    if mem[_1936] < _1905:
                                        revert with 'NH{q', 17
                                    if not mem[_1936] - _1905:
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _2361 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if mem[_2361] < _1852:
                                            revert with 'NH{q', 17
                                        if mem[_2361] - _1852 and 10^12 > -1 / mem[_2361] - _1852:
                                            revert with 'NH{q', 17
                                        if not _1804:
                                            revert with 'NH{q', 18
                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2361]) - (10^12 * _1852) / _1804):
                                            revert with 'NH{q', 17
                                        poolInfo[idx].field_768 += (10^12 * mem[_2361]) - (10^12 * _1852) / _1804
                                    else:
                                        mem[mem[64] + 36] = mem[_1936] - _1905
                                        require ext_code.size(HCTAddress)
                                        call HCTAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args this.address, _1962 - _1905
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _2432 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if mem[_2432] < _1852:
                                            revert with 'NH{q', 17
                                        if mem[_2432] - _1852 and 10^12 > -1 / mem[_2432] - _1852:
                                            revert with 'NH{q', 17
                                        if not _1804:
                                            revert with 'NH{q', 18
                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2432]) - (10^12 * _1852) / _1804):
                                            revert with 'NH{q', 17
                                        poolInfo[idx].field_768 += (10^12 * mem[_2432]) - (10^12 * _1852) / _1804
                                poolInfo[idx].field_512 = block.number
                        else:
                            if block.number <= startBlock:
                                if block.number < poolInfo[idx].field_512:
                                    revert with 'NH{q', 17
                                if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                    revert with 'NH{q', 17
                                if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                    revert with 'NH{q', 17
                                if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                    if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                        revert with 'NH{q', 17
                                    if not totalAllocPoint:
                                        revert with 'NH{q', 18
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(HCTAddress)
                                    staticcall HCTAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1844 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _1860 = mem[_1844]
                                    require ext_code.size(HCTAddress)
                                    staticcall HCTAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1896 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _1912 = mem[_1896]
                                    require ext_code.size(HCTAddress)
                                    staticcall HCTAddress.maxSupply() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1950 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _1971 = mem[_1950]
                                    if _1912 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                        revert with 'NH{q', 17
                                    if _1912 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_1950]:
                                        if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2231 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if mem[_2231] < _1860:
                                                revert with 'NH{q', 17
                                            if mem[_2231] - _1860 and 10^12 > -1 / mem[_2231] - _1860:
                                                revert with 'NH{q', 17
                                            if not _1804:
                                                revert with 'NH{q', 18
                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2231]) - (10^12 * _1860) / _1804):
                                                revert with 'NH{q', 17
                                            poolInfo[idx].field_768 += (10^12 * mem[_2231]) - (10^12 * _1860) / _1804
                                        else:
                                            mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                            require ext_code.size(HCTAddress)
                                            call HCTAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2315 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if mem[_2315] < _1860:
                                                revert with 'NH{q', 17
                                            if mem[_2315] - _1860 and 10^12 > -1 / mem[_2315] - _1860:
                                                revert with 'NH{q', 17
                                            if not _1804:
                                                revert with 'NH{q', 18
                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2315]) - (10^12 * _1860) / _1804):
                                                revert with 'NH{q', 17
                                            poolInfo[idx].field_768 += (10^12 * mem[_2315]) - (10^12 * _1860) / _1804
                                    else:
                                        if mem[_1950] < _1912:
                                            revert with 'NH{q', 17
                                        if not mem[_1950] - _1912:
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2397 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if mem[_2397] < _1860:
                                                revert with 'NH{q', 17
                                            if mem[_2397] - _1860 and 10^12 > -1 / mem[_2397] - _1860:
                                                revert with 'NH{q', 17
                                            if not _1804:
                                                revert with 'NH{q', 18
                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2397]) - (10^12 * _1860) / _1804):
                                                revert with 'NH{q', 17
                                            poolInfo[idx].field_768 += (10^12 * mem[_2397]) - (10^12 * _1860) / _1804
                                        else:
                                            mem[mem[64] + 36] = mem[_1950] - _1912
                                            require ext_code.size(HCTAddress)
                                            call HCTAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args this.address, _1971 - _1912
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2450 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if mem[_2450] < _1860:
                                                revert with 'NH{q', 17
                                            if mem[_2450] - _1860 and 10^12 > -1 / mem[_2450] - _1860:
                                                revert with 'NH{q', 17
                                            if not _1804:
                                                revert with 'NH{q', 18
                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2450]) - (10^12 * _1860) / _1804):
                                                revert with 'NH{q', 17
                                            poolInfo[idx].field_768 += (10^12 * mem[_2450]) - (10^12 * _1860) / _1804
                                    poolInfo[idx].field_512 = block.number
                            else:
                                if block.number < startBlock:
                                    revert with 'NH{q', 17
                                if block.number - startBlock < 1:
                                    revert with 'NH{q', 17
                                if not halvingPeriod:
                                    revert with 'NH{q', 18
                                if not block.number + -startBlock - 1 / halvingPeriod:
                                    if block.number < poolInfo[idx].field_512:
                                        revert with 'NH{q', 17
                                    if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                        revert with 'NH{q', 17
                                    if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                        revert with 'NH{q', 17
                                    if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                        if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                            revert with 'NH{q', 17
                                        if not totalAllocPoint:
                                            revert with 'NH{q', 18
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _2007 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _2051 = mem[_2007]
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _2189 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _2274 = mem[_2189]
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.maxSupply() with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _2400 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _2453 = mem[_2400]
                                        if _2274 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                            revert with 'NH{q', 17
                                        if _2274 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2400]:
                                            if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2735 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2735] < _2051:
                                                    revert with 'NH{q', 17
                                                if mem[_2735] - _2051 and 10^12 > -1 / mem[_2735] - _2051:
                                                    revert with 'NH{q', 17
                                                if not _1804:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2735]) - (10^12 * _2051) / _1804):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2735]) - (10^12 * _2051) / _1804
                                            else:
                                                mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                require ext_code.size(HCTAddress)
                                                call HCTAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2848 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2848] < _2051:
                                                    revert with 'NH{q', 17
                                                if mem[_2848] - _2051 and 10^12 > -1 / mem[_2848] - _2051:
                                                    revert with 'NH{q', 17
                                                if not _1804:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2848]) - (10^12 * _2051) / _1804):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2848]) - (10^12 * _2051) / _1804
                                        else:
                                            if mem[_2400] < _2274:
                                                revert with 'NH{q', 17
                                            if not mem[_2400] - _2274:
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2966 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2966] < _2051:
                                                    revert with 'NH{q', 17
                                                if mem[_2966] - _2051 and 10^12 > -1 / mem[_2966] - _2051:
                                                    revert with 'NH{q', 17
                                                if not _1804:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2966]) - (10^12 * _2051) / _1804):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2966]) - (10^12 * _2051) / _1804
                                            else:
                                                mem[mem[64] + 36] = mem[_2400] - _2274
                                                require ext_code.size(HCTAddress)
                                                call HCTAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args this.address, _2453 - _2274
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3056 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_3056] < _2051:
                                                    revert with 'NH{q', 17
                                                if mem[_3056] - _2051 and 10^12 > -1 / mem[_3056] - _2051:
                                                    revert with 'NH{q', 17
                                                if not _1804:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_3056]) - (10^12 * _2051) / _1804):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_3056]) - (10^12 * _2051) / _1804
                                        poolInfo[idx].field_512 = block.number
                                else:
                                    if block.number + -startBlock - 1 / halvingPeriod > 255:
                                        revert with 'NH{q', 17
                                    if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                        revert with 'NH{q', 18
                                    if block.number < poolInfo[idx].field_512:
                                        revert with 'NH{q', 17
                                    if block.number - poolInfo[idx].field_512 and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - poolInfo[idx].field_512:
                                        revert with 'NH{q', 17
                                    if 0 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                        revert with 'NH{q', 17
                                    if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                        if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                            revert with 'NH{q', 17
                                        if not totalAllocPoint:
                                            revert with 'NH{q', 18
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _2105 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _2188 = mem[_2105]
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _2359 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _2430 = mem[_2359]
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.maxSupply() with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _2496 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _2536 = mem[_2496]
                                        if _2430 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                            revert with 'NH{q', 17
                                        if _2430 + ((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2496]:
                                            if not (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2962 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2962] < _2188:
                                                    revert with 'NH{q', 17
                                                if mem[_2962] - _2188 and 10^12 > -1 / mem[_2962] - _2188:
                                                    revert with 'NH{q', 17
                                                if not _1804:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2962]) - (10^12 * _2188) / _1804):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2962]) - (10^12 * _2188) / _1804
                                            else:
                                                mem[mem[64] + 36] = (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                require ext_code.size(HCTAddress)
                                                call HCTAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args this.address, (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3052 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_3052] < _2188:
                                                    revert with 'NH{q', 17
                                                if mem[_3052] - _2188 and 10^12 > -1 / mem[_3052] - _2188:
                                                    revert with 'NH{q', 17
                                                if not _1804:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_3052]) - (10^12 * _2188) / _1804):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_3052]) - (10^12 * _2188) / _1804
                                        else:
                                            if mem[_2496] < _2430:
                                                revert with 'NH{q', 17
                                            if not mem[_2496] - _2430:
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3113 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_3113] < _2188:
                                                    revert with 'NH{q', 17
                                                if mem[_3113] - _2188 and 10^12 > -1 / mem[_3113] - _2188:
                                                    revert with 'NH{q', 17
                                                if not _1804:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_3113]) - (10^12 * _2188) / _1804):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_3113]) - (10^12 * _2188) / _1804
                                            else:
                                                mem[mem[64] + 36] = mem[_2496] - _2430
                                                require ext_code.size(HCTAddress)
                                                call HCTAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args this.address, _2536 - _2430
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3150 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_3150] < _2188:
                                                    revert with 'NH{q', 17
                                                if mem[_3150] - _2188 and 10^12 > -1 / mem[_3150] - _2188:
                                                    revert with 'NH{q', 17
                                                if not _1804:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_3150]) - (10^12 * _2188) / _1804):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_3150]) - (10^12 * _2188) / _1804
                                        poolInfo[idx].field_512 = block.number
                    else:
                        if poolInfo[idx].field_512 <= startBlock:
                            if 0 == halvingPeriod:
                                if 0 == halvingPeriod:
                                    if block.number < poolInfo[idx].field_512:
                                        revert with 'NH{q', 17
                                    if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                        revert with 'NH{q', 17
                                    if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                        revert with 'NH{q', 17
                                    if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                        if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                            revert with 'NH{q', 17
                                        if not totalAllocPoint:
                                            revert with 'NH{q', 18
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1843 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _1859 = mem[_1843]
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1895 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _1911 = mem[_1895]
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.maxSupply() with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1949 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _1968 = mem[_1949]
                                        if _1911 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                            revert with 'NH{q', 17
                                        if _1911 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_1949]:
                                            if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2226 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2226] < _1859:
                                                    revert with 'NH{q', 17
                                                if mem[_2226] - _1859 and 10^12 > -1 / mem[_2226] - _1859:
                                                    revert with 'NH{q', 17
                                                if not _1804:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2226]) - (10^12 * _1859) / _1804):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2226]) - (10^12 * _1859) / _1804
                                            else:
                                                mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                require ext_code.size(HCTAddress)
                                                call HCTAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2307 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2307] < _1859:
                                                    revert with 'NH{q', 17
                                                if mem[_2307] - _1859 and 10^12 > -1 / mem[_2307] - _1859:
                                                    revert with 'NH{q', 17
                                                if not _1804:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2307]) - (10^12 * _1859) / _1804):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2307]) - (10^12 * _1859) / _1804
                                        else:
                                            if mem[_1949] < _1911:
                                                revert with 'NH{q', 17
                                            if not mem[_1949] - _1911:
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2390 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2390] < _1859:
                                                    revert with 'NH{q', 17
                                                if mem[_2390] - _1859 and 10^12 > -1 / mem[_2390] - _1859:
                                                    revert with 'NH{q', 17
                                                if not _1804:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2390]) - (10^12 * _1859) / _1804):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2390]) - (10^12 * _1859) / _1804
                                            else:
                                                mem[mem[64] + 36] = mem[_1949] - _1911
                                                require ext_code.size(HCTAddress)
                                                call HCTAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args this.address, _1968 - _1911
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2446 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2446] < _1859:
                                                    revert with 'NH{q', 17
                                                if mem[_2446] - _1859 and 10^12 > -1 / mem[_2446] - _1859:
                                                    revert with 'NH{q', 17
                                                if not _1804:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2446]) - (10^12 * _1859) / _1804):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2446]) - (10^12 * _1859) / _1804
                                        poolInfo[idx].field_512 = block.number
                                else:
                                    if block.number <= startBlock:
                                        if block.number < poolInfo[idx].field_512:
                                            revert with 'NH{q', 17
                                        if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                            revert with 'NH{q', 17
                                        if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                            if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                revert with 'NH{q', 17
                                            if not totalAllocPoint:
                                                revert with 'NH{q', 18
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _1851 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _1866 = mem[_1851]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _1904 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _1919 = mem[_1904]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.maxSupply() with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _1961 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _1984 = mem[_1961]
                                            if _1919 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                revert with 'NH{q', 17
                                            if _1919 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_1961]:
                                                if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2263 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2263] < _1866:
                                                        revert with 'NH{q', 17
                                                    if mem[_2263] - _1866 and 10^12 > -1 / mem[_2263] - _1866:
                                                        revert with 'NH{q', 17
                                                    if not _1804:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2263]) - (10^12 * _1866) / _1804):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2263]) - (10^12 * _1866) / _1804
                                                else:
                                                    mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2349 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2349] < _1866:
                                                        revert with 'NH{q', 17
                                                    if mem[_2349] - _1866 and 10^12 > -1 / mem[_2349] - _1866:
                                                        revert with 'NH{q', 17
                                                    if not _1804:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2349]) - (10^12 * _1866) / _1804):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2349]) - (10^12 * _1866) / _1804
                                            else:
                                                if mem[_1961] < _1919:
                                                    revert with 'NH{q', 17
                                                if not mem[_1961] - _1919:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2424 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2424] < _1866:
                                                        revert with 'NH{q', 17
                                                    if mem[_2424] - _1866 and 10^12 > -1 / mem[_2424] - _1866:
                                                        revert with 'NH{q', 17
                                                    if not _1804:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2424]) - (10^12 * _1866) / _1804):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2424]) - (10^12 * _1866) / _1804
                                                else:
                                                    mem[mem[64] + 36] = mem[_1961] - _1919
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, _1984 - _1919
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2465 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2465] < _1866:
                                                        revert with 'NH{q', 17
                                                    if mem[_2465] - _1866 and 10^12 > -1 / mem[_2465] - _1866:
                                                        revert with 'NH{q', 17
                                                    if not _1804:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2465]) - (10^12 * _1866) / _1804):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2465]) - (10^12 * _1866) / _1804
                                            poolInfo[idx].field_512 = block.number
                                    else:
                                        if block.number < startBlock:
                                            revert with 'NH{q', 17
                                        if block.number - startBlock < 1:
                                            revert with 'NH{q', 17
                                        if not halvingPeriod:
                                            revert with 'NH{q', 18
                                        if not block.number + -startBlock - 1 / halvingPeriod:
                                            if block.number < poolInfo[idx].field_512:
                                                revert with 'NH{q', 17
                                            if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                                revert with 'NH{q', 17
                                            if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                                if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2025 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _2074 = mem[_2025]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2225 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _2305 = mem[_2225]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2427 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _2468 = mem[_2427]
                                                if _2305 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _2305 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2427]:
                                                    if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2775 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2775] < _2074:
                                                            revert with 'NH{q', 17
                                                        if mem[_2775] - _2074 and 10^12 > -1 / mem[_2775] - _2074:
                                                            revert with 'NH{q', 17
                                                        if not _1804:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2775]) - (10^12 * _2074) / _1804):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2775]) - (10^12 * _2074) / _1804
                                                    else:
                                                        mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2896 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2896] < _2074:
                                                            revert with 'NH{q', 17
                                                        if mem[_2896] - _2074 and 10^12 > -1 / mem[_2896] - _2074:
                                                            revert with 'NH{q', 17
                                                        if not _1804:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2896]) - (10^12 * _2074) / _1804):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2896]) - (10^12 * _2074) / _1804
                                                else:
                                                    if mem[_2427] < _2305:
                                                        revert with 'NH{q', 17
                                                    if not mem[_2427] - _2305:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3003 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_3003] < _2074:
                                                            revert with 'NH{q', 17
                                                        if mem[_3003] - _2074 and 10^12 > -1 / mem[_3003] - _2074:
                                                            revert with 'NH{q', 17
                                                        if not _1804:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_3003]) - (10^12 * _2074) / _1804):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_3003]) - (10^12 * _2074) / _1804
                                                    else:
                                                        mem[mem[64] + 36] = mem[_2427] - _2305
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _2468 - _2305
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3079 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_3079] < _2074:
                                                            revert with 'NH{q', 17
                                                        if mem[_3079] - _2074 and 10^12 > -1 / mem[_3079] - _2074:
                                                            revert with 'NH{q', 17
                                                        if not _1804:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_3079]) - (10^12 * _2074) / _1804):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_3079]) - (10^12 * _2074) / _1804
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                revert with 'NH{q', 17
                                            if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                revert with 'NH{q', 18
                                            if block.number < poolInfo[idx].field_512:
                                                revert with 'NH{q', 17
                                            if block.number - poolInfo[idx].field_512 and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - poolInfo[idx].field_512:
                                                revert with 'NH{q', 17
                                            if 0 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                revert with 'NH{q', 17
                                            if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2138 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _2224 = mem[_2138]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2388 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _2444 = mem[_2388]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2511 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _2559 = mem[_2511]
                                                if _2444 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _2444 + ((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2511]:
                                                    if not (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2999 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2999] < _2224:
                                                            revert with 'NH{q', 17
                                                        if mem[_2999] - _2224 and 10^12 > -1 / mem[_2999] - _2224:
                                                            revert with 'NH{q', 17
                                                        if not _1804:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2999]) - (10^12 * _2224) / _1804):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2999]) - (10^12 * _2224) / _1804
                                                    else:
                                                        mem[mem[64] + 36] = (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3075 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_3075] < _2224:
                                                            revert with 'NH{q', 17
                                                        if mem[_3075] - _2224 and 10^12 > -1 / mem[_3075] - _2224:
                                                            revert with 'NH{q', 17
                                                        if not _1804:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_3075]) - (10^12 * _2224) / _1804):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_3075]) - (10^12 * _2224) / _1804
                                                else:
                                                    if mem[_2511] < _2444:
                                                        revert with 'NH{q', 17
                                                    if not mem[_2511] - _2444:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3127 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_3127] < _2224:
                                                            revert with 'NH{q', 17
                                                        if mem[_3127] - _2224 and 10^12 > -1 / mem[_3127] - _2224:
                                                            revert with 'NH{q', 17
                                                        if not _1804:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_3127]) - (10^12 * _2224) / _1804):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_3127]) - (10^12 * _2224) / _1804
                                                    else:
                                                        mem[mem[64] + 36] = mem[_2511] - _2444
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _2559 - _2444
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3166 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_3166] < _2224:
                                                            revert with 'NH{q', 17
                                                        if mem[_3166] - _2224 and 10^12 > -1 / mem[_3166] - _2224:
                                                            revert with 'NH{q', 17
                                                        if not _1804:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_3166]) - (10^12 * _2224) / _1804):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_3166]) - (10^12 * _2224) / _1804
                                                poolInfo[idx].field_512 = block.number
                            else:
                                if block.number <= startBlock:
                                    if 0 == halvingPeriod:
                                        if block.number < poolInfo[idx].field_512:
                                            revert with 'NH{q', 17
                                        if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                            revert with 'NH{q', 17
                                        if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                            if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                revert with 'NH{q', 17
                                            if not totalAllocPoint:
                                                revert with 'NH{q', 18
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _1850 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _1865 = mem[_1850]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _1903 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _1918 = mem[_1903]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.maxSupply() with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _1960 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _1981 = mem[_1960]
                                            if _1918 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                revert with 'NH{q', 17
                                            if _1918 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_1960]:
                                                if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2259 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2259] < _1865:
                                                        revert with 'NH{q', 17
                                                    if mem[_2259] - _1865 and 10^12 > -1 / mem[_2259] - _1865:
                                                        revert with 'NH{q', 17
                                                    if not _1804:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2259]) - (10^12 * _1865) / _1804):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2259]) - (10^12 * _1865) / _1804
                                                else:
                                                    mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2342 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2342] < _1865:
                                                        revert with 'NH{q', 17
                                                    if mem[_2342] - _1865 and 10^12 > -1 / mem[_2342] - _1865:
                                                        revert with 'NH{q', 17
                                                    if not _1804:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2342]) - (10^12 * _1865) / _1804):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2342]) - (10^12 * _1865) / _1804
                                            else:
                                                if mem[_1960] < _1918:
                                                    revert with 'NH{q', 17
                                                if not mem[_1960] - _1918:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2419 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2419] < _1865:
                                                        revert with 'NH{q', 17
                                                    if mem[_2419] - _1865 and 10^12 > -1 / mem[_2419] - _1865:
                                                        revert with 'NH{q', 17
                                                    if not _1804:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2419]) - (10^12 * _1865) / _1804):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2419]) - (10^12 * _1865) / _1804
                                                else:
                                                    mem[mem[64] + 36] = mem[_1960] - _1918
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, _1981 - _1918
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2462 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2462] < _1865:
                                                        revert with 'NH{q', 17
                                                    if mem[_2462] - _1865 and 10^12 > -1 / mem[_2462] - _1865:
                                                        revert with 'NH{q', 17
                                                    if not _1804:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2462]) - (10^12 * _1865) / _1804):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2462]) - (10^12 * _1865) / _1804
                                            poolInfo[idx].field_512 = block.number
                                    else:
                                        if block.number <= startBlock:
                                            if block.number < poolInfo[idx].field_512:
                                                revert with 'NH{q', 17
                                            if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                                revert with 'NH{q', 17
                                            if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                                if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _1858 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _1872 = mem[_1858]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _1910 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _1931 = mem[_1910]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _1967 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _1999 = mem[_1967]
                                                if _1931 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _1931 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_1967]:
                                                    if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2295 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2295] < _1872:
                                                            revert with 'NH{q', 17
                                                        if mem[_2295] - _1872 and 10^12 > -1 / mem[_2295] - _1872:
                                                            revert with 'NH{q', 17
                                                        if not _1804:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2295]) - (10^12 * _1872) / _1804):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2295]) - (10^12 * _1872) / _1804
                                                    else:
                                                        mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2381 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2381] < _1872:
                                                            revert with 'NH{q', 17
                                                        if mem[_2381] - _1872 and 10^12 > -1 / mem[_2381] - _1872:
                                                            revert with 'NH{q', 17
                                                        if not _1804:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2381]) - (10^12 * _1872) / _1804):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2381]) - (10^12 * _1872) / _1804
                                                else:
                                                    if mem[_1967] < _1931:
                                                        revert with 'NH{q', 17
                                                    if not mem[_1967] - _1931:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2439 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2439] < _1872:
                                                            revert with 'NH{q', 17
                                                        if mem[_2439] - _1872 and 10^12 > -1 / mem[_2439] - _1872:
                                                            revert with 'NH{q', 17
                                                        if not _1804:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2439]) - (10^12 * _1872) / _1804):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2439]) - (10^12 * _1872) / _1804
                                                    else:
                                                        mem[mem[64] + 36] = mem[_1967] - _1931
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _1999 - _1931
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2482 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2482] < _1872:
                                                            revert with 'NH{q', 17
                                                        if mem[_2482] - _1872 and 10^12 > -1 / mem[_2482] - _1872:
                                                            revert with 'NH{q', 17
                                                        if not _1804:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2482]) - (10^12 * _1872) / _1804):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2482]) - (10^12 * _1872) / _1804
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number < startBlock:
                                                revert with 'NH{q', 17
                                            if block.number - startBlock < 1:
                                                revert with 'NH{q', 17
                                            if not halvingPeriod:
                                                revert with 'NH{q', 18
                                            if not block.number + -startBlock - 1 / halvingPeriod:
                                                if block.number < poolInfo[idx].field_512:
                                                    revert with 'NH{q', 17
                                                if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                                    revert with 'NH{q', 17
                                                if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                                    if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2045 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2096 = mem[_2045]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2258 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2340 = mem[_2258]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2442 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2485 = mem[_2442]
                                                    if _2340 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _2340 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2442]:
                                                        if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2818 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2818] < _2096:
                                                                revert with 'NH{q', 17
                                                            if mem[_2818] - _2096 and 10^12 > -1 / mem[_2818] - _2096:
                                                                revert with 'NH{q', 17
                                                            if not _1804:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2818]) - (10^12 * _2096) / _1804):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2818]) - (10^12 * _2096) / _1804
                                                        else:
                                                            mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2940 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2940] < _2096:
                                                                revert with 'NH{q', 17
                                                            if mem[_2940] - _2096 and 10^12 > -1 / mem[_2940] - _2096:
                                                                revert with 'NH{q', 17
                                                            if not _1804:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2940]) - (10^12 * _2096) / _1804):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2940]) - (10^12 * _2096) / _1804
                                                    else:
                                                        if mem[_2442] < _2340:
                                                            revert with 'NH{q', 17
                                                        if not mem[_2442] - _2340:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _3032 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_3032] < _2096:
                                                                revert with 'NH{q', 17
                                                            if mem[_3032] - _2096 and 10^12 > -1 / mem[_3032] - _2096:
                                                                revert with 'NH{q', 17
                                                            if not _1804:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_3032]) - (10^12 * _2096) / _1804):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_3032]) - (10^12 * _2096) / _1804
                                                        else:
                                                            mem[mem[64] + 36] = mem[_2442] - _2340
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _2485 - _2340
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _3097 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_3097] < _2096:
                                                                revert with 'NH{q', 17
                                                            if mem[_3097] - _2096 and 10^12 > -1 / mem[_3097] - _2096:
                                                                revert with 'NH{q', 17
                                                            if not _1804:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_3097]) - (10^12 * _2096) / _1804):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_3097]) - (10^12 * _2096) / _1804
                                                    poolInfo[idx].field_512 = block.number
                                            else:
                                                if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                    revert with 'NH{q', 17
                                                if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                    revert with 'NH{q', 18
                                                if block.number < poolInfo[idx].field_512:
                                                    revert with 'NH{q', 17
                                                if block.number - poolInfo[idx].field_512 and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - poolInfo[idx].field_512:
                                                    revert with 'NH{q', 17
                                                if 0 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                    revert with 'NH{q', 17
                                                if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                    if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2176 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2257 = mem[_2176]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2417 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2460 = mem[_2417]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2532 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2579 = mem[_2532]
                                                    if _2460 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _2460 + ((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2532]:
                                                        if not (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _3028 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_3028] < _2257:
                                                                revert with 'NH{q', 17
                                                            if mem[_3028] - _2257 and 10^12 > -1 / mem[_3028] - _2257:
                                                                revert with 'NH{q', 17
                                                            if not _1804:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_3028]) - (10^12 * _2257) / _1804):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_3028]) - (10^12 * _2257) / _1804
                                                        else:
                                                            mem[mem[64] + 36] = (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _3093 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_3093] < _2257:
                                                                revert with 'NH{q', 17
                                                            if mem[_3093] - _2257 and 10^12 > -1 / mem[_3093] - _2257:
                                                                revert with 'NH{q', 17
                                                            if not _1804:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_3093]) - (10^12 * _2257) / _1804):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_3093]) - (10^12 * _2257) / _1804
                                                    else:
                                                        if mem[_2532] < _2460:
                                                            revert with 'NH{q', 17
                                                        if not mem[_2532] - _2460:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _3140 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_3140] < _2257:
                                                                revert with 'NH{q', 17
                                                            if mem[_3140] - _2257 and 10^12 > -1 / mem[_3140] - _2257:
                                                                revert with 'NH{q', 17
                                                            if not _1804:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_3140]) - (10^12 * _2257) / _1804):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_3140]) - (10^12 * _2257) / _1804
                                                        else:
                                                            mem[mem[64] + 36] = mem[_2532] - _2460
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _2579 - _2460
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _3175 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_3175] < _2257:
                                                                revert with 'NH{q', 17
                                                            if mem[_3175] - _2257 and 10^12 > -1 / mem[_3175] - _2257:
                                                                revert with 'NH{q', 17
                                                            if not _1804:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_3175]) - (10^12 * _2257) / _1804):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_3175]) - (10^12 * _2257) / _1804
                                                    poolInfo[idx].field_512 = block.number
                                else:
                                    if block.number < startBlock:
                                        revert with 'NH{q', 17
                                    if block.number - startBlock < 1:
                                        revert with 'NH{q', 17
                                    if not halvingPeriod:
                                        revert with 'NH{q', 18
                                    s = 0
                                    t = 0
                                    u = poolInfo[idx].field_512
                                    while s < block.number + -startBlock - 1 / halvingPeriod:
                                        if s == -1:
                                            revert with 'NH{q', 17
                                        if s + 1 and halvingPeriod > -1 / s + 1:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) > !startBlock:
                                            revert with 'NH{q', 17
                                        if 0 == halvingPeriod:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) + startBlock <= startBlock:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) + startBlock < startBlock:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) < 1:
                                            revert with 'NH{q', 17
                                        if not halvingPeriod:
                                            revert with 'NH{q', 18
                                        if not halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > 255:
                                            revert with 'NH{q', 17
                                        if not 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                            revert with 'NH{q', 18
                                        if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                            revert with 'NH{q', 17
                                        if t > !((halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)):
                                            revert with 'NH{q', 17
                                        s = s + 1
                                        t = t + (halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)
                                        u = halvingPeriod + (s * halvingPeriod) + startBlock
                                        continue 
                                    if 0 == halvingPeriod:
                                        if block.number < u:
                                            revert with 'NH{q', 17
                                        if block.number - u and hCTPerBlock > -1 / block.number - u:
                                            revert with 'NH{q', 17
                                        if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                revert with 'NH{q', 17
                                            if not totalAllocPoint:
                                                revert with 'NH{q', 18
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3629 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3645 = mem[_3629]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3693 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3709 = mem[_3693]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.maxSupply() with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3757 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3773 = mem[_3757]
                                            if _3709 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                revert with 'NH{q', 17
                                            if _3709 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3757]:
                                                if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3927 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_3927] < _3645:
                                                        revert with 'NH{q', 17
                                                    if mem[_3927] - _3645 and 10^12 > -1 / mem[_3927] - _3645:
                                                        revert with 'NH{q', 17
                                                    if not _1804:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_3927]) - (10^12 * _3645) / _1804):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_3927]) - (10^12 * _3645) / _1804
                                                else:
                                                    mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4011 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4011] < _3645:
                                                        revert with 'NH{q', 17
                                                    if mem[_4011] - _3645 and 10^12 > -1 / mem[_4011] - _3645:
                                                        revert with 'NH{q', 17
                                                    if not _1804:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4011]) - (10^12 * _3645) / _1804):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4011]) - (10^12 * _3645) / _1804
                                            else:
                                                if mem[_3757] < _3709:
                                                    revert with 'NH{q', 17
                                                if not mem[_3757] - _3709:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4127 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4127] < _3645:
                                                        revert with 'NH{q', 17
                                                    if mem[_4127] - _3645 and 10^12 > -1 / mem[_4127] - _3645:
                                                        revert with 'NH{q', 17
                                                    if not _1804:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4127]) - (10^12 * _3645) / _1804):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4127]) - (10^12 * _3645) / _1804
                                                else:
                                                    mem[mem[64] + 36] = mem[_3757] - _3709
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, _3773 - _3709
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4207 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4207] < _3645:
                                                        revert with 'NH{q', 17
                                                    if mem[_4207] - _3645 and 10^12 > -1 / mem[_4207] - _3645:
                                                        revert with 'NH{q', 17
                                                    if not _1804:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4207]) - (10^12 * _3645) / _1804):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4207]) - (10^12 * _3645) / _1804
                                            poolInfo[idx].field_512 = block.number
                                    else:
                                        if block.number <= startBlock:
                                            if block.number < u:
                                                revert with 'NH{q', 17
                                            if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                revert with 'NH{q', 17
                                            if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3637 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3653 = mem[_3637]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3701 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3717 = mem[_3701]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3765 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3781 = mem[_3765]
                                                if _3717 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _3717 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3765]:
                                                    if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3965 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_3965] < _3653:
                                                            revert with 'NH{q', 17
                                                        if mem[_3965] - _3653 and 10^12 > -1 / mem[_3965] - _3653:
                                                            revert with 'NH{q', 17
                                                        if not _1804:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_3965]) - (10^12 * _3653) / _1804):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_3965]) - (10^12 * _3653) / _1804
                                                    else:
                                                        mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4078 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4078] < _3653:
                                                            revert with 'NH{q', 17
                                                        if mem[_4078] - _3653 and 10^12 > -1 / mem[_4078] - _3653:
                                                            revert with 'NH{q', 17
                                                        if not _1804:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4078]) - (10^12 * _3653) / _1804):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4078]) - (10^12 * _3653) / _1804
                                                else:
                                                    if mem[_3765] < _3717:
                                                        revert with 'NH{q', 17
                                                    if not mem[_3765] - _3717:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4166 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4166] < _3653:
                                                            revert with 'NH{q', 17
                                                        if mem[_4166] - _3653 and 10^12 > -1 / mem[_4166] - _3653:
                                                            revert with 'NH{q', 17
                                                        if not _1804:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4166]) - (10^12 * _3653) / _1804):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4166]) - (10^12 * _3653) / _1804
                                                    else:
                                                        mem[mem[64] + 36] = mem[_3765] - _3717
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _3781 - _3717
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4230 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4230] < _3653:
                                                            revert with 'NH{q', 17
                                                        if mem[_4230] - _3653 and 10^12 > -1 / mem[_4230] - _3653:
                                                            revert with 'NH{q', 17
                                                        if not _1804:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4230]) - (10^12 * _3653) / _1804):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4230]) - (10^12 * _3653) / _1804
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number < startBlock:
                                                revert with 'NH{q', 17
                                            if block.number - startBlock < 1:
                                                revert with 'NH{q', 17
                                            if not halvingPeriod:
                                                revert with 'NH{q', 18
                                            if not block.number + -startBlock - 1 / halvingPeriod:
                                                if block.number < u:
                                                    revert with 'NH{q', 17
                                                if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                    revert with 'NH{q', 17
                                                if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                    if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3805 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3815 = mem[_3805]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3926 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4009 = mem[_3926]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4169 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4233 = mem[_4169]
                                                    if _4009 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _4009 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4169]:
                                                        if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4333 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4333] < _3815:
                                                                revert with 'NH{q', 17
                                                            if mem[_4333] - _3815 and 10^12 > -1 / mem[_4333] - _3815:
                                                                revert with 'NH{q', 17
                                                            if not _1804:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4333]) - (10^12 * _3815) / _1804):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4333]) - (10^12 * _3815) / _1804
                                                        else:
                                                            mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4392 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4392] < _3815:
                                                                revert with 'NH{q', 17
                                                            if mem[_4392] - _3815 and 10^12 > -1 / mem[_4392] - _3815:
                                                                revert with 'NH{q', 17
                                                            if not _1804:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4392]) - (10^12 * _3815) / _1804):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4392]) - (10^12 * _3815) / _1804
                                                    else:
                                                        if mem[_4169] < _4009:
                                                            revert with 'NH{q', 17
                                                        if not mem[_4169] - _4009:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4441 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4441] < _3815:
                                                                revert with 'NH{q', 17
                                                            if mem[_4441] - _3815 and 10^12 > -1 / mem[_4441] - _3815:
                                                                revert with 'NH{q', 17
                                                            if not _1804:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4441]) - (10^12 * _3815) / _1804):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4441]) - (10^12 * _3815) / _1804
                                                        else:
                                                            mem[mem[64] + 36] = mem[_4169] - _4009
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _4233 - _4009
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4514 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4514] < _3815:
                                                                revert with 'NH{q', 17
                                                            if mem[_4514] - _3815 and 10^12 > -1 / mem[_4514] - _3815:
                                                                revert with 'NH{q', 17
                                                            if not _1804:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4514]) - (10^12 * _3815) / _1804):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4514]) - (10^12 * _3815) / _1804
                                                    poolInfo[idx].field_512 = block.number
                                            else:
                                                if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                    revert with 'NH{q', 17
                                                if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                    revert with 'NH{q', 18
                                                if block.number < u:
                                                    revert with 'NH{q', 17
                                                if block.number - u and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - u:
                                                    revert with 'NH{q', 17
                                                if t > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                    revert with 'NH{q', 17
                                                if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                    if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3855 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3925 = mem[_3855]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4125 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4205 = mem[_4125]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4278 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4293 = mem[_4278]
                                                    if _4205 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _4205 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4278]:
                                                        if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4437 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4437] < _3925:
                                                                revert with 'NH{q', 17
                                                            if mem[_4437] - _3925 and 10^12 > -1 / mem[_4437] - _3925:
                                                                revert with 'NH{q', 17
                                                            if not _1804:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4437]) - (10^12 * _3925) / _1804):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4437]) - (10^12 * _3925) / _1804
                                                        else:
                                                            mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4510 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4510] < _3925:
                                                                revert with 'NH{q', 17
                                                            if mem[_4510] - _3925 and 10^12 > -1 / mem[_4510] - _3925:
                                                                revert with 'NH{q', 17
                                                            if not _1804:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4510]) - (10^12 * _3925) / _1804):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4510]) - (10^12 * _3925) / _1804
                                                    else:
                                                        if mem[_4278] < _4205:
                                                            revert with 'NH{q', 17
                                                        if not mem[_4278] - _4205:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4558 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4558] < _3925:
                                                                revert with 'NH{q', 17
                                                            if mem[_4558] - _3925 and 10^12 > -1 / mem[_4558] - _3925:
                                                                revert with 'NH{q', 17
                                                            if not _1804:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4558]) - (10^12 * _3925) / _1804):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4558]) - (10^12 * _3925) / _1804
                                                        else:
                                                            mem[mem[64] + 36] = mem[_4278] - _4205
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _4293 - _4205
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4598 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4598] < _3925:
                                                                revert with 'NH{q', 17
                                                            if mem[_4598] - _3925 and 10^12 > -1 / mem[_4598] - _3925:
                                                                revert with 'NH{q', 17
                                                            if not _1804:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4598]) - (10^12 * _3925) / _1804):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4598]) - (10^12 * _3925) / _1804
                                                    poolInfo[idx].field_512 = block.number
                        else:
                            if poolInfo[idx].field_512 < startBlock:
                                revert with 'NH{q', 17
                            if poolInfo[idx].field_512 - startBlock < 1:
                                revert with 'NH{q', 17
                            if not halvingPeriod:
                                revert with 'NH{q', 18
                            if 0 == halvingPeriod:
                                s = poolInfo[idx].field_512 + -startBlock - 1 / halvingPeriod
                                t = 0
                                u = poolInfo[idx].field_512
                                while s < 0:
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    if s + 1 and halvingPeriod > -1 / s + 1:
                                        revert with 'NH{q', 17
                                    if halvingPeriod + (s * halvingPeriod) > !startBlock:
                                        revert with 'NH{q', 17
                                    if 0 == halvingPeriod:
                                        if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                            revert with 'NH{q', 17
                                        if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        s = s + 1
                                        t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                        u = halvingPeriod + (s * halvingPeriod) + startBlock
                                        continue 
                                    if halvingPeriod + (s * halvingPeriod) + startBlock <= startBlock:
                                        if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                            revert with 'NH{q', 17
                                        if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        s = s + 1
                                        t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                        u = halvingPeriod + (s * halvingPeriod) + startBlock
                                        continue 
                                    if halvingPeriod + (s * halvingPeriod) + startBlock < startBlock:
                                        revert with 'NH{q', 17
                                    if halvingPeriod + (s * halvingPeriod) < 1:
                                        revert with 'NH{q', 17
                                    if not halvingPeriod:
                                        revert with 'NH{q', 18
                                    if not halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                        if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                            revert with 'NH{q', 17
                                        if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        s = s + 1
                                        t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                        u = halvingPeriod + (s * halvingPeriod) + startBlock
                                        continue 
                                    if halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > 255:
                                        revert with 'NH{q', 17
                                    if not 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                        revert with 'NH{q', 18
                                    if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                        revert with 'NH{q', 17
                                    if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                        revert with 'NH{q', 17
                                    if t > !((halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)):
                                        revert with 'NH{q', 17
                                    s = s + 1
                                    t = t + (halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)
                                    u = halvingPeriod + (s * halvingPeriod) + startBlock
                                    continue 
                                if 0 == halvingPeriod:
                                    if block.number < u:
                                        revert with 'NH{q', 17
                                    if block.number - u and hCTPerBlock > -1 / block.number - u:
                                        revert with 'NH{q', 17
                                    if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                        revert with 'NH{q', 17
                                    if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                        if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                            revert with 'NH{q', 17
                                        if not totalAllocPoint:
                                            revert with 'NH{q', 18
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3632 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _3648 = mem[_3632]
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3696 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _3712 = mem[_3696]
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.maxSupply() with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3760 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _3776 = mem[_3760]
                                        if _3712 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                            revert with 'NH{q', 17
                                        if _3712 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3760]:
                                            if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3942 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_3942] < _3648:
                                                    revert with 'NH{q', 17
                                                if mem[_3942] - _3648 and 10^12 > -1 / mem[_3942] - _3648:
                                                    revert with 'NH{q', 17
                                                if not _1804:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_3942]) - (10^12 * _3648) / _1804):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_3942]) - (10^12 * _3648) / _1804
                                            else:
                                                mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                require ext_code.size(HCTAddress)
                                                call HCTAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _4038 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_4038] < _3648:
                                                    revert with 'NH{q', 17
                                                if mem[_4038] - _3648 and 10^12 > -1 / mem[_4038] - _3648:
                                                    revert with 'NH{q', 17
                                                if not _1804:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4038]) - (10^12 * _3648) / _1804):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_4038]) - (10^12 * _3648) / _1804
                                        else:
                                            if mem[_3760] < _3712:
                                                revert with 'NH{q', 17
                                            if not mem[_3760] - _3712:
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _4142 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_4142] < _3648:
                                                    revert with 'NH{q', 17
                                                if mem[_4142] - _3648 and 10^12 > -1 / mem[_4142] - _3648:
                                                    revert with 'NH{q', 17
                                                if not _1804:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4142]) - (10^12 * _3648) / _1804):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_4142]) - (10^12 * _3648) / _1804
                                            else:
                                                mem[mem[64] + 36] = mem[_3760] - _3712
                                                require ext_code.size(HCTAddress)
                                                call HCTAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args this.address, _3776 - _3712
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _4216 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_4216] < _3648:
                                                    revert with 'NH{q', 17
                                                if mem[_4216] - _3648 and 10^12 > -1 / mem[_4216] - _3648:
                                                    revert with 'NH{q', 17
                                                if not _1804:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4216]) - (10^12 * _3648) / _1804):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_4216]) - (10^12 * _3648) / _1804
                                        poolInfo[idx].field_512 = block.number
                                else:
                                    if block.number <= startBlock:
                                        if block.number < u:
                                            revert with 'NH{q', 17
                                        if block.number - u and hCTPerBlock > -1 / block.number - u:
                                            revert with 'NH{q', 17
                                        if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                revert with 'NH{q', 17
                                            if not totalAllocPoint:
                                                revert with 'NH{q', 18
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3640 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3656 = mem[_3640]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3704 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3726 = mem[_3704]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.maxSupply() with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3768 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3790 = mem[_3768]
                                            if _3726 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                revert with 'NH{q', 17
                                            if _3726 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3768]:
                                                if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3980 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_3980] < _3656:
                                                        revert with 'NH{q', 17
                                                    if mem[_3980] - _3656 and 10^12 > -1 / mem[_3980] - _3656:
                                                        revert with 'NH{q', 17
                                                    if not _1804:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_3980]) - (10^12 * _3656) / _1804):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_3980]) - (10^12 * _3656) / _1804
                                                else:
                                                    mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4096 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4096] < _3656:
                                                        revert with 'NH{q', 17
                                                    if mem[_4096] - _3656 and 10^12 > -1 / mem[_4096] - _3656:
                                                        revert with 'NH{q', 17
                                                    if not _1804:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4096]) - (10^12 * _3656) / _1804):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4096]) - (10^12 * _3656) / _1804
                                            else:
                                                if mem[_3768] < _3726:
                                                    revert with 'NH{q', 17
                                                if not mem[_3768] - _3726:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4181 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4181] < _3656:
                                                        revert with 'NH{q', 17
                                                    if mem[_4181] - _3656 and 10^12 > -1 / mem[_4181] - _3656:
                                                        revert with 'NH{q', 17
                                                    if not _1804:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4181]) - (10^12 * _3656) / _1804):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4181]) - (10^12 * _3656) / _1804
                                                else:
                                                    mem[mem[64] + 36] = mem[_3768] - _3726
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, _3790 - _3726
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4245 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4245] < _3656:
                                                        revert with 'NH{q', 17
                                                    if mem[_4245] - _3656 and 10^12 > -1 / mem[_4245] - _3656:
                                                        revert with 'NH{q', 17
                                                    if not _1804:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4245]) - (10^12 * _3656) / _1804):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4245]) - (10^12 * _3656) / _1804
                                            poolInfo[idx].field_512 = block.number
                                    else:
                                        if block.number < startBlock:
                                            revert with 'NH{q', 17
                                        if block.number - startBlock < 1:
                                            revert with 'NH{q', 17
                                        if not halvingPeriod:
                                            revert with 'NH{q', 18
                                        if not block.number + -startBlock - 1 / halvingPeriod:
                                            if block.number < u:
                                                revert with 'NH{q', 17
                                            if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                revert with 'NH{q', 17
                                            if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3808 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3824 = mem[_3808]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3941 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _4036 = mem[_3941]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _4184 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _4248 = mem[_4184]
                                                if _4036 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _4036 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4184]:
                                                    if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4342 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4342] < _3824:
                                                            revert with 'NH{q', 17
                                                        if mem[_4342] - _3824 and 10^12 > -1 / mem[_4342] - _3824:
                                                            revert with 'NH{q', 17
                                                        if not _1804:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4342]) - (10^12 * _3824) / _1804):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4342]) - (10^12 * _3824) / _1804
                                                    else:
                                                        mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4410 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4410] < _3824:
                                                            revert with 'NH{q', 17
                                                        if mem[_4410] - _3824 and 10^12 > -1 / mem[_4410] - _3824:
                                                            revert with 'NH{q', 17
                                                        if not _1804:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4410]) - (10^12 * _3824) / _1804):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4410]) - (10^12 * _3824) / _1804
                                                else:
                                                    if mem[_4184] < _4036:
                                                        revert with 'NH{q', 17
                                                    if not mem[_4184] - _4036:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4462 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4462] < _3824:
                                                            revert with 'NH{q', 17
                                                        if mem[_4462] - _3824 and 10^12 > -1 / mem[_4462] - _3824:
                                                            revert with 'NH{q', 17
                                                        if not _1804:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4462]) - (10^12 * _3824) / _1804):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4462]) - (10^12 * _3824) / _1804
                                                    else:
                                                        mem[mem[64] + 36] = mem[_4184] - _4036
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _4248 - _4036
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4532 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4532] < _3824:
                                                            revert with 'NH{q', 17
                                                        if mem[_4532] - _3824 and 10^12 > -1 / mem[_4532] - _3824:
                                                            revert with 'NH{q', 17
                                                        if not _1804:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4532]) - (10^12 * _3824) / _1804):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4532]) - (10^12 * _3824) / _1804
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                revert with 'NH{q', 17
                                            if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                revert with 'NH{q', 18
                                            if block.number < u:
                                                revert with 'NH{q', 17
                                            if block.number - u and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - u:
                                                revert with 'NH{q', 17
                                            if t > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                revert with 'NH{q', 17
                                            if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3876 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3940 = mem[_3876]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _4140 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _4214 = mem[_4140]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _4284 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _4296 = mem[_4284]
                                                if _4214 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _4214 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4284]:
                                                    if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4458 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4458] < _3940:
                                                            revert with 'NH{q', 17
                                                        if mem[_4458] - _3940 and 10^12 > -1 / mem[_4458] - _3940:
                                                            revert with 'NH{q', 17
                                                        if not _1804:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4458]) - (10^12 * _3940) / _1804):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4458]) - (10^12 * _3940) / _1804
                                                    else:
                                                        mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4528 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4528] < _3940:
                                                            revert with 'NH{q', 17
                                                        if mem[_4528] - _3940 and 10^12 > -1 / mem[_4528] - _3940:
                                                            revert with 'NH{q', 17
                                                        if not _1804:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4528]) - (10^12 * _3940) / _1804):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4528]) - (10^12 * _3940) / _1804
                                                else:
                                                    if mem[_4284] < _4214:
                                                        revert with 'NH{q', 17
                                                    if not mem[_4284] - _4214:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4573 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4573] < _3940:
                                                            revert with 'NH{q', 17
                                                        if mem[_4573] - _3940 and 10^12 > -1 / mem[_4573] - _3940:
                                                            revert with 'NH{q', 17
                                                        if not _1804:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4573]) - (10^12 * _3940) / _1804):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4573]) - (10^12 * _3940) / _1804
                                                    else:
                                                        mem[mem[64] + 36] = mem[_4284] - _4214
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _4296 - _4214
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4604 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4604] < _3940:
                                                            revert with 'NH{q', 17
                                                        if mem[_4604] - _3940 and 10^12 > -1 / mem[_4604] - _3940:
                                                            revert with 'NH{q', 17
                                                        if not _1804:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4604]) - (10^12 * _3940) / _1804):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4604]) - (10^12 * _3940) / _1804
                                                poolInfo[idx].field_512 = block.number
                            else:
                                if block.number <= startBlock:
                                    s = poolInfo[idx].field_512 + -startBlock - 1 / halvingPeriod
                                    t = 0
                                    u = poolInfo[idx].field_512
                                    while s < 0:
                                        if s == -1:
                                            revert with 'NH{q', 17
                                        if s + 1 and halvingPeriod > -1 / s + 1:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) > !startBlock:
                                            revert with 'NH{q', 17
                                        if 0 == halvingPeriod:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) + startBlock <= startBlock:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) + startBlock < startBlock:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) < 1:
                                            revert with 'NH{q', 17
                                        if not halvingPeriod:
                                            revert with 'NH{q', 18
                                        if not halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > 255:
                                            revert with 'NH{q', 17
                                        if not 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                            revert with 'NH{q', 18
                                        if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                            revert with 'NH{q', 17
                                        if t > !((halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)):
                                            revert with 'NH{q', 17
                                        s = s + 1
                                        t = t + (halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)
                                        u = halvingPeriod + (s * halvingPeriod) + startBlock
                                        continue 
                                    if 0 == halvingPeriod:
                                        if block.number < u:
                                            revert with 'NH{q', 17
                                        if block.number - u and hCTPerBlock > -1 / block.number - u:
                                            revert with 'NH{q', 17
                                        if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                revert with 'NH{q', 17
                                            if not totalAllocPoint:
                                                revert with 'NH{q', 18
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3630 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3646 = mem[_3630]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3694 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3710 = mem[_3694]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.maxSupply() with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3758 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3774 = mem[_3758]
                                            if _3710 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                revert with 'NH{q', 17
                                            if _3710 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3758]:
                                                if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3932 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_3932] < _3646:
                                                        revert with 'NH{q', 17
                                                    if mem[_3932] - _3646 and 10^12 > -1 / mem[_3932] - _3646:
                                                        revert with 'NH{q', 17
                                                    if not _1804:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_3932]) - (10^12 * _3646) / _1804):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_3932]) - (10^12 * _3646) / _1804
                                                else:
                                                    mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4020 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4020] < _3646:
                                                        revert with 'NH{q', 17
                                                    if mem[_4020] - _3646 and 10^12 > -1 / mem[_4020] - _3646:
                                                        revert with 'NH{q', 17
                                                    if not _1804:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4020]) - (10^12 * _3646) / _1804):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4020]) - (10^12 * _3646) / _1804
                                            else:
                                                if mem[_3758] < _3710:
                                                    revert with 'NH{q', 17
                                                if not mem[_3758] - _3710:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4132 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4132] < _3646:
                                                        revert with 'NH{q', 17
                                                    if mem[_4132] - _3646 and 10^12 > -1 / mem[_4132] - _3646:
                                                        revert with 'NH{q', 17
                                                    if not _1804:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4132]) - (10^12 * _3646) / _1804):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4132]) - (10^12 * _3646) / _1804
                                                else:
                                                    mem[mem[64] + 36] = mem[_3758] - _3710
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, _3774 - _3710
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4210 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4210] < _3646:
                                                        revert with 'NH{q', 17
                                                    if mem[_4210] - _3646 and 10^12 > -1 / mem[_4210] - _3646:
                                                        revert with 'NH{q', 17
                                                    if not _1804:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4210]) - (10^12 * _3646) / _1804):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4210]) - (10^12 * _3646) / _1804
                                            poolInfo[idx].field_512 = block.number
                                    else:
                                        if block.number <= startBlock:
                                            if block.number < u:
                                                revert with 'NH{q', 17
                                            if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                revert with 'NH{q', 17
                                            if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3638 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3654 = mem[_3638]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3702 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3720 = mem[_3702]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3766 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3784 = mem[_3766]
                                                if _3720 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _3720 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3766]:
                                                    if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3970 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_3970] < _3654:
                                                            revert with 'NH{q', 17
                                                        if mem[_3970] - _3654 and 10^12 > -1 / mem[_3970] - _3654:
                                                            revert with 'NH{q', 17
                                                        if not _1804:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_3970]) - (10^12 * _3654) / _1804):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_3970]) - (10^12 * _3654) / _1804
                                                    else:
                                                        mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4084 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4084] < _3654:
                                                            revert with 'NH{q', 17
                                                        if mem[_4084] - _3654 and 10^12 > -1 / mem[_4084] - _3654:
                                                            revert with 'NH{q', 17
                                                        if not _1804:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4084]) - (10^12 * _3654) / _1804):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4084]) - (10^12 * _3654) / _1804
                                                else:
                                                    if mem[_3766] < _3720:
                                                        revert with 'NH{q', 17
                                                    if not mem[_3766] - _3720:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4171 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4171] < _3654:
                                                            revert with 'NH{q', 17
                                                        if mem[_4171] - _3654 and 10^12 > -1 / mem[_4171] - _3654:
                                                            revert with 'NH{q', 17
                                                        if not _1804:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4171]) - (10^12 * _3654) / _1804):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4171]) - (10^12 * _3654) / _1804
                                                    else:
                                                        mem[mem[64] + 36] = mem[_3766] - _3720
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _3784 - _3720
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4235 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4235] < _3654:
                                                            revert with 'NH{q', 17
                                                        if mem[_4235] - _3654 and 10^12 > -1 / mem[_4235] - _3654:
                                                            revert with 'NH{q', 17
                                                        if not _1804:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4235]) - (10^12 * _3654) / _1804):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4235]) - (10^12 * _3654) / _1804
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number < startBlock:
                                                revert with 'NH{q', 17
                                            if block.number - startBlock < 1:
                                                revert with 'NH{q', 17
                                            if not halvingPeriod:
                                                revert with 'NH{q', 18
                                            if not block.number + -startBlock - 1 / halvingPeriod:
                                                if block.number < u:
                                                    revert with 'NH{q', 17
                                                if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                    revert with 'NH{q', 17
                                                if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                    if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3806 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3818 = mem[_3806]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3931 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4018 = mem[_3931]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4174 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4238 = mem[_4174]
                                                    if _4018 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _4018 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4174]:
                                                        if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4336 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4336] < _3818:
                                                                revert with 'NH{q', 17
                                                            if mem[_4336] - _3818 and 10^12 > -1 / mem[_4336] - _3818:
                                                                revert with 'NH{q', 17
                                                            if not _1804:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4336]) - (10^12 * _3818) / _1804):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4336]) - (10^12 * _3818) / _1804
                                                        else:
                                                            mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4398 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4398] < _3818:
                                                                revert with 'NH{q', 17
                                                            if mem[_4398] - _3818 and 10^12 > -1 / mem[_4398] - _3818:
                                                                revert with 'NH{q', 17
                                                            if not _1804:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4398]) - (10^12 * _3818) / _1804):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4398]) - (10^12 * _3818) / _1804
                                                    else:
                                                        if mem[_4174] < _4018:
                                                            revert with 'NH{q', 17
                                                        if not mem[_4174] - _4018:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4448 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4448] < _3818:
                                                                revert with 'NH{q', 17
                                                            if mem[_4448] - _3818 and 10^12 > -1 / mem[_4448] - _3818:
                                                                revert with 'NH{q', 17
                                                            if not _1804:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4448]) - (10^12 * _3818) / _1804):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4448]) - (10^12 * _3818) / _1804
                                                        else:
                                                            mem[mem[64] + 36] = mem[_4174] - _4018
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _4238 - _4018
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4520 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4520] < _3818:
                                                                revert with 'NH{q', 17
                                                            if mem[_4520] - _3818 and 10^12 > -1 / mem[_4520] - _3818:
                                                                revert with 'NH{q', 17
                                                            if not _1804:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4520]) - (10^12 * _3818) / _1804):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4520]) - (10^12 * _3818) / _1804
                                                    poolInfo[idx].field_512 = block.number
                                            else:
                                                if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                    revert with 'NH{q', 17
                                                if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                    revert with 'NH{q', 18
                                                if block.number < u:
                                                    revert with 'NH{q', 17
                                                if block.number - u and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - u:
                                                    revert with 'NH{q', 17
                                                if t > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                    revert with 'NH{q', 17
                                                if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                    if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3862 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3930 = mem[_3862]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4130 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4208 = mem[_4130]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4280 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4294 = mem[_4280]
                                                    if _4208 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _4208 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4280]:
                                                        if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4444 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4444] < _3930:
                                                                revert with 'NH{q', 17
                                                            if mem[_4444] - _3930 and 10^12 > -1 / mem[_4444] - _3930:
                                                                revert with 'NH{q', 17
                                                            if not _1804:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4444]) - (10^12 * _3930) / _1804):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4444]) - (10^12 * _3930) / _1804
                                                        else:
                                                            mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4516 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4516] < _3930:
                                                                revert with 'NH{q', 17
                                                            if mem[_4516] - _3930 and 10^12 > -1 / mem[_4516] - _3930:
                                                                revert with 'NH{q', 17
                                                            if not _1804:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4516]) - (10^12 * _3930) / _1804):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4516]) - (10^12 * _3930) / _1804
                                                    else:
                                                        if mem[_4280] < _4208:
                                                            revert with 'NH{q', 17
                                                        if not mem[_4280] - _4208:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4563 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4563] < _3930:
                                                                revert with 'NH{q', 17
                                                            if mem[_4563] - _3930 and 10^12 > -1 / mem[_4563] - _3930:
                                                                revert with 'NH{q', 17
                                                            if not _1804:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4563]) - (10^12 * _3930) / _1804):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4563]) - (10^12 * _3930) / _1804
                                                        else:
                                                            mem[mem[64] + 36] = mem[_4280] - _4208
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _4294 - _4208
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4600 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4600] < _3930:
                                                                revert with 'NH{q', 17
                                                            if mem[_4600] - _3930 and 10^12 > -1 / mem[_4600] - _3930:
                                                                revert with 'NH{q', 17
                                                            if not _1804:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4600]) - (10^12 * _3930) / _1804):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4600]) - (10^12 * _3930) / _1804
                                                    poolInfo[idx].field_512 = block.number
                                else:
                                    if block.number < startBlock:
                                        revert with 'NH{q', 17
                                    if block.number - startBlock < 1:
                                        revert with 'NH{q', 17
                                    if not halvingPeriod:
                                        revert with 'NH{q', 18
                                    s = poolInfo[idx].field_512 + -startBlock - 1 / halvingPeriod
                                    t = 0
                                    u = poolInfo[idx].field_512
                                    while s < block.number + -startBlock - 1 / halvingPeriod:
                                        if s == -1:
                                            revert with 'NH{q', 17
                                        if s + 1 and halvingPeriod > -1 / s + 1:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) > !startBlock:
                                            revert with 'NH{q', 17
                                        if 0 == halvingPeriod:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) + startBlock <= startBlock:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) + startBlock < startBlock:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) < 1:
                                            revert with 'NH{q', 17
                                        if not halvingPeriod:
                                            revert with 'NH{q', 18
                                        if not halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > 255:
                                            revert with 'NH{q', 17
                                        if not 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                            revert with 'NH{q', 18
                                        if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                            revert with 'NH{q', 17
                                        if t > !((halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)):
                                            revert with 'NH{q', 17
                                        s = s + 1
                                        t = t + (halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)
                                        u = halvingPeriod + (s * halvingPeriod) + startBlock
                                        continue 
                                    if 0 == halvingPeriod:
                                        if block.number < u:
                                            revert with 'NH{q', 17
                                        if block.number - u and hCTPerBlock > -1 / block.number - u:
                                            revert with 'NH{q', 17
                                        if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                revert with 'NH{q', 17
                                            if not totalAllocPoint:
                                                revert with 'NH{q', 18
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3631 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3647 = mem[_3631]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3695 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3711 = mem[_3695]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.maxSupply() with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3759 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3775 = mem[_3759]
                                            if _3711 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                revert with 'NH{q', 17
                                            if _3711 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3759]:
                                                if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3937 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_3937] < _3647:
                                                        revert with 'NH{q', 17
                                                    if mem[_3937] - _3647 and 10^12 > -1 / mem[_3937] - _3647:
                                                        revert with 'NH{q', 17
                                                    if not _1804:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_3937]) - (10^12 * _3647) / _1804):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_3937]) - (10^12 * _3647) / _1804
                                                else:
                                                    mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4029 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4029] < _3647:
                                                        revert with 'NH{q', 17
                                                    if mem[_4029] - _3647 and 10^12 > -1 / mem[_4029] - _3647:
                                                        revert with 'NH{q', 17
                                                    if not _1804:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4029]) - (10^12 * _3647) / _1804):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4029]) - (10^12 * _3647) / _1804
                                            else:
                                                if mem[_3759] < _3711:
                                                    revert with 'NH{q', 17
                                                if not mem[_3759] - _3711:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4137 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4137] < _3647:
                                                        revert with 'NH{q', 17
                                                    if mem[_4137] - _3647 and 10^12 > -1 / mem[_4137] - _3647:
                                                        revert with 'NH{q', 17
                                                    if not _1804:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4137]) - (10^12 * _3647) / _1804):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4137]) - (10^12 * _3647) / _1804
                                                else:
                                                    mem[mem[64] + 36] = mem[_3759] - _3711
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, _3775 - _3711
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4213 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4213] < _3647:
                                                        revert with 'NH{q', 17
                                                    if mem[_4213] - _3647 and 10^12 > -1 / mem[_4213] - _3647:
                                                        revert with 'NH{q', 17
                                                    if not _1804:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4213]) - (10^12 * _3647) / _1804):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4213]) - (10^12 * _3647) / _1804
                                            poolInfo[idx].field_512 = block.number
                                    else:
                                        if block.number <= startBlock:
                                            if block.number < u:
                                                revert with 'NH{q', 17
                                            if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                revert with 'NH{q', 17
                                            if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3639 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3655 = mem[_3639]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3703 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3723 = mem[_3703]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3767 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3787 = mem[_3767]
                                                if _3723 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _3723 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3767]:
                                                    if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3975 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_3975] < _3655:
                                                            revert with 'NH{q', 17
                                                        if mem[_3975] - _3655 and 10^12 > -1 / mem[_3975] - _3655:
                                                            revert with 'NH{q', 17
                                                        if not _1804:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_3975]) - (10^12 * _3655) / _1804):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_3975]) - (10^12 * _3655) / _1804
                                                    else:
                                                        mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4090 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4090] < _3655:
                                                            revert with 'NH{q', 17
                                                        if mem[_4090] - _3655 and 10^12 > -1 / mem[_4090] - _3655:
                                                            revert with 'NH{q', 17
                                                        if not _1804:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4090]) - (10^12 * _3655) / _1804):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4090]) - (10^12 * _3655) / _1804
                                                else:
                                                    if mem[_3767] < _3723:
                                                        revert with 'NH{q', 17
                                                    if not mem[_3767] - _3723:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4176 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4176] < _3655:
                                                            revert with 'NH{q', 17
                                                        if mem[_4176] - _3655 and 10^12 > -1 / mem[_4176] - _3655:
                                                            revert with 'NH{q', 17
                                                        if not _1804:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4176]) - (10^12 * _3655) / _1804):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4176]) - (10^12 * _3655) / _1804
                                                    else:
                                                        mem[mem[64] + 36] = mem[_3767] - _3723
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _3787 - _3723
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4240 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4240] < _3655:
                                                            revert with 'NH{q', 17
                                                        if mem[_4240] - _3655 and 10^12 > -1 / mem[_4240] - _3655:
                                                            revert with 'NH{q', 17
                                                        if not _1804:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4240]) - (10^12 * _3655) / _1804):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4240]) - (10^12 * _3655) / _1804
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number < startBlock:
                                                revert with 'NH{q', 17
                                            if block.number - startBlock < 1:
                                                revert with 'NH{q', 17
                                            if not halvingPeriod:
                                                revert with 'NH{q', 18
                                            if not block.number + -startBlock - 1 / halvingPeriod:
                                                if block.number < u:
                                                    revert with 'NH{q', 17
                                                if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                    revert with 'NH{q', 17
                                                if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                    if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3807 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3821 = mem[_3807]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3936 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4027 = mem[_3936]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4179 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4243 = mem[_4179]
                                                    if _4027 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _4027 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4179]:
                                                        if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4339 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4339] < _3821:
                                                                revert with 'NH{q', 17
                                                            if mem[_4339] - _3821 and 10^12 > -1 / mem[_4339] - _3821:
                                                                revert with 'NH{q', 17
                                                            if not _1804:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4339]) - (10^12 * _3821) / _1804):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4339]) - (10^12 * _3821) / _1804
                                                        else:
                                                            mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4404 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4404] < _3821:
                                                                revert with 'NH{q', 17
                                                            if mem[_4404] - _3821 and 10^12 > -1 / mem[_4404] - _3821:
                                                                revert with 'NH{q', 17
                                                            if not _1804:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4404]) - (10^12 * _3821) / _1804):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4404]) - (10^12 * _3821) / _1804
                                                    else:
                                                        if mem[_4179] < _4027:
                                                            revert with 'NH{q', 17
                                                        if not mem[_4179] - _4027:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4455 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4455] < _3821:
                                                                revert with 'NH{q', 17
                                                            if mem[_4455] - _3821 and 10^12 > -1 / mem[_4455] - _3821:
                                                                revert with 'NH{q', 17
                                                            if not _1804:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4455]) - (10^12 * _3821) / _1804):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4455]) - (10^12 * _3821) / _1804
                                                        else:
                                                            mem[mem[64] + 36] = mem[_4179] - _4027
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _4243 - _4027
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4526 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4526] < _3821:
                                                                revert with 'NH{q', 17
                                                            if mem[_4526] - _3821 and 10^12 > -1 / mem[_4526] - _3821:
                                                                revert with 'NH{q', 17
                                                            if not _1804:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4526]) - (10^12 * _3821) / _1804):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4526]) - (10^12 * _3821) / _1804
                                                    poolInfo[idx].field_512 = block.number
                                            else:
                                                if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                    revert with 'NH{q', 17
                                                if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                    revert with 'NH{q', 18
                                                if block.number < u:
                                                    revert with 'NH{q', 17
                                                if block.number - u and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - u:
                                                    revert with 'NH{q', 17
                                                if t > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                    revert with 'NH{q', 17
                                                if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                    if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3869 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3935 = mem[_3869]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4135 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4211 = mem[_4135]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4282 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4295 = mem[_4282]
                                                    if _4211 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _4211 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4282]:
                                                        if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4451 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4451] < _3935:
                                                                revert with 'NH{q', 17
                                                            if mem[_4451] - _3935 and 10^12 > -1 / mem[_4451] - _3935:
                                                                revert with 'NH{q', 17
                                                            if not _1804:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4451]) - (10^12 * _3935) / _1804):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4451]) - (10^12 * _3935) / _1804
                                                        else:
                                                            mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4522 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4522] < _3935:
                                                                revert with 'NH{q', 17
                                                            if mem[_4522] - _3935 and 10^12 > -1 / mem[_4522] - _3935:
                                                                revert with 'NH{q', 17
                                                            if not _1804:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4522]) - (10^12 * _3935) / _1804):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4522]) - (10^12 * _3935) / _1804
                                                    else:
                                                        if mem[_4282] < _4211:
                                                            revert with 'NH{q', 17
                                                        if not mem[_4282] - _4211:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4568 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4568] < _3935:
                                                                revert with 'NH{q', 17
                                                            if mem[_4568] - _3935 and 10^12 > -1 / mem[_4568] - _3935:
                                                                revert with 'NH{q', 17
                                                            if not _1804:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4568]) - (10^12 * _3935) / _1804):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4568]) - (10^12 * _3935) / _1804
                                                        else:
                                                            mem[mem[64] + 36] = mem[_4282] - _4211
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _4295 - _4211
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4602 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4602] < _3935:
                                                                revert with 'NH{q', 17
                                                            if mem[_4602] - _3935 and 10^12 > -1 / mem[_4602] - _3935:
                                                                revert with 'NH{q', 17
                                                            if not _1804:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4602]) - (10^12 * _3935) / _1804):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4602]) - (10^12 * _3935) / _1804
                                                    poolInfo[idx].field_512 = block.number
        if idx == -1:
            revert with 'NH{q', 17
        idx = idx + 1
        continue 
}

function setHCTPerBlock(uint256 arg1) payable {
    mem[64] = 96
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    idx = 0
    while idx < poolInfo.length:
        mem[0] = 5
        if block.number > poolInfo[idx].field_512:
            mem[0] = poolInfo[idx].field_0
            mem[32] = 2
            if stor2[stor5[idx].field_0]:
                if not poolInfo[idx].field_1280:
                    poolInfo[idx].field_512 = block.number
                else:
                    if 0 == halvingPeriod:
                        if 0 == halvingPeriod:
                            if block.number < poolInfo[idx].field_512:
                                revert with 'NH{q', 17
                            if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                revert with 'NH{q', 17
                            if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                revert with 'NH{q', 17
                            if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                    revert with 'NH{q', 17
                                if not totalAllocPoint:
                                    revert with 'NH{q', 18
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(HCTAddress)
                                staticcall HCTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1817 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _1826 = mem[_1817]
                                require ext_code.size(HCTAddress)
                                staticcall HCTAddress.0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1859 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _1873 = mem[_1859]
                                require ext_code.size(HCTAddress)
                                staticcall HCTAddress.maxSupply() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1904 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _1919 = mem[_1904]
                                if _1873 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                    revert with 'NH{q', 17
                                if _1873 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_1904]:
                                    if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _2070 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if mem[_2070] < _1826:
                                            revert with 'NH{q', 17
                                        if mem[_2070] - _1826 and 10^12 > -1 / mem[_2070] - _1826:
                                            revert with 'NH{q', 17
                                        if not poolInfo[idx].field_1280:
                                            revert with 'NH{q', 18
                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2070]) - (10^12 * _1826) / poolInfo[idx].field_1280):
                                            revert with 'NH{q', 17
                                        poolInfo[idx].field_768 += (10^12 * mem[_2070]) - (10^12 * _1826) / poolInfo[idx].field_1280
                                    else:
                                        mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                        require ext_code.size(HCTAddress)
                                        call HCTAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _2131 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if mem[_2131] < _1826:
                                            revert with 'NH{q', 17
                                        if mem[_2131] - _1826 and 10^12 > -1 / mem[_2131] - _1826:
                                            revert with 'NH{q', 17
                                        if not poolInfo[idx].field_1280:
                                            revert with 'NH{q', 18
                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2131]) - (10^12 * _1826) / poolInfo[idx].field_1280):
                                            revert with 'NH{q', 17
                                        poolInfo[idx].field_768 += (10^12 * mem[_2131]) - (10^12 * _1826) / poolInfo[idx].field_1280
                                else:
                                    if mem[_1904] < _1873:
                                        revert with 'NH{q', 17
                                    if not mem[_1904] - _1873:
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _2220 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if mem[_2220] < _1826:
                                            revert with 'NH{q', 17
                                        if mem[_2220] - _1826 and 10^12 > -1 / mem[_2220] - _1826:
                                            revert with 'NH{q', 17
                                        if not poolInfo[idx].field_1280:
                                            revert with 'NH{q', 18
                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2220]) - (10^12 * _1826) / poolInfo[idx].field_1280):
                                            revert with 'NH{q', 17
                                        poolInfo[idx].field_768 += (10^12 * mem[_2220]) - (10^12 * _1826) / poolInfo[idx].field_1280
                                    else:
                                        mem[mem[64] + 36] = mem[_1904] - _1873
                                        require ext_code.size(HCTAddress)
                                        call HCTAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args this.address, _1919 - _1873
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _2296 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if mem[_2296] < _1826:
                                            revert with 'NH{q', 17
                                        if mem[_2296] - _1826 and 10^12 > -1 / mem[_2296] - _1826:
                                            revert with 'NH{q', 17
                                        if not poolInfo[idx].field_1280:
                                            revert with 'NH{q', 18
                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2296]) - (10^12 * _1826) / poolInfo[idx].field_1280):
                                            revert with 'NH{q', 17
                                        poolInfo[idx].field_768 += (10^12 * mem[_2296]) - (10^12 * _1826) / poolInfo[idx].field_1280
                                poolInfo[idx].field_512 = block.number
                        else:
                            if block.number <= startBlock:
                                if block.number < poolInfo[idx].field_512:
                                    revert with 'NH{q', 17
                                if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                    revert with 'NH{q', 17
                                if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                    revert with 'NH{q', 17
                                if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                    if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                        revert with 'NH{q', 17
                                    if not totalAllocPoint:
                                        revert with 'NH{q', 18
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(HCTAddress)
                                    staticcall HCTAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1821 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _1833 = mem[_1821]
                                    require ext_code.size(HCTAddress)
                                    staticcall HCTAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1866 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _1881 = mem[_1866]
                                    require ext_code.size(HCTAddress)
                                    staticcall HCTAddress.maxSupply() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1911 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _1930 = mem[_1911]
                                    if _1881 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                        revert with 'NH{q', 17
                                    if _1881 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_1911]:
                                        if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2091 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if mem[_2091] < _1833:
                                                revert with 'NH{q', 17
                                            if mem[_2091] - _1833 and 10^12 > -1 / mem[_2091] - _1833:
                                                revert with 'NH{q', 17
                                            if not poolInfo[idx].field_1280:
                                                revert with 'NH{q', 18
                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2091]) - (10^12 * _1833) / poolInfo[idx].field_1280):
                                                revert with 'NH{q', 17
                                            poolInfo[idx].field_768 += (10^12 * mem[_2091]) - (10^12 * _1833) / poolInfo[idx].field_1280
                                        else:
                                            mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                            require ext_code.size(HCTAddress)
                                            call HCTAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2171 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if mem[_2171] < _1833:
                                                revert with 'NH{q', 17
                                            if mem[_2171] - _1833 and 10^12 > -1 / mem[_2171] - _1833:
                                                revert with 'NH{q', 17
                                            if not poolInfo[idx].field_1280:
                                                revert with 'NH{q', 18
                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2171]) - (10^12 * _1833) / poolInfo[idx].field_1280):
                                                revert with 'NH{q', 17
                                            poolInfo[idx].field_768 += (10^12 * mem[_2171]) - (10^12 * _1833) / poolInfo[idx].field_1280
                                    else:
                                        if mem[_1911] < _1881:
                                            revert with 'NH{q', 17
                                        if not mem[_1911] - _1881:
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2255 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if mem[_2255] < _1833:
                                                revert with 'NH{q', 17
                                            if mem[_2255] - _1833 and 10^12 > -1 / mem[_2255] - _1833:
                                                revert with 'NH{q', 17
                                            if not poolInfo[idx].field_1280:
                                                revert with 'NH{q', 18
                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2255]) - (10^12 * _1833) / poolInfo[idx].field_1280):
                                                revert with 'NH{q', 17
                                            poolInfo[idx].field_768 += (10^12 * mem[_2255]) - (10^12 * _1833) / poolInfo[idx].field_1280
                                        else:
                                            mem[mem[64] + 36] = mem[_1911] - _1881
                                            require ext_code.size(HCTAddress)
                                            call HCTAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args this.address, _1930 - _1881
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2334 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if mem[_2334] < _1833:
                                                revert with 'NH{q', 17
                                            if mem[_2334] - _1833 and 10^12 > -1 / mem[_2334] - _1833:
                                                revert with 'NH{q', 17
                                            if not poolInfo[idx].field_1280:
                                                revert with 'NH{q', 18
                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2334]) - (10^12 * _1833) / poolInfo[idx].field_1280):
                                                revert with 'NH{q', 17
                                            poolInfo[idx].field_768 += (10^12 * mem[_2334]) - (10^12 * _1833) / poolInfo[idx].field_1280
                                    poolInfo[idx].field_512 = block.number
                            else:
                                if block.number < startBlock:
                                    revert with 'NH{q', 17
                                if block.number - startBlock < 1:
                                    revert with 'NH{q', 17
                                if not halvingPeriod:
                                    revert with 'NH{q', 18
                                if not block.number + -startBlock - 1 / halvingPeriod:
                                    if block.number < poolInfo[idx].field_512:
                                        revert with 'NH{q', 17
                                    if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                        revert with 'NH{q', 17
                                    if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                        revert with 'NH{q', 17
                                    if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                        if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                            revert with 'NH{q', 17
                                        if not totalAllocPoint:
                                            revert with 'NH{q', 18
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1961 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _1982 = mem[_1961]
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _2069 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _2129 = mem[_2069]
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.maxSupply() with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _2258 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _2337 = mem[_2258]
                                        if _2129 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                            revert with 'NH{q', 17
                                        if _2129 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2258]:
                                            if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2578 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2578] < _1982:
                                                    revert with 'NH{q', 17
                                                if mem[_2578] - _1982 and 10^12 > -1 / mem[_2578] - _1982:
                                                    revert with 'NH{q', 17
                                                if not poolInfo[idx].field_1280:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2578]) - (10^12 * _1982) / poolInfo[idx].field_1280):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2578]) - (10^12 * _1982) / poolInfo[idx].field_1280
                                            else:
                                                mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                require ext_code.size(HCTAddress)
                                                call HCTAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2663 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2663] < _1982:
                                                    revert with 'NH{q', 17
                                                if mem[_2663] - _1982 and 10^12 > -1 / mem[_2663] - _1982:
                                                    revert with 'NH{q', 17
                                                if not poolInfo[idx].field_1280:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2663]) - (10^12 * _1982) / poolInfo[idx].field_1280):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2663]) - (10^12 * _1982) / poolInfo[idx].field_1280
                                        else:
                                            if mem[_2258] < _2129:
                                                revert with 'NH{q', 17
                                            if not mem[_2258] - _2129:
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2769 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2769] < _1982:
                                                    revert with 'NH{q', 17
                                                if mem[_2769] - _1982 and 10^12 > -1 / mem[_2769] - _1982:
                                                    revert with 'NH{q', 17
                                                if not poolInfo[idx].field_1280:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2769]) - (10^12 * _1982) / poolInfo[idx].field_1280):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2769]) - (10^12 * _1982) / poolInfo[idx].field_1280
                                            else:
                                                mem[mem[64] + 36] = mem[_2258] - _2129
                                                require ext_code.size(HCTAddress)
                                                call HCTAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args this.address, _2337 - _2129
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2881 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2881] < _1982:
                                                    revert with 'NH{q', 17
                                                if mem[_2881] - _1982 and 10^12 > -1 / mem[_2881] - _1982:
                                                    revert with 'NH{q', 17
                                                if not poolInfo[idx].field_1280:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2881]) - (10^12 * _1982) / poolInfo[idx].field_1280):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2881]) - (10^12 * _1982) / poolInfo[idx].field_1280
                                        poolInfo[idx].field_512 = block.number
                                else:
                                    if block.number + -startBlock - 1 / halvingPeriod > 255:
                                        revert with 'NH{q', 17
                                    if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                        revert with 'NH{q', 18
                                    if block.number < poolInfo[idx].field_512:
                                        revert with 'NH{q', 17
                                    if block.number - poolInfo[idx].field_512 and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - poolInfo[idx].field_512:
                                        revert with 'NH{q', 17
                                    if 0 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                        revert with 'NH{q', 17
                                    if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                        if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                            revert with 'NH{q', 17
                                        if not totalAllocPoint:
                                            revert with 'NH{q', 18
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _2021 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _2068 = mem[_2021]
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _2218 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _2294 = mem[_2218]
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.maxSupply() with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _2418 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _2461 = mem[_2418]
                                        if _2294 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                            revert with 'NH{q', 17
                                        if _2294 + ((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2418]:
                                            if not (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2765 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2765] < _2068:
                                                    revert with 'NH{q', 17
                                                if mem[_2765] - _2068 and 10^12 > -1 / mem[_2765] - _2068:
                                                    revert with 'NH{q', 17
                                                if not poolInfo[idx].field_1280:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2765]) - (10^12 * _2068) / poolInfo[idx].field_1280):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2765]) - (10^12 * _2068) / poolInfo[idx].field_1280
                                            else:
                                                mem[mem[64] + 36] = (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                require ext_code.size(HCTAddress)
                                                call HCTAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args this.address, (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2877 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2877] < _2068:
                                                    revert with 'NH{q', 17
                                                if mem[_2877] - _2068 and 10^12 > -1 / mem[_2877] - _2068:
                                                    revert with 'NH{q', 17
                                                if not poolInfo[idx].field_1280:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2877]) - (10^12 * _2068) / poolInfo[idx].field_1280):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2877]) - (10^12 * _2068) / poolInfo[idx].field_1280
                                        else:
                                            if mem[_2418] < _2294:
                                                revert with 'NH{q', 17
                                            if not mem[_2418] - _2294:
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2992 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2992] < _2068:
                                                    revert with 'NH{q', 17
                                                if mem[_2992] - _2068 and 10^12 > -1 / mem[_2992] - _2068:
                                                    revert with 'NH{q', 17
                                                if not poolInfo[idx].field_1280:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2992]) - (10^12 * _2068) / poolInfo[idx].field_1280):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2992]) - (10^12 * _2068) / poolInfo[idx].field_1280
                                            else:
                                                mem[mem[64] + 36] = mem[_2418] - _2294
                                                require ext_code.size(HCTAddress)
                                                call HCTAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args this.address, _2461 - _2294
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3070 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_3070] < _2068:
                                                    revert with 'NH{q', 17
                                                if mem[_3070] - _2068 and 10^12 > -1 / mem[_3070] - _2068:
                                                    revert with 'NH{q', 17
                                                if not poolInfo[idx].field_1280:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_3070]) - (10^12 * _2068) / poolInfo[idx].field_1280):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_3070]) - (10^12 * _2068) / poolInfo[idx].field_1280
                                        poolInfo[idx].field_512 = block.number
                    else:
                        if poolInfo[idx].field_512 <= startBlock:
                            if 0 == halvingPeriod:
                                if 0 == halvingPeriod:
                                    if block.number < poolInfo[idx].field_512:
                                        revert with 'NH{q', 17
                                    if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                        revert with 'NH{q', 17
                                    if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                        revert with 'NH{q', 17
                                    if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                        if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                            revert with 'NH{q', 17
                                        if not totalAllocPoint:
                                            revert with 'NH{q', 18
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1820 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _1832 = mem[_1820]
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1865 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _1880 = mem[_1865]
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.maxSupply() with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1910 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _1927 = mem[_1910]
                                        if _1880 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                            revert with 'NH{q', 17
                                        if _1880 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_1910]:
                                            if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2086 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2086] < _1832:
                                                    revert with 'NH{q', 17
                                                if mem[_2086] - _1832 and 10^12 > -1 / mem[_2086] - _1832:
                                                    revert with 'NH{q', 17
                                                if not poolInfo[idx].field_1280:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2086]) - (10^12 * _1832) / poolInfo[idx].field_1280):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2086]) - (10^12 * _1832) / poolInfo[idx].field_1280
                                            else:
                                                mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                require ext_code.size(HCTAddress)
                                                call HCTAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2163 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2163] < _1832:
                                                    revert with 'NH{q', 17
                                                if mem[_2163] - _1832 and 10^12 > -1 / mem[_2163] - _1832:
                                                    revert with 'NH{q', 17
                                                if not poolInfo[idx].field_1280:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2163]) - (10^12 * _1832) / poolInfo[idx].field_1280):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2163]) - (10^12 * _1832) / poolInfo[idx].field_1280
                                        else:
                                            if mem[_1910] < _1880:
                                                revert with 'NH{q', 17
                                            if not mem[_1910] - _1880:
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2248 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2248] < _1832:
                                                    revert with 'NH{q', 17
                                                if mem[_2248] - _1832 and 10^12 > -1 / mem[_2248] - _1832:
                                                    revert with 'NH{q', 17
                                                if not poolInfo[idx].field_1280:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2248]) - (10^12 * _1832) / poolInfo[idx].field_1280):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2248]) - (10^12 * _1832) / poolInfo[idx].field_1280
                                            else:
                                                mem[mem[64] + 36] = mem[_1910] - _1880
                                                require ext_code.size(HCTAddress)
                                                call HCTAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args this.address, _1927 - _1880
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2330 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2330] < _1832:
                                                    revert with 'NH{q', 17
                                                if mem[_2330] - _1832 and 10^12 > -1 / mem[_2330] - _1832:
                                                    revert with 'NH{q', 17
                                                if not poolInfo[idx].field_1280:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2330]) - (10^12 * _1832) / poolInfo[idx].field_1280):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2330]) - (10^12 * _1832) / poolInfo[idx].field_1280
                                        poolInfo[idx].field_512 = block.number
                                else:
                                    if block.number <= startBlock:
                                        if block.number < poolInfo[idx].field_512:
                                            revert with 'NH{q', 17
                                        if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                            revert with 'NH{q', 17
                                        if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                            if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                revert with 'NH{q', 17
                                            if not totalAllocPoint:
                                                revert with 'NH{q', 18
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _1825 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _1840 = mem[_1825]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _1872 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _1890 = mem[_1872]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.maxSupply() with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _1918 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _1942 = mem[_1918]
                                            if _1890 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                revert with 'NH{q', 17
                                            if _1890 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_1918]:
                                                if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2118 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2118] < _1840:
                                                        revert with 'NH{q', 17
                                                    if mem[_2118] - _1840 and 10^12 > -1 / mem[_2118] - _1840:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2118]) - (10^12 * _1840) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2118]) - (10^12 * _1840) / poolInfo[idx].field_1280
                                                else:
                                                    mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2208 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2208] < _1840:
                                                        revert with 'NH{q', 17
                                                    if mem[_2208] - _1840 and 10^12 > -1 / mem[_2208] - _1840:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2208]) - (10^12 * _1840) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2208]) - (10^12 * _1840) / poolInfo[idx].field_1280
                                            else:
                                                if mem[_1918] < _1890:
                                                    revert with 'NH{q', 17
                                                if not mem[_1918] - _1890:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2288 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2288] < _1840:
                                                        revert with 'NH{q', 17
                                                    if mem[_2288] - _1840 and 10^12 > -1 / mem[_2288] - _1840:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2288]) - (10^12 * _1840) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2288]) - (10^12 * _1840) / poolInfo[idx].field_1280
                                                else:
                                                    mem[mem[64] + 36] = mem[_1918] - _1890
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, _1942 - _1890
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2371 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2371] < _1840:
                                                        revert with 'NH{q', 17
                                                    if mem[_2371] - _1840 and 10^12 > -1 / mem[_2371] - _1840:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2371]) - (10^12 * _1840) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2371]) - (10^12 * _1840) / poolInfo[idx].field_1280
                                            poolInfo[idx].field_512 = block.number
                                    else:
                                        if block.number < startBlock:
                                            revert with 'NH{q', 17
                                        if block.number - startBlock < 1:
                                            revert with 'NH{q', 17
                                        if not halvingPeriod:
                                            revert with 'NH{q', 18
                                        if not block.number + -startBlock - 1 / halvingPeriod:
                                            if block.number < poolInfo[idx].field_512:
                                                revert with 'NH{q', 17
                                            if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                                revert with 'NH{q', 17
                                            if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                                if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _1966 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _1996 = mem[_1966]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2085 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _2161 = mem[_2085]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2291 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _2374 = mem[_2291]
                                                if _2161 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _2161 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2291]:
                                                    if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2598 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2598] < _1996:
                                                            revert with 'NH{q', 17
                                                        if mem[_2598] - _1996 and 10^12 > -1 / mem[_2598] - _1996:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2598]) - (10^12 * _1996) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2598]) - (10^12 * _1996) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2704 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2704] < _1996:
                                                            revert with 'NH{q', 17
                                                        if mem[_2704] - _1996 and 10^12 > -1 / mem[_2704] - _1996:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2704]) - (10^12 * _1996) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2704]) - (10^12 * _1996) / poolInfo[idx].field_1280
                                                else:
                                                    if mem[_2291] < _2161:
                                                        revert with 'NH{q', 17
                                                    if not mem[_2291] - _2161:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2804 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2804] < _1996:
                                                            revert with 'NH{q', 17
                                                        if mem[_2804] - _1996 and 10^12 > -1 / mem[_2804] - _1996:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2804]) - (10^12 * _1996) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2804]) - (10^12 * _1996) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = mem[_2291] - _2161
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _2374 - _2161
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2929 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2929] < _1996:
                                                            revert with 'NH{q', 17
                                                        if mem[_2929] - _1996 and 10^12 > -1 / mem[_2929] - _1996:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2929]) - (10^12 * _1996) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2929]) - (10^12 * _1996) / poolInfo[idx].field_1280
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                revert with 'NH{q', 17
                                            if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                revert with 'NH{q', 18
                                            if block.number < poolInfo[idx].field_512:
                                                revert with 'NH{q', 17
                                            if block.number - poolInfo[idx].field_512 and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - poolInfo[idx].field_512:
                                                revert with 'NH{q', 17
                                            if 0 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                revert with 'NH{q', 17
                                            if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2036 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _2084 = mem[_2036]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2246 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _2328 = mem[_2246]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2437 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _2478 = mem[_2437]
                                                if _2328 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _2328 + ((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2437]:
                                                    if not (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2800 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2800] < _2084:
                                                            revert with 'NH{q', 17
                                                        if mem[_2800] - _2084 and 10^12 > -1 / mem[_2800] - _2084:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2800]) - (10^12 * _2084) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2800]) - (10^12 * _2084) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2925 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2925] < _2084:
                                                            revert with 'NH{q', 17
                                                        if mem[_2925] - _2084 and 10^12 > -1 / mem[_2925] - _2084:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2925]) - (10^12 * _2084) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2925]) - (10^12 * _2084) / poolInfo[idx].field_1280
                                                else:
                                                    if mem[_2437] < _2328:
                                                        revert with 'NH{q', 17
                                                    if not mem[_2437] - _2328:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3023 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_3023] < _2084:
                                                            revert with 'NH{q', 17
                                                        if mem[_3023] - _2084 and 10^12 > -1 / mem[_3023] - _2084:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_3023]) - (10^12 * _2084) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_3023]) - (10^12 * _2084) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = mem[_2437] - _2328
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _2478 - _2328
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3092 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_3092] < _2084:
                                                            revert with 'NH{q', 17
                                                        if mem[_3092] - _2084 and 10^12 > -1 / mem[_3092] - _2084:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_3092]) - (10^12 * _2084) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_3092]) - (10^12 * _2084) / poolInfo[idx].field_1280
                                                poolInfo[idx].field_512 = block.number
                            else:
                                if block.number <= startBlock:
                                    if 0 == halvingPeriod:
                                        if block.number < poolInfo[idx].field_512:
                                            revert with 'NH{q', 17
                                        if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                            revert with 'NH{q', 17
                                        if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                            if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                revert with 'NH{q', 17
                                            if not totalAllocPoint:
                                                revert with 'NH{q', 18
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _1824 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _1839 = mem[_1824]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _1871 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _1889 = mem[_1871]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.maxSupply() with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _1917 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _1939 = mem[_1917]
                                            if _1889 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                revert with 'NH{q', 17
                                            if _1889 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_1917]:
                                                if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2114 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2114] < _1839:
                                                        revert with 'NH{q', 17
                                                    if mem[_2114] - _1839 and 10^12 > -1 / mem[_2114] - _1839:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2114]) - (10^12 * _1839) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2114]) - (10^12 * _1839) / poolInfo[idx].field_1280
                                                else:
                                                    mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2201 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2201] < _1839:
                                                        revert with 'NH{q', 17
                                                    if mem[_2201] - _1839 and 10^12 > -1 / mem[_2201] - _1839:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2201]) - (10^12 * _1839) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2201]) - (10^12 * _1839) / poolInfo[idx].field_1280
                                            else:
                                                if mem[_1917] < _1889:
                                                    revert with 'NH{q', 17
                                                if not mem[_1917] - _1889:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2283 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2283] < _1839:
                                                        revert with 'NH{q', 17
                                                    if mem[_2283] - _1839 and 10^12 > -1 / mem[_2283] - _1839:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2283]) - (10^12 * _1839) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2283]) - (10^12 * _1839) / poolInfo[idx].field_1280
                                                else:
                                                    mem[mem[64] + 36] = mem[_1917] - _1889
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, _1939 - _1889
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2368 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2368] < _1839:
                                                        revert with 'NH{q', 17
                                                    if mem[_2368] - _1839 and 10^12 > -1 / mem[_2368] - _1839:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2368]) - (10^12 * _1839) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2368]) - (10^12 * _1839) / poolInfo[idx].field_1280
                                            poolInfo[idx].field_512 = block.number
                                    else:
                                        if block.number <= startBlock:
                                            if block.number < poolInfo[idx].field_512:
                                                revert with 'NH{q', 17
                                            if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                                revert with 'NH{q', 17
                                            if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                                if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _1831 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _1847 = mem[_1831]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _1879 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _1899 = mem[_1879]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _1926 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _1953 = mem[_1926]
                                                if _1899 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _1899 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_1926]:
                                                    if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2151 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2151] < _1847:
                                                            revert with 'NH{q', 17
                                                        if mem[_2151] - _1847 and 10^12 > -1 / mem[_2151] - _1847:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2151]) - (10^12 * _1847) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2151]) - (10^12 * _1847) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2239 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2239] < _1847:
                                                            revert with 'NH{q', 17
                                                        if mem[_2239] - _1847 and 10^12 > -1 / mem[_2239] - _1847:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2239]) - (10^12 * _1847) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2239]) - (10^12 * _1847) / poolInfo[idx].field_1280
                                                else:
                                                    if mem[_1926] < _1899:
                                                        revert with 'NH{q', 17
                                                    if not mem[_1926] - _1899:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2323 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2323] < _1847:
                                                            revert with 'NH{q', 17
                                                        if mem[_2323] - _1847 and 10^12 > -1 / mem[_2323] - _1847:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2323]) - (10^12 * _1847) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2323]) - (10^12 * _1847) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = mem[_1926] - _1899
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _1953 - _1899
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2404 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2404] < _1847:
                                                            revert with 'NH{q', 17
                                                        if mem[_2404] - _1847 and 10^12 > -1 / mem[_2404] - _1847:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2404]) - (10^12 * _1847) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2404]) - (10^12 * _1847) / poolInfo[idx].field_1280
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number < startBlock:
                                                revert with 'NH{q', 17
                                            if block.number - startBlock < 1:
                                                revert with 'NH{q', 17
                                            if not halvingPeriod:
                                                revert with 'NH{q', 18
                                            if not block.number + -startBlock - 1 / halvingPeriod:
                                                if block.number < poolInfo[idx].field_512:
                                                    revert with 'NH{q', 17
                                                if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                                    revert with 'NH{q', 17
                                                if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                                    if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _1976 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2012 = mem[_1976]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2113 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2199 = mem[_2113]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2326 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2407 = mem[_2326]
                                                    if _2199 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _2199 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2326]:
                                                        if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2633 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2633] < _2012:
                                                                revert with 'NH{q', 17
                                                            if mem[_2633] - _2012 and 10^12 > -1 / mem[_2633] - _2012:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2633]) - (10^12 * _2012) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2633]) - (10^12 * _2012) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2743 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2743] < _2012:
                                                                revert with 'NH{q', 17
                                                            if mem[_2743] - _2012 and 10^12 > -1 / mem[_2743] - _2012:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2743]) - (10^12 * _2012) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2743]) - (10^12 * _2012) / poolInfo[idx].field_1280
                                                    else:
                                                        if mem[_2326] < _2199:
                                                            revert with 'NH{q', 17
                                                        if not mem[_2326] - _2199:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2857 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2857] < _2012:
                                                                revert with 'NH{q', 17
                                                            if mem[_2857] - _2012 and 10^12 > -1 / mem[_2857] - _2012:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2857]) - (10^12 * _2012) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2857]) - (10^12 * _2012) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = mem[_2326] - _2199
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _2407 - _2199
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2976 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2976] < _2012:
                                                                revert with 'NH{q', 17
                                                            if mem[_2976] - _2012 and 10^12 > -1 / mem[_2976] - _2012:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2976]) - (10^12 * _2012) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2976]) - (10^12 * _2012) / poolInfo[idx].field_1280
                                                    poolInfo[idx].field_512 = block.number
                                            else:
                                                if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                    revert with 'NH{q', 17
                                                if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                    revert with 'NH{q', 18
                                                if block.number < poolInfo[idx].field_512:
                                                    revert with 'NH{q', 17
                                                if block.number - poolInfo[idx].field_512 and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - poolInfo[idx].field_512:
                                                    revert with 'NH{q', 17
                                                if 0 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                    revert with 'NH{q', 17
                                                if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                    if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2056 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2112 = mem[_2056]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2281 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2366 = mem[_2281]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2457 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2499 = mem[_2457]
                                                    if _2366 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _2366 + ((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2457]:
                                                        if not (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2853 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2853] < _2112:
                                                                revert with 'NH{q', 17
                                                            if mem[_2853] - _2112 and 10^12 > -1 / mem[_2853] - _2112:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2853]) - (10^12 * _2112) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2853]) - (10^12 * _2112) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2972 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2972] < _2112:
                                                                revert with 'NH{q', 17
                                                            if mem[_2972] - _2112 and 10^12 > -1 / mem[_2972] - _2112:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2972]) - (10^12 * _2112) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2972]) - (10^12 * _2112) / poolInfo[idx].field_1280
                                                    else:
                                                        if mem[_2457] < _2366:
                                                            revert with 'NH{q', 17
                                                        if not mem[_2457] - _2366:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _3060 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_3060] < _2112:
                                                                revert with 'NH{q', 17
                                                            if mem[_3060] - _2112 and 10^12 > -1 / mem[_3060] - _2112:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_3060]) - (10^12 * _2112) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_3060]) - (10^12 * _2112) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = mem[_2457] - _2366
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _2499 - _2366
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _3120 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_3120] < _2112:
                                                                revert with 'NH{q', 17
                                                            if mem[_3120] - _2112 and 10^12 > -1 / mem[_3120] - _2112:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_3120]) - (10^12 * _2112) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_3120]) - (10^12 * _2112) / poolInfo[idx].field_1280
                                                    poolInfo[idx].field_512 = block.number
                                else:
                                    if block.number < startBlock:
                                        revert with 'NH{q', 17
                                    if block.number - startBlock < 1:
                                        revert with 'NH{q', 17
                                    if not halvingPeriod:
                                        revert with 'NH{q', 18
                                    s = 0
                                    t = 0
                                    u = poolInfo[idx].field_512
                                    while s < block.number + -startBlock - 1 / halvingPeriod:
                                        if s == -1:
                                            revert with 'NH{q', 17
                                        if s + 1 and halvingPeriod > -1 / s + 1:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) > !startBlock:
                                            revert with 'NH{q', 17
                                        if 0 == halvingPeriod:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) + startBlock <= startBlock:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) + startBlock < startBlock:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) < 1:
                                            revert with 'NH{q', 17
                                        if not halvingPeriod:
                                            revert with 'NH{q', 18
                                        if not halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > 255:
                                            revert with 'NH{q', 17
                                        if not 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                            revert with 'NH{q', 18
                                        if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                            revert with 'NH{q', 17
                                        if t > !((halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)):
                                            revert with 'NH{q', 17
                                        s = s + 1
                                        t = t + (halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)
                                        u = halvingPeriod + (s * halvingPeriod) + startBlock
                                        continue 
                                    if 0 == halvingPeriod:
                                        if block.number < u:
                                            revert with 'NH{q', 17
                                        if block.number - u and hCTPerBlock > -1 / block.number - u:
                                            revert with 'NH{q', 17
                                        if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                revert with 'NH{q', 17
                                            if not totalAllocPoint:
                                                revert with 'NH{q', 18
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3635 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3651 = mem[_3635]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3699 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3715 = mem[_3699]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.maxSupply() with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3763 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3779 = mem[_3763]
                                            if _3715 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                revert with 'NH{q', 17
                                            if _3715 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3763]:
                                                if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3949 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_3949] < _3651:
                                                        revert with 'NH{q', 17
                                                    if mem[_3949] - _3651 and 10^12 > -1 / mem[_3949] - _3651:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_3949]) - (10^12 * _3651) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_3949]) - (10^12 * _3651) / poolInfo[idx].field_1280
                                                else:
                                                    mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4049 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4049] < _3651:
                                                        revert with 'NH{q', 17
                                                    if mem[_4049] - _3651 and 10^12 > -1 / mem[_4049] - _3651:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4049]) - (10^12 * _3651) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4049]) - (10^12 * _3651) / poolInfo[idx].field_1280
                                            else:
                                                if mem[_3763] < _3715:
                                                    revert with 'NH{q', 17
                                                if not mem[_3763] - _3715:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4149 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4149] < _3651:
                                                        revert with 'NH{q', 17
                                                    if mem[_4149] - _3651 and 10^12 > -1 / mem[_4149] - _3651:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4149]) - (10^12 * _3651) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4149]) - (10^12 * _3651) / poolInfo[idx].field_1280
                                                else:
                                                    mem[mem[64] + 36] = mem[_3763] - _3715
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, _3779 - _3715
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4221 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4221] < _3651:
                                                        revert with 'NH{q', 17
                                                    if mem[_4221] - _3651 and 10^12 > -1 / mem[_4221] - _3651:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4221]) - (10^12 * _3651) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4221]) - (10^12 * _3651) / poolInfo[idx].field_1280
                                            poolInfo[idx].field_512 = block.number
                                    else:
                                        if block.number <= startBlock:
                                            if block.number < u:
                                                revert with 'NH{q', 17
                                            if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                revert with 'NH{q', 17
                                            if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3643 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3659 = mem[_3643]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3707 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3731 = mem[_3707]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3771 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3795 = mem[_3771]
                                                if _3731 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _3731 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3771]:
                                                    if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3987 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_3987] < _3659:
                                                            revert with 'NH{q', 17
                                                        if mem[_3987] - _3659 and 10^12 > -1 / mem[_3987] - _3659:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_3987]) - (10^12 * _3659) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_3987]) - (10^12 * _3659) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4104 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4104] < _3659:
                                                            revert with 'NH{q', 17
                                                        if mem[_4104] - _3659 and 10^12 > -1 / mem[_4104] - _3659:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4104]) - (10^12 * _3659) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4104]) - (10^12 * _3659) / poolInfo[idx].field_1280
                                                else:
                                                    if mem[_3771] < _3731:
                                                        revert with 'NH{q', 17
                                                    if not mem[_3771] - _3731:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4188 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4188] < _3659:
                                                            revert with 'NH{q', 17
                                                        if mem[_4188] - _3659 and 10^12 > -1 / mem[_4188] - _3659:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4188]) - (10^12 * _3659) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4188]) - (10^12 * _3659) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = mem[_3771] - _3731
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _3795 - _3731
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4252 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4252] < _3659:
                                                            revert with 'NH{q', 17
                                                        if mem[_4252] - _3659 and 10^12 > -1 / mem[_4252] - _3659:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4252]) - (10^12 * _3659) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4252]) - (10^12 * _3659) / poolInfo[idx].field_1280
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number < startBlock:
                                                revert with 'NH{q', 17
                                            if block.number - startBlock < 1:
                                                revert with 'NH{q', 17
                                            if not halvingPeriod:
                                                revert with 'NH{q', 18
                                            if not block.number + -startBlock - 1 / halvingPeriod:
                                                if block.number < u:
                                                    revert with 'NH{q', 17
                                                if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                    revert with 'NH{q', 17
                                                if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                    if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3811 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3829 = mem[_3811]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3948 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4047 = mem[_3948]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4191 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4255 = mem[_4191]
                                                    if _4047 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _4047 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4191]:
                                                        if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4347 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4347] < _3829:
                                                                revert with 'NH{q', 17
                                                            if mem[_4347] - _3829 and 10^12 > -1 / mem[_4347] - _3829:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4347]) - (10^12 * _3829) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4347]) - (10^12 * _3829) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4418 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4418] < _3829:
                                                                revert with 'NH{q', 17
                                                            if mem[_4418] - _3829 and 10^12 > -1 / mem[_4418] - _3829:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4418]) - (10^12 * _3829) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4418]) - (10^12 * _3829) / poolInfo[idx].field_1280
                                                    else:
                                                        if mem[_4191] < _4047:
                                                            revert with 'NH{q', 17
                                                        if not mem[_4191] - _4047:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4471 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4471] < _3829:
                                                                revert with 'NH{q', 17
                                                            if mem[_4471] - _3829 and 10^12 > -1 / mem[_4471] - _3829:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4471]) - (10^12 * _3829) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4471]) - (10^12 * _3829) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = mem[_4191] - _4047
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _4255 - _4047
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4540 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4540] < _3829:
                                                                revert with 'NH{q', 17
                                                            if mem[_4540] - _3829 and 10^12 > -1 / mem[_4540] - _3829:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4540]) - (10^12 * _3829) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4540]) - (10^12 * _3829) / poolInfo[idx].field_1280
                                                    poolInfo[idx].field_512 = block.number
                                            else:
                                                if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                    revert with 'NH{q', 17
                                                if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                    revert with 'NH{q', 18
                                                if block.number < u:
                                                    revert with 'NH{q', 17
                                                if block.number - u and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - u:
                                                    revert with 'NH{q', 17
                                                if t > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                    revert with 'NH{q', 17
                                                if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                    if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3885 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3947 = mem[_3885]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4147 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4219 = mem[_4147]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4288 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4299 = mem[_4288]
                                                    if _4219 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _4219 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4288]:
                                                        if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4467 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4467] < _3947:
                                                                revert with 'NH{q', 17
                                                            if mem[_4467] - _3947 and 10^12 > -1 / mem[_4467] - _3947:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4467]) - (10^12 * _3947) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4467]) - (10^12 * _3947) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4536 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4536] < _3947:
                                                                revert with 'NH{q', 17
                                                            if mem[_4536] - _3947 and 10^12 > -1 / mem[_4536] - _3947:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4536]) - (10^12 * _3947) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4536]) - (10^12 * _3947) / poolInfo[idx].field_1280
                                                    else:
                                                        if mem[_4288] < _4219:
                                                            revert with 'NH{q', 17
                                                        if not mem[_4288] - _4219:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4580 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4580] < _3947:
                                                                revert with 'NH{q', 17
                                                            if mem[_4580] - _3947 and 10^12 > -1 / mem[_4580] - _3947:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4580]) - (10^12 * _3947) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4580]) - (10^12 * _3947) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = mem[_4288] - _4219
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _4299 - _4219
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4608 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4608] < _3947:
                                                                revert with 'NH{q', 17
                                                            if mem[_4608] - _3947 and 10^12 > -1 / mem[_4608] - _3947:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4608]) - (10^12 * _3947) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4608]) - (10^12 * _3947) / poolInfo[idx].field_1280
                                                    poolInfo[idx].field_512 = block.number
                        else:
                            if poolInfo[idx].field_512 < startBlock:
                                revert with 'NH{q', 17
                            if poolInfo[idx].field_512 - startBlock < 1:
                                revert with 'NH{q', 17
                            if not halvingPeriod:
                                revert with 'NH{q', 18
                            if 0 == halvingPeriod:
                                s = poolInfo[idx].field_512 + -startBlock - 1 / halvingPeriod
                                t = 0
                                u = poolInfo[idx].field_512
                                while s < 0:
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    if s + 1 and halvingPeriod > -1 / s + 1:
                                        revert with 'NH{q', 17
                                    if halvingPeriod + (s * halvingPeriod) > !startBlock:
                                        revert with 'NH{q', 17
                                    if 0 == halvingPeriod:
                                        if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                            revert with 'NH{q', 17
                                        if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        s = s + 1
                                        t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                        u = halvingPeriod + (s * halvingPeriod) + startBlock
                                        continue 
                                    if halvingPeriod + (s * halvingPeriod) + startBlock <= startBlock:
                                        if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                            revert with 'NH{q', 17
                                        if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        s = s + 1
                                        t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                        u = halvingPeriod + (s * halvingPeriod) + startBlock
                                        continue 
                                    if halvingPeriod + (s * halvingPeriod) + startBlock < startBlock:
                                        revert with 'NH{q', 17
                                    if halvingPeriod + (s * halvingPeriod) < 1:
                                        revert with 'NH{q', 17
                                    if not halvingPeriod:
                                        revert with 'NH{q', 18
                                    if not halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                        if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                            revert with 'NH{q', 17
                                        if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        s = s + 1
                                        t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                        u = halvingPeriod + (s * halvingPeriod) + startBlock
                                        continue 
                                    if halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > 255:
                                        revert with 'NH{q', 17
                                    if not 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                        revert with 'NH{q', 18
                                    if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                        revert with 'NH{q', 17
                                    if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                        revert with 'NH{q', 17
                                    if t > !((halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)):
                                        revert with 'NH{q', 17
                                    s = s + 1
                                    t = t + (halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)
                                    u = halvingPeriod + (s * halvingPeriod) + startBlock
                                    continue 
                                if 0 == halvingPeriod:
                                    if block.number < u:
                                        revert with 'NH{q', 17
                                    if block.number - u and hCTPerBlock > -1 / block.number - u:
                                        revert with 'NH{q', 17
                                    if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                        revert with 'NH{q', 17
                                    if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                        if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                            revert with 'NH{q', 17
                                        if not totalAllocPoint:
                                            revert with 'NH{q', 18
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3638 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _3654 = mem[_3638]
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3702 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _3718 = mem[_3702]
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.maxSupply() with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3766 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _3782 = mem[_3766]
                                        if _3718 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                            revert with 'NH{q', 17
                                        if _3718 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3766]:
                                            if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3964 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_3964] < _3654:
                                                    revert with 'NH{q', 17
                                                if mem[_3964] - _3654 and 10^12 > -1 / mem[_3964] - _3654:
                                                    revert with 'NH{q', 17
                                                if not poolInfo[idx].field_1280:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_3964]) - (10^12 * _3654) / poolInfo[idx].field_1280):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_3964]) - (10^12 * _3654) / poolInfo[idx].field_1280
                                            else:
                                                mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                require ext_code.size(HCTAddress)
                                                call HCTAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _4076 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_4076] < _3654:
                                                    revert with 'NH{q', 17
                                                if mem[_4076] - _3654 and 10^12 > -1 / mem[_4076] - _3654:
                                                    revert with 'NH{q', 17
                                                if not poolInfo[idx].field_1280:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4076]) - (10^12 * _3654) / poolInfo[idx].field_1280):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_4076]) - (10^12 * _3654) / poolInfo[idx].field_1280
                                        else:
                                            if mem[_3766] < _3718:
                                                revert with 'NH{q', 17
                                            if not mem[_3766] - _3718:
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _4164 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_4164] < _3654:
                                                    revert with 'NH{q', 17
                                                if mem[_4164] - _3654 and 10^12 > -1 / mem[_4164] - _3654:
                                                    revert with 'NH{q', 17
                                                if not poolInfo[idx].field_1280:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4164]) - (10^12 * _3654) / poolInfo[idx].field_1280):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_4164]) - (10^12 * _3654) / poolInfo[idx].field_1280
                                            else:
                                                mem[mem[64] + 36] = mem[_3766] - _3718
                                                require ext_code.size(HCTAddress)
                                                call HCTAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args this.address, _3782 - _3718
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _4230 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_4230] < _3654:
                                                    revert with 'NH{q', 17
                                                if mem[_4230] - _3654 and 10^12 > -1 / mem[_4230] - _3654:
                                                    revert with 'NH{q', 17
                                                if not poolInfo[idx].field_1280:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4230]) - (10^12 * _3654) / poolInfo[idx].field_1280):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_4230]) - (10^12 * _3654) / poolInfo[idx].field_1280
                                        poolInfo[idx].field_512 = block.number
                                else:
                                    if block.number <= startBlock:
                                        if block.number < u:
                                            revert with 'NH{q', 17
                                        if block.number - u and hCTPerBlock > -1 / block.number - u:
                                            revert with 'NH{q', 17
                                        if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                revert with 'NH{q', 17
                                            if not totalAllocPoint:
                                                revert with 'NH{q', 18
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3646 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3662 = mem[_3646]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3710 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3740 = mem[_3710]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.maxSupply() with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3774 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3804 = mem[_3774]
                                            if _3740 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                revert with 'NH{q', 17
                                            if _3740 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3774]:
                                                if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4002 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4002] < _3662:
                                                        revert with 'NH{q', 17
                                                    if mem[_4002] - _3662 and 10^12 > -1 / mem[_4002] - _3662:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4002]) - (10^12 * _3662) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4002]) - (10^12 * _3662) / poolInfo[idx].field_1280
                                                else:
                                                    mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4122 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4122] < _3662:
                                                        revert with 'NH{q', 17
                                                    if mem[_4122] - _3662 and 10^12 > -1 / mem[_4122] - _3662:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4122]) - (10^12 * _3662) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4122]) - (10^12 * _3662) / poolInfo[idx].field_1280
                                            else:
                                                if mem[_3774] < _3740:
                                                    revert with 'NH{q', 17
                                                if not mem[_3774] - _3740:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4203 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4203] < _3662:
                                                        revert with 'NH{q', 17
                                                    if mem[_4203] - _3662 and 10^12 > -1 / mem[_4203] - _3662:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4203]) - (10^12 * _3662) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4203]) - (10^12 * _3662) / poolInfo[idx].field_1280
                                                else:
                                                    mem[mem[64] + 36] = mem[_3774] - _3740
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, _3804 - _3740
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4267 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4267] < _3662:
                                                        revert with 'NH{q', 17
                                                    if mem[_4267] - _3662 and 10^12 > -1 / mem[_4267] - _3662:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4267]) - (10^12 * _3662) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4267]) - (10^12 * _3662) / poolInfo[idx].field_1280
                                            poolInfo[idx].field_512 = block.number
                                    else:
                                        if block.number < startBlock:
                                            revert with 'NH{q', 17
                                        if block.number - startBlock < 1:
                                            revert with 'NH{q', 17
                                        if not halvingPeriod:
                                            revert with 'NH{q', 18
                                        if not block.number + -startBlock - 1 / halvingPeriod:
                                            if block.number < u:
                                                revert with 'NH{q', 17
                                            if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                revert with 'NH{q', 17
                                            if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3814 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3838 = mem[_3814]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3963 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _4074 = mem[_3963]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _4206 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _4270 = mem[_4206]
                                                if _4074 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _4074 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4206]:
                                                    if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4356 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4356] < _3838:
                                                            revert with 'NH{q', 17
                                                        if mem[_4356] - _3838 and 10^12 > -1 / mem[_4356] - _3838:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4356]) - (10^12 * _3838) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4356]) - (10^12 * _3838) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4436 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4436] < _3838:
                                                            revert with 'NH{q', 17
                                                        if mem[_4436] - _3838 and 10^12 > -1 / mem[_4436] - _3838:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4436]) - (10^12 * _3838) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4436]) - (10^12 * _3838) / poolInfo[idx].field_1280
                                                else:
                                                    if mem[_4206] < _4074:
                                                        revert with 'NH{q', 17
                                                    if not mem[_4206] - _4074:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4492 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4492] < _3838:
                                                            revert with 'NH{q', 17
                                                        if mem[_4492] - _3838 and 10^12 > -1 / mem[_4492] - _3838:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4492]) - (10^12 * _3838) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4492]) - (10^12 * _3838) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = mem[_4206] - _4074
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _4270 - _4074
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4558 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4558] < _3838:
                                                            revert with 'NH{q', 17
                                                        if mem[_4558] - _3838 and 10^12 > -1 / mem[_4558] - _3838:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4558]) - (10^12 * _3838) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4558]) - (10^12 * _3838) / poolInfo[idx].field_1280
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                revert with 'NH{q', 17
                                            if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                revert with 'NH{q', 18
                                            if block.number < u:
                                                revert with 'NH{q', 17
                                            if block.number - u and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - u:
                                                revert with 'NH{q', 17
                                            if t > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                revert with 'NH{q', 17
                                            if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3906 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3962 = mem[_3906]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _4162 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _4228 = mem[_4162]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _4294 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _4302 = mem[_4294]
                                                if _4228 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _4228 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4294]:
                                                    if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4488 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4488] < _3962:
                                                            revert with 'NH{q', 17
                                                        if mem[_4488] - _3962 and 10^12 > -1 / mem[_4488] - _3962:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4488]) - (10^12 * _3962) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4488]) - (10^12 * _3962) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4554 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4554] < _3962:
                                                            revert with 'NH{q', 17
                                                        if mem[_4554] - _3962 and 10^12 > -1 / mem[_4554] - _3962:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4554]) - (10^12 * _3962) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4554]) - (10^12 * _3962) / poolInfo[idx].field_1280
                                                else:
                                                    if mem[_4294] < _4228:
                                                        revert with 'NH{q', 17
                                                    if not mem[_4294] - _4228:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4595 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4595] < _3962:
                                                            revert with 'NH{q', 17
                                                        if mem[_4595] - _3962 and 10^12 > -1 / mem[_4595] - _3962:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4595]) - (10^12 * _3962) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4595]) - (10^12 * _3962) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = mem[_4294] - _4228
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _4302 - _4228
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4614 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4614] < _3962:
                                                            revert with 'NH{q', 17
                                                        if mem[_4614] - _3962 and 10^12 > -1 / mem[_4614] - _3962:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4614]) - (10^12 * _3962) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4614]) - (10^12 * _3962) / poolInfo[idx].field_1280
                                                poolInfo[idx].field_512 = block.number
                            else:
                                if block.number <= startBlock:
                                    s = poolInfo[idx].field_512 + -startBlock - 1 / halvingPeriod
                                    t = 0
                                    u = poolInfo[idx].field_512
                                    while s < 0:
                                        if s == -1:
                                            revert with 'NH{q', 17
                                        if s + 1 and halvingPeriod > -1 / s + 1:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) > !startBlock:
                                            revert with 'NH{q', 17
                                        if 0 == halvingPeriod:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) + startBlock <= startBlock:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) + startBlock < startBlock:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) < 1:
                                            revert with 'NH{q', 17
                                        if not halvingPeriod:
                                            revert with 'NH{q', 18
                                        if not halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > 255:
                                            revert with 'NH{q', 17
                                        if not 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                            revert with 'NH{q', 18
                                        if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                            revert with 'NH{q', 17
                                        if t > !((halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)):
                                            revert with 'NH{q', 17
                                        s = s + 1
                                        t = t + (halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)
                                        u = halvingPeriod + (s * halvingPeriod) + startBlock
                                        continue 
                                    if 0 == halvingPeriod:
                                        if block.number < u:
                                            revert with 'NH{q', 17
                                        if block.number - u and hCTPerBlock > -1 / block.number - u:
                                            revert with 'NH{q', 17
                                        if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                revert with 'NH{q', 17
                                            if not totalAllocPoint:
                                                revert with 'NH{q', 18
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3636 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3652 = mem[_3636]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3700 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3716 = mem[_3700]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.maxSupply() with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3764 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3780 = mem[_3764]
                                            if _3716 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                revert with 'NH{q', 17
                                            if _3716 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3764]:
                                                if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3954 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_3954] < _3652:
                                                        revert with 'NH{q', 17
                                                    if mem[_3954] - _3652 and 10^12 > -1 / mem[_3954] - _3652:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_3954]) - (10^12 * _3652) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_3954]) - (10^12 * _3652) / poolInfo[idx].field_1280
                                                else:
                                                    mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4058 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4058] < _3652:
                                                        revert with 'NH{q', 17
                                                    if mem[_4058] - _3652 and 10^12 > -1 / mem[_4058] - _3652:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4058]) - (10^12 * _3652) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4058]) - (10^12 * _3652) / poolInfo[idx].field_1280
                                            else:
                                                if mem[_3764] < _3716:
                                                    revert with 'NH{q', 17
                                                if not mem[_3764] - _3716:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4154 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4154] < _3652:
                                                        revert with 'NH{q', 17
                                                    if mem[_4154] - _3652 and 10^12 > -1 / mem[_4154] - _3652:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4154]) - (10^12 * _3652) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4154]) - (10^12 * _3652) / poolInfo[idx].field_1280
                                                else:
                                                    mem[mem[64] + 36] = mem[_3764] - _3716
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, _3780 - _3716
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4224 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4224] < _3652:
                                                        revert with 'NH{q', 17
                                                    if mem[_4224] - _3652 and 10^12 > -1 / mem[_4224] - _3652:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4224]) - (10^12 * _3652) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4224]) - (10^12 * _3652) / poolInfo[idx].field_1280
                                            poolInfo[idx].field_512 = block.number
                                    else:
                                        if block.number <= startBlock:
                                            if block.number < u:
                                                revert with 'NH{q', 17
                                            if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                revert with 'NH{q', 17
                                            if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3644 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3660 = mem[_3644]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3708 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3734 = mem[_3708]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3772 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3798 = mem[_3772]
                                                if _3734 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _3734 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3772]:
                                                    if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3992 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_3992] < _3660:
                                                            revert with 'NH{q', 17
                                                        if mem[_3992] - _3660 and 10^12 > -1 / mem[_3992] - _3660:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_3992]) - (10^12 * _3660) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_3992]) - (10^12 * _3660) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4110 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4110] < _3660:
                                                            revert with 'NH{q', 17
                                                        if mem[_4110] - _3660 and 10^12 > -1 / mem[_4110] - _3660:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4110]) - (10^12 * _3660) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4110]) - (10^12 * _3660) / poolInfo[idx].field_1280
                                                else:
                                                    if mem[_3772] < _3734:
                                                        revert with 'NH{q', 17
                                                    if not mem[_3772] - _3734:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4193 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4193] < _3660:
                                                            revert with 'NH{q', 17
                                                        if mem[_4193] - _3660 and 10^12 > -1 / mem[_4193] - _3660:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4193]) - (10^12 * _3660) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4193]) - (10^12 * _3660) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = mem[_3772] - _3734
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _3798 - _3734
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4257 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4257] < _3660:
                                                            revert with 'NH{q', 17
                                                        if mem[_4257] - _3660 and 10^12 > -1 / mem[_4257] - _3660:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4257]) - (10^12 * _3660) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4257]) - (10^12 * _3660) / poolInfo[idx].field_1280
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number < startBlock:
                                                revert with 'NH{q', 17
                                            if block.number - startBlock < 1:
                                                revert with 'NH{q', 17
                                            if not halvingPeriod:
                                                revert with 'NH{q', 18
                                            if not block.number + -startBlock - 1 / halvingPeriod:
                                                if block.number < u:
                                                    revert with 'NH{q', 17
                                                if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                    revert with 'NH{q', 17
                                                if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                    if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3812 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3832 = mem[_3812]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3953 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4056 = mem[_3953]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4196 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4260 = mem[_4196]
                                                    if _4056 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _4056 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4196]:
                                                        if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4350 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4350] < _3832:
                                                                revert with 'NH{q', 17
                                                            if mem[_4350] - _3832 and 10^12 > -1 / mem[_4350] - _3832:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4350]) - (10^12 * _3832) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4350]) - (10^12 * _3832) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4424 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4424] < _3832:
                                                                revert with 'NH{q', 17
                                                            if mem[_4424] - _3832 and 10^12 > -1 / mem[_4424] - _3832:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4424]) - (10^12 * _3832) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4424]) - (10^12 * _3832) / poolInfo[idx].field_1280
                                                    else:
                                                        if mem[_4196] < _4056:
                                                            revert with 'NH{q', 17
                                                        if not mem[_4196] - _4056:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4478 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4478] < _3832:
                                                                revert with 'NH{q', 17
                                                            if mem[_4478] - _3832 and 10^12 > -1 / mem[_4478] - _3832:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4478]) - (10^12 * _3832) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4478]) - (10^12 * _3832) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = mem[_4196] - _4056
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _4260 - _4056
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4546 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4546] < _3832:
                                                                revert with 'NH{q', 17
                                                            if mem[_4546] - _3832 and 10^12 > -1 / mem[_4546] - _3832:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4546]) - (10^12 * _3832) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4546]) - (10^12 * _3832) / poolInfo[idx].field_1280
                                                    poolInfo[idx].field_512 = block.number
                                            else:
                                                if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                    revert with 'NH{q', 17
                                                if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                    revert with 'NH{q', 18
                                                if block.number < u:
                                                    revert with 'NH{q', 17
                                                if block.number - u and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - u:
                                                    revert with 'NH{q', 17
                                                if t > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                    revert with 'NH{q', 17
                                                if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                    if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3892 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3952 = mem[_3892]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4152 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4222 = mem[_4152]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4290 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4300 = mem[_4290]
                                                    if _4222 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _4222 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4290]:
                                                        if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4474 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4474] < _3952:
                                                                revert with 'NH{q', 17
                                                            if mem[_4474] - _3952 and 10^12 > -1 / mem[_4474] - _3952:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4474]) - (10^12 * _3952) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4474]) - (10^12 * _3952) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4542 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4542] < _3952:
                                                                revert with 'NH{q', 17
                                                            if mem[_4542] - _3952 and 10^12 > -1 / mem[_4542] - _3952:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4542]) - (10^12 * _3952) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4542]) - (10^12 * _3952) / poolInfo[idx].field_1280
                                                    else:
                                                        if mem[_4290] < _4222:
                                                            revert with 'NH{q', 17
                                                        if not mem[_4290] - _4222:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4585 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4585] < _3952:
                                                                revert with 'NH{q', 17
                                                            if mem[_4585] - _3952 and 10^12 > -1 / mem[_4585] - _3952:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4585]) - (10^12 * _3952) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4585]) - (10^12 * _3952) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = mem[_4290] - _4222
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _4300 - _4222
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4610 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4610] < _3952:
                                                                revert with 'NH{q', 17
                                                            if mem[_4610] - _3952 and 10^12 > -1 / mem[_4610] - _3952:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4610]) - (10^12 * _3952) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4610]) - (10^12 * _3952) / poolInfo[idx].field_1280
                                                    poolInfo[idx].field_512 = block.number
                                else:
                                    if block.number < startBlock:
                                        revert with 'NH{q', 17
                                    if block.number - startBlock < 1:
                                        revert with 'NH{q', 17
                                    if not halvingPeriod:
                                        revert with 'NH{q', 18
                                    s = poolInfo[idx].field_512 + -startBlock - 1 / halvingPeriod
                                    t = 0
                                    u = poolInfo[idx].field_512
                                    while s < block.number + -startBlock - 1 / halvingPeriod:
                                        if s == -1:
                                            revert with 'NH{q', 17
                                        if s + 1 and halvingPeriod > -1 / s + 1:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) > !startBlock:
                                            revert with 'NH{q', 17
                                        if 0 == halvingPeriod:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) + startBlock <= startBlock:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) + startBlock < startBlock:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) < 1:
                                            revert with 'NH{q', 17
                                        if not halvingPeriod:
                                            revert with 'NH{q', 18
                                        if not halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > 255:
                                            revert with 'NH{q', 17
                                        if not 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                            revert with 'NH{q', 18
                                        if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                            revert with 'NH{q', 17
                                        if t > !((halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)):
                                            revert with 'NH{q', 17
                                        s = s + 1
                                        t = t + (halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)
                                        u = halvingPeriod + (s * halvingPeriod) + startBlock
                                        continue 
                                    if 0 == halvingPeriod:
                                        if block.number < u:
                                            revert with 'NH{q', 17
                                        if block.number - u and hCTPerBlock > -1 / block.number - u:
                                            revert with 'NH{q', 17
                                        if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                revert with 'NH{q', 17
                                            if not totalAllocPoint:
                                                revert with 'NH{q', 18
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3637 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3653 = mem[_3637]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3701 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3717 = mem[_3701]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.maxSupply() with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3765 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3781 = mem[_3765]
                                            if _3717 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                revert with 'NH{q', 17
                                            if _3717 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3765]:
                                                if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3959 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_3959] < _3653:
                                                        revert with 'NH{q', 17
                                                    if mem[_3959] - _3653 and 10^12 > -1 / mem[_3959] - _3653:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_3959]) - (10^12 * _3653) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_3959]) - (10^12 * _3653) / poolInfo[idx].field_1280
                                                else:
                                                    mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4067 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4067] < _3653:
                                                        revert with 'NH{q', 17
                                                    if mem[_4067] - _3653 and 10^12 > -1 / mem[_4067] - _3653:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4067]) - (10^12 * _3653) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4067]) - (10^12 * _3653) / poolInfo[idx].field_1280
                                            else:
                                                if mem[_3765] < _3717:
                                                    revert with 'NH{q', 17
                                                if not mem[_3765] - _3717:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4159 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4159] < _3653:
                                                        revert with 'NH{q', 17
                                                    if mem[_4159] - _3653 and 10^12 > -1 / mem[_4159] - _3653:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4159]) - (10^12 * _3653) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4159]) - (10^12 * _3653) / poolInfo[idx].field_1280
                                                else:
                                                    mem[mem[64] + 36] = mem[_3765] - _3717
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, _3781 - _3717
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4227 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4227] < _3653:
                                                        revert with 'NH{q', 17
                                                    if mem[_4227] - _3653 and 10^12 > -1 / mem[_4227] - _3653:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4227]) - (10^12 * _3653) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4227]) - (10^12 * _3653) / poolInfo[idx].field_1280
                                            poolInfo[idx].field_512 = block.number
                                    else:
                                        if block.number <= startBlock:
                                            if block.number < u:
                                                revert with 'NH{q', 17
                                            if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                revert with 'NH{q', 17
                                            if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3645 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3661 = mem[_3645]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3709 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3737 = mem[_3709]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3773 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3801 = mem[_3773]
                                                if _3737 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _3737 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3773]:
                                                    if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3997 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_3997] < _3661:
                                                            revert with 'NH{q', 17
                                                        if mem[_3997] - _3661 and 10^12 > -1 / mem[_3997] - _3661:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_3997]) - (10^12 * _3661) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_3997]) - (10^12 * _3661) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4116 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4116] < _3661:
                                                            revert with 'NH{q', 17
                                                        if mem[_4116] - _3661 and 10^12 > -1 / mem[_4116] - _3661:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4116]) - (10^12 * _3661) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4116]) - (10^12 * _3661) / poolInfo[idx].field_1280
                                                else:
                                                    if mem[_3773] < _3737:
                                                        revert with 'NH{q', 17
                                                    if not mem[_3773] - _3737:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4198 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4198] < _3661:
                                                            revert with 'NH{q', 17
                                                        if mem[_4198] - _3661 and 10^12 > -1 / mem[_4198] - _3661:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4198]) - (10^12 * _3661) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4198]) - (10^12 * _3661) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = mem[_3773] - _3737
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _3801 - _3737
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4262 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4262] < _3661:
                                                            revert with 'NH{q', 17
                                                        if mem[_4262] - _3661 and 10^12 > -1 / mem[_4262] - _3661:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4262]) - (10^12 * _3661) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4262]) - (10^12 * _3661) / poolInfo[idx].field_1280
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number < startBlock:
                                                revert with 'NH{q', 17
                                            if block.number - startBlock < 1:
                                                revert with 'NH{q', 17
                                            if not halvingPeriod:
                                                revert with 'NH{q', 18
                                            if not block.number + -startBlock - 1 / halvingPeriod:
                                                if block.number < u:
                                                    revert with 'NH{q', 17
                                                if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                    revert with 'NH{q', 17
                                                if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                    if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3813 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3835 = mem[_3813]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3958 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4065 = mem[_3958]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4201 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4265 = mem[_4201]
                                                    if _4065 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _4065 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4201]:
                                                        if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4353 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4353] < _3835:
                                                                revert with 'NH{q', 17
                                                            if mem[_4353] - _3835 and 10^12 > -1 / mem[_4353] - _3835:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4353]) - (10^12 * _3835) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4353]) - (10^12 * _3835) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4430 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4430] < _3835:
                                                                revert with 'NH{q', 17
                                                            if mem[_4430] - _3835 and 10^12 > -1 / mem[_4430] - _3835:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4430]) - (10^12 * _3835) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4430]) - (10^12 * _3835) / poolInfo[idx].field_1280
                                                    else:
                                                        if mem[_4201] < _4065:
                                                            revert with 'NH{q', 17
                                                        if not mem[_4201] - _4065:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4485 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4485] < _3835:
                                                                revert with 'NH{q', 17
                                                            if mem[_4485] - _3835 and 10^12 > -1 / mem[_4485] - _3835:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4485]) - (10^12 * _3835) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4485]) - (10^12 * _3835) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = mem[_4201] - _4065
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _4265 - _4065
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4552 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4552] < _3835:
                                                                revert with 'NH{q', 17
                                                            if mem[_4552] - _3835 and 10^12 > -1 / mem[_4552] - _3835:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4552]) - (10^12 * _3835) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4552]) - (10^12 * _3835) / poolInfo[idx].field_1280
                                                    poolInfo[idx].field_512 = block.number
                                            else:
                                                if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                    revert with 'NH{q', 17
                                                if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                    revert with 'NH{q', 18
                                                if block.number < u:
                                                    revert with 'NH{q', 17
                                                if block.number - u and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - u:
                                                    revert with 'NH{q', 17
                                                if t > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                    revert with 'NH{q', 17
                                                if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                    if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3899 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3957 = mem[_3899]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4157 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4225 = mem[_4157]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4292 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4301 = mem[_4292]
                                                    if _4225 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _4225 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4292]:
                                                        if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4481 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4481] < _3957:
                                                                revert with 'NH{q', 17
                                                            if mem[_4481] - _3957 and 10^12 > -1 / mem[_4481] - _3957:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4481]) - (10^12 * _3957) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4481]) - (10^12 * _3957) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4548 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4548] < _3957:
                                                                revert with 'NH{q', 17
                                                            if mem[_4548] - _3957 and 10^12 > -1 / mem[_4548] - _3957:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4548]) - (10^12 * _3957) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4548]) - (10^12 * _3957) / poolInfo[idx].field_1280
                                                    else:
                                                        if mem[_4292] < _4225:
                                                            revert with 'NH{q', 17
                                                        if not mem[_4292] - _4225:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4590 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4590] < _3957:
                                                                revert with 'NH{q', 17
                                                            if mem[_4590] - _3957 and 10^12 > -1 / mem[_4590] - _3957:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4590]) - (10^12 * _3957) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4590]) - (10^12 * _3957) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = mem[_4292] - _4225
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _4301 - _4225
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4612 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4612] < _3957:
                                                                revert with 'NH{q', 17
                                                            if mem[_4612] - _3957 and 10^12 > -1 / mem[_4612] - _3957:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4612]) - (10^12 * _3957) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4612]) - (10^12 * _3957) / poolInfo[idx].field_1280
                                                    poolInfo[idx].field_512 = block.number
            else:
                mem[mem[64] + 4] = this.address
                require ext_code.size(poolInfo[idx].field_0)
                staticcall poolInfo[idx].field_0.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1805 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1806 = mem[_1805]
                if not mem[_1805]:
                    poolInfo[idx].field_512 = block.number
                else:
                    if 0 == halvingPeriod:
                        if 0 == halvingPeriod:
                            if block.number < poolInfo[idx].field_512:
                                revert with 'NH{q', 17
                            if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                revert with 'NH{q', 17
                            if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                revert with 'NH{q', 17
                            if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                    revert with 'NH{q', 17
                                if not totalAllocPoint:
                                    revert with 'NH{q', 18
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(HCTAddress)
                                staticcall HCTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1838 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _1854 = mem[_1838]
                                require ext_code.size(HCTAddress)
                                staticcall HCTAddress.0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1888 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _1907 = mem[_1888]
                                require ext_code.size(HCTAddress)
                                staticcall HCTAddress.maxSupply() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1938 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _1964 = mem[_1938]
                                if _1907 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                    revert with 'NH{q', 17
                                if _1907 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_1938]:
                                    if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _2192 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if mem[_2192] < _1854:
                                            revert with 'NH{q', 17
                                        if mem[_2192] - _1854 and 10^12 > -1 / mem[_2192] - _1854:
                                            revert with 'NH{q', 17
                                        if not _1806:
                                            revert with 'NH{q', 18
                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2192]) - (10^12 * _1854) / _1806):
                                            revert with 'NH{q', 17
                                        poolInfo[idx].field_768 += (10^12 * mem[_2192]) - (10^12 * _1854) / _1806
                                    else:
                                        mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                        require ext_code.size(HCTAddress)
                                        call HCTAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _2278 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if mem[_2278] < _1854:
                                            revert with 'NH{q', 17
                                        if mem[_2278] - _1854 and 10^12 > -1 / mem[_2278] - _1854:
                                            revert with 'NH{q', 17
                                        if not _1806:
                                            revert with 'NH{q', 18
                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2278]) - (10^12 * _1854) / _1806):
                                            revert with 'NH{q', 17
                                        poolInfo[idx].field_768 += (10^12 * mem[_2278]) - (10^12 * _1854) / _1806
                                else:
                                    if mem[_1938] < _1907:
                                        revert with 'NH{q', 17
                                    if not mem[_1938] - _1907:
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _2363 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if mem[_2363] < _1854:
                                            revert with 'NH{q', 17
                                        if mem[_2363] - _1854 and 10^12 > -1 / mem[_2363] - _1854:
                                            revert with 'NH{q', 17
                                        if not _1806:
                                            revert with 'NH{q', 18
                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2363]) - (10^12 * _1854) / _1806):
                                            revert with 'NH{q', 17
                                        poolInfo[idx].field_768 += (10^12 * mem[_2363]) - (10^12 * _1854) / _1806
                                    else:
                                        mem[mem[64] + 36] = mem[_1938] - _1907
                                        require ext_code.size(HCTAddress)
                                        call HCTAddress.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args this.address, _1964 - _1907
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _2434 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if mem[_2434] < _1854:
                                            revert with 'NH{q', 17
                                        if mem[_2434] - _1854 and 10^12 > -1 / mem[_2434] - _1854:
                                            revert with 'NH{q', 17
                                        if not _1806:
                                            revert with 'NH{q', 18
                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2434]) - (10^12 * _1854) / _1806):
                                            revert with 'NH{q', 17
                                        poolInfo[idx].field_768 += (10^12 * mem[_2434]) - (10^12 * _1854) / _1806
                                poolInfo[idx].field_512 = block.number
                        else:
                            if block.number <= startBlock:
                                if block.number < poolInfo[idx].field_512:
                                    revert with 'NH{q', 17
                                if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                    revert with 'NH{q', 17
                                if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                    revert with 'NH{q', 17
                                if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                    if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                        revert with 'NH{q', 17
                                    if not totalAllocPoint:
                                        revert with 'NH{q', 18
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(HCTAddress)
                                    staticcall HCTAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1846 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _1862 = mem[_1846]
                                    require ext_code.size(HCTAddress)
                                    staticcall HCTAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1898 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _1914 = mem[_1898]
                                    require ext_code.size(HCTAddress)
                                    staticcall HCTAddress.maxSupply() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1952 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _1973 = mem[_1952]
                                    if _1914 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                        revert with 'NH{q', 17
                                    if _1914 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_1952]:
                                        if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2233 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if mem[_2233] < _1862:
                                                revert with 'NH{q', 17
                                            if mem[_2233] - _1862 and 10^12 > -1 / mem[_2233] - _1862:
                                                revert with 'NH{q', 17
                                            if not _1806:
                                                revert with 'NH{q', 18
                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2233]) - (10^12 * _1862) / _1806):
                                                revert with 'NH{q', 17
                                            poolInfo[idx].field_768 += (10^12 * mem[_2233]) - (10^12 * _1862) / _1806
                                        else:
                                            mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                            require ext_code.size(HCTAddress)
                                            call HCTAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2317 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if mem[_2317] < _1862:
                                                revert with 'NH{q', 17
                                            if mem[_2317] - _1862 and 10^12 > -1 / mem[_2317] - _1862:
                                                revert with 'NH{q', 17
                                            if not _1806:
                                                revert with 'NH{q', 18
                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2317]) - (10^12 * _1862) / _1806):
                                                revert with 'NH{q', 17
                                            poolInfo[idx].field_768 += (10^12 * mem[_2317]) - (10^12 * _1862) / _1806
                                    else:
                                        if mem[_1952] < _1914:
                                            revert with 'NH{q', 17
                                        if not mem[_1952] - _1914:
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2399 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if mem[_2399] < _1862:
                                                revert with 'NH{q', 17
                                            if mem[_2399] - _1862 and 10^12 > -1 / mem[_2399] - _1862:
                                                revert with 'NH{q', 17
                                            if not _1806:
                                                revert with 'NH{q', 18
                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2399]) - (10^12 * _1862) / _1806):
                                                revert with 'NH{q', 17
                                            poolInfo[idx].field_768 += (10^12 * mem[_2399]) - (10^12 * _1862) / _1806
                                        else:
                                            mem[mem[64] + 36] = mem[_1952] - _1914
                                            require ext_code.size(HCTAddress)
                                            call HCTAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args this.address, _1973 - _1914
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2452 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if mem[_2452] < _1862:
                                                revert with 'NH{q', 17
                                            if mem[_2452] - _1862 and 10^12 > -1 / mem[_2452] - _1862:
                                                revert with 'NH{q', 17
                                            if not _1806:
                                                revert with 'NH{q', 18
                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2452]) - (10^12 * _1862) / _1806):
                                                revert with 'NH{q', 17
                                            poolInfo[idx].field_768 += (10^12 * mem[_2452]) - (10^12 * _1862) / _1806
                                    poolInfo[idx].field_512 = block.number
                            else:
                                if block.number < startBlock:
                                    revert with 'NH{q', 17
                                if block.number - startBlock < 1:
                                    revert with 'NH{q', 17
                                if not halvingPeriod:
                                    revert with 'NH{q', 18
                                if not block.number + -startBlock - 1 / halvingPeriod:
                                    if block.number < poolInfo[idx].field_512:
                                        revert with 'NH{q', 17
                                    if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                        revert with 'NH{q', 17
                                    if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                        revert with 'NH{q', 17
                                    if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                        if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                            revert with 'NH{q', 17
                                        if not totalAllocPoint:
                                            revert with 'NH{q', 18
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _2009 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _2053 = mem[_2009]
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _2191 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _2276 = mem[_2191]
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.maxSupply() with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _2402 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _2455 = mem[_2402]
                                        if _2276 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                            revert with 'NH{q', 17
                                        if _2276 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2402]:
                                            if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2737 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2737] < _2053:
                                                    revert with 'NH{q', 17
                                                if mem[_2737] - _2053 and 10^12 > -1 / mem[_2737] - _2053:
                                                    revert with 'NH{q', 17
                                                if not _1806:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2737]) - (10^12 * _2053) / _1806):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2737]) - (10^12 * _2053) / _1806
                                            else:
                                                mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                require ext_code.size(HCTAddress)
                                                call HCTAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2850 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2850] < _2053:
                                                    revert with 'NH{q', 17
                                                if mem[_2850] - _2053 and 10^12 > -1 / mem[_2850] - _2053:
                                                    revert with 'NH{q', 17
                                                if not _1806:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2850]) - (10^12 * _2053) / _1806):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2850]) - (10^12 * _2053) / _1806
                                        else:
                                            if mem[_2402] < _2276:
                                                revert with 'NH{q', 17
                                            if not mem[_2402] - _2276:
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2968 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2968] < _2053:
                                                    revert with 'NH{q', 17
                                                if mem[_2968] - _2053 and 10^12 > -1 / mem[_2968] - _2053:
                                                    revert with 'NH{q', 17
                                                if not _1806:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2968]) - (10^12 * _2053) / _1806):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2968]) - (10^12 * _2053) / _1806
                                            else:
                                                mem[mem[64] + 36] = mem[_2402] - _2276
                                                require ext_code.size(HCTAddress)
                                                call HCTAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args this.address, _2455 - _2276
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3058 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_3058] < _2053:
                                                    revert with 'NH{q', 17
                                                if mem[_3058] - _2053 and 10^12 > -1 / mem[_3058] - _2053:
                                                    revert with 'NH{q', 17
                                                if not _1806:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_3058]) - (10^12 * _2053) / _1806):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_3058]) - (10^12 * _2053) / _1806
                                        poolInfo[idx].field_512 = block.number
                                else:
                                    if block.number + -startBlock - 1 / halvingPeriod > 255:
                                        revert with 'NH{q', 17
                                    if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                        revert with 'NH{q', 18
                                    if block.number < poolInfo[idx].field_512:
                                        revert with 'NH{q', 17
                                    if block.number - poolInfo[idx].field_512 and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - poolInfo[idx].field_512:
                                        revert with 'NH{q', 17
                                    if 0 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                        revert with 'NH{q', 17
                                    if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                        if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                            revert with 'NH{q', 17
                                        if not totalAllocPoint:
                                            revert with 'NH{q', 18
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _2107 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _2190 = mem[_2107]
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _2361 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _2432 = mem[_2361]
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.maxSupply() with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _2498 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _2538 = mem[_2498]
                                        if _2432 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                            revert with 'NH{q', 17
                                        if _2432 + ((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2498]:
                                            if not (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2964 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2964] < _2190:
                                                    revert with 'NH{q', 17
                                                if mem[_2964] - _2190 and 10^12 > -1 / mem[_2964] - _2190:
                                                    revert with 'NH{q', 17
                                                if not _1806:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2964]) - (10^12 * _2190) / _1806):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2964]) - (10^12 * _2190) / _1806
                                            else:
                                                mem[mem[64] + 36] = (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                require ext_code.size(HCTAddress)
                                                call HCTAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args this.address, (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3054 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_3054] < _2190:
                                                    revert with 'NH{q', 17
                                                if mem[_3054] - _2190 and 10^12 > -1 / mem[_3054] - _2190:
                                                    revert with 'NH{q', 17
                                                if not _1806:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_3054]) - (10^12 * _2190) / _1806):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_3054]) - (10^12 * _2190) / _1806
                                        else:
                                            if mem[_2498] < _2432:
                                                revert with 'NH{q', 17
                                            if not mem[_2498] - _2432:
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3115 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_3115] < _2190:
                                                    revert with 'NH{q', 17
                                                if mem[_3115] - _2190 and 10^12 > -1 / mem[_3115] - _2190:
                                                    revert with 'NH{q', 17
                                                if not _1806:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_3115]) - (10^12 * _2190) / _1806):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_3115]) - (10^12 * _2190) / _1806
                                            else:
                                                mem[mem[64] + 36] = mem[_2498] - _2432
                                                require ext_code.size(HCTAddress)
                                                call HCTAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args this.address, _2538 - _2432
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3152 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_3152] < _2190:
                                                    revert with 'NH{q', 17
                                                if mem[_3152] - _2190 and 10^12 > -1 / mem[_3152] - _2190:
                                                    revert with 'NH{q', 17
                                                if not _1806:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_3152]) - (10^12 * _2190) / _1806):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_3152]) - (10^12 * _2190) / _1806
                                        poolInfo[idx].field_512 = block.number
                    else:
                        if poolInfo[idx].field_512 <= startBlock:
                            if 0 == halvingPeriod:
                                if 0 == halvingPeriod:
                                    if block.number < poolInfo[idx].field_512:
                                        revert with 'NH{q', 17
                                    if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                        revert with 'NH{q', 17
                                    if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                        revert with 'NH{q', 17
                                    if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                        if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                            revert with 'NH{q', 17
                                        if not totalAllocPoint:
                                            revert with 'NH{q', 18
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1845 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _1861 = mem[_1845]
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1897 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _1913 = mem[_1897]
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.maxSupply() with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1951 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _1970 = mem[_1951]
                                        if _1913 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                            revert with 'NH{q', 17
                                        if _1913 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_1951]:
                                            if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2228 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2228] < _1861:
                                                    revert with 'NH{q', 17
                                                if mem[_2228] - _1861 and 10^12 > -1 / mem[_2228] - _1861:
                                                    revert with 'NH{q', 17
                                                if not _1806:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2228]) - (10^12 * _1861) / _1806):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2228]) - (10^12 * _1861) / _1806
                                            else:
                                                mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                require ext_code.size(HCTAddress)
                                                call HCTAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2309 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2309] < _1861:
                                                    revert with 'NH{q', 17
                                                if mem[_2309] - _1861 and 10^12 > -1 / mem[_2309] - _1861:
                                                    revert with 'NH{q', 17
                                                if not _1806:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2309]) - (10^12 * _1861) / _1806):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2309]) - (10^12 * _1861) / _1806
                                        else:
                                            if mem[_1951] < _1913:
                                                revert with 'NH{q', 17
                                            if not mem[_1951] - _1913:
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2392 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2392] < _1861:
                                                    revert with 'NH{q', 17
                                                if mem[_2392] - _1861 and 10^12 > -1 / mem[_2392] - _1861:
                                                    revert with 'NH{q', 17
                                                if not _1806:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2392]) - (10^12 * _1861) / _1806):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2392]) - (10^12 * _1861) / _1806
                                            else:
                                                mem[mem[64] + 36] = mem[_1951] - _1913
                                                require ext_code.size(HCTAddress)
                                                call HCTAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args this.address, _1970 - _1913
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2448 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2448] < _1861:
                                                    revert with 'NH{q', 17
                                                if mem[_2448] - _1861 and 10^12 > -1 / mem[_2448] - _1861:
                                                    revert with 'NH{q', 17
                                                if not _1806:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2448]) - (10^12 * _1861) / _1806):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2448]) - (10^12 * _1861) / _1806
                                        poolInfo[idx].field_512 = block.number
                                else:
                                    if block.number <= startBlock:
                                        if block.number < poolInfo[idx].field_512:
                                            revert with 'NH{q', 17
                                        if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                            revert with 'NH{q', 17
                                        if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                            if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                revert with 'NH{q', 17
                                            if not totalAllocPoint:
                                                revert with 'NH{q', 18
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _1853 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _1868 = mem[_1853]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _1906 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _1921 = mem[_1906]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.maxSupply() with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _1963 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _1986 = mem[_1963]
                                            if _1921 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                revert with 'NH{q', 17
                                            if _1921 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_1963]:
                                                if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2265 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2265] < _1868:
                                                        revert with 'NH{q', 17
                                                    if mem[_2265] - _1868 and 10^12 > -1 / mem[_2265] - _1868:
                                                        revert with 'NH{q', 17
                                                    if not _1806:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2265]) - (10^12 * _1868) / _1806):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2265]) - (10^12 * _1868) / _1806
                                                else:
                                                    mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2351 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2351] < _1868:
                                                        revert with 'NH{q', 17
                                                    if mem[_2351] - _1868 and 10^12 > -1 / mem[_2351] - _1868:
                                                        revert with 'NH{q', 17
                                                    if not _1806:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2351]) - (10^12 * _1868) / _1806):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2351]) - (10^12 * _1868) / _1806
                                            else:
                                                if mem[_1963] < _1921:
                                                    revert with 'NH{q', 17
                                                if not mem[_1963] - _1921:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2426 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2426] < _1868:
                                                        revert with 'NH{q', 17
                                                    if mem[_2426] - _1868 and 10^12 > -1 / mem[_2426] - _1868:
                                                        revert with 'NH{q', 17
                                                    if not _1806:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2426]) - (10^12 * _1868) / _1806):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2426]) - (10^12 * _1868) / _1806
                                                else:
                                                    mem[mem[64] + 36] = mem[_1963] - _1921
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, _1986 - _1921
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2467 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2467] < _1868:
                                                        revert with 'NH{q', 17
                                                    if mem[_2467] - _1868 and 10^12 > -1 / mem[_2467] - _1868:
                                                        revert with 'NH{q', 17
                                                    if not _1806:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2467]) - (10^12 * _1868) / _1806):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2467]) - (10^12 * _1868) / _1806
                                            poolInfo[idx].field_512 = block.number
                                    else:
                                        if block.number < startBlock:
                                            revert with 'NH{q', 17
                                        if block.number - startBlock < 1:
                                            revert with 'NH{q', 17
                                        if not halvingPeriod:
                                            revert with 'NH{q', 18
                                        if not block.number + -startBlock - 1 / halvingPeriod:
                                            if block.number < poolInfo[idx].field_512:
                                                revert with 'NH{q', 17
                                            if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                                revert with 'NH{q', 17
                                            if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                                if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2027 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _2076 = mem[_2027]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2227 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _2307 = mem[_2227]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2429 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _2470 = mem[_2429]
                                                if _2307 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _2307 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2429]:
                                                    if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2777 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2777] < _2076:
                                                            revert with 'NH{q', 17
                                                        if mem[_2777] - _2076 and 10^12 > -1 / mem[_2777] - _2076:
                                                            revert with 'NH{q', 17
                                                        if not _1806:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2777]) - (10^12 * _2076) / _1806):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2777]) - (10^12 * _2076) / _1806
                                                    else:
                                                        mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2898 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2898] < _2076:
                                                            revert with 'NH{q', 17
                                                        if mem[_2898] - _2076 and 10^12 > -1 / mem[_2898] - _2076:
                                                            revert with 'NH{q', 17
                                                        if not _1806:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2898]) - (10^12 * _2076) / _1806):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2898]) - (10^12 * _2076) / _1806
                                                else:
                                                    if mem[_2429] < _2307:
                                                        revert with 'NH{q', 17
                                                    if not mem[_2429] - _2307:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3005 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_3005] < _2076:
                                                            revert with 'NH{q', 17
                                                        if mem[_3005] - _2076 and 10^12 > -1 / mem[_3005] - _2076:
                                                            revert with 'NH{q', 17
                                                        if not _1806:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_3005]) - (10^12 * _2076) / _1806):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_3005]) - (10^12 * _2076) / _1806
                                                    else:
                                                        mem[mem[64] + 36] = mem[_2429] - _2307
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _2470 - _2307
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3081 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_3081] < _2076:
                                                            revert with 'NH{q', 17
                                                        if mem[_3081] - _2076 and 10^12 > -1 / mem[_3081] - _2076:
                                                            revert with 'NH{q', 17
                                                        if not _1806:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_3081]) - (10^12 * _2076) / _1806):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_3081]) - (10^12 * _2076) / _1806
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                revert with 'NH{q', 17
                                            if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                revert with 'NH{q', 18
                                            if block.number < poolInfo[idx].field_512:
                                                revert with 'NH{q', 17
                                            if block.number - poolInfo[idx].field_512 and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - poolInfo[idx].field_512:
                                                revert with 'NH{q', 17
                                            if 0 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                revert with 'NH{q', 17
                                            if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2140 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _2226 = mem[_2140]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2390 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _2446 = mem[_2390]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2513 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _2561 = mem[_2513]
                                                if _2446 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _2446 + ((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2513]:
                                                    if not (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3001 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_3001] < _2226:
                                                            revert with 'NH{q', 17
                                                        if mem[_3001] - _2226 and 10^12 > -1 / mem[_3001] - _2226:
                                                            revert with 'NH{q', 17
                                                        if not _1806:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_3001]) - (10^12 * _2226) / _1806):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_3001]) - (10^12 * _2226) / _1806
                                                    else:
                                                        mem[mem[64] + 36] = (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3077 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_3077] < _2226:
                                                            revert with 'NH{q', 17
                                                        if mem[_3077] - _2226 and 10^12 > -1 / mem[_3077] - _2226:
                                                            revert with 'NH{q', 17
                                                        if not _1806:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_3077]) - (10^12 * _2226) / _1806):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_3077]) - (10^12 * _2226) / _1806
                                                else:
                                                    if mem[_2513] < _2446:
                                                        revert with 'NH{q', 17
                                                    if not mem[_2513] - _2446:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3129 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_3129] < _2226:
                                                            revert with 'NH{q', 17
                                                        if mem[_3129] - _2226 and 10^12 > -1 / mem[_3129] - _2226:
                                                            revert with 'NH{q', 17
                                                        if not _1806:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_3129]) - (10^12 * _2226) / _1806):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_3129]) - (10^12 * _2226) / _1806
                                                    else:
                                                        mem[mem[64] + 36] = mem[_2513] - _2446
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _2561 - _2446
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3168 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_3168] < _2226:
                                                            revert with 'NH{q', 17
                                                        if mem[_3168] - _2226 and 10^12 > -1 / mem[_3168] - _2226:
                                                            revert with 'NH{q', 17
                                                        if not _1806:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_3168]) - (10^12 * _2226) / _1806):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_3168]) - (10^12 * _2226) / _1806
                                                poolInfo[idx].field_512 = block.number
                            else:
                                if block.number <= startBlock:
                                    if 0 == halvingPeriod:
                                        if block.number < poolInfo[idx].field_512:
                                            revert with 'NH{q', 17
                                        if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                            revert with 'NH{q', 17
                                        if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                            if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                revert with 'NH{q', 17
                                            if not totalAllocPoint:
                                                revert with 'NH{q', 18
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _1852 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _1867 = mem[_1852]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _1905 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _1920 = mem[_1905]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.maxSupply() with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _1962 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _1983 = mem[_1962]
                                            if _1920 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                revert with 'NH{q', 17
                                            if _1920 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_1962]:
                                                if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2261 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2261] < _1867:
                                                        revert with 'NH{q', 17
                                                    if mem[_2261] - _1867 and 10^12 > -1 / mem[_2261] - _1867:
                                                        revert with 'NH{q', 17
                                                    if not _1806:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2261]) - (10^12 * _1867) / _1806):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2261]) - (10^12 * _1867) / _1806
                                                else:
                                                    mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2344 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2344] < _1867:
                                                        revert with 'NH{q', 17
                                                    if mem[_2344] - _1867 and 10^12 > -1 / mem[_2344] - _1867:
                                                        revert with 'NH{q', 17
                                                    if not _1806:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2344]) - (10^12 * _1867) / _1806):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2344]) - (10^12 * _1867) / _1806
                                            else:
                                                if mem[_1962] < _1920:
                                                    revert with 'NH{q', 17
                                                if not mem[_1962] - _1920:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2421 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2421] < _1867:
                                                        revert with 'NH{q', 17
                                                    if mem[_2421] - _1867 and 10^12 > -1 / mem[_2421] - _1867:
                                                        revert with 'NH{q', 17
                                                    if not _1806:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2421]) - (10^12 * _1867) / _1806):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2421]) - (10^12 * _1867) / _1806
                                                else:
                                                    mem[mem[64] + 36] = mem[_1962] - _1920
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, _1983 - _1920
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2464 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2464] < _1867:
                                                        revert with 'NH{q', 17
                                                    if mem[_2464] - _1867 and 10^12 > -1 / mem[_2464] - _1867:
                                                        revert with 'NH{q', 17
                                                    if not _1806:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2464]) - (10^12 * _1867) / _1806):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2464]) - (10^12 * _1867) / _1806
                                            poolInfo[idx].field_512 = block.number
                                    else:
                                        if block.number <= startBlock:
                                            if block.number < poolInfo[idx].field_512:
                                                revert with 'NH{q', 17
                                            if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                                revert with 'NH{q', 17
                                            if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                                if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _1860 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _1874 = mem[_1860]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _1912 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _1933 = mem[_1912]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _1969 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _2001 = mem[_1969]
                                                if _1933 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _1933 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_1969]:
                                                    if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2297 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2297] < _1874:
                                                            revert with 'NH{q', 17
                                                        if mem[_2297] - _1874 and 10^12 > -1 / mem[_2297] - _1874:
                                                            revert with 'NH{q', 17
                                                        if not _1806:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2297]) - (10^12 * _1874) / _1806):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2297]) - (10^12 * _1874) / _1806
                                                    else:
                                                        mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2383 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2383] < _1874:
                                                            revert with 'NH{q', 17
                                                        if mem[_2383] - _1874 and 10^12 > -1 / mem[_2383] - _1874:
                                                            revert with 'NH{q', 17
                                                        if not _1806:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2383]) - (10^12 * _1874) / _1806):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2383]) - (10^12 * _1874) / _1806
                                                else:
                                                    if mem[_1969] < _1933:
                                                        revert with 'NH{q', 17
                                                    if not mem[_1969] - _1933:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2441 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2441] < _1874:
                                                            revert with 'NH{q', 17
                                                        if mem[_2441] - _1874 and 10^12 > -1 / mem[_2441] - _1874:
                                                            revert with 'NH{q', 17
                                                        if not _1806:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2441]) - (10^12 * _1874) / _1806):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2441]) - (10^12 * _1874) / _1806
                                                    else:
                                                        mem[mem[64] + 36] = mem[_1969] - _1933
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _2001 - _1933
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2484 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2484] < _1874:
                                                            revert with 'NH{q', 17
                                                        if mem[_2484] - _1874 and 10^12 > -1 / mem[_2484] - _1874:
                                                            revert with 'NH{q', 17
                                                        if not _1806:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2484]) - (10^12 * _1874) / _1806):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2484]) - (10^12 * _1874) / _1806
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number < startBlock:
                                                revert with 'NH{q', 17
                                            if block.number - startBlock < 1:
                                                revert with 'NH{q', 17
                                            if not halvingPeriod:
                                                revert with 'NH{q', 18
                                            if not block.number + -startBlock - 1 / halvingPeriod:
                                                if block.number < poolInfo[idx].field_512:
                                                    revert with 'NH{q', 17
                                                if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                                    revert with 'NH{q', 17
                                                if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                                    if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2047 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2098 = mem[_2047]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2260 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2342 = mem[_2260]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2444 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2487 = mem[_2444]
                                                    if _2342 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _2342 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2444]:
                                                        if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2820 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2820] < _2098:
                                                                revert with 'NH{q', 17
                                                            if mem[_2820] - _2098 and 10^12 > -1 / mem[_2820] - _2098:
                                                                revert with 'NH{q', 17
                                                            if not _1806:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2820]) - (10^12 * _2098) / _1806):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2820]) - (10^12 * _2098) / _1806
                                                        else:
                                                            mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2942 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2942] < _2098:
                                                                revert with 'NH{q', 17
                                                            if mem[_2942] - _2098 and 10^12 > -1 / mem[_2942] - _2098:
                                                                revert with 'NH{q', 17
                                                            if not _1806:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2942]) - (10^12 * _2098) / _1806):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2942]) - (10^12 * _2098) / _1806
                                                    else:
                                                        if mem[_2444] < _2342:
                                                            revert with 'NH{q', 17
                                                        if not mem[_2444] - _2342:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _3034 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_3034] < _2098:
                                                                revert with 'NH{q', 17
                                                            if mem[_3034] - _2098 and 10^12 > -1 / mem[_3034] - _2098:
                                                                revert with 'NH{q', 17
                                                            if not _1806:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_3034]) - (10^12 * _2098) / _1806):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_3034]) - (10^12 * _2098) / _1806
                                                        else:
                                                            mem[mem[64] + 36] = mem[_2444] - _2342
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _2487 - _2342
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _3099 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_3099] < _2098:
                                                                revert with 'NH{q', 17
                                                            if mem[_3099] - _2098 and 10^12 > -1 / mem[_3099] - _2098:
                                                                revert with 'NH{q', 17
                                                            if not _1806:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_3099]) - (10^12 * _2098) / _1806):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_3099]) - (10^12 * _2098) / _1806
                                                    poolInfo[idx].field_512 = block.number
                                            else:
                                                if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                    revert with 'NH{q', 17
                                                if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                    revert with 'NH{q', 18
                                                if block.number < poolInfo[idx].field_512:
                                                    revert with 'NH{q', 17
                                                if block.number - poolInfo[idx].field_512 and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - poolInfo[idx].field_512:
                                                    revert with 'NH{q', 17
                                                if 0 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                    revert with 'NH{q', 17
                                                if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                    if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2178 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2259 = mem[_2178]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2419 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2462 = mem[_2419]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2534 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2581 = mem[_2534]
                                                    if _2462 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _2462 + ((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2534]:
                                                        if not (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _3030 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_3030] < _2259:
                                                                revert with 'NH{q', 17
                                                            if mem[_3030] - _2259 and 10^12 > -1 / mem[_3030] - _2259:
                                                                revert with 'NH{q', 17
                                                            if not _1806:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_3030]) - (10^12 * _2259) / _1806):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_3030]) - (10^12 * _2259) / _1806
                                                        else:
                                                            mem[mem[64] + 36] = (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _3095 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_3095] < _2259:
                                                                revert with 'NH{q', 17
                                                            if mem[_3095] - _2259 and 10^12 > -1 / mem[_3095] - _2259:
                                                                revert with 'NH{q', 17
                                                            if not _1806:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_3095]) - (10^12 * _2259) / _1806):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_3095]) - (10^12 * _2259) / _1806
                                                    else:
                                                        if mem[_2534] < _2462:
                                                            revert with 'NH{q', 17
                                                        if not mem[_2534] - _2462:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _3142 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_3142] < _2259:
                                                                revert with 'NH{q', 17
                                                            if mem[_3142] - _2259 and 10^12 > -1 / mem[_3142] - _2259:
                                                                revert with 'NH{q', 17
                                                            if not _1806:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_3142]) - (10^12 * _2259) / _1806):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_3142]) - (10^12 * _2259) / _1806
                                                        else:
                                                            mem[mem[64] + 36] = mem[_2534] - _2462
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _2581 - _2462
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _3177 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_3177] < _2259:
                                                                revert with 'NH{q', 17
                                                            if mem[_3177] - _2259 and 10^12 > -1 / mem[_3177] - _2259:
                                                                revert with 'NH{q', 17
                                                            if not _1806:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_3177]) - (10^12 * _2259) / _1806):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_3177]) - (10^12 * _2259) / _1806
                                                    poolInfo[idx].field_512 = block.number
                                else:
                                    if block.number < startBlock:
                                        revert with 'NH{q', 17
                                    if block.number - startBlock < 1:
                                        revert with 'NH{q', 17
                                    if not halvingPeriod:
                                        revert with 'NH{q', 18
                                    s = 0
                                    t = 0
                                    u = poolInfo[idx].field_512
                                    while s < block.number + -startBlock - 1 / halvingPeriod:
                                        if s == -1:
                                            revert with 'NH{q', 17
                                        if s + 1 and halvingPeriod > -1 / s + 1:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) > !startBlock:
                                            revert with 'NH{q', 17
                                        if 0 == halvingPeriod:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) + startBlock <= startBlock:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) + startBlock < startBlock:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) < 1:
                                            revert with 'NH{q', 17
                                        if not halvingPeriod:
                                            revert with 'NH{q', 18
                                        if not halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > 255:
                                            revert with 'NH{q', 17
                                        if not 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                            revert with 'NH{q', 18
                                        if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                            revert with 'NH{q', 17
                                        if t > !((halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)):
                                            revert with 'NH{q', 17
                                        s = s + 1
                                        t = t + (halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)
                                        u = halvingPeriod + (s * halvingPeriod) + startBlock
                                        continue 
                                    if 0 == halvingPeriod:
                                        if block.number < u:
                                            revert with 'NH{q', 17
                                        if block.number - u and hCTPerBlock > -1 / block.number - u:
                                            revert with 'NH{q', 17
                                        if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                revert with 'NH{q', 17
                                            if not totalAllocPoint:
                                                revert with 'NH{q', 18
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3631 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3647 = mem[_3631]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3695 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3711 = mem[_3695]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.maxSupply() with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3759 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3775 = mem[_3759]
                                            if _3711 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                revert with 'NH{q', 17
                                            if _3711 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3759]:
                                                if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3929 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_3929] < _3647:
                                                        revert with 'NH{q', 17
                                                    if mem[_3929] - _3647 and 10^12 > -1 / mem[_3929] - _3647:
                                                        revert with 'NH{q', 17
                                                    if not _1806:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_3929]) - (10^12 * _3647) / _1806):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_3929]) - (10^12 * _3647) / _1806
                                                else:
                                                    mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4013 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4013] < _3647:
                                                        revert with 'NH{q', 17
                                                    if mem[_4013] - _3647 and 10^12 > -1 / mem[_4013] - _3647:
                                                        revert with 'NH{q', 17
                                                    if not _1806:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4013]) - (10^12 * _3647) / _1806):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4013]) - (10^12 * _3647) / _1806
                                            else:
                                                if mem[_3759] < _3711:
                                                    revert with 'NH{q', 17
                                                if not mem[_3759] - _3711:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4129 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4129] < _3647:
                                                        revert with 'NH{q', 17
                                                    if mem[_4129] - _3647 and 10^12 > -1 / mem[_4129] - _3647:
                                                        revert with 'NH{q', 17
                                                    if not _1806:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4129]) - (10^12 * _3647) / _1806):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4129]) - (10^12 * _3647) / _1806
                                                else:
                                                    mem[mem[64] + 36] = mem[_3759] - _3711
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, _3775 - _3711
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4209 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4209] < _3647:
                                                        revert with 'NH{q', 17
                                                    if mem[_4209] - _3647 and 10^12 > -1 / mem[_4209] - _3647:
                                                        revert with 'NH{q', 17
                                                    if not _1806:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4209]) - (10^12 * _3647) / _1806):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4209]) - (10^12 * _3647) / _1806
                                            poolInfo[idx].field_512 = block.number
                                    else:
                                        if block.number <= startBlock:
                                            if block.number < u:
                                                revert with 'NH{q', 17
                                            if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                revert with 'NH{q', 17
                                            if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3639 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3655 = mem[_3639]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3703 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3719 = mem[_3703]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3767 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3783 = mem[_3767]
                                                if _3719 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _3719 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3767]:
                                                    if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3967 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_3967] < _3655:
                                                            revert with 'NH{q', 17
                                                        if mem[_3967] - _3655 and 10^12 > -1 / mem[_3967] - _3655:
                                                            revert with 'NH{q', 17
                                                        if not _1806:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_3967]) - (10^12 * _3655) / _1806):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_3967]) - (10^12 * _3655) / _1806
                                                    else:
                                                        mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4080 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4080] < _3655:
                                                            revert with 'NH{q', 17
                                                        if mem[_4080] - _3655 and 10^12 > -1 / mem[_4080] - _3655:
                                                            revert with 'NH{q', 17
                                                        if not _1806:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4080]) - (10^12 * _3655) / _1806):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4080]) - (10^12 * _3655) / _1806
                                                else:
                                                    if mem[_3767] < _3719:
                                                        revert with 'NH{q', 17
                                                    if not mem[_3767] - _3719:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4168 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4168] < _3655:
                                                            revert with 'NH{q', 17
                                                        if mem[_4168] - _3655 and 10^12 > -1 / mem[_4168] - _3655:
                                                            revert with 'NH{q', 17
                                                        if not _1806:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4168]) - (10^12 * _3655) / _1806):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4168]) - (10^12 * _3655) / _1806
                                                    else:
                                                        mem[mem[64] + 36] = mem[_3767] - _3719
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _3783 - _3719
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4232 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4232] < _3655:
                                                            revert with 'NH{q', 17
                                                        if mem[_4232] - _3655 and 10^12 > -1 / mem[_4232] - _3655:
                                                            revert with 'NH{q', 17
                                                        if not _1806:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4232]) - (10^12 * _3655) / _1806):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4232]) - (10^12 * _3655) / _1806
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number < startBlock:
                                                revert with 'NH{q', 17
                                            if block.number - startBlock < 1:
                                                revert with 'NH{q', 17
                                            if not halvingPeriod:
                                                revert with 'NH{q', 18
                                            if not block.number + -startBlock - 1 / halvingPeriod:
                                                if block.number < u:
                                                    revert with 'NH{q', 17
                                                if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                    revert with 'NH{q', 17
                                                if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                    if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3807 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3817 = mem[_3807]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3928 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4011 = mem[_3928]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4171 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4235 = mem[_4171]
                                                    if _4011 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _4011 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4171]:
                                                        if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4335 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4335] < _3817:
                                                                revert with 'NH{q', 17
                                                            if mem[_4335] - _3817 and 10^12 > -1 / mem[_4335] - _3817:
                                                                revert with 'NH{q', 17
                                                            if not _1806:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4335]) - (10^12 * _3817) / _1806):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4335]) - (10^12 * _3817) / _1806
                                                        else:
                                                            mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4394 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4394] < _3817:
                                                                revert with 'NH{q', 17
                                                            if mem[_4394] - _3817 and 10^12 > -1 / mem[_4394] - _3817:
                                                                revert with 'NH{q', 17
                                                            if not _1806:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4394]) - (10^12 * _3817) / _1806):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4394]) - (10^12 * _3817) / _1806
                                                    else:
                                                        if mem[_4171] < _4011:
                                                            revert with 'NH{q', 17
                                                        if not mem[_4171] - _4011:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4443 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4443] < _3817:
                                                                revert with 'NH{q', 17
                                                            if mem[_4443] - _3817 and 10^12 > -1 / mem[_4443] - _3817:
                                                                revert with 'NH{q', 17
                                                            if not _1806:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4443]) - (10^12 * _3817) / _1806):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4443]) - (10^12 * _3817) / _1806
                                                        else:
                                                            mem[mem[64] + 36] = mem[_4171] - _4011
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _4235 - _4011
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4516 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4516] < _3817:
                                                                revert with 'NH{q', 17
                                                            if mem[_4516] - _3817 and 10^12 > -1 / mem[_4516] - _3817:
                                                                revert with 'NH{q', 17
                                                            if not _1806:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4516]) - (10^12 * _3817) / _1806):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4516]) - (10^12 * _3817) / _1806
                                                    poolInfo[idx].field_512 = block.number
                                            else:
                                                if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                    revert with 'NH{q', 17
                                                if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                    revert with 'NH{q', 18
                                                if block.number < u:
                                                    revert with 'NH{q', 17
                                                if block.number - u and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - u:
                                                    revert with 'NH{q', 17
                                                if t > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                    revert with 'NH{q', 17
                                                if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                    if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3857 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3927 = mem[_3857]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4127 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4207 = mem[_4127]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4280 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4295 = mem[_4280]
                                                    if _4207 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _4207 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4280]:
                                                        if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4439 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4439] < _3927:
                                                                revert with 'NH{q', 17
                                                            if mem[_4439] - _3927 and 10^12 > -1 / mem[_4439] - _3927:
                                                                revert with 'NH{q', 17
                                                            if not _1806:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4439]) - (10^12 * _3927) / _1806):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4439]) - (10^12 * _3927) / _1806
                                                        else:
                                                            mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4512 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4512] < _3927:
                                                                revert with 'NH{q', 17
                                                            if mem[_4512] - _3927 and 10^12 > -1 / mem[_4512] - _3927:
                                                                revert with 'NH{q', 17
                                                            if not _1806:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4512]) - (10^12 * _3927) / _1806):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4512]) - (10^12 * _3927) / _1806
                                                    else:
                                                        if mem[_4280] < _4207:
                                                            revert with 'NH{q', 17
                                                        if not mem[_4280] - _4207:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4560 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4560] < _3927:
                                                                revert with 'NH{q', 17
                                                            if mem[_4560] - _3927 and 10^12 > -1 / mem[_4560] - _3927:
                                                                revert with 'NH{q', 17
                                                            if not _1806:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4560]) - (10^12 * _3927) / _1806):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4560]) - (10^12 * _3927) / _1806
                                                        else:
                                                            mem[mem[64] + 36] = mem[_4280] - _4207
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _4295 - _4207
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4600 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4600] < _3927:
                                                                revert with 'NH{q', 17
                                                            if mem[_4600] - _3927 and 10^12 > -1 / mem[_4600] - _3927:
                                                                revert with 'NH{q', 17
                                                            if not _1806:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4600]) - (10^12 * _3927) / _1806):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4600]) - (10^12 * _3927) / _1806
                                                    poolInfo[idx].field_512 = block.number
                        else:
                            if poolInfo[idx].field_512 < startBlock:
                                revert with 'NH{q', 17
                            if poolInfo[idx].field_512 - startBlock < 1:
                                revert with 'NH{q', 17
                            if not halvingPeriod:
                                revert with 'NH{q', 18
                            if 0 == halvingPeriod:
                                s = poolInfo[idx].field_512 + -startBlock - 1 / halvingPeriod
                                t = 0
                                u = poolInfo[idx].field_512
                                while s < 0:
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    if s + 1 and halvingPeriod > -1 / s + 1:
                                        revert with 'NH{q', 17
                                    if halvingPeriod + (s * halvingPeriod) > !startBlock:
                                        revert with 'NH{q', 17
                                    if 0 == halvingPeriod:
                                        if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                            revert with 'NH{q', 17
                                        if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        s = s + 1
                                        t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                        u = halvingPeriod + (s * halvingPeriod) + startBlock
                                        continue 
                                    if halvingPeriod + (s * halvingPeriod) + startBlock <= startBlock:
                                        if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                            revert with 'NH{q', 17
                                        if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        s = s + 1
                                        t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                        u = halvingPeriod + (s * halvingPeriod) + startBlock
                                        continue 
                                    if halvingPeriod + (s * halvingPeriod) + startBlock < startBlock:
                                        revert with 'NH{q', 17
                                    if halvingPeriod + (s * halvingPeriod) < 1:
                                        revert with 'NH{q', 17
                                    if not halvingPeriod:
                                        revert with 'NH{q', 18
                                    if not halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                        if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                            revert with 'NH{q', 17
                                        if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        s = s + 1
                                        t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                        u = halvingPeriod + (s * halvingPeriod) + startBlock
                                        continue 
                                    if halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > 255:
                                        revert with 'NH{q', 17
                                    if not 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                        revert with 'NH{q', 18
                                    if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                        revert with 'NH{q', 17
                                    if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                        revert with 'NH{q', 17
                                    if t > !((halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)):
                                        revert with 'NH{q', 17
                                    s = s + 1
                                    t = t + (halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)
                                    u = halvingPeriod + (s * halvingPeriod) + startBlock
                                    continue 
                                if 0 == halvingPeriod:
                                    if block.number < u:
                                        revert with 'NH{q', 17
                                    if block.number - u and hCTPerBlock > -1 / block.number - u:
                                        revert with 'NH{q', 17
                                    if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                        revert with 'NH{q', 17
                                    if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                        if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                            revert with 'NH{q', 17
                                        if not totalAllocPoint:
                                            revert with 'NH{q', 18
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3634 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _3650 = mem[_3634]
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3698 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _3714 = mem[_3698]
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.maxSupply() with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _3762 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _3778 = mem[_3762]
                                        if _3714 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                            revert with 'NH{q', 17
                                        if _3714 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3762]:
                                            if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3944 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_3944] < _3650:
                                                    revert with 'NH{q', 17
                                                if mem[_3944] - _3650 and 10^12 > -1 / mem[_3944] - _3650:
                                                    revert with 'NH{q', 17
                                                if not _1806:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_3944]) - (10^12 * _3650) / _1806):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_3944]) - (10^12 * _3650) / _1806
                                            else:
                                                mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                require ext_code.size(HCTAddress)
                                                call HCTAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _4040 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_4040] < _3650:
                                                    revert with 'NH{q', 17
                                                if mem[_4040] - _3650 and 10^12 > -1 / mem[_4040] - _3650:
                                                    revert with 'NH{q', 17
                                                if not _1806:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4040]) - (10^12 * _3650) / _1806):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_4040]) - (10^12 * _3650) / _1806
                                        else:
                                            if mem[_3762] < _3714:
                                                revert with 'NH{q', 17
                                            if not mem[_3762] - _3714:
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _4144 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_4144] < _3650:
                                                    revert with 'NH{q', 17
                                                if mem[_4144] - _3650 and 10^12 > -1 / mem[_4144] - _3650:
                                                    revert with 'NH{q', 17
                                                if not _1806:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4144]) - (10^12 * _3650) / _1806):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_4144]) - (10^12 * _3650) / _1806
                                            else:
                                                mem[mem[64] + 36] = mem[_3762] - _3714
                                                require ext_code.size(HCTAddress)
                                                call HCTAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args this.address, _3778 - _3714
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _4218 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_4218] < _3650:
                                                    revert with 'NH{q', 17
                                                if mem[_4218] - _3650 and 10^12 > -1 / mem[_4218] - _3650:
                                                    revert with 'NH{q', 17
                                                if not _1806:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4218]) - (10^12 * _3650) / _1806):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_4218]) - (10^12 * _3650) / _1806
                                        poolInfo[idx].field_512 = block.number
                                else:
                                    if block.number <= startBlock:
                                        if block.number < u:
                                            revert with 'NH{q', 17
                                        if block.number - u and hCTPerBlock > -1 / block.number - u:
                                            revert with 'NH{q', 17
                                        if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                revert with 'NH{q', 17
                                            if not totalAllocPoint:
                                                revert with 'NH{q', 18
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3642 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3658 = mem[_3642]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3706 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3728 = mem[_3706]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.maxSupply() with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3770 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3792 = mem[_3770]
                                            if _3728 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                revert with 'NH{q', 17
                                            if _3728 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3770]:
                                                if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3982 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_3982] < _3658:
                                                        revert with 'NH{q', 17
                                                    if mem[_3982] - _3658 and 10^12 > -1 / mem[_3982] - _3658:
                                                        revert with 'NH{q', 17
                                                    if not _1806:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_3982]) - (10^12 * _3658) / _1806):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_3982]) - (10^12 * _3658) / _1806
                                                else:
                                                    mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4098 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4098] < _3658:
                                                        revert with 'NH{q', 17
                                                    if mem[_4098] - _3658 and 10^12 > -1 / mem[_4098] - _3658:
                                                        revert with 'NH{q', 17
                                                    if not _1806:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4098]) - (10^12 * _3658) / _1806):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4098]) - (10^12 * _3658) / _1806
                                            else:
                                                if mem[_3770] < _3728:
                                                    revert with 'NH{q', 17
                                                if not mem[_3770] - _3728:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4183 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4183] < _3658:
                                                        revert with 'NH{q', 17
                                                    if mem[_4183] - _3658 and 10^12 > -1 / mem[_4183] - _3658:
                                                        revert with 'NH{q', 17
                                                    if not _1806:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4183]) - (10^12 * _3658) / _1806):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4183]) - (10^12 * _3658) / _1806
                                                else:
                                                    mem[mem[64] + 36] = mem[_3770] - _3728
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, _3792 - _3728
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4247 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4247] < _3658:
                                                        revert with 'NH{q', 17
                                                    if mem[_4247] - _3658 and 10^12 > -1 / mem[_4247] - _3658:
                                                        revert with 'NH{q', 17
                                                    if not _1806:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4247]) - (10^12 * _3658) / _1806):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4247]) - (10^12 * _3658) / _1806
                                            poolInfo[idx].field_512 = block.number
                                    else:
                                        if block.number < startBlock:
                                            revert with 'NH{q', 17
                                        if block.number - startBlock < 1:
                                            revert with 'NH{q', 17
                                        if not halvingPeriod:
                                            revert with 'NH{q', 18
                                        if not block.number + -startBlock - 1 / halvingPeriod:
                                            if block.number < u:
                                                revert with 'NH{q', 17
                                            if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                revert with 'NH{q', 17
                                            if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3810 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3826 = mem[_3810]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3943 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _4038 = mem[_3943]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _4186 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _4250 = mem[_4186]
                                                if _4038 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _4038 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4186]:
                                                    if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4344 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4344] < _3826:
                                                            revert with 'NH{q', 17
                                                        if mem[_4344] - _3826 and 10^12 > -1 / mem[_4344] - _3826:
                                                            revert with 'NH{q', 17
                                                        if not _1806:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4344]) - (10^12 * _3826) / _1806):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4344]) - (10^12 * _3826) / _1806
                                                    else:
                                                        mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4412 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4412] < _3826:
                                                            revert with 'NH{q', 17
                                                        if mem[_4412] - _3826 and 10^12 > -1 / mem[_4412] - _3826:
                                                            revert with 'NH{q', 17
                                                        if not _1806:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4412]) - (10^12 * _3826) / _1806):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4412]) - (10^12 * _3826) / _1806
                                                else:
                                                    if mem[_4186] < _4038:
                                                        revert with 'NH{q', 17
                                                    if not mem[_4186] - _4038:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4464 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4464] < _3826:
                                                            revert with 'NH{q', 17
                                                        if mem[_4464] - _3826 and 10^12 > -1 / mem[_4464] - _3826:
                                                            revert with 'NH{q', 17
                                                        if not _1806:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4464]) - (10^12 * _3826) / _1806):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4464]) - (10^12 * _3826) / _1806
                                                    else:
                                                        mem[mem[64] + 36] = mem[_4186] - _4038
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _4250 - _4038
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4534 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4534] < _3826:
                                                            revert with 'NH{q', 17
                                                        if mem[_4534] - _3826 and 10^12 > -1 / mem[_4534] - _3826:
                                                            revert with 'NH{q', 17
                                                        if not _1806:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4534]) - (10^12 * _3826) / _1806):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4534]) - (10^12 * _3826) / _1806
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                revert with 'NH{q', 17
                                            if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                revert with 'NH{q', 18
                                            if block.number < u:
                                                revert with 'NH{q', 17
                                            if block.number - u and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - u:
                                                revert with 'NH{q', 17
                                            if t > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                revert with 'NH{q', 17
                                            if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3878 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3942 = mem[_3878]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _4142 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _4216 = mem[_4142]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _4286 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _4298 = mem[_4286]
                                                if _4216 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _4216 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4286]:
                                                    if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4460 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4460] < _3942:
                                                            revert with 'NH{q', 17
                                                        if mem[_4460] - _3942 and 10^12 > -1 / mem[_4460] - _3942:
                                                            revert with 'NH{q', 17
                                                        if not _1806:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4460]) - (10^12 * _3942) / _1806):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4460]) - (10^12 * _3942) / _1806
                                                    else:
                                                        mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4530 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4530] < _3942:
                                                            revert with 'NH{q', 17
                                                        if mem[_4530] - _3942 and 10^12 > -1 / mem[_4530] - _3942:
                                                            revert with 'NH{q', 17
                                                        if not _1806:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4530]) - (10^12 * _3942) / _1806):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4530]) - (10^12 * _3942) / _1806
                                                else:
                                                    if mem[_4286] < _4216:
                                                        revert with 'NH{q', 17
                                                    if not mem[_4286] - _4216:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4575 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4575] < _3942:
                                                            revert with 'NH{q', 17
                                                        if mem[_4575] - _3942 and 10^12 > -1 / mem[_4575] - _3942:
                                                            revert with 'NH{q', 17
                                                        if not _1806:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4575]) - (10^12 * _3942) / _1806):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4575]) - (10^12 * _3942) / _1806
                                                    else:
                                                        mem[mem[64] + 36] = mem[_4286] - _4216
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _4298 - _4216
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4606 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4606] < _3942:
                                                            revert with 'NH{q', 17
                                                        if mem[_4606] - _3942 and 10^12 > -1 / mem[_4606] - _3942:
                                                            revert with 'NH{q', 17
                                                        if not _1806:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4606]) - (10^12 * _3942) / _1806):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4606]) - (10^12 * _3942) / _1806
                                                poolInfo[idx].field_512 = block.number
                            else:
                                if block.number <= startBlock:
                                    s = poolInfo[idx].field_512 + -startBlock - 1 / halvingPeriod
                                    t = 0
                                    u = poolInfo[idx].field_512
                                    while s < 0:
                                        if s == -1:
                                            revert with 'NH{q', 17
                                        if s + 1 and halvingPeriod > -1 / s + 1:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) > !startBlock:
                                            revert with 'NH{q', 17
                                        if 0 == halvingPeriod:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) + startBlock <= startBlock:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) + startBlock < startBlock:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) < 1:
                                            revert with 'NH{q', 17
                                        if not halvingPeriod:
                                            revert with 'NH{q', 18
                                        if not halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > 255:
                                            revert with 'NH{q', 17
                                        if not 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                            revert with 'NH{q', 18
                                        if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                            revert with 'NH{q', 17
                                        if t > !((halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)):
                                            revert with 'NH{q', 17
                                        s = s + 1
                                        t = t + (halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)
                                        u = halvingPeriod + (s * halvingPeriod) + startBlock
                                        continue 
                                    if 0 == halvingPeriod:
                                        if block.number < u:
                                            revert with 'NH{q', 17
                                        if block.number - u and hCTPerBlock > -1 / block.number - u:
                                            revert with 'NH{q', 17
                                        if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                revert with 'NH{q', 17
                                            if not totalAllocPoint:
                                                revert with 'NH{q', 18
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3632 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3648 = mem[_3632]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3696 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3712 = mem[_3696]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.maxSupply() with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3760 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3776 = mem[_3760]
                                            if _3712 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                revert with 'NH{q', 17
                                            if _3712 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3760]:
                                                if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3934 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_3934] < _3648:
                                                        revert with 'NH{q', 17
                                                    if mem[_3934] - _3648 and 10^12 > -1 / mem[_3934] - _3648:
                                                        revert with 'NH{q', 17
                                                    if not _1806:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_3934]) - (10^12 * _3648) / _1806):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_3934]) - (10^12 * _3648) / _1806
                                                else:
                                                    mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4022 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4022] < _3648:
                                                        revert with 'NH{q', 17
                                                    if mem[_4022] - _3648 and 10^12 > -1 / mem[_4022] - _3648:
                                                        revert with 'NH{q', 17
                                                    if not _1806:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4022]) - (10^12 * _3648) / _1806):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4022]) - (10^12 * _3648) / _1806
                                            else:
                                                if mem[_3760] < _3712:
                                                    revert with 'NH{q', 17
                                                if not mem[_3760] - _3712:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4134 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4134] < _3648:
                                                        revert with 'NH{q', 17
                                                    if mem[_4134] - _3648 and 10^12 > -1 / mem[_4134] - _3648:
                                                        revert with 'NH{q', 17
                                                    if not _1806:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4134]) - (10^12 * _3648) / _1806):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4134]) - (10^12 * _3648) / _1806
                                                else:
                                                    mem[mem[64] + 36] = mem[_3760] - _3712
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, _3776 - _3712
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4212 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4212] < _3648:
                                                        revert with 'NH{q', 17
                                                    if mem[_4212] - _3648 and 10^12 > -1 / mem[_4212] - _3648:
                                                        revert with 'NH{q', 17
                                                    if not _1806:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4212]) - (10^12 * _3648) / _1806):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4212]) - (10^12 * _3648) / _1806
                                            poolInfo[idx].field_512 = block.number
                                    else:
                                        if block.number <= startBlock:
                                            if block.number < u:
                                                revert with 'NH{q', 17
                                            if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                revert with 'NH{q', 17
                                            if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3640 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3656 = mem[_3640]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3704 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3722 = mem[_3704]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3768 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3786 = mem[_3768]
                                                if _3722 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _3722 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3768]:
                                                    if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3972 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_3972] < _3656:
                                                            revert with 'NH{q', 17
                                                        if mem[_3972] - _3656 and 10^12 > -1 / mem[_3972] - _3656:
                                                            revert with 'NH{q', 17
                                                        if not _1806:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_3972]) - (10^12 * _3656) / _1806):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_3972]) - (10^12 * _3656) / _1806
                                                    else:
                                                        mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4086 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4086] < _3656:
                                                            revert with 'NH{q', 17
                                                        if mem[_4086] - _3656 and 10^12 > -1 / mem[_4086] - _3656:
                                                            revert with 'NH{q', 17
                                                        if not _1806:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4086]) - (10^12 * _3656) / _1806):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4086]) - (10^12 * _3656) / _1806
                                                else:
                                                    if mem[_3768] < _3722:
                                                        revert with 'NH{q', 17
                                                    if not mem[_3768] - _3722:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4173 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4173] < _3656:
                                                            revert with 'NH{q', 17
                                                        if mem[_4173] - _3656 and 10^12 > -1 / mem[_4173] - _3656:
                                                            revert with 'NH{q', 17
                                                        if not _1806:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4173]) - (10^12 * _3656) / _1806):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4173]) - (10^12 * _3656) / _1806
                                                    else:
                                                        mem[mem[64] + 36] = mem[_3768] - _3722
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _3786 - _3722
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4237 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4237] < _3656:
                                                            revert with 'NH{q', 17
                                                        if mem[_4237] - _3656 and 10^12 > -1 / mem[_4237] - _3656:
                                                            revert with 'NH{q', 17
                                                        if not _1806:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4237]) - (10^12 * _3656) / _1806):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4237]) - (10^12 * _3656) / _1806
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number < startBlock:
                                                revert with 'NH{q', 17
                                            if block.number - startBlock < 1:
                                                revert with 'NH{q', 17
                                            if not halvingPeriod:
                                                revert with 'NH{q', 18
                                            if not block.number + -startBlock - 1 / halvingPeriod:
                                                if block.number < u:
                                                    revert with 'NH{q', 17
                                                if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                    revert with 'NH{q', 17
                                                if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                    if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3808 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3820 = mem[_3808]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3933 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4020 = mem[_3933]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4176 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4240 = mem[_4176]
                                                    if _4020 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _4020 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4176]:
                                                        if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4338 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4338] < _3820:
                                                                revert with 'NH{q', 17
                                                            if mem[_4338] - _3820 and 10^12 > -1 / mem[_4338] - _3820:
                                                                revert with 'NH{q', 17
                                                            if not _1806:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4338]) - (10^12 * _3820) / _1806):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4338]) - (10^12 * _3820) / _1806
                                                        else:
                                                            mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4400 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4400] < _3820:
                                                                revert with 'NH{q', 17
                                                            if mem[_4400] - _3820 and 10^12 > -1 / mem[_4400] - _3820:
                                                                revert with 'NH{q', 17
                                                            if not _1806:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4400]) - (10^12 * _3820) / _1806):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4400]) - (10^12 * _3820) / _1806
                                                    else:
                                                        if mem[_4176] < _4020:
                                                            revert with 'NH{q', 17
                                                        if not mem[_4176] - _4020:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4450 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4450] < _3820:
                                                                revert with 'NH{q', 17
                                                            if mem[_4450] - _3820 and 10^12 > -1 / mem[_4450] - _3820:
                                                                revert with 'NH{q', 17
                                                            if not _1806:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4450]) - (10^12 * _3820) / _1806):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4450]) - (10^12 * _3820) / _1806
                                                        else:
                                                            mem[mem[64] + 36] = mem[_4176] - _4020
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _4240 - _4020
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4522 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4522] < _3820:
                                                                revert with 'NH{q', 17
                                                            if mem[_4522] - _3820 and 10^12 > -1 / mem[_4522] - _3820:
                                                                revert with 'NH{q', 17
                                                            if not _1806:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4522]) - (10^12 * _3820) / _1806):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4522]) - (10^12 * _3820) / _1806
                                                    poolInfo[idx].field_512 = block.number
                                            else:
                                                if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                    revert with 'NH{q', 17
                                                if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                    revert with 'NH{q', 18
                                                if block.number < u:
                                                    revert with 'NH{q', 17
                                                if block.number - u and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - u:
                                                    revert with 'NH{q', 17
                                                if t > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                    revert with 'NH{q', 17
                                                if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                    if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3864 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3932 = mem[_3864]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4132 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4210 = mem[_4132]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4282 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4296 = mem[_4282]
                                                    if _4210 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _4210 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4282]:
                                                        if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4446 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4446] < _3932:
                                                                revert with 'NH{q', 17
                                                            if mem[_4446] - _3932 and 10^12 > -1 / mem[_4446] - _3932:
                                                                revert with 'NH{q', 17
                                                            if not _1806:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4446]) - (10^12 * _3932) / _1806):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4446]) - (10^12 * _3932) / _1806
                                                        else:
                                                            mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4518 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4518] < _3932:
                                                                revert with 'NH{q', 17
                                                            if mem[_4518] - _3932 and 10^12 > -1 / mem[_4518] - _3932:
                                                                revert with 'NH{q', 17
                                                            if not _1806:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4518]) - (10^12 * _3932) / _1806):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4518]) - (10^12 * _3932) / _1806
                                                    else:
                                                        if mem[_4282] < _4210:
                                                            revert with 'NH{q', 17
                                                        if not mem[_4282] - _4210:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4565 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4565] < _3932:
                                                                revert with 'NH{q', 17
                                                            if mem[_4565] - _3932 and 10^12 > -1 / mem[_4565] - _3932:
                                                                revert with 'NH{q', 17
                                                            if not _1806:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4565]) - (10^12 * _3932) / _1806):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4565]) - (10^12 * _3932) / _1806
                                                        else:
                                                            mem[mem[64] + 36] = mem[_4282] - _4210
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _4296 - _4210
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4602 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4602] < _3932:
                                                                revert with 'NH{q', 17
                                                            if mem[_4602] - _3932 and 10^12 > -1 / mem[_4602] - _3932:
                                                                revert with 'NH{q', 17
                                                            if not _1806:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4602]) - (10^12 * _3932) / _1806):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4602]) - (10^12 * _3932) / _1806
                                                    poolInfo[idx].field_512 = block.number
                                else:
                                    if block.number < startBlock:
                                        revert with 'NH{q', 17
                                    if block.number - startBlock < 1:
                                        revert with 'NH{q', 17
                                    if not halvingPeriod:
                                        revert with 'NH{q', 18
                                    s = poolInfo[idx].field_512 + -startBlock - 1 / halvingPeriod
                                    t = 0
                                    u = poolInfo[idx].field_512
                                    while s < block.number + -startBlock - 1 / halvingPeriod:
                                        if s == -1:
                                            revert with 'NH{q', 17
                                        if s + 1 and halvingPeriod > -1 / s + 1:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) > !startBlock:
                                            revert with 'NH{q', 17
                                        if 0 == halvingPeriod:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) + startBlock <= startBlock:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) + startBlock < startBlock:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) < 1:
                                            revert with 'NH{q', 17
                                        if not halvingPeriod:
                                            revert with 'NH{q', 18
                                        if not halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > 255:
                                            revert with 'NH{q', 17
                                        if not 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                            revert with 'NH{q', 18
                                        if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                            revert with 'NH{q', 17
                                        if t > !((halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)):
                                            revert with 'NH{q', 17
                                        s = s + 1
                                        t = t + (halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)
                                        u = halvingPeriod + (s * halvingPeriod) + startBlock
                                        continue 
                                    if 0 == halvingPeriod:
                                        if block.number < u:
                                            revert with 'NH{q', 17
                                        if block.number - u and hCTPerBlock > -1 / block.number - u:
                                            revert with 'NH{q', 17
                                        if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                revert with 'NH{q', 17
                                            if not totalAllocPoint:
                                                revert with 'NH{q', 18
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3633 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3649 = mem[_3633]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3697 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3713 = mem[_3697]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.maxSupply() with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3761 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3777 = mem[_3761]
                                            if _3713 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                revert with 'NH{q', 17
                                            if _3713 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3761]:
                                                if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3939 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_3939] < _3649:
                                                        revert with 'NH{q', 17
                                                    if mem[_3939] - _3649 and 10^12 > -1 / mem[_3939] - _3649:
                                                        revert with 'NH{q', 17
                                                    if not _1806:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_3939]) - (10^12 * _3649) / _1806):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_3939]) - (10^12 * _3649) / _1806
                                                else:
                                                    mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4031 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4031] < _3649:
                                                        revert with 'NH{q', 17
                                                    if mem[_4031] - _3649 and 10^12 > -1 / mem[_4031] - _3649:
                                                        revert with 'NH{q', 17
                                                    if not _1806:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4031]) - (10^12 * _3649) / _1806):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4031]) - (10^12 * _3649) / _1806
                                            else:
                                                if mem[_3761] < _3713:
                                                    revert with 'NH{q', 17
                                                if not mem[_3761] - _3713:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4139 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4139] < _3649:
                                                        revert with 'NH{q', 17
                                                    if mem[_4139] - _3649 and 10^12 > -1 / mem[_4139] - _3649:
                                                        revert with 'NH{q', 17
                                                    if not _1806:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4139]) - (10^12 * _3649) / _1806):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4139]) - (10^12 * _3649) / _1806
                                                else:
                                                    mem[mem[64] + 36] = mem[_3761] - _3713
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, _3777 - _3713
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4215 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4215] < _3649:
                                                        revert with 'NH{q', 17
                                                    if mem[_4215] - _3649 and 10^12 > -1 / mem[_4215] - _3649:
                                                        revert with 'NH{q', 17
                                                    if not _1806:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4215]) - (10^12 * _3649) / _1806):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4215]) - (10^12 * _3649) / _1806
                                            poolInfo[idx].field_512 = block.number
                                    else:
                                        if block.number <= startBlock:
                                            if block.number < u:
                                                revert with 'NH{q', 17
                                            if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                revert with 'NH{q', 17
                                            if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3641 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3657 = mem[_3641]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3705 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3725 = mem[_3705]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3769 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3789 = mem[_3769]
                                                if _3725 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _3725 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3769]:
                                                    if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3977 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_3977] < _3657:
                                                            revert with 'NH{q', 17
                                                        if mem[_3977] - _3657 and 10^12 > -1 / mem[_3977] - _3657:
                                                            revert with 'NH{q', 17
                                                        if not _1806:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_3977]) - (10^12 * _3657) / _1806):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_3977]) - (10^12 * _3657) / _1806
                                                    else:
                                                        mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4092 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4092] < _3657:
                                                            revert with 'NH{q', 17
                                                        if mem[_4092] - _3657 and 10^12 > -1 / mem[_4092] - _3657:
                                                            revert with 'NH{q', 17
                                                        if not _1806:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4092]) - (10^12 * _3657) / _1806):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4092]) - (10^12 * _3657) / _1806
                                                else:
                                                    if mem[_3769] < _3725:
                                                        revert with 'NH{q', 17
                                                    if not mem[_3769] - _3725:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4178 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4178] < _3657:
                                                            revert with 'NH{q', 17
                                                        if mem[_4178] - _3657 and 10^12 > -1 / mem[_4178] - _3657:
                                                            revert with 'NH{q', 17
                                                        if not _1806:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4178]) - (10^12 * _3657) / _1806):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4178]) - (10^12 * _3657) / _1806
                                                    else:
                                                        mem[mem[64] + 36] = mem[_3769] - _3725
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _3789 - _3725
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4242 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4242] < _3657:
                                                            revert with 'NH{q', 17
                                                        if mem[_4242] - _3657 and 10^12 > -1 / mem[_4242] - _3657:
                                                            revert with 'NH{q', 17
                                                        if not _1806:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4242]) - (10^12 * _3657) / _1806):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4242]) - (10^12 * _3657) / _1806
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number < startBlock:
                                                revert with 'NH{q', 17
                                            if block.number - startBlock < 1:
                                                revert with 'NH{q', 17
                                            if not halvingPeriod:
                                                revert with 'NH{q', 18
                                            if not block.number + -startBlock - 1 / halvingPeriod:
                                                if block.number < u:
                                                    revert with 'NH{q', 17
                                                if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                    revert with 'NH{q', 17
                                                if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                    if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3809 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3823 = mem[_3809]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3938 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4029 = mem[_3938]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4181 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4245 = mem[_4181]
                                                    if _4029 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _4029 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4181]:
                                                        if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4341 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4341] < _3823:
                                                                revert with 'NH{q', 17
                                                            if mem[_4341] - _3823 and 10^12 > -1 / mem[_4341] - _3823:
                                                                revert with 'NH{q', 17
                                                            if not _1806:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4341]) - (10^12 * _3823) / _1806):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4341]) - (10^12 * _3823) / _1806
                                                        else:
                                                            mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4406 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4406] < _3823:
                                                                revert with 'NH{q', 17
                                                            if mem[_4406] - _3823 and 10^12 > -1 / mem[_4406] - _3823:
                                                                revert with 'NH{q', 17
                                                            if not _1806:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4406]) - (10^12 * _3823) / _1806):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4406]) - (10^12 * _3823) / _1806
                                                    else:
                                                        if mem[_4181] < _4029:
                                                            revert with 'NH{q', 17
                                                        if not mem[_4181] - _4029:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4457 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4457] < _3823:
                                                                revert with 'NH{q', 17
                                                            if mem[_4457] - _3823 and 10^12 > -1 / mem[_4457] - _3823:
                                                                revert with 'NH{q', 17
                                                            if not _1806:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4457]) - (10^12 * _3823) / _1806):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4457]) - (10^12 * _3823) / _1806
                                                        else:
                                                            mem[mem[64] + 36] = mem[_4181] - _4029
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _4245 - _4029
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4528 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4528] < _3823:
                                                                revert with 'NH{q', 17
                                                            if mem[_4528] - _3823 and 10^12 > -1 / mem[_4528] - _3823:
                                                                revert with 'NH{q', 17
                                                            if not _1806:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4528]) - (10^12 * _3823) / _1806):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4528]) - (10^12 * _3823) / _1806
                                                    poolInfo[idx].field_512 = block.number
                                            else:
                                                if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                    revert with 'NH{q', 17
                                                if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                    revert with 'NH{q', 18
                                                if block.number < u:
                                                    revert with 'NH{q', 17
                                                if block.number - u and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - u:
                                                    revert with 'NH{q', 17
                                                if t > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                    revert with 'NH{q', 17
                                                if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                    if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3871 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3937 = mem[_3871]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4137 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4213 = mem[_4137]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4284 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4297 = mem[_4284]
                                                    if _4213 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _4213 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4284]:
                                                        if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4453 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4453] < _3937:
                                                                revert with 'NH{q', 17
                                                            if mem[_4453] - _3937 and 10^12 > -1 / mem[_4453] - _3937:
                                                                revert with 'NH{q', 17
                                                            if not _1806:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4453]) - (10^12 * _3937) / _1806):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4453]) - (10^12 * _3937) / _1806
                                                        else:
                                                            mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4524 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4524] < _3937:
                                                                revert with 'NH{q', 17
                                                            if mem[_4524] - _3937 and 10^12 > -1 / mem[_4524] - _3937:
                                                                revert with 'NH{q', 17
                                                            if not _1806:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4524]) - (10^12 * _3937) / _1806):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4524]) - (10^12 * _3937) / _1806
                                                    else:
                                                        if mem[_4284] < _4213:
                                                            revert with 'NH{q', 17
                                                        if not mem[_4284] - _4213:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4570 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4570] < _3937:
                                                                revert with 'NH{q', 17
                                                            if mem[_4570] - _3937 and 10^12 > -1 / mem[_4570] - _3937:
                                                                revert with 'NH{q', 17
                                                            if not _1806:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4570]) - (10^12 * _3937) / _1806):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4570]) - (10^12 * _3937) / _1806
                                                        else:
                                                            mem[mem[64] + 36] = mem[_4284] - _4213
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _4297 - _4213
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4604 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4604] < _3937:
                                                                revert with 'NH{q', 17
                                                            if mem[_4604] - _3937 and 10^12 > -1 / mem[_4604] - _3937:
                                                                revert with 'NH{q', 17
                                                            if not _1806:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4604]) - (10^12 * _3937) / _1806):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4604]) - (10^12 * _3937) / _1806
                                                    poolInfo[idx].field_512 = block.number
        if idx == -1:
            revert with 'NH{q', 17
        idx = idx + 1
        continue 
    hCTPerBlock = arg1
}

function set(uint256 arg1, uint256 arg2, bool arg3) payable {
    mem[64] = 96
    require calldata.size - 4 >= 96
    require arg3 == arg3
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if arg1 >= poolInfo.length:
        revert with 0, 'pid over length'
    if arg3:
        idx = 0
        while idx < poolInfo.length:
            mem[0] = 5
            if block.number > poolInfo[idx].field_512:
                mem[0] = poolInfo[idx].field_0
                mem[32] = 2
                if stor2[stor5[idx].field_0]:
                    if not poolInfo[idx].field_1280:
                        poolInfo[idx].field_512 = block.number
                    else:
                        if 0 == halvingPeriod:
                            if 0 == halvingPeriod:
                                if block.number < poolInfo[idx].field_512:
                                    revert with 'NH{q', 17
                                if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                    revert with 'NH{q', 17
                                if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                    revert with 'NH{q', 17
                                if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                    if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                        revert with 'NH{q', 17
                                    if not totalAllocPoint:
                                        revert with 'NH{q', 18
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(HCTAddress)
                                    staticcall HCTAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1825 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _1834 = mem[_1825]
                                    require ext_code.size(HCTAddress)
                                    staticcall HCTAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1867 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _1881 = mem[_1867]
                                    require ext_code.size(HCTAddress)
                                    staticcall HCTAddress.maxSupply() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1912 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _1927 = mem[_1912]
                                    if _1881 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                        revert with 'NH{q', 17
                                    if _1881 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_1912]:
                                        if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2078 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if mem[_2078] < _1834:
                                                revert with 'NH{q', 17
                                            if mem[_2078] - _1834 and 10^12 > -1 / mem[_2078] - _1834:
                                                revert with 'NH{q', 17
                                            if not poolInfo[idx].field_1280:
                                                revert with 'NH{q', 18
                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2078]) - (10^12 * _1834) / poolInfo[idx].field_1280):
                                                revert with 'NH{q', 17
                                            poolInfo[idx].field_768 += (10^12 * mem[_2078]) - (10^12 * _1834) / poolInfo[idx].field_1280
                                        else:
                                            mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                            require ext_code.size(HCTAddress)
                                            call HCTAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2139 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if mem[_2139] < _1834:
                                                revert with 'NH{q', 17
                                            if mem[_2139] - _1834 and 10^12 > -1 / mem[_2139] - _1834:
                                                revert with 'NH{q', 17
                                            if not poolInfo[idx].field_1280:
                                                revert with 'NH{q', 18
                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2139]) - (10^12 * _1834) / poolInfo[idx].field_1280):
                                                revert with 'NH{q', 17
                                            poolInfo[idx].field_768 += (10^12 * mem[_2139]) - (10^12 * _1834) / poolInfo[idx].field_1280
                                    else:
                                        if mem[_1912] < _1881:
                                            revert with 'NH{q', 17
                                        if not mem[_1912] - _1881:
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2228 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if mem[_2228] < _1834:
                                                revert with 'NH{q', 17
                                            if mem[_2228] - _1834 and 10^12 > -1 / mem[_2228] - _1834:
                                                revert with 'NH{q', 17
                                            if not poolInfo[idx].field_1280:
                                                revert with 'NH{q', 18
                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2228]) - (10^12 * _1834) / poolInfo[idx].field_1280):
                                                revert with 'NH{q', 17
                                            poolInfo[idx].field_768 += (10^12 * mem[_2228]) - (10^12 * _1834) / poolInfo[idx].field_1280
                                        else:
                                            mem[mem[64] + 36] = mem[_1912] - _1881
                                            require ext_code.size(HCTAddress)
                                            call HCTAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args this.address, _1927 - _1881
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2304 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if mem[_2304] < _1834:
                                                revert with 'NH{q', 17
                                            if mem[_2304] - _1834 and 10^12 > -1 / mem[_2304] - _1834:
                                                revert with 'NH{q', 17
                                            if not poolInfo[idx].field_1280:
                                                revert with 'NH{q', 18
                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2304]) - (10^12 * _1834) / poolInfo[idx].field_1280):
                                                revert with 'NH{q', 17
                                            poolInfo[idx].field_768 += (10^12 * mem[_2304]) - (10^12 * _1834) / poolInfo[idx].field_1280
                                    poolInfo[idx].field_512 = block.number
                            else:
                                if block.number <= startBlock:
                                    if block.number < poolInfo[idx].field_512:
                                        revert with 'NH{q', 17
                                    if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                        revert with 'NH{q', 17
                                    if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                        revert with 'NH{q', 17
                                    if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                        if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                            revert with 'NH{q', 17
                                        if not totalAllocPoint:
                                            revert with 'NH{q', 18
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1829 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _1841 = mem[_1829]
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1874 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _1889 = mem[_1874]
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.maxSupply() with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1919 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _1938 = mem[_1919]
                                        if _1889 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                            revert with 'NH{q', 17
                                        if _1889 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_1919]:
                                            if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2099 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2099] < _1841:
                                                    revert with 'NH{q', 17
                                                if mem[_2099] - _1841 and 10^12 > -1 / mem[_2099] - _1841:
                                                    revert with 'NH{q', 17
                                                if not poolInfo[idx].field_1280:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2099]) - (10^12 * _1841) / poolInfo[idx].field_1280):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2099]) - (10^12 * _1841) / poolInfo[idx].field_1280
                                            else:
                                                mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                require ext_code.size(HCTAddress)
                                                call HCTAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2179 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2179] < _1841:
                                                    revert with 'NH{q', 17
                                                if mem[_2179] - _1841 and 10^12 > -1 / mem[_2179] - _1841:
                                                    revert with 'NH{q', 17
                                                if not poolInfo[idx].field_1280:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2179]) - (10^12 * _1841) / poolInfo[idx].field_1280):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2179]) - (10^12 * _1841) / poolInfo[idx].field_1280
                                        else:
                                            if mem[_1919] < _1889:
                                                revert with 'NH{q', 17
                                            if not mem[_1919] - _1889:
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2263 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2263] < _1841:
                                                    revert with 'NH{q', 17
                                                if mem[_2263] - _1841 and 10^12 > -1 / mem[_2263] - _1841:
                                                    revert with 'NH{q', 17
                                                if not poolInfo[idx].field_1280:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2263]) - (10^12 * _1841) / poolInfo[idx].field_1280):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2263]) - (10^12 * _1841) / poolInfo[idx].field_1280
                                            else:
                                                mem[mem[64] + 36] = mem[_1919] - _1889
                                                require ext_code.size(HCTAddress)
                                                call HCTAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args this.address, _1938 - _1889
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2342 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2342] < _1841:
                                                    revert with 'NH{q', 17
                                                if mem[_2342] - _1841 and 10^12 > -1 / mem[_2342] - _1841:
                                                    revert with 'NH{q', 17
                                                if not poolInfo[idx].field_1280:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2342]) - (10^12 * _1841) / poolInfo[idx].field_1280):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2342]) - (10^12 * _1841) / poolInfo[idx].field_1280
                                        poolInfo[idx].field_512 = block.number
                                else:
                                    if block.number < startBlock:
                                        revert with 'NH{q', 17
                                    if block.number - startBlock < 1:
                                        revert with 'NH{q', 17
                                    if not halvingPeriod:
                                        revert with 'NH{q', 18
                                    if not block.number + -startBlock - 1 / halvingPeriod:
                                        if block.number < poolInfo[idx].field_512:
                                            revert with 'NH{q', 17
                                        if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                            revert with 'NH{q', 17
                                        if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                            if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                revert with 'NH{q', 17
                                            if not totalAllocPoint:
                                                revert with 'NH{q', 18
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _1969 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _1990 = mem[_1969]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2077 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _2137 = mem[_2077]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.maxSupply() with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2266 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _2345 = mem[_2266]
                                            if _2137 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                revert with 'NH{q', 17
                                            if _2137 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2266]:
                                                if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2586 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2586] < _1990:
                                                        revert with 'NH{q', 17
                                                    if mem[_2586] - _1990 and 10^12 > -1 / mem[_2586] - _1990:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2586]) - (10^12 * _1990) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2586]) - (10^12 * _1990) / poolInfo[idx].field_1280
                                                else:
                                                    mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2671 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2671] < _1990:
                                                        revert with 'NH{q', 17
                                                    if mem[_2671] - _1990 and 10^12 > -1 / mem[_2671] - _1990:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2671]) - (10^12 * _1990) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2671]) - (10^12 * _1990) / poolInfo[idx].field_1280
                                            else:
                                                if mem[_2266] < _2137:
                                                    revert with 'NH{q', 17
                                                if not mem[_2266] - _2137:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2777 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2777] < _1990:
                                                        revert with 'NH{q', 17
                                                    if mem[_2777] - _1990 and 10^12 > -1 / mem[_2777] - _1990:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2777]) - (10^12 * _1990) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2777]) - (10^12 * _1990) / poolInfo[idx].field_1280
                                                else:
                                                    mem[mem[64] + 36] = mem[_2266] - _2137
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, _2345 - _2137
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2889 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2889] < _1990:
                                                        revert with 'NH{q', 17
                                                    if mem[_2889] - _1990 and 10^12 > -1 / mem[_2889] - _1990:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2889]) - (10^12 * _1990) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2889]) - (10^12 * _1990) / poolInfo[idx].field_1280
                                            poolInfo[idx].field_512 = block.number
                                    else:
                                        if block.number + -startBlock - 1 / halvingPeriod > 255:
                                            revert with 'NH{q', 17
                                        if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                            revert with 'NH{q', 18
                                        if block.number < poolInfo[idx].field_512:
                                            revert with 'NH{q', 17
                                        if block.number - poolInfo[idx].field_512 and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - poolInfo[idx].field_512:
                                            revert with 'NH{q', 17
                                        if 0 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                            revert with 'NH{q', 17
                                        if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                            if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                revert with 'NH{q', 17
                                            if not totalAllocPoint:
                                                revert with 'NH{q', 18
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2029 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _2076 = mem[_2029]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2226 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _2302 = mem[_2226]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.maxSupply() with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2426 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _2469 = mem[_2426]
                                            if _2302 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                revert with 'NH{q', 17
                                            if _2302 + ((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2426]:
                                                if not (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2773 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2773] < _2076:
                                                        revert with 'NH{q', 17
                                                    if mem[_2773] - _2076 and 10^12 > -1 / mem[_2773] - _2076:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2773]) - (10^12 * _2076) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2773]) - (10^12 * _2076) / poolInfo[idx].field_1280
                                                else:
                                                    mem[mem[64] + 36] = (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2885 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2885] < _2076:
                                                        revert with 'NH{q', 17
                                                    if mem[_2885] - _2076 and 10^12 > -1 / mem[_2885] - _2076:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2885]) - (10^12 * _2076) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2885]) - (10^12 * _2076) / poolInfo[idx].field_1280
                                            else:
                                                if mem[_2426] < _2302:
                                                    revert with 'NH{q', 17
                                                if not mem[_2426] - _2302:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3000 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_3000] < _2076:
                                                        revert with 'NH{q', 17
                                                    if mem[_3000] - _2076 and 10^12 > -1 / mem[_3000] - _2076:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_3000]) - (10^12 * _2076) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_3000]) - (10^12 * _2076) / poolInfo[idx].field_1280
                                                else:
                                                    mem[mem[64] + 36] = mem[_2426] - _2302
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, _2469 - _2302
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3078 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_3078] < _2076:
                                                        revert with 'NH{q', 17
                                                    if mem[_3078] - _2076 and 10^12 > -1 / mem[_3078] - _2076:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_3078]) - (10^12 * _2076) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_3078]) - (10^12 * _2076) / poolInfo[idx].field_1280
                                            poolInfo[idx].field_512 = block.number
                        else:
                            if poolInfo[idx].field_512 <= startBlock:
                                if 0 == halvingPeriod:
                                    if 0 == halvingPeriod:
                                        if block.number < poolInfo[idx].field_512:
                                            revert with 'NH{q', 17
                                        if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                            revert with 'NH{q', 17
                                        if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                            if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                revert with 'NH{q', 17
                                            if not totalAllocPoint:
                                                revert with 'NH{q', 18
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _1828 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _1840 = mem[_1828]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _1873 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _1888 = mem[_1873]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.maxSupply() with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _1918 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _1935 = mem[_1918]
                                            if _1888 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                revert with 'NH{q', 17
                                            if _1888 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_1918]:
                                                if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2094 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2094] < _1840:
                                                        revert with 'NH{q', 17
                                                    if mem[_2094] - _1840 and 10^12 > -1 / mem[_2094] - _1840:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2094]) - (10^12 * _1840) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2094]) - (10^12 * _1840) / poolInfo[idx].field_1280
                                                else:
                                                    mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2171 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2171] < _1840:
                                                        revert with 'NH{q', 17
                                                    if mem[_2171] - _1840 and 10^12 > -1 / mem[_2171] - _1840:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2171]) - (10^12 * _1840) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2171]) - (10^12 * _1840) / poolInfo[idx].field_1280
                                            else:
                                                if mem[_1918] < _1888:
                                                    revert with 'NH{q', 17
                                                if not mem[_1918] - _1888:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2256 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2256] < _1840:
                                                        revert with 'NH{q', 17
                                                    if mem[_2256] - _1840 and 10^12 > -1 / mem[_2256] - _1840:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2256]) - (10^12 * _1840) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2256]) - (10^12 * _1840) / poolInfo[idx].field_1280
                                                else:
                                                    mem[mem[64] + 36] = mem[_1918] - _1888
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, _1935 - _1888
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2338 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2338] < _1840:
                                                        revert with 'NH{q', 17
                                                    if mem[_2338] - _1840 and 10^12 > -1 / mem[_2338] - _1840:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2338]) - (10^12 * _1840) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2338]) - (10^12 * _1840) / poolInfo[idx].field_1280
                                            poolInfo[idx].field_512 = block.number
                                    else:
                                        if block.number <= startBlock:
                                            if block.number < poolInfo[idx].field_512:
                                                revert with 'NH{q', 17
                                            if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                                revert with 'NH{q', 17
                                            if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                                if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _1833 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _1848 = mem[_1833]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _1880 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _1898 = mem[_1880]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _1926 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _1950 = mem[_1926]
                                                if _1898 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _1898 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_1926]:
                                                    if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2126 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2126] < _1848:
                                                            revert with 'NH{q', 17
                                                        if mem[_2126] - _1848 and 10^12 > -1 / mem[_2126] - _1848:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2126]) - (10^12 * _1848) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2126]) - (10^12 * _1848) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2216 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2216] < _1848:
                                                            revert with 'NH{q', 17
                                                        if mem[_2216] - _1848 and 10^12 > -1 / mem[_2216] - _1848:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2216]) - (10^12 * _1848) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2216]) - (10^12 * _1848) / poolInfo[idx].field_1280
                                                else:
                                                    if mem[_1926] < _1898:
                                                        revert with 'NH{q', 17
                                                    if not mem[_1926] - _1898:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2296 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2296] < _1848:
                                                            revert with 'NH{q', 17
                                                        if mem[_2296] - _1848 and 10^12 > -1 / mem[_2296] - _1848:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2296]) - (10^12 * _1848) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2296]) - (10^12 * _1848) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = mem[_1926] - _1898
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _1950 - _1898
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2379 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2379] < _1848:
                                                            revert with 'NH{q', 17
                                                        if mem[_2379] - _1848 and 10^12 > -1 / mem[_2379] - _1848:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2379]) - (10^12 * _1848) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2379]) - (10^12 * _1848) / poolInfo[idx].field_1280
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number < startBlock:
                                                revert with 'NH{q', 17
                                            if block.number - startBlock < 1:
                                                revert with 'NH{q', 17
                                            if not halvingPeriod:
                                                revert with 'NH{q', 18
                                            if not block.number + -startBlock - 1 / halvingPeriod:
                                                if block.number < poolInfo[idx].field_512:
                                                    revert with 'NH{q', 17
                                                if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                                    revert with 'NH{q', 17
                                                if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                                    if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _1974 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2004 = mem[_1974]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2093 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2169 = mem[_2093]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2299 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2382 = mem[_2299]
                                                    if _2169 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _2169 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2299]:
                                                        if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2606 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2606] < _2004:
                                                                revert with 'NH{q', 17
                                                            if mem[_2606] - _2004 and 10^12 > -1 / mem[_2606] - _2004:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2606]) - (10^12 * _2004) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2606]) - (10^12 * _2004) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2712 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2712] < _2004:
                                                                revert with 'NH{q', 17
                                                            if mem[_2712] - _2004 and 10^12 > -1 / mem[_2712] - _2004:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2712]) - (10^12 * _2004) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2712]) - (10^12 * _2004) / poolInfo[idx].field_1280
                                                    else:
                                                        if mem[_2299] < _2169:
                                                            revert with 'NH{q', 17
                                                        if not mem[_2299] - _2169:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2812 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2812] < _2004:
                                                                revert with 'NH{q', 17
                                                            if mem[_2812] - _2004 and 10^12 > -1 / mem[_2812] - _2004:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2812]) - (10^12 * _2004) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2812]) - (10^12 * _2004) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = mem[_2299] - _2169
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _2382 - _2169
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2937 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2937] < _2004:
                                                                revert with 'NH{q', 17
                                                            if mem[_2937] - _2004 and 10^12 > -1 / mem[_2937] - _2004:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2937]) - (10^12 * _2004) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2937]) - (10^12 * _2004) / poolInfo[idx].field_1280
                                                    poolInfo[idx].field_512 = block.number
                                            else:
                                                if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                    revert with 'NH{q', 17
                                                if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                    revert with 'NH{q', 18
                                                if block.number < poolInfo[idx].field_512:
                                                    revert with 'NH{q', 17
                                                if block.number - poolInfo[idx].field_512 and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - poolInfo[idx].field_512:
                                                    revert with 'NH{q', 17
                                                if 0 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                    revert with 'NH{q', 17
                                                if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                    if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2044 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2092 = mem[_2044]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2254 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2336 = mem[_2254]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2445 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2486 = mem[_2445]
                                                    if _2336 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _2336 + ((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2445]:
                                                        if not (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2808 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2808] < _2092:
                                                                revert with 'NH{q', 17
                                                            if mem[_2808] - _2092 and 10^12 > -1 / mem[_2808] - _2092:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2808]) - (10^12 * _2092) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2808]) - (10^12 * _2092) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2933 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2933] < _2092:
                                                                revert with 'NH{q', 17
                                                            if mem[_2933] - _2092 and 10^12 > -1 / mem[_2933] - _2092:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2933]) - (10^12 * _2092) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2933]) - (10^12 * _2092) / poolInfo[idx].field_1280
                                                    else:
                                                        if mem[_2445] < _2336:
                                                            revert with 'NH{q', 17
                                                        if not mem[_2445] - _2336:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _3031 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_3031] < _2092:
                                                                revert with 'NH{q', 17
                                                            if mem[_3031] - _2092 and 10^12 > -1 / mem[_3031] - _2092:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_3031]) - (10^12 * _2092) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_3031]) - (10^12 * _2092) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = mem[_2445] - _2336
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _2486 - _2336
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _3100 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_3100] < _2092:
                                                                revert with 'NH{q', 17
                                                            if mem[_3100] - _2092 and 10^12 > -1 / mem[_3100] - _2092:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_3100]) - (10^12 * _2092) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_3100]) - (10^12 * _2092) / poolInfo[idx].field_1280
                                                    poolInfo[idx].field_512 = block.number
                                else:
                                    if block.number <= startBlock:
                                        if 0 == halvingPeriod:
                                            if block.number < poolInfo[idx].field_512:
                                                revert with 'NH{q', 17
                                            if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                                revert with 'NH{q', 17
                                            if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                                if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _1832 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _1847 = mem[_1832]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _1879 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _1897 = mem[_1879]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _1925 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _1947 = mem[_1925]
                                                if _1897 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _1897 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_1925]:
                                                    if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2122 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2122] < _1847:
                                                            revert with 'NH{q', 17
                                                        if mem[_2122] - _1847 and 10^12 > -1 / mem[_2122] - _1847:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2122]) - (10^12 * _1847) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2122]) - (10^12 * _1847) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2209 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2209] < _1847:
                                                            revert with 'NH{q', 17
                                                        if mem[_2209] - _1847 and 10^12 > -1 / mem[_2209] - _1847:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2209]) - (10^12 * _1847) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2209]) - (10^12 * _1847) / poolInfo[idx].field_1280
                                                else:
                                                    if mem[_1925] < _1897:
                                                        revert with 'NH{q', 17
                                                    if not mem[_1925] - _1897:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2291 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2291] < _1847:
                                                            revert with 'NH{q', 17
                                                        if mem[_2291] - _1847 and 10^12 > -1 / mem[_2291] - _1847:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2291]) - (10^12 * _1847) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2291]) - (10^12 * _1847) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = mem[_1925] - _1897
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _1947 - _1897
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2376 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2376] < _1847:
                                                            revert with 'NH{q', 17
                                                        if mem[_2376] - _1847 and 10^12 > -1 / mem[_2376] - _1847:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2376]) - (10^12 * _1847) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2376]) - (10^12 * _1847) / poolInfo[idx].field_1280
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number <= startBlock:
                                                if block.number < poolInfo[idx].field_512:
                                                    revert with 'NH{q', 17
                                                if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                                    revert with 'NH{q', 17
                                                if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                                    if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _1839 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _1855 = mem[_1839]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _1887 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _1907 = mem[_1887]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _1934 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _1961 = mem[_1934]
                                                    if _1907 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _1907 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_1934]:
                                                        if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2159 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2159] < _1855:
                                                                revert with 'NH{q', 17
                                                            if mem[_2159] - _1855 and 10^12 > -1 / mem[_2159] - _1855:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2159]) - (10^12 * _1855) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2159]) - (10^12 * _1855) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2247 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2247] < _1855:
                                                                revert with 'NH{q', 17
                                                            if mem[_2247] - _1855 and 10^12 > -1 / mem[_2247] - _1855:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2247]) - (10^12 * _1855) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2247]) - (10^12 * _1855) / poolInfo[idx].field_1280
                                                    else:
                                                        if mem[_1934] < _1907:
                                                            revert with 'NH{q', 17
                                                        if not mem[_1934] - _1907:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2331 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2331] < _1855:
                                                                revert with 'NH{q', 17
                                                            if mem[_2331] - _1855 and 10^12 > -1 / mem[_2331] - _1855:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2331]) - (10^12 * _1855) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2331]) - (10^12 * _1855) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = mem[_1934] - _1907
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _1961 - _1907
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2412 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2412] < _1855:
                                                                revert with 'NH{q', 17
                                                            if mem[_2412] - _1855 and 10^12 > -1 / mem[_2412] - _1855:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2412]) - (10^12 * _1855) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2412]) - (10^12 * _1855) / poolInfo[idx].field_1280
                                                    poolInfo[idx].field_512 = block.number
                                            else:
                                                if block.number < startBlock:
                                                    revert with 'NH{q', 17
                                                if block.number - startBlock < 1:
                                                    revert with 'NH{q', 17
                                                if not halvingPeriod:
                                                    revert with 'NH{q', 18
                                                if not block.number + -startBlock - 1 / halvingPeriod:
                                                    if block.number < poolInfo[idx].field_512:
                                                        revert with 'NH{q', 17
                                                    if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                                        revert with 'NH{q', 17
                                                    if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                                        revert with 'NH{q', 17
                                                    if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                                        if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                            revert with 'NH{q', 17
                                                        if not totalAllocPoint:
                                                            revert with 'NH{q', 18
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _1984 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _2020 = mem[_1984]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x18160ddd with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2121 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _2207 = mem[_2121]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.maxSupply() with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2334 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _2415 = mem[_2334]
                                                        if _2207 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                            revert with 'NH{q', 17
                                                        if _2207 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2334]:
                                                            if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _2641 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_2641] < _2020:
                                                                    revert with 'NH{q', 17
                                                                if mem[_2641] - _2020 and 10^12 > -1 / mem[_2641] - _2020:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2641]) - (10^12 * _2020) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_2641]) - (10^12 * _2020) / poolInfo[idx].field_1280
                                                            else:
                                                                mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _2751 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_2751] < _2020:
                                                                    revert with 'NH{q', 17
                                                                if mem[_2751] - _2020 and 10^12 > -1 / mem[_2751] - _2020:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2751]) - (10^12 * _2020) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_2751]) - (10^12 * _2020) / poolInfo[idx].field_1280
                                                        else:
                                                            if mem[_2334] < _2207:
                                                                revert with 'NH{q', 17
                                                            if not mem[_2334] - _2207:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _2865 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_2865] < _2020:
                                                                    revert with 'NH{q', 17
                                                                if mem[_2865] - _2020 and 10^12 > -1 / mem[_2865] - _2020:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2865]) - (10^12 * _2020) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_2865]) - (10^12 * _2020) / poolInfo[idx].field_1280
                                                            else:
                                                                mem[mem[64] + 36] = mem[_2334] - _2207
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, _2415 - _2207
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _2984 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_2984] < _2020:
                                                                    revert with 'NH{q', 17
                                                                if mem[_2984] - _2020 and 10^12 > -1 / mem[_2984] - _2020:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2984]) - (10^12 * _2020) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_2984]) - (10^12 * _2020) / poolInfo[idx].field_1280
                                                        poolInfo[idx].field_512 = block.number
                                                else:
                                                    if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                        revert with 'NH{q', 17
                                                    if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                        revert with 'NH{q', 18
                                                    if block.number < poolInfo[idx].field_512:
                                                        revert with 'NH{q', 17
                                                    if block.number - poolInfo[idx].field_512 and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - poolInfo[idx].field_512:
                                                        revert with 'NH{q', 17
                                                    if 0 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                        revert with 'NH{q', 17
                                                    if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                        if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                            revert with 'NH{q', 17
                                                        if not totalAllocPoint:
                                                            revert with 'NH{q', 18
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2064 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _2120 = mem[_2064]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x18160ddd with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2289 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _2374 = mem[_2289]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.maxSupply() with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2465 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _2507 = mem[_2465]
                                                        if _2374 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                            revert with 'NH{q', 17
                                                        if _2374 + ((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2465]:
                                                            if not (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _2861 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_2861] < _2120:
                                                                    revert with 'NH{q', 17
                                                                if mem[_2861] - _2120 and 10^12 > -1 / mem[_2861] - _2120:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2861]) - (10^12 * _2120) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_2861]) - (10^12 * _2120) / poolInfo[idx].field_1280
                                                            else:
                                                                mem[mem[64] + 36] = (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _2980 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_2980] < _2120:
                                                                    revert with 'NH{q', 17
                                                                if mem[_2980] - _2120 and 10^12 > -1 / mem[_2980] - _2120:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2980]) - (10^12 * _2120) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_2980]) - (10^12 * _2120) / poolInfo[idx].field_1280
                                                        else:
                                                            if mem[_2465] < _2374:
                                                                revert with 'NH{q', 17
                                                            if not mem[_2465] - _2374:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _3068 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_3068] < _2120:
                                                                    revert with 'NH{q', 17
                                                                if mem[_3068] - _2120 and 10^12 > -1 / mem[_3068] - _2120:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_3068]) - (10^12 * _2120) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_3068]) - (10^12 * _2120) / poolInfo[idx].field_1280
                                                            else:
                                                                mem[mem[64] + 36] = mem[_2465] - _2374
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, _2507 - _2374
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _3128 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_3128] < _2120:
                                                                    revert with 'NH{q', 17
                                                                if mem[_3128] - _2120 and 10^12 > -1 / mem[_3128] - _2120:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_3128]) - (10^12 * _2120) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_3128]) - (10^12 * _2120) / poolInfo[idx].field_1280
                                                        poolInfo[idx].field_512 = block.number
                                    else:
                                        if block.number < startBlock:
                                            revert with 'NH{q', 17
                                        if block.number - startBlock < 1:
                                            revert with 'NH{q', 17
                                        if not halvingPeriod:
                                            revert with 'NH{q', 18
                                        s = 0
                                        t = 0
                                        u = poolInfo[idx].field_512
                                        while s < block.number + -startBlock - 1 / halvingPeriod:
                                            if s == -1:
                                                revert with 'NH{q', 17
                                            if s + 1 and halvingPeriod > -1 / s + 1:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) > !startBlock:
                                                revert with 'NH{q', 17
                                            if 0 == halvingPeriod:
                                                if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                    revert with 'NH{q', 17
                                                if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                    revert with 'NH{q', 17
                                                if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                s = s + 1
                                                t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                                u = halvingPeriod + (s * halvingPeriod) + startBlock
                                                continue 
                                            if halvingPeriod + (s * halvingPeriod) + startBlock <= startBlock:
                                                if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                    revert with 'NH{q', 17
                                                if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                    revert with 'NH{q', 17
                                                if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                s = s + 1
                                                t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                                u = halvingPeriod + (s * halvingPeriod) + startBlock
                                                continue 
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < startBlock:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) < 1:
                                                revert with 'NH{q', 17
                                            if not halvingPeriod:
                                                revert with 'NH{q', 18
                                            if not halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                                if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                    revert with 'NH{q', 17
                                                if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                    revert with 'NH{q', 17
                                                if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                s = s + 1
                                                t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                                u = halvingPeriod + (s * halvingPeriod) + startBlock
                                                continue 
                                            if halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > 255:
                                                revert with 'NH{q', 17
                                            if not 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                                revert with 'NH{q', 18
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if 0 == halvingPeriod:
                                            if block.number < u:
                                                revert with 'NH{q', 17
                                            if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                revert with 'NH{q', 17
                                            if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3643 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3659 = mem[_3643]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3707 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3723 = mem[_3707]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3771 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3787 = mem[_3771]
                                                if _3723 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _3723 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3771]:
                                                    if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3957 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_3957] < _3659:
                                                            revert with 'NH{q', 17
                                                        if mem[_3957] - _3659 and 10^12 > -1 / mem[_3957] - _3659:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_3957]) - (10^12 * _3659) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_3957]) - (10^12 * _3659) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4057 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4057] < _3659:
                                                            revert with 'NH{q', 17
                                                        if mem[_4057] - _3659 and 10^12 > -1 / mem[_4057] - _3659:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4057]) - (10^12 * _3659) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4057]) - (10^12 * _3659) / poolInfo[idx].field_1280
                                                else:
                                                    if mem[_3771] < _3723:
                                                        revert with 'NH{q', 17
                                                    if not mem[_3771] - _3723:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4157 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4157] < _3659:
                                                            revert with 'NH{q', 17
                                                        if mem[_4157] - _3659 and 10^12 > -1 / mem[_4157] - _3659:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4157]) - (10^12 * _3659) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4157]) - (10^12 * _3659) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = mem[_3771] - _3723
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _3787 - _3723
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4229 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4229] < _3659:
                                                            revert with 'NH{q', 17
                                                        if mem[_4229] - _3659 and 10^12 > -1 / mem[_4229] - _3659:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4229]) - (10^12 * _3659) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4229]) - (10^12 * _3659) / poolInfo[idx].field_1280
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number <= startBlock:
                                                if block.number < u:
                                                    revert with 'NH{q', 17
                                                if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                    revert with 'NH{q', 17
                                                if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                    if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3651 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3667 = mem[_3651]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3715 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3739 = mem[_3715]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3779 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3803 = mem[_3779]
                                                    if _3739 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _3739 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3779]:
                                                        if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _3995 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_3995] < _3667:
                                                                revert with 'NH{q', 17
                                                            if mem[_3995] - _3667 and 10^12 > -1 / mem[_3995] - _3667:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_3995]) - (10^12 * _3667) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_3995]) - (10^12 * _3667) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4112 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4112] < _3667:
                                                                revert with 'NH{q', 17
                                                            if mem[_4112] - _3667 and 10^12 > -1 / mem[_4112] - _3667:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4112]) - (10^12 * _3667) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4112]) - (10^12 * _3667) / poolInfo[idx].field_1280
                                                    else:
                                                        if mem[_3779] < _3739:
                                                            revert with 'NH{q', 17
                                                        if not mem[_3779] - _3739:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4196 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4196] < _3667:
                                                                revert with 'NH{q', 17
                                                            if mem[_4196] - _3667 and 10^12 > -1 / mem[_4196] - _3667:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4196]) - (10^12 * _3667) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4196]) - (10^12 * _3667) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = mem[_3779] - _3739
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _3803 - _3739
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4260 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4260] < _3667:
                                                                revert with 'NH{q', 17
                                                            if mem[_4260] - _3667 and 10^12 > -1 / mem[_4260] - _3667:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4260]) - (10^12 * _3667) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4260]) - (10^12 * _3667) / poolInfo[idx].field_1280
                                                    poolInfo[idx].field_512 = block.number
                                            else:
                                                if block.number < startBlock:
                                                    revert with 'NH{q', 17
                                                if block.number - startBlock < 1:
                                                    revert with 'NH{q', 17
                                                if not halvingPeriod:
                                                    revert with 'NH{q', 18
                                                if not block.number + -startBlock - 1 / halvingPeriod:
                                                    if block.number < u:
                                                        revert with 'NH{q', 17
                                                    if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                        revert with 'NH{q', 17
                                                    if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                        revert with 'NH{q', 17
                                                    if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                        if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                            revert with 'NH{q', 17
                                                        if not totalAllocPoint:
                                                            revert with 'NH{q', 18
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3819 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _3837 = mem[_3819]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x18160ddd with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3956 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4055 = mem[_3956]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.maxSupply() with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4199 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4263 = mem[_4199]
                                                        if _4055 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                            revert with 'NH{q', 17
                                                        if _4055 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4199]:
                                                            if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4355 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4355] < _3837:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4355] - _3837 and 10^12 > -1 / mem[_4355] - _3837:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4355]) - (10^12 * _3837) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4355]) - (10^12 * _3837) / poolInfo[idx].field_1280
                                                            else:
                                                                mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4426 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4426] < _3837:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4426] - _3837 and 10^12 > -1 / mem[_4426] - _3837:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4426]) - (10^12 * _3837) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4426]) - (10^12 * _3837) / poolInfo[idx].field_1280
                                                        else:
                                                            if mem[_4199] < _4055:
                                                                revert with 'NH{q', 17
                                                            if not mem[_4199] - _4055:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4479 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4479] < _3837:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4479] - _3837 and 10^12 > -1 / mem[_4479] - _3837:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4479]) - (10^12 * _3837) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4479]) - (10^12 * _3837) / poolInfo[idx].field_1280
                                                            else:
                                                                mem[mem[64] + 36] = mem[_4199] - _4055
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, _4263 - _4055
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4548 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4548] < _3837:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4548] - _3837 and 10^12 > -1 / mem[_4548] - _3837:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4548]) - (10^12 * _3837) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4548]) - (10^12 * _3837) / poolInfo[idx].field_1280
                                                        poolInfo[idx].field_512 = block.number
                                                else:
                                                    if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                        revert with 'NH{q', 17
                                                    if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                        revert with 'NH{q', 18
                                                    if block.number < u:
                                                        revert with 'NH{q', 17
                                                    if block.number - u and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - u:
                                                        revert with 'NH{q', 17
                                                    if t > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                        revert with 'NH{q', 17
                                                    if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                        if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                            revert with 'NH{q', 17
                                                        if not totalAllocPoint:
                                                            revert with 'NH{q', 18
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3893 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _3955 = mem[_3893]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x18160ddd with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4155 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4227 = mem[_4155]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.maxSupply() with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4296 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4307 = mem[_4296]
                                                        if _4227 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                            revert with 'NH{q', 17
                                                        if _4227 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4296]:
                                                            if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4475 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4475] < _3955:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4475] - _3955 and 10^12 > -1 / mem[_4475] - _3955:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4475]) - (10^12 * _3955) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4475]) - (10^12 * _3955) / poolInfo[idx].field_1280
                                                            else:
                                                                mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4544 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4544] < _3955:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4544] - _3955 and 10^12 > -1 / mem[_4544] - _3955:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4544]) - (10^12 * _3955) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4544]) - (10^12 * _3955) / poolInfo[idx].field_1280
                                                        else:
                                                            if mem[_4296] < _4227:
                                                                revert with 'NH{q', 17
                                                            if not mem[_4296] - _4227:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4588 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4588] < _3955:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4588] - _3955 and 10^12 > -1 / mem[_4588] - _3955:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4588]) - (10^12 * _3955) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4588]) - (10^12 * _3955) / poolInfo[idx].field_1280
                                                            else:
                                                                mem[mem[64] + 36] = mem[_4296] - _4227
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, _4307 - _4227
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4616 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4616] < _3955:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4616] - _3955 and 10^12 > -1 / mem[_4616] - _3955:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4616]) - (10^12 * _3955) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4616]) - (10^12 * _3955) / poolInfo[idx].field_1280
                                                        poolInfo[idx].field_512 = block.number
                            else:
                                if poolInfo[idx].field_512 < startBlock:
                                    revert with 'NH{q', 17
                                if poolInfo[idx].field_512 - startBlock < 1:
                                    revert with 'NH{q', 17
                                if not halvingPeriod:
                                    revert with 'NH{q', 18
                                if 0 == halvingPeriod:
                                    s = poolInfo[idx].field_512 + -startBlock - 1 / halvingPeriod
                                    t = 0
                                    u = poolInfo[idx].field_512
                                    while s < 0:
                                        if s == -1:
                                            revert with 'NH{q', 17
                                        if s + 1 and halvingPeriod > -1 / s + 1:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) > !startBlock:
                                            revert with 'NH{q', 17
                                        if 0 == halvingPeriod:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) + startBlock <= startBlock:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) + startBlock < startBlock:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) < 1:
                                            revert with 'NH{q', 17
                                        if not halvingPeriod:
                                            revert with 'NH{q', 18
                                        if not halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > 255:
                                            revert with 'NH{q', 17
                                        if not 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                            revert with 'NH{q', 18
                                        if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                            revert with 'NH{q', 17
                                        if t > !((halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)):
                                            revert with 'NH{q', 17
                                        s = s + 1
                                        t = t + (halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)
                                        u = halvingPeriod + (s * halvingPeriod) + startBlock
                                        continue 
                                    if 0 == halvingPeriod:
                                        if block.number < u:
                                            revert with 'NH{q', 17
                                        if block.number - u and hCTPerBlock > -1 / block.number - u:
                                            revert with 'NH{q', 17
                                        if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                revert with 'NH{q', 17
                                            if not totalAllocPoint:
                                                revert with 'NH{q', 18
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3646 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3662 = mem[_3646]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3710 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3726 = mem[_3710]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.maxSupply() with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3774 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3790 = mem[_3774]
                                            if _3726 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                revert with 'NH{q', 17
                                            if _3726 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3774]:
                                                if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3972 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_3972] < _3662:
                                                        revert with 'NH{q', 17
                                                    if mem[_3972] - _3662 and 10^12 > -1 / mem[_3972] - _3662:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_3972]) - (10^12 * _3662) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_3972]) - (10^12 * _3662) / poolInfo[idx].field_1280
                                                else:
                                                    mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4084 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4084] < _3662:
                                                        revert with 'NH{q', 17
                                                    if mem[_4084] - _3662 and 10^12 > -1 / mem[_4084] - _3662:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4084]) - (10^12 * _3662) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4084]) - (10^12 * _3662) / poolInfo[idx].field_1280
                                            else:
                                                if mem[_3774] < _3726:
                                                    revert with 'NH{q', 17
                                                if not mem[_3774] - _3726:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4172 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4172] < _3662:
                                                        revert with 'NH{q', 17
                                                    if mem[_4172] - _3662 and 10^12 > -1 / mem[_4172] - _3662:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4172]) - (10^12 * _3662) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4172]) - (10^12 * _3662) / poolInfo[idx].field_1280
                                                else:
                                                    mem[mem[64] + 36] = mem[_3774] - _3726
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, _3790 - _3726
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4238 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4238] < _3662:
                                                        revert with 'NH{q', 17
                                                    if mem[_4238] - _3662 and 10^12 > -1 / mem[_4238] - _3662:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4238]) - (10^12 * _3662) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4238]) - (10^12 * _3662) / poolInfo[idx].field_1280
                                            poolInfo[idx].field_512 = block.number
                                    else:
                                        if block.number <= startBlock:
                                            if block.number < u:
                                                revert with 'NH{q', 17
                                            if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                revert with 'NH{q', 17
                                            if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3654 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3670 = mem[_3654]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3718 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3748 = mem[_3718]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3782 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3812 = mem[_3782]
                                                if _3748 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _3748 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3782]:
                                                    if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4010 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4010] < _3670:
                                                            revert with 'NH{q', 17
                                                        if mem[_4010] - _3670 and 10^12 > -1 / mem[_4010] - _3670:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4010]) - (10^12 * _3670) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4010]) - (10^12 * _3670) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4130 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4130] < _3670:
                                                            revert with 'NH{q', 17
                                                        if mem[_4130] - _3670 and 10^12 > -1 / mem[_4130] - _3670:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4130]) - (10^12 * _3670) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4130]) - (10^12 * _3670) / poolInfo[idx].field_1280
                                                else:
                                                    if mem[_3782] < _3748:
                                                        revert with 'NH{q', 17
                                                    if not mem[_3782] - _3748:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4211 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4211] < _3670:
                                                            revert with 'NH{q', 17
                                                        if mem[_4211] - _3670 and 10^12 > -1 / mem[_4211] - _3670:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4211]) - (10^12 * _3670) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4211]) - (10^12 * _3670) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = mem[_3782] - _3748
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _3812 - _3748
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4275 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4275] < _3670:
                                                            revert with 'NH{q', 17
                                                        if mem[_4275] - _3670 and 10^12 > -1 / mem[_4275] - _3670:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4275]) - (10^12 * _3670) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4275]) - (10^12 * _3670) / poolInfo[idx].field_1280
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number < startBlock:
                                                revert with 'NH{q', 17
                                            if block.number - startBlock < 1:
                                                revert with 'NH{q', 17
                                            if not halvingPeriod:
                                                revert with 'NH{q', 18
                                            if not block.number + -startBlock - 1 / halvingPeriod:
                                                if block.number < u:
                                                    revert with 'NH{q', 17
                                                if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                    revert with 'NH{q', 17
                                                if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                    if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3822 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3846 = mem[_3822]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3971 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4082 = mem[_3971]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4214 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4278 = mem[_4214]
                                                    if _4082 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _4082 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4214]:
                                                        if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4364 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4364] < _3846:
                                                                revert with 'NH{q', 17
                                                            if mem[_4364] - _3846 and 10^12 > -1 / mem[_4364] - _3846:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4364]) - (10^12 * _3846) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4364]) - (10^12 * _3846) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4444 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4444] < _3846:
                                                                revert with 'NH{q', 17
                                                            if mem[_4444] - _3846 and 10^12 > -1 / mem[_4444] - _3846:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4444]) - (10^12 * _3846) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4444]) - (10^12 * _3846) / poolInfo[idx].field_1280
                                                    else:
                                                        if mem[_4214] < _4082:
                                                            revert with 'NH{q', 17
                                                        if not mem[_4214] - _4082:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4500 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4500] < _3846:
                                                                revert with 'NH{q', 17
                                                            if mem[_4500] - _3846 and 10^12 > -1 / mem[_4500] - _3846:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4500]) - (10^12 * _3846) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4500]) - (10^12 * _3846) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = mem[_4214] - _4082
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _4278 - _4082
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4566 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4566] < _3846:
                                                                revert with 'NH{q', 17
                                                            if mem[_4566] - _3846 and 10^12 > -1 / mem[_4566] - _3846:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4566]) - (10^12 * _3846) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4566]) - (10^12 * _3846) / poolInfo[idx].field_1280
                                                    poolInfo[idx].field_512 = block.number
                                            else:
                                                if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                    revert with 'NH{q', 17
                                                if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                    revert with 'NH{q', 18
                                                if block.number < u:
                                                    revert with 'NH{q', 17
                                                if block.number - u and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - u:
                                                    revert with 'NH{q', 17
                                                if t > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                    revert with 'NH{q', 17
                                                if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                    if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3914 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3970 = mem[_3914]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4170 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4236 = mem[_4170]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4302 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4310 = mem[_4302]
                                                    if _4236 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _4236 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4302]:
                                                        if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4496 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4496] < _3970:
                                                                revert with 'NH{q', 17
                                                            if mem[_4496] - _3970 and 10^12 > -1 / mem[_4496] - _3970:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4496]) - (10^12 * _3970) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4496]) - (10^12 * _3970) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4562 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4562] < _3970:
                                                                revert with 'NH{q', 17
                                                            if mem[_4562] - _3970 and 10^12 > -1 / mem[_4562] - _3970:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4562]) - (10^12 * _3970) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4562]) - (10^12 * _3970) / poolInfo[idx].field_1280
                                                    else:
                                                        if mem[_4302] < _4236:
                                                            revert with 'NH{q', 17
                                                        if not mem[_4302] - _4236:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4603 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4603] < _3970:
                                                                revert with 'NH{q', 17
                                                            if mem[_4603] - _3970 and 10^12 > -1 / mem[_4603] - _3970:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4603]) - (10^12 * _3970) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4603]) - (10^12 * _3970) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = mem[_4302] - _4236
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _4310 - _4236
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4622 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4622] < _3970:
                                                                revert with 'NH{q', 17
                                                            if mem[_4622] - _3970 and 10^12 > -1 / mem[_4622] - _3970:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4622]) - (10^12 * _3970) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4622]) - (10^12 * _3970) / poolInfo[idx].field_1280
                                                    poolInfo[idx].field_512 = block.number
                                else:
                                    if block.number <= startBlock:
                                        s = poolInfo[idx].field_512 + -startBlock - 1 / halvingPeriod
                                        t = 0
                                        u = poolInfo[idx].field_512
                                        while s < 0:
                                            if s == -1:
                                                revert with 'NH{q', 17
                                            if s + 1 and halvingPeriod > -1 / s + 1:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) > !startBlock:
                                                revert with 'NH{q', 17
                                            if 0 == halvingPeriod:
                                                if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                    revert with 'NH{q', 17
                                                if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                    revert with 'NH{q', 17
                                                if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                s = s + 1
                                                t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                                u = halvingPeriod + (s * halvingPeriod) + startBlock
                                                continue 
                                            if halvingPeriod + (s * halvingPeriod) + startBlock <= startBlock:
                                                if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                    revert with 'NH{q', 17
                                                if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                    revert with 'NH{q', 17
                                                if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                s = s + 1
                                                t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                                u = halvingPeriod + (s * halvingPeriod) + startBlock
                                                continue 
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < startBlock:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) < 1:
                                                revert with 'NH{q', 17
                                            if not halvingPeriod:
                                                revert with 'NH{q', 18
                                            if not halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                                if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                    revert with 'NH{q', 17
                                                if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                    revert with 'NH{q', 17
                                                if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                s = s + 1
                                                t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                                u = halvingPeriod + (s * halvingPeriod) + startBlock
                                                continue 
                                            if halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > 255:
                                                revert with 'NH{q', 17
                                            if not 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                                revert with 'NH{q', 18
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if 0 == halvingPeriod:
                                            if block.number < u:
                                                revert with 'NH{q', 17
                                            if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                revert with 'NH{q', 17
                                            if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3644 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3660 = mem[_3644]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3708 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3724 = mem[_3708]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3772 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3788 = mem[_3772]
                                                if _3724 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _3724 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3772]:
                                                    if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3962 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_3962] < _3660:
                                                            revert with 'NH{q', 17
                                                        if mem[_3962] - _3660 and 10^12 > -1 / mem[_3962] - _3660:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_3962]) - (10^12 * _3660) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_3962]) - (10^12 * _3660) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4066 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4066] < _3660:
                                                            revert with 'NH{q', 17
                                                        if mem[_4066] - _3660 and 10^12 > -1 / mem[_4066] - _3660:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4066]) - (10^12 * _3660) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4066]) - (10^12 * _3660) / poolInfo[idx].field_1280
                                                else:
                                                    if mem[_3772] < _3724:
                                                        revert with 'NH{q', 17
                                                    if not mem[_3772] - _3724:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4162 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4162] < _3660:
                                                            revert with 'NH{q', 17
                                                        if mem[_4162] - _3660 and 10^12 > -1 / mem[_4162] - _3660:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4162]) - (10^12 * _3660) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4162]) - (10^12 * _3660) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = mem[_3772] - _3724
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _3788 - _3724
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4232 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4232] < _3660:
                                                            revert with 'NH{q', 17
                                                        if mem[_4232] - _3660 and 10^12 > -1 / mem[_4232] - _3660:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4232]) - (10^12 * _3660) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4232]) - (10^12 * _3660) / poolInfo[idx].field_1280
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number <= startBlock:
                                                if block.number < u:
                                                    revert with 'NH{q', 17
                                                if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                    revert with 'NH{q', 17
                                                if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                    if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3652 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3668 = mem[_3652]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3716 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3742 = mem[_3716]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3780 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3806 = mem[_3780]
                                                    if _3742 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _3742 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3780]:
                                                        if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4000 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4000] < _3668:
                                                                revert with 'NH{q', 17
                                                            if mem[_4000] - _3668 and 10^12 > -1 / mem[_4000] - _3668:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4000]) - (10^12 * _3668) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4000]) - (10^12 * _3668) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4118 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4118] < _3668:
                                                                revert with 'NH{q', 17
                                                            if mem[_4118] - _3668 and 10^12 > -1 / mem[_4118] - _3668:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4118]) - (10^12 * _3668) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4118]) - (10^12 * _3668) / poolInfo[idx].field_1280
                                                    else:
                                                        if mem[_3780] < _3742:
                                                            revert with 'NH{q', 17
                                                        if not mem[_3780] - _3742:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4201 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4201] < _3668:
                                                                revert with 'NH{q', 17
                                                            if mem[_4201] - _3668 and 10^12 > -1 / mem[_4201] - _3668:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4201]) - (10^12 * _3668) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4201]) - (10^12 * _3668) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = mem[_3780] - _3742
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _3806 - _3742
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4265 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4265] < _3668:
                                                                revert with 'NH{q', 17
                                                            if mem[_4265] - _3668 and 10^12 > -1 / mem[_4265] - _3668:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4265]) - (10^12 * _3668) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4265]) - (10^12 * _3668) / poolInfo[idx].field_1280
                                                    poolInfo[idx].field_512 = block.number
                                            else:
                                                if block.number < startBlock:
                                                    revert with 'NH{q', 17
                                                if block.number - startBlock < 1:
                                                    revert with 'NH{q', 17
                                                if not halvingPeriod:
                                                    revert with 'NH{q', 18
                                                if not block.number + -startBlock - 1 / halvingPeriod:
                                                    if block.number < u:
                                                        revert with 'NH{q', 17
                                                    if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                        revert with 'NH{q', 17
                                                    if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                        revert with 'NH{q', 17
                                                    if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                        if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                            revert with 'NH{q', 17
                                                        if not totalAllocPoint:
                                                            revert with 'NH{q', 18
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3820 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _3840 = mem[_3820]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x18160ddd with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3961 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4064 = mem[_3961]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.maxSupply() with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4204 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4268 = mem[_4204]
                                                        if _4064 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                            revert with 'NH{q', 17
                                                        if _4064 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4204]:
                                                            if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4358 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4358] < _3840:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4358] - _3840 and 10^12 > -1 / mem[_4358] - _3840:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4358]) - (10^12 * _3840) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4358]) - (10^12 * _3840) / poolInfo[idx].field_1280
                                                            else:
                                                                mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4432 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4432] < _3840:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4432] - _3840 and 10^12 > -1 / mem[_4432] - _3840:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4432]) - (10^12 * _3840) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4432]) - (10^12 * _3840) / poolInfo[idx].field_1280
                                                        else:
                                                            if mem[_4204] < _4064:
                                                                revert with 'NH{q', 17
                                                            if not mem[_4204] - _4064:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4486 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4486] < _3840:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4486] - _3840 and 10^12 > -1 / mem[_4486] - _3840:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4486]) - (10^12 * _3840) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4486]) - (10^12 * _3840) / poolInfo[idx].field_1280
                                                            else:
                                                                mem[mem[64] + 36] = mem[_4204] - _4064
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, _4268 - _4064
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4554 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4554] < _3840:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4554] - _3840 and 10^12 > -1 / mem[_4554] - _3840:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4554]) - (10^12 * _3840) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4554]) - (10^12 * _3840) / poolInfo[idx].field_1280
                                                        poolInfo[idx].field_512 = block.number
                                                else:
                                                    if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                        revert with 'NH{q', 17
                                                    if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                        revert with 'NH{q', 18
                                                    if block.number < u:
                                                        revert with 'NH{q', 17
                                                    if block.number - u and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - u:
                                                        revert with 'NH{q', 17
                                                    if t > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                        revert with 'NH{q', 17
                                                    if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                        if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                            revert with 'NH{q', 17
                                                        if not totalAllocPoint:
                                                            revert with 'NH{q', 18
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3900 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _3960 = mem[_3900]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x18160ddd with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4160 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4230 = mem[_4160]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.maxSupply() with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4298 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4308 = mem[_4298]
                                                        if _4230 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                            revert with 'NH{q', 17
                                                        if _4230 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4298]:
                                                            if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4482 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4482] < _3960:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4482] - _3960 and 10^12 > -1 / mem[_4482] - _3960:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4482]) - (10^12 * _3960) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4482]) - (10^12 * _3960) / poolInfo[idx].field_1280
                                                            else:
                                                                mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4550 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4550] < _3960:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4550] - _3960 and 10^12 > -1 / mem[_4550] - _3960:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4550]) - (10^12 * _3960) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4550]) - (10^12 * _3960) / poolInfo[idx].field_1280
                                                        else:
                                                            if mem[_4298] < _4230:
                                                                revert with 'NH{q', 17
                                                            if not mem[_4298] - _4230:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4593 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4593] < _3960:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4593] - _3960 and 10^12 > -1 / mem[_4593] - _3960:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4593]) - (10^12 * _3960) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4593]) - (10^12 * _3960) / poolInfo[idx].field_1280
                                                            else:
                                                                mem[mem[64] + 36] = mem[_4298] - _4230
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, _4308 - _4230
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4618 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4618] < _3960:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4618] - _3960 and 10^12 > -1 / mem[_4618] - _3960:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4618]) - (10^12 * _3960) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4618]) - (10^12 * _3960) / poolInfo[idx].field_1280
                                                        poolInfo[idx].field_512 = block.number
                                    else:
                                        if block.number < startBlock:
                                            revert with 'NH{q', 17
                                        if block.number - startBlock < 1:
                                            revert with 'NH{q', 17
                                        if not halvingPeriod:
                                            revert with 'NH{q', 18
                                        s = poolInfo[idx].field_512 + -startBlock - 1 / halvingPeriod
                                        t = 0
                                        u = poolInfo[idx].field_512
                                        while s < block.number + -startBlock - 1 / halvingPeriod:
                                            if s == -1:
                                                revert with 'NH{q', 17
                                            if s + 1 and halvingPeriod > -1 / s + 1:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) > !startBlock:
                                                revert with 'NH{q', 17
                                            if 0 == halvingPeriod:
                                                if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                    revert with 'NH{q', 17
                                                if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                    revert with 'NH{q', 17
                                                if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                s = s + 1
                                                t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                                u = halvingPeriod + (s * halvingPeriod) + startBlock
                                                continue 
                                            if halvingPeriod + (s * halvingPeriod) + startBlock <= startBlock:
                                                if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                    revert with 'NH{q', 17
                                                if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                    revert with 'NH{q', 17
                                                if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                s = s + 1
                                                t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                                u = halvingPeriod + (s * halvingPeriod) + startBlock
                                                continue 
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < startBlock:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) < 1:
                                                revert with 'NH{q', 17
                                            if not halvingPeriod:
                                                revert with 'NH{q', 18
                                            if not halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                                if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                    revert with 'NH{q', 17
                                                if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                    revert with 'NH{q', 17
                                                if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                s = s + 1
                                                t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                                u = halvingPeriod + (s * halvingPeriod) + startBlock
                                                continue 
                                            if halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > 255:
                                                revert with 'NH{q', 17
                                            if not 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                                revert with 'NH{q', 18
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if 0 == halvingPeriod:
                                            if block.number < u:
                                                revert with 'NH{q', 17
                                            if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                revert with 'NH{q', 17
                                            if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3645 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3661 = mem[_3645]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3709 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3725 = mem[_3709]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3773 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3789 = mem[_3773]
                                                if _3725 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _3725 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3773]:
                                                    if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3967 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_3967] < _3661:
                                                            revert with 'NH{q', 17
                                                        if mem[_3967] - _3661 and 10^12 > -1 / mem[_3967] - _3661:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_3967]) - (10^12 * _3661) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_3967]) - (10^12 * _3661) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4075 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4075] < _3661:
                                                            revert with 'NH{q', 17
                                                        if mem[_4075] - _3661 and 10^12 > -1 / mem[_4075] - _3661:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4075]) - (10^12 * _3661) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4075]) - (10^12 * _3661) / poolInfo[idx].field_1280
                                                else:
                                                    if mem[_3773] < _3725:
                                                        revert with 'NH{q', 17
                                                    if not mem[_3773] - _3725:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4167 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4167] < _3661:
                                                            revert with 'NH{q', 17
                                                        if mem[_4167] - _3661 and 10^12 > -1 / mem[_4167] - _3661:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4167]) - (10^12 * _3661) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4167]) - (10^12 * _3661) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = mem[_3773] - _3725
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _3789 - _3725
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4235 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4235] < _3661:
                                                            revert with 'NH{q', 17
                                                        if mem[_4235] - _3661 and 10^12 > -1 / mem[_4235] - _3661:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4235]) - (10^12 * _3661) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4235]) - (10^12 * _3661) / poolInfo[idx].field_1280
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number <= startBlock:
                                                if block.number < u:
                                                    revert with 'NH{q', 17
                                                if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                    revert with 'NH{q', 17
                                                if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                    if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3653 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3669 = mem[_3653]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3717 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3745 = mem[_3717]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3781 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3809 = mem[_3781]
                                                    if _3745 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _3745 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3781]:
                                                        if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4005 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4005] < _3669:
                                                                revert with 'NH{q', 17
                                                            if mem[_4005] - _3669 and 10^12 > -1 / mem[_4005] - _3669:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4005]) - (10^12 * _3669) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4005]) - (10^12 * _3669) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4124 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4124] < _3669:
                                                                revert with 'NH{q', 17
                                                            if mem[_4124] - _3669 and 10^12 > -1 / mem[_4124] - _3669:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4124]) - (10^12 * _3669) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4124]) - (10^12 * _3669) / poolInfo[idx].field_1280
                                                    else:
                                                        if mem[_3781] < _3745:
                                                            revert with 'NH{q', 17
                                                        if not mem[_3781] - _3745:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4206 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4206] < _3669:
                                                                revert with 'NH{q', 17
                                                            if mem[_4206] - _3669 and 10^12 > -1 / mem[_4206] - _3669:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4206]) - (10^12 * _3669) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4206]) - (10^12 * _3669) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = mem[_3781] - _3745
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _3809 - _3745
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4270 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4270] < _3669:
                                                                revert with 'NH{q', 17
                                                            if mem[_4270] - _3669 and 10^12 > -1 / mem[_4270] - _3669:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4270]) - (10^12 * _3669) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4270]) - (10^12 * _3669) / poolInfo[idx].field_1280
                                                    poolInfo[idx].field_512 = block.number
                                            else:
                                                if block.number < startBlock:
                                                    revert with 'NH{q', 17
                                                if block.number - startBlock < 1:
                                                    revert with 'NH{q', 17
                                                if not halvingPeriod:
                                                    revert with 'NH{q', 18
                                                if not block.number + -startBlock - 1 / halvingPeriod:
                                                    if block.number < u:
                                                        revert with 'NH{q', 17
                                                    if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                        revert with 'NH{q', 17
                                                    if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                        revert with 'NH{q', 17
                                                    if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                        if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                            revert with 'NH{q', 17
                                                        if not totalAllocPoint:
                                                            revert with 'NH{q', 18
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3821 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _3843 = mem[_3821]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x18160ddd with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3966 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4073 = mem[_3966]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.maxSupply() with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4209 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4273 = mem[_4209]
                                                        if _4073 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                            revert with 'NH{q', 17
                                                        if _4073 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4209]:
                                                            if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4361 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4361] < _3843:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4361] - _3843 and 10^12 > -1 / mem[_4361] - _3843:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4361]) - (10^12 * _3843) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4361]) - (10^12 * _3843) / poolInfo[idx].field_1280
                                                            else:
                                                                mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4438 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4438] < _3843:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4438] - _3843 and 10^12 > -1 / mem[_4438] - _3843:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4438]) - (10^12 * _3843) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4438]) - (10^12 * _3843) / poolInfo[idx].field_1280
                                                        else:
                                                            if mem[_4209] < _4073:
                                                                revert with 'NH{q', 17
                                                            if not mem[_4209] - _4073:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4493 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4493] < _3843:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4493] - _3843 and 10^12 > -1 / mem[_4493] - _3843:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4493]) - (10^12 * _3843) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4493]) - (10^12 * _3843) / poolInfo[idx].field_1280
                                                            else:
                                                                mem[mem[64] + 36] = mem[_4209] - _4073
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, _4273 - _4073
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4560 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4560] < _3843:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4560] - _3843 and 10^12 > -1 / mem[_4560] - _3843:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4560]) - (10^12 * _3843) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4560]) - (10^12 * _3843) / poolInfo[idx].field_1280
                                                        poolInfo[idx].field_512 = block.number
                                                else:
                                                    if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                        revert with 'NH{q', 17
                                                    if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                        revert with 'NH{q', 18
                                                    if block.number < u:
                                                        revert with 'NH{q', 17
                                                    if block.number - u and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - u:
                                                        revert with 'NH{q', 17
                                                    if t > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                        revert with 'NH{q', 17
                                                    if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                        if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                            revert with 'NH{q', 17
                                                        if not totalAllocPoint:
                                                            revert with 'NH{q', 18
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3907 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _3965 = mem[_3907]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x18160ddd with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4165 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4233 = mem[_4165]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.maxSupply() with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4300 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4309 = mem[_4300]
                                                        if _4233 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                            revert with 'NH{q', 17
                                                        if _4233 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4300]:
                                                            if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4489 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4489] < _3965:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4489] - _3965 and 10^12 > -1 / mem[_4489] - _3965:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4489]) - (10^12 * _3965) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4489]) - (10^12 * _3965) / poolInfo[idx].field_1280
                                                            else:
                                                                mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4556 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4556] < _3965:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4556] - _3965 and 10^12 > -1 / mem[_4556] - _3965:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4556]) - (10^12 * _3965) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4556]) - (10^12 * _3965) / poolInfo[idx].field_1280
                                                        else:
                                                            if mem[_4300] < _4233:
                                                                revert with 'NH{q', 17
                                                            if not mem[_4300] - _4233:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4598 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4598] < _3965:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4598] - _3965 and 10^12 > -1 / mem[_4598] - _3965:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4598]) - (10^12 * _3965) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4598]) - (10^12 * _3965) / poolInfo[idx].field_1280
                                                            else:
                                                                mem[mem[64] + 36] = mem[_4300] - _4233
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, _4309 - _4233
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4620 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4620] < _3965:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4620] - _3965 and 10^12 > -1 / mem[_4620] - _3965:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4620]) - (10^12 * _3965) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4620]) - (10^12 * _3965) / poolInfo[idx].field_1280
                                                        poolInfo[idx].field_512 = block.number
                else:
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(poolInfo[idx].field_0)
                    staticcall poolInfo[idx].field_0.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1812 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1814 = mem[_1812]
                    if not mem[_1812]:
                        poolInfo[idx].field_512 = block.number
                    else:
                        if 0 == halvingPeriod:
                            if 0 == halvingPeriod:
                                if block.number < poolInfo[idx].field_512:
                                    revert with 'NH{q', 17
                                if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                    revert with 'NH{q', 17
                                if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                    revert with 'NH{q', 17
                                if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                    if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                        revert with 'NH{q', 17
                                    if not totalAllocPoint:
                                        revert with 'NH{q', 18
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(HCTAddress)
                                    staticcall HCTAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1846 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _1862 = mem[_1846]
                                    require ext_code.size(HCTAddress)
                                    staticcall HCTAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1896 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _1915 = mem[_1896]
                                    require ext_code.size(HCTAddress)
                                    staticcall HCTAddress.maxSupply() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1946 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _1972 = mem[_1946]
                                    if _1915 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                        revert with 'NH{q', 17
                                    if _1915 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_1946]:
                                        if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2200 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if mem[_2200] < _1862:
                                                revert with 'NH{q', 17
                                            if mem[_2200] - _1862 and 10^12 > -1 / mem[_2200] - _1862:
                                                revert with 'NH{q', 17
                                            if not _1814:
                                                revert with 'NH{q', 18
                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2200]) - (10^12 * _1862) / _1814):
                                                revert with 'NH{q', 17
                                            poolInfo[idx].field_768 += (10^12 * mem[_2200]) - (10^12 * _1862) / _1814
                                        else:
                                            mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                            require ext_code.size(HCTAddress)
                                            call HCTAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2286 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if mem[_2286] < _1862:
                                                revert with 'NH{q', 17
                                            if mem[_2286] - _1862 and 10^12 > -1 / mem[_2286] - _1862:
                                                revert with 'NH{q', 17
                                            if not _1814:
                                                revert with 'NH{q', 18
                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2286]) - (10^12 * _1862) / _1814):
                                                revert with 'NH{q', 17
                                            poolInfo[idx].field_768 += (10^12 * mem[_2286]) - (10^12 * _1862) / _1814
                                    else:
                                        if mem[_1946] < _1915:
                                            revert with 'NH{q', 17
                                        if not mem[_1946] - _1915:
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2371 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if mem[_2371] < _1862:
                                                revert with 'NH{q', 17
                                            if mem[_2371] - _1862 and 10^12 > -1 / mem[_2371] - _1862:
                                                revert with 'NH{q', 17
                                            if not _1814:
                                                revert with 'NH{q', 18
                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2371]) - (10^12 * _1862) / _1814):
                                                revert with 'NH{q', 17
                                            poolInfo[idx].field_768 += (10^12 * mem[_2371]) - (10^12 * _1862) / _1814
                                        else:
                                            mem[mem[64] + 36] = mem[_1946] - _1915
                                            require ext_code.size(HCTAddress)
                                            call HCTAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args this.address, _1972 - _1915
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2442 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if mem[_2442] < _1862:
                                                revert with 'NH{q', 17
                                            if mem[_2442] - _1862 and 10^12 > -1 / mem[_2442] - _1862:
                                                revert with 'NH{q', 17
                                            if not _1814:
                                                revert with 'NH{q', 18
                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2442]) - (10^12 * _1862) / _1814):
                                                revert with 'NH{q', 17
                                            poolInfo[idx].field_768 += (10^12 * mem[_2442]) - (10^12 * _1862) / _1814
                                    poolInfo[idx].field_512 = block.number
                            else:
                                if block.number <= startBlock:
                                    if block.number < poolInfo[idx].field_512:
                                        revert with 'NH{q', 17
                                    if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                        revert with 'NH{q', 17
                                    if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                        revert with 'NH{q', 17
                                    if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                        if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                            revert with 'NH{q', 17
                                        if not totalAllocPoint:
                                            revert with 'NH{q', 18
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1854 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _1870 = mem[_1854]
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1906 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _1922 = mem[_1906]
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.maxSupply() with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1960 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _1981 = mem[_1960]
                                        if _1922 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                            revert with 'NH{q', 17
                                        if _1922 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_1960]:
                                            if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2241 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2241] < _1870:
                                                    revert with 'NH{q', 17
                                                if mem[_2241] - _1870 and 10^12 > -1 / mem[_2241] - _1870:
                                                    revert with 'NH{q', 17
                                                if not _1814:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2241]) - (10^12 * _1870) / _1814):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2241]) - (10^12 * _1870) / _1814
                                            else:
                                                mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                require ext_code.size(HCTAddress)
                                                call HCTAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2325 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2325] < _1870:
                                                    revert with 'NH{q', 17
                                                if mem[_2325] - _1870 and 10^12 > -1 / mem[_2325] - _1870:
                                                    revert with 'NH{q', 17
                                                if not _1814:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2325]) - (10^12 * _1870) / _1814):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2325]) - (10^12 * _1870) / _1814
                                        else:
                                            if mem[_1960] < _1922:
                                                revert with 'NH{q', 17
                                            if not mem[_1960] - _1922:
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2407 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2407] < _1870:
                                                    revert with 'NH{q', 17
                                                if mem[_2407] - _1870 and 10^12 > -1 / mem[_2407] - _1870:
                                                    revert with 'NH{q', 17
                                                if not _1814:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2407]) - (10^12 * _1870) / _1814):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2407]) - (10^12 * _1870) / _1814
                                            else:
                                                mem[mem[64] + 36] = mem[_1960] - _1922
                                                require ext_code.size(HCTAddress)
                                                call HCTAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args this.address, _1981 - _1922
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2460 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2460] < _1870:
                                                    revert with 'NH{q', 17
                                                if mem[_2460] - _1870 and 10^12 > -1 / mem[_2460] - _1870:
                                                    revert with 'NH{q', 17
                                                if not _1814:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2460]) - (10^12 * _1870) / _1814):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2460]) - (10^12 * _1870) / _1814
                                        poolInfo[idx].field_512 = block.number
                                else:
                                    if block.number < startBlock:
                                        revert with 'NH{q', 17
                                    if block.number - startBlock < 1:
                                        revert with 'NH{q', 17
                                    if not halvingPeriod:
                                        revert with 'NH{q', 18
                                    if not block.number + -startBlock - 1 / halvingPeriod:
                                        if block.number < poolInfo[idx].field_512:
                                            revert with 'NH{q', 17
                                        if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                            revert with 'NH{q', 17
                                        if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                            if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                revert with 'NH{q', 17
                                            if not totalAllocPoint:
                                                revert with 'NH{q', 18
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2017 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _2061 = mem[_2017]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2199 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _2284 = mem[_2199]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.maxSupply() with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2410 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _2463 = mem[_2410]
                                            if _2284 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                revert with 'NH{q', 17
                                            if _2284 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2410]:
                                                if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2745 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2745] < _2061:
                                                        revert with 'NH{q', 17
                                                    if mem[_2745] - _2061 and 10^12 > -1 / mem[_2745] - _2061:
                                                        revert with 'NH{q', 17
                                                    if not _1814:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2745]) - (10^12 * _2061) / _1814):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2745]) - (10^12 * _2061) / _1814
                                                else:
                                                    mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2858 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2858] < _2061:
                                                        revert with 'NH{q', 17
                                                    if mem[_2858] - _2061 and 10^12 > -1 / mem[_2858] - _2061:
                                                        revert with 'NH{q', 17
                                                    if not _1814:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2858]) - (10^12 * _2061) / _1814):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2858]) - (10^12 * _2061) / _1814
                                            else:
                                                if mem[_2410] < _2284:
                                                    revert with 'NH{q', 17
                                                if not mem[_2410] - _2284:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2976 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2976] < _2061:
                                                        revert with 'NH{q', 17
                                                    if mem[_2976] - _2061 and 10^12 > -1 / mem[_2976] - _2061:
                                                        revert with 'NH{q', 17
                                                    if not _1814:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2976]) - (10^12 * _2061) / _1814):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2976]) - (10^12 * _2061) / _1814
                                                else:
                                                    mem[mem[64] + 36] = mem[_2410] - _2284
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, _2463 - _2284
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3066 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_3066] < _2061:
                                                        revert with 'NH{q', 17
                                                    if mem[_3066] - _2061 and 10^12 > -1 / mem[_3066] - _2061:
                                                        revert with 'NH{q', 17
                                                    if not _1814:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_3066]) - (10^12 * _2061) / _1814):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_3066]) - (10^12 * _2061) / _1814
                                            poolInfo[idx].field_512 = block.number
                                    else:
                                        if block.number + -startBlock - 1 / halvingPeriod > 255:
                                            revert with 'NH{q', 17
                                        if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                            revert with 'NH{q', 18
                                        if block.number < poolInfo[idx].field_512:
                                            revert with 'NH{q', 17
                                        if block.number - poolInfo[idx].field_512 and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - poolInfo[idx].field_512:
                                            revert with 'NH{q', 17
                                        if 0 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                            revert with 'NH{q', 17
                                        if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                            if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                revert with 'NH{q', 17
                                            if not totalAllocPoint:
                                                revert with 'NH{q', 18
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2115 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _2198 = mem[_2115]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2369 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _2440 = mem[_2369]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.maxSupply() with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2506 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _2546 = mem[_2506]
                                            if _2440 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                revert with 'NH{q', 17
                                            if _2440 + ((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2506]:
                                                if not (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2972 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2972] < _2198:
                                                        revert with 'NH{q', 17
                                                    if mem[_2972] - _2198 and 10^12 > -1 / mem[_2972] - _2198:
                                                        revert with 'NH{q', 17
                                                    if not _1814:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2972]) - (10^12 * _2198) / _1814):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2972]) - (10^12 * _2198) / _1814
                                                else:
                                                    mem[mem[64] + 36] = (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3062 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_3062] < _2198:
                                                        revert with 'NH{q', 17
                                                    if mem[_3062] - _2198 and 10^12 > -1 / mem[_3062] - _2198:
                                                        revert with 'NH{q', 17
                                                    if not _1814:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_3062]) - (10^12 * _2198) / _1814):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_3062]) - (10^12 * _2198) / _1814
                                            else:
                                                if mem[_2506] < _2440:
                                                    revert with 'NH{q', 17
                                                if not mem[_2506] - _2440:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3123 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_3123] < _2198:
                                                        revert with 'NH{q', 17
                                                    if mem[_3123] - _2198 and 10^12 > -1 / mem[_3123] - _2198:
                                                        revert with 'NH{q', 17
                                                    if not _1814:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_3123]) - (10^12 * _2198) / _1814):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_3123]) - (10^12 * _2198) / _1814
                                                else:
                                                    mem[mem[64] + 36] = mem[_2506] - _2440
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, _2546 - _2440
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3160 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_3160] < _2198:
                                                        revert with 'NH{q', 17
                                                    if mem[_3160] - _2198 and 10^12 > -1 / mem[_3160] - _2198:
                                                        revert with 'NH{q', 17
                                                    if not _1814:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_3160]) - (10^12 * _2198) / _1814):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_3160]) - (10^12 * _2198) / _1814
                                            poolInfo[idx].field_512 = block.number
                        else:
                            if poolInfo[idx].field_512 <= startBlock:
                                if 0 == halvingPeriod:
                                    if 0 == halvingPeriod:
                                        if block.number < poolInfo[idx].field_512:
                                            revert with 'NH{q', 17
                                        if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                            revert with 'NH{q', 17
                                        if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                            if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                revert with 'NH{q', 17
                                            if not totalAllocPoint:
                                                revert with 'NH{q', 18
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _1853 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _1869 = mem[_1853]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _1905 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _1921 = mem[_1905]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.maxSupply() with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _1959 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _1978 = mem[_1959]
                                            if _1921 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                revert with 'NH{q', 17
                                            if _1921 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_1959]:
                                                if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2236 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2236] < _1869:
                                                        revert with 'NH{q', 17
                                                    if mem[_2236] - _1869 and 10^12 > -1 / mem[_2236] - _1869:
                                                        revert with 'NH{q', 17
                                                    if not _1814:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2236]) - (10^12 * _1869) / _1814):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2236]) - (10^12 * _1869) / _1814
                                                else:
                                                    mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2317 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2317] < _1869:
                                                        revert with 'NH{q', 17
                                                    if mem[_2317] - _1869 and 10^12 > -1 / mem[_2317] - _1869:
                                                        revert with 'NH{q', 17
                                                    if not _1814:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2317]) - (10^12 * _1869) / _1814):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2317]) - (10^12 * _1869) / _1814
                                            else:
                                                if mem[_1959] < _1921:
                                                    revert with 'NH{q', 17
                                                if not mem[_1959] - _1921:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2400 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2400] < _1869:
                                                        revert with 'NH{q', 17
                                                    if mem[_2400] - _1869 and 10^12 > -1 / mem[_2400] - _1869:
                                                        revert with 'NH{q', 17
                                                    if not _1814:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2400]) - (10^12 * _1869) / _1814):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2400]) - (10^12 * _1869) / _1814
                                                else:
                                                    mem[mem[64] + 36] = mem[_1959] - _1921
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, _1978 - _1921
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2456 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2456] < _1869:
                                                        revert with 'NH{q', 17
                                                    if mem[_2456] - _1869 and 10^12 > -1 / mem[_2456] - _1869:
                                                        revert with 'NH{q', 17
                                                    if not _1814:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2456]) - (10^12 * _1869) / _1814):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2456]) - (10^12 * _1869) / _1814
                                            poolInfo[idx].field_512 = block.number
                                    else:
                                        if block.number <= startBlock:
                                            if block.number < poolInfo[idx].field_512:
                                                revert with 'NH{q', 17
                                            if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                                revert with 'NH{q', 17
                                            if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                                if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _1861 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _1876 = mem[_1861]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _1914 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _1929 = mem[_1914]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _1971 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _1994 = mem[_1971]
                                                if _1929 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _1929 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_1971]:
                                                    if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2273 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2273] < _1876:
                                                            revert with 'NH{q', 17
                                                        if mem[_2273] - _1876 and 10^12 > -1 / mem[_2273] - _1876:
                                                            revert with 'NH{q', 17
                                                        if not _1814:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2273]) - (10^12 * _1876) / _1814):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2273]) - (10^12 * _1876) / _1814
                                                    else:
                                                        mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2359 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2359] < _1876:
                                                            revert with 'NH{q', 17
                                                        if mem[_2359] - _1876 and 10^12 > -1 / mem[_2359] - _1876:
                                                            revert with 'NH{q', 17
                                                        if not _1814:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2359]) - (10^12 * _1876) / _1814):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2359]) - (10^12 * _1876) / _1814
                                                else:
                                                    if mem[_1971] < _1929:
                                                        revert with 'NH{q', 17
                                                    if not mem[_1971] - _1929:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2434 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2434] < _1876:
                                                            revert with 'NH{q', 17
                                                        if mem[_2434] - _1876 and 10^12 > -1 / mem[_2434] - _1876:
                                                            revert with 'NH{q', 17
                                                        if not _1814:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2434]) - (10^12 * _1876) / _1814):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2434]) - (10^12 * _1876) / _1814
                                                    else:
                                                        mem[mem[64] + 36] = mem[_1971] - _1929
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _1994 - _1929
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2475 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2475] < _1876:
                                                            revert with 'NH{q', 17
                                                        if mem[_2475] - _1876 and 10^12 > -1 / mem[_2475] - _1876:
                                                            revert with 'NH{q', 17
                                                        if not _1814:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2475]) - (10^12 * _1876) / _1814):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2475]) - (10^12 * _1876) / _1814
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number < startBlock:
                                                revert with 'NH{q', 17
                                            if block.number - startBlock < 1:
                                                revert with 'NH{q', 17
                                            if not halvingPeriod:
                                                revert with 'NH{q', 18
                                            if not block.number + -startBlock - 1 / halvingPeriod:
                                                if block.number < poolInfo[idx].field_512:
                                                    revert with 'NH{q', 17
                                                if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                                    revert with 'NH{q', 17
                                                if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                                    if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2035 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2084 = mem[_2035]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2235 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2315 = mem[_2235]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2437 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2478 = mem[_2437]
                                                    if _2315 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _2315 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2437]:
                                                        if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2785 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2785] < _2084:
                                                                revert with 'NH{q', 17
                                                            if mem[_2785] - _2084 and 10^12 > -1 / mem[_2785] - _2084:
                                                                revert with 'NH{q', 17
                                                            if not _1814:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2785]) - (10^12 * _2084) / _1814):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2785]) - (10^12 * _2084) / _1814
                                                        else:
                                                            mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2906 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2906] < _2084:
                                                                revert with 'NH{q', 17
                                                            if mem[_2906] - _2084 and 10^12 > -1 / mem[_2906] - _2084:
                                                                revert with 'NH{q', 17
                                                            if not _1814:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2906]) - (10^12 * _2084) / _1814):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2906]) - (10^12 * _2084) / _1814
                                                    else:
                                                        if mem[_2437] < _2315:
                                                            revert with 'NH{q', 17
                                                        if not mem[_2437] - _2315:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _3013 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_3013] < _2084:
                                                                revert with 'NH{q', 17
                                                            if mem[_3013] - _2084 and 10^12 > -1 / mem[_3013] - _2084:
                                                                revert with 'NH{q', 17
                                                            if not _1814:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_3013]) - (10^12 * _2084) / _1814):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_3013]) - (10^12 * _2084) / _1814
                                                        else:
                                                            mem[mem[64] + 36] = mem[_2437] - _2315
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _2478 - _2315
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _3089 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_3089] < _2084:
                                                                revert with 'NH{q', 17
                                                            if mem[_3089] - _2084 and 10^12 > -1 / mem[_3089] - _2084:
                                                                revert with 'NH{q', 17
                                                            if not _1814:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_3089]) - (10^12 * _2084) / _1814):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_3089]) - (10^12 * _2084) / _1814
                                                    poolInfo[idx].field_512 = block.number
                                            else:
                                                if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                    revert with 'NH{q', 17
                                                if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                    revert with 'NH{q', 18
                                                if block.number < poolInfo[idx].field_512:
                                                    revert with 'NH{q', 17
                                                if block.number - poolInfo[idx].field_512 and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - poolInfo[idx].field_512:
                                                    revert with 'NH{q', 17
                                                if 0 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                    revert with 'NH{q', 17
                                                if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                    if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2148 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2234 = mem[_2148]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2398 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2454 = mem[_2398]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2521 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2569 = mem[_2521]
                                                    if _2454 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _2454 + ((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2521]:
                                                        if not (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _3009 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_3009] < _2234:
                                                                revert with 'NH{q', 17
                                                            if mem[_3009] - _2234 and 10^12 > -1 / mem[_3009] - _2234:
                                                                revert with 'NH{q', 17
                                                            if not _1814:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_3009]) - (10^12 * _2234) / _1814):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_3009]) - (10^12 * _2234) / _1814
                                                        else:
                                                            mem[mem[64] + 36] = (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _3085 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_3085] < _2234:
                                                                revert with 'NH{q', 17
                                                            if mem[_3085] - _2234 and 10^12 > -1 / mem[_3085] - _2234:
                                                                revert with 'NH{q', 17
                                                            if not _1814:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_3085]) - (10^12 * _2234) / _1814):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_3085]) - (10^12 * _2234) / _1814
                                                    else:
                                                        if mem[_2521] < _2454:
                                                            revert with 'NH{q', 17
                                                        if not mem[_2521] - _2454:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _3137 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_3137] < _2234:
                                                                revert with 'NH{q', 17
                                                            if mem[_3137] - _2234 and 10^12 > -1 / mem[_3137] - _2234:
                                                                revert with 'NH{q', 17
                                                            if not _1814:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_3137]) - (10^12 * _2234) / _1814):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_3137]) - (10^12 * _2234) / _1814
                                                        else:
                                                            mem[mem[64] + 36] = mem[_2521] - _2454
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _2569 - _2454
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _3176 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_3176] < _2234:
                                                                revert with 'NH{q', 17
                                                            if mem[_3176] - _2234 and 10^12 > -1 / mem[_3176] - _2234:
                                                                revert with 'NH{q', 17
                                                            if not _1814:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_3176]) - (10^12 * _2234) / _1814):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_3176]) - (10^12 * _2234) / _1814
                                                    poolInfo[idx].field_512 = block.number
                                else:
                                    if block.number <= startBlock:
                                        if 0 == halvingPeriod:
                                            if block.number < poolInfo[idx].field_512:
                                                revert with 'NH{q', 17
                                            if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                                revert with 'NH{q', 17
                                            if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                                if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _1860 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _1875 = mem[_1860]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _1913 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _1928 = mem[_1913]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _1970 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _1991 = mem[_1970]
                                                if _1928 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _1928 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_1970]:
                                                    if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2269 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2269] < _1875:
                                                            revert with 'NH{q', 17
                                                        if mem[_2269] - _1875 and 10^12 > -1 / mem[_2269] - _1875:
                                                            revert with 'NH{q', 17
                                                        if not _1814:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2269]) - (10^12 * _1875) / _1814):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2269]) - (10^12 * _1875) / _1814
                                                    else:
                                                        mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2352 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2352] < _1875:
                                                            revert with 'NH{q', 17
                                                        if mem[_2352] - _1875 and 10^12 > -1 / mem[_2352] - _1875:
                                                            revert with 'NH{q', 17
                                                        if not _1814:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2352]) - (10^12 * _1875) / _1814):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2352]) - (10^12 * _1875) / _1814
                                                else:
                                                    if mem[_1970] < _1928:
                                                        revert with 'NH{q', 17
                                                    if not mem[_1970] - _1928:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2429 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2429] < _1875:
                                                            revert with 'NH{q', 17
                                                        if mem[_2429] - _1875 and 10^12 > -1 / mem[_2429] - _1875:
                                                            revert with 'NH{q', 17
                                                        if not _1814:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2429]) - (10^12 * _1875) / _1814):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2429]) - (10^12 * _1875) / _1814
                                                    else:
                                                        mem[mem[64] + 36] = mem[_1970] - _1928
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _1991 - _1928
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2472 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2472] < _1875:
                                                            revert with 'NH{q', 17
                                                        if mem[_2472] - _1875 and 10^12 > -1 / mem[_2472] - _1875:
                                                            revert with 'NH{q', 17
                                                        if not _1814:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2472]) - (10^12 * _1875) / _1814):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2472]) - (10^12 * _1875) / _1814
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number <= startBlock:
                                                if block.number < poolInfo[idx].field_512:
                                                    revert with 'NH{q', 17
                                                if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                                    revert with 'NH{q', 17
                                                if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                                    if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _1868 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _1882 = mem[_1868]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _1920 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _1941 = mem[_1920]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _1977 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2009 = mem[_1977]
                                                    if _1941 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _1941 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_1977]:
                                                        if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2305 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2305] < _1882:
                                                                revert with 'NH{q', 17
                                                            if mem[_2305] - _1882 and 10^12 > -1 / mem[_2305] - _1882:
                                                                revert with 'NH{q', 17
                                                            if not _1814:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2305]) - (10^12 * _1882) / _1814):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2305]) - (10^12 * _1882) / _1814
                                                        else:
                                                            mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2391 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2391] < _1882:
                                                                revert with 'NH{q', 17
                                                            if mem[_2391] - _1882 and 10^12 > -1 / mem[_2391] - _1882:
                                                                revert with 'NH{q', 17
                                                            if not _1814:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2391]) - (10^12 * _1882) / _1814):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2391]) - (10^12 * _1882) / _1814
                                                    else:
                                                        if mem[_1977] < _1941:
                                                            revert with 'NH{q', 17
                                                        if not mem[_1977] - _1941:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2449 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2449] < _1882:
                                                                revert with 'NH{q', 17
                                                            if mem[_2449] - _1882 and 10^12 > -1 / mem[_2449] - _1882:
                                                                revert with 'NH{q', 17
                                                            if not _1814:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2449]) - (10^12 * _1882) / _1814):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2449]) - (10^12 * _1882) / _1814
                                                        else:
                                                            mem[mem[64] + 36] = mem[_1977] - _1941
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _2009 - _1941
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2492 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2492] < _1882:
                                                                revert with 'NH{q', 17
                                                            if mem[_2492] - _1882 and 10^12 > -1 / mem[_2492] - _1882:
                                                                revert with 'NH{q', 17
                                                            if not _1814:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2492]) - (10^12 * _1882) / _1814):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2492]) - (10^12 * _1882) / _1814
                                                    poolInfo[idx].field_512 = block.number
                                            else:
                                                if block.number < startBlock:
                                                    revert with 'NH{q', 17
                                                if block.number - startBlock < 1:
                                                    revert with 'NH{q', 17
                                                if not halvingPeriod:
                                                    revert with 'NH{q', 18
                                                if not block.number + -startBlock - 1 / halvingPeriod:
                                                    if block.number < poolInfo[idx].field_512:
                                                        revert with 'NH{q', 17
                                                    if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                                        revert with 'NH{q', 17
                                                    if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                                        revert with 'NH{q', 17
                                                    if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                                        if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                            revert with 'NH{q', 17
                                                        if not totalAllocPoint:
                                                            revert with 'NH{q', 18
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2055 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _2106 = mem[_2055]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x18160ddd with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2268 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _2350 = mem[_2268]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.maxSupply() with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2452 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _2495 = mem[_2452]
                                                        if _2350 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                            revert with 'NH{q', 17
                                                        if _2350 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2452]:
                                                            if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _2828 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_2828] < _2106:
                                                                    revert with 'NH{q', 17
                                                                if mem[_2828] - _2106 and 10^12 > -1 / mem[_2828] - _2106:
                                                                    revert with 'NH{q', 17
                                                                if not _1814:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2828]) - (10^12 * _2106) / _1814):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_2828]) - (10^12 * _2106) / _1814
                                                            else:
                                                                mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _2950 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_2950] < _2106:
                                                                    revert with 'NH{q', 17
                                                                if mem[_2950] - _2106 and 10^12 > -1 / mem[_2950] - _2106:
                                                                    revert with 'NH{q', 17
                                                                if not _1814:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2950]) - (10^12 * _2106) / _1814):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_2950]) - (10^12 * _2106) / _1814
                                                        else:
                                                            if mem[_2452] < _2350:
                                                                revert with 'NH{q', 17
                                                            if not mem[_2452] - _2350:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _3042 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_3042] < _2106:
                                                                    revert with 'NH{q', 17
                                                                if mem[_3042] - _2106 and 10^12 > -1 / mem[_3042] - _2106:
                                                                    revert with 'NH{q', 17
                                                                if not _1814:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_3042]) - (10^12 * _2106) / _1814):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_3042]) - (10^12 * _2106) / _1814
                                                            else:
                                                                mem[mem[64] + 36] = mem[_2452] - _2350
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, _2495 - _2350
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _3107 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_3107] < _2106:
                                                                    revert with 'NH{q', 17
                                                                if mem[_3107] - _2106 and 10^12 > -1 / mem[_3107] - _2106:
                                                                    revert with 'NH{q', 17
                                                                if not _1814:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_3107]) - (10^12 * _2106) / _1814):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_3107]) - (10^12 * _2106) / _1814
                                                        poolInfo[idx].field_512 = block.number
                                                else:
                                                    if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                        revert with 'NH{q', 17
                                                    if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                        revert with 'NH{q', 18
                                                    if block.number < poolInfo[idx].field_512:
                                                        revert with 'NH{q', 17
                                                    if block.number - poolInfo[idx].field_512 and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - poolInfo[idx].field_512:
                                                        revert with 'NH{q', 17
                                                    if 0 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                        revert with 'NH{q', 17
                                                    if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                        if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                            revert with 'NH{q', 17
                                                        if not totalAllocPoint:
                                                            revert with 'NH{q', 18
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2186 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _2267 = mem[_2186]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x18160ddd with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2427 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _2470 = mem[_2427]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.maxSupply() with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2542 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _2589 = mem[_2542]
                                                        if _2470 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                            revert with 'NH{q', 17
                                                        if _2470 + ((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2542]:
                                                            if not (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _3038 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_3038] < _2267:
                                                                    revert with 'NH{q', 17
                                                                if mem[_3038] - _2267 and 10^12 > -1 / mem[_3038] - _2267:
                                                                    revert with 'NH{q', 17
                                                                if not _1814:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_3038]) - (10^12 * _2267) / _1814):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_3038]) - (10^12 * _2267) / _1814
                                                            else:
                                                                mem[mem[64] + 36] = (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _3103 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_3103] < _2267:
                                                                    revert with 'NH{q', 17
                                                                if mem[_3103] - _2267 and 10^12 > -1 / mem[_3103] - _2267:
                                                                    revert with 'NH{q', 17
                                                                if not _1814:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_3103]) - (10^12 * _2267) / _1814):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_3103]) - (10^12 * _2267) / _1814
                                                        else:
                                                            if mem[_2542] < _2470:
                                                                revert with 'NH{q', 17
                                                            if not mem[_2542] - _2470:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _3150 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_3150] < _2267:
                                                                    revert with 'NH{q', 17
                                                                if mem[_3150] - _2267 and 10^12 > -1 / mem[_3150] - _2267:
                                                                    revert with 'NH{q', 17
                                                                if not _1814:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_3150]) - (10^12 * _2267) / _1814):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_3150]) - (10^12 * _2267) / _1814
                                                            else:
                                                                mem[mem[64] + 36] = mem[_2542] - _2470
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, _2589 - _2470
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _3185 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_3185] < _2267:
                                                                    revert with 'NH{q', 17
                                                                if mem[_3185] - _2267 and 10^12 > -1 / mem[_3185] - _2267:
                                                                    revert with 'NH{q', 17
                                                                if not _1814:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_3185]) - (10^12 * _2267) / _1814):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_3185]) - (10^12 * _2267) / _1814
                                                        poolInfo[idx].field_512 = block.number
                                    else:
                                        if block.number < startBlock:
                                            revert with 'NH{q', 17
                                        if block.number - startBlock < 1:
                                            revert with 'NH{q', 17
                                        if not halvingPeriod:
                                            revert with 'NH{q', 18
                                        s = 0
                                        t = 0
                                        u = poolInfo[idx].field_512
                                        while s < block.number + -startBlock - 1 / halvingPeriod:
                                            if s == -1:
                                                revert with 'NH{q', 17
                                            if s + 1 and halvingPeriod > -1 / s + 1:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) > !startBlock:
                                                revert with 'NH{q', 17
                                            if 0 == halvingPeriod:
                                                if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                    revert with 'NH{q', 17
                                                if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                    revert with 'NH{q', 17
                                                if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                s = s + 1
                                                t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                                u = halvingPeriod + (s * halvingPeriod) + startBlock
                                                continue 
                                            if halvingPeriod + (s * halvingPeriod) + startBlock <= startBlock:
                                                if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                    revert with 'NH{q', 17
                                                if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                    revert with 'NH{q', 17
                                                if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                s = s + 1
                                                t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                                u = halvingPeriod + (s * halvingPeriod) + startBlock
                                                continue 
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < startBlock:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) < 1:
                                                revert with 'NH{q', 17
                                            if not halvingPeriod:
                                                revert with 'NH{q', 18
                                            if not halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                                if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                    revert with 'NH{q', 17
                                                if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                    revert with 'NH{q', 17
                                                if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                s = s + 1
                                                t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                                u = halvingPeriod + (s * halvingPeriod) + startBlock
                                                continue 
                                            if halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > 255:
                                                revert with 'NH{q', 17
                                            if not 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                                revert with 'NH{q', 18
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if 0 == halvingPeriod:
                                            if block.number < u:
                                                revert with 'NH{q', 17
                                            if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                revert with 'NH{q', 17
                                            if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3639 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3655 = mem[_3639]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3703 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3719 = mem[_3703]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3767 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3783 = mem[_3767]
                                                if _3719 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _3719 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3767]:
                                                    if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3937 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_3937] < _3655:
                                                            revert with 'NH{q', 17
                                                        if mem[_3937] - _3655 and 10^12 > -1 / mem[_3937] - _3655:
                                                            revert with 'NH{q', 17
                                                        if not _1814:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_3937]) - (10^12 * _3655) / _1814):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_3937]) - (10^12 * _3655) / _1814
                                                    else:
                                                        mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4021 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4021] < _3655:
                                                            revert with 'NH{q', 17
                                                        if mem[_4021] - _3655 and 10^12 > -1 / mem[_4021] - _3655:
                                                            revert with 'NH{q', 17
                                                        if not _1814:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4021]) - (10^12 * _3655) / _1814):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4021]) - (10^12 * _3655) / _1814
                                                else:
                                                    if mem[_3767] < _3719:
                                                        revert with 'NH{q', 17
                                                    if not mem[_3767] - _3719:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4137 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4137] < _3655:
                                                            revert with 'NH{q', 17
                                                        if mem[_4137] - _3655 and 10^12 > -1 / mem[_4137] - _3655:
                                                            revert with 'NH{q', 17
                                                        if not _1814:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4137]) - (10^12 * _3655) / _1814):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4137]) - (10^12 * _3655) / _1814
                                                    else:
                                                        mem[mem[64] + 36] = mem[_3767] - _3719
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _3783 - _3719
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4217 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4217] < _3655:
                                                            revert with 'NH{q', 17
                                                        if mem[_4217] - _3655 and 10^12 > -1 / mem[_4217] - _3655:
                                                            revert with 'NH{q', 17
                                                        if not _1814:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4217]) - (10^12 * _3655) / _1814):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4217]) - (10^12 * _3655) / _1814
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number <= startBlock:
                                                if block.number < u:
                                                    revert with 'NH{q', 17
                                                if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                    revert with 'NH{q', 17
                                                if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                    if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3647 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3663 = mem[_3647]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3711 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3727 = mem[_3711]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3775 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3791 = mem[_3775]
                                                    if _3727 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _3727 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3775]:
                                                        if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _3975 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_3975] < _3663:
                                                                revert with 'NH{q', 17
                                                            if mem[_3975] - _3663 and 10^12 > -1 / mem[_3975] - _3663:
                                                                revert with 'NH{q', 17
                                                            if not _1814:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_3975]) - (10^12 * _3663) / _1814):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_3975]) - (10^12 * _3663) / _1814
                                                        else:
                                                            mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4088 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4088] < _3663:
                                                                revert with 'NH{q', 17
                                                            if mem[_4088] - _3663 and 10^12 > -1 / mem[_4088] - _3663:
                                                                revert with 'NH{q', 17
                                                            if not _1814:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4088]) - (10^12 * _3663) / _1814):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4088]) - (10^12 * _3663) / _1814
                                                    else:
                                                        if mem[_3775] < _3727:
                                                            revert with 'NH{q', 17
                                                        if not mem[_3775] - _3727:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4176 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4176] < _3663:
                                                                revert with 'NH{q', 17
                                                            if mem[_4176] - _3663 and 10^12 > -1 / mem[_4176] - _3663:
                                                                revert with 'NH{q', 17
                                                            if not _1814:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4176]) - (10^12 * _3663) / _1814):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4176]) - (10^12 * _3663) / _1814
                                                        else:
                                                            mem[mem[64] + 36] = mem[_3775] - _3727
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _3791 - _3727
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4240 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4240] < _3663:
                                                                revert with 'NH{q', 17
                                                            if mem[_4240] - _3663 and 10^12 > -1 / mem[_4240] - _3663:
                                                                revert with 'NH{q', 17
                                                            if not _1814:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4240]) - (10^12 * _3663) / _1814):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4240]) - (10^12 * _3663) / _1814
                                                    poolInfo[idx].field_512 = block.number
                                            else:
                                                if block.number < startBlock:
                                                    revert with 'NH{q', 17
                                                if block.number - startBlock < 1:
                                                    revert with 'NH{q', 17
                                                if not halvingPeriod:
                                                    revert with 'NH{q', 18
                                                if not block.number + -startBlock - 1 / halvingPeriod:
                                                    if block.number < u:
                                                        revert with 'NH{q', 17
                                                    if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                        revert with 'NH{q', 17
                                                    if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                        revert with 'NH{q', 17
                                                    if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                        if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                            revert with 'NH{q', 17
                                                        if not totalAllocPoint:
                                                            revert with 'NH{q', 18
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3815 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _3825 = mem[_3815]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x18160ddd with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3936 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4019 = mem[_3936]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.maxSupply() with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4179 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4243 = mem[_4179]
                                                        if _4019 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                            revert with 'NH{q', 17
                                                        if _4019 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4179]:
                                                            if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4343 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4343] < _3825:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4343] - _3825 and 10^12 > -1 / mem[_4343] - _3825:
                                                                    revert with 'NH{q', 17
                                                                if not _1814:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4343]) - (10^12 * _3825) / _1814):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4343]) - (10^12 * _3825) / _1814
                                                            else:
                                                                mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4402 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4402] < _3825:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4402] - _3825 and 10^12 > -1 / mem[_4402] - _3825:
                                                                    revert with 'NH{q', 17
                                                                if not _1814:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4402]) - (10^12 * _3825) / _1814):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4402]) - (10^12 * _3825) / _1814
                                                        else:
                                                            if mem[_4179] < _4019:
                                                                revert with 'NH{q', 17
                                                            if not mem[_4179] - _4019:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4451 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4451] < _3825:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4451] - _3825 and 10^12 > -1 / mem[_4451] - _3825:
                                                                    revert with 'NH{q', 17
                                                                if not _1814:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4451]) - (10^12 * _3825) / _1814):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4451]) - (10^12 * _3825) / _1814
                                                            else:
                                                                mem[mem[64] + 36] = mem[_4179] - _4019
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, _4243 - _4019
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4524 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4524] < _3825:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4524] - _3825 and 10^12 > -1 / mem[_4524] - _3825:
                                                                    revert with 'NH{q', 17
                                                                if not _1814:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4524]) - (10^12 * _3825) / _1814):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4524]) - (10^12 * _3825) / _1814
                                                        poolInfo[idx].field_512 = block.number
                                                else:
                                                    if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                        revert with 'NH{q', 17
                                                    if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                        revert with 'NH{q', 18
                                                    if block.number < u:
                                                        revert with 'NH{q', 17
                                                    if block.number - u and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - u:
                                                        revert with 'NH{q', 17
                                                    if t > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                        revert with 'NH{q', 17
                                                    if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                        if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                            revert with 'NH{q', 17
                                                        if not totalAllocPoint:
                                                            revert with 'NH{q', 18
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3865 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _3935 = mem[_3865]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x18160ddd with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4135 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4215 = mem[_4135]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.maxSupply() with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4288 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4303 = mem[_4288]
                                                        if _4215 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                            revert with 'NH{q', 17
                                                        if _4215 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4288]:
                                                            if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4447 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4447] < _3935:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4447] - _3935 and 10^12 > -1 / mem[_4447] - _3935:
                                                                    revert with 'NH{q', 17
                                                                if not _1814:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4447]) - (10^12 * _3935) / _1814):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4447]) - (10^12 * _3935) / _1814
                                                            else:
                                                                mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4520 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4520] < _3935:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4520] - _3935 and 10^12 > -1 / mem[_4520] - _3935:
                                                                    revert with 'NH{q', 17
                                                                if not _1814:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4520]) - (10^12 * _3935) / _1814):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4520]) - (10^12 * _3935) / _1814
                                                        else:
                                                            if mem[_4288] < _4215:
                                                                revert with 'NH{q', 17
                                                            if not mem[_4288] - _4215:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4568 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4568] < _3935:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4568] - _3935 and 10^12 > -1 / mem[_4568] - _3935:
                                                                    revert with 'NH{q', 17
                                                                if not _1814:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4568]) - (10^12 * _3935) / _1814):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4568]) - (10^12 * _3935) / _1814
                                                            else:
                                                                mem[mem[64] + 36] = mem[_4288] - _4215
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, _4303 - _4215
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4608 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4608] < _3935:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4608] - _3935 and 10^12 > -1 / mem[_4608] - _3935:
                                                                    revert with 'NH{q', 17
                                                                if not _1814:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4608]) - (10^12 * _3935) / _1814):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4608]) - (10^12 * _3935) / _1814
                                                        poolInfo[idx].field_512 = block.number
                            else:
                                if poolInfo[idx].field_512 < startBlock:
                                    revert with 'NH{q', 17
                                if poolInfo[idx].field_512 - startBlock < 1:
                                    revert with 'NH{q', 17
                                if not halvingPeriod:
                                    revert with 'NH{q', 18
                                if 0 == halvingPeriod:
                                    s = poolInfo[idx].field_512 + -startBlock - 1 / halvingPeriod
                                    t = 0
                                    u = poolInfo[idx].field_512
                                    while s < 0:
                                        if s == -1:
                                            revert with 'NH{q', 17
                                        if s + 1 and halvingPeriod > -1 / s + 1:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) > !startBlock:
                                            revert with 'NH{q', 17
                                        if 0 == halvingPeriod:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) + startBlock <= startBlock:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) + startBlock < startBlock:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) < 1:
                                            revert with 'NH{q', 17
                                        if not halvingPeriod:
                                            revert with 'NH{q', 18
                                        if not halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > 255:
                                            revert with 'NH{q', 17
                                        if not 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                            revert with 'NH{q', 18
                                        if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                            revert with 'NH{q', 17
                                        if t > !((halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)):
                                            revert with 'NH{q', 17
                                        s = s + 1
                                        t = t + (halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)
                                        u = halvingPeriod + (s * halvingPeriod) + startBlock
                                        continue 
                                    if 0 == halvingPeriod:
                                        if block.number < u:
                                            revert with 'NH{q', 17
                                        if block.number - u and hCTPerBlock > -1 / block.number - u:
                                            revert with 'NH{q', 17
                                        if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                revert with 'NH{q', 17
                                            if not totalAllocPoint:
                                                revert with 'NH{q', 18
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3642 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3658 = mem[_3642]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3706 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3722 = mem[_3706]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.maxSupply() with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3770 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3786 = mem[_3770]
                                            if _3722 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                revert with 'NH{q', 17
                                            if _3722 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3770]:
                                                if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3952 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_3952] < _3658:
                                                        revert with 'NH{q', 17
                                                    if mem[_3952] - _3658 and 10^12 > -1 / mem[_3952] - _3658:
                                                        revert with 'NH{q', 17
                                                    if not _1814:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_3952]) - (10^12 * _3658) / _1814):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_3952]) - (10^12 * _3658) / _1814
                                                else:
                                                    mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4048 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4048] < _3658:
                                                        revert with 'NH{q', 17
                                                    if mem[_4048] - _3658 and 10^12 > -1 / mem[_4048] - _3658:
                                                        revert with 'NH{q', 17
                                                    if not _1814:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4048]) - (10^12 * _3658) / _1814):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4048]) - (10^12 * _3658) / _1814
                                            else:
                                                if mem[_3770] < _3722:
                                                    revert with 'NH{q', 17
                                                if not mem[_3770] - _3722:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4152 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4152] < _3658:
                                                        revert with 'NH{q', 17
                                                    if mem[_4152] - _3658 and 10^12 > -1 / mem[_4152] - _3658:
                                                        revert with 'NH{q', 17
                                                    if not _1814:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4152]) - (10^12 * _3658) / _1814):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4152]) - (10^12 * _3658) / _1814
                                                else:
                                                    mem[mem[64] + 36] = mem[_3770] - _3722
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, _3786 - _3722
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4226 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4226] < _3658:
                                                        revert with 'NH{q', 17
                                                    if mem[_4226] - _3658 and 10^12 > -1 / mem[_4226] - _3658:
                                                        revert with 'NH{q', 17
                                                    if not _1814:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4226]) - (10^12 * _3658) / _1814):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4226]) - (10^12 * _3658) / _1814
                                            poolInfo[idx].field_512 = block.number
                                    else:
                                        if block.number <= startBlock:
                                            if block.number < u:
                                                revert with 'NH{q', 17
                                            if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                revert with 'NH{q', 17
                                            if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3650 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3666 = mem[_3650]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3714 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3736 = mem[_3714]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3778 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3800 = mem[_3778]
                                                if _3736 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _3736 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3778]:
                                                    if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3990 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_3990] < _3666:
                                                            revert with 'NH{q', 17
                                                        if mem[_3990] - _3666 and 10^12 > -1 / mem[_3990] - _3666:
                                                            revert with 'NH{q', 17
                                                        if not _1814:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_3990]) - (10^12 * _3666) / _1814):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_3990]) - (10^12 * _3666) / _1814
                                                    else:
                                                        mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4106 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4106] < _3666:
                                                            revert with 'NH{q', 17
                                                        if mem[_4106] - _3666 and 10^12 > -1 / mem[_4106] - _3666:
                                                            revert with 'NH{q', 17
                                                        if not _1814:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4106]) - (10^12 * _3666) / _1814):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4106]) - (10^12 * _3666) / _1814
                                                else:
                                                    if mem[_3778] < _3736:
                                                        revert with 'NH{q', 17
                                                    if not mem[_3778] - _3736:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4191 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4191] < _3666:
                                                            revert with 'NH{q', 17
                                                        if mem[_4191] - _3666 and 10^12 > -1 / mem[_4191] - _3666:
                                                            revert with 'NH{q', 17
                                                        if not _1814:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4191]) - (10^12 * _3666) / _1814):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4191]) - (10^12 * _3666) / _1814
                                                    else:
                                                        mem[mem[64] + 36] = mem[_3778] - _3736
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _3800 - _3736
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4255 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4255] < _3666:
                                                            revert with 'NH{q', 17
                                                        if mem[_4255] - _3666 and 10^12 > -1 / mem[_4255] - _3666:
                                                            revert with 'NH{q', 17
                                                        if not _1814:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4255]) - (10^12 * _3666) / _1814):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4255]) - (10^12 * _3666) / _1814
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number < startBlock:
                                                revert with 'NH{q', 17
                                            if block.number - startBlock < 1:
                                                revert with 'NH{q', 17
                                            if not halvingPeriod:
                                                revert with 'NH{q', 18
                                            if not block.number + -startBlock - 1 / halvingPeriod:
                                                if block.number < u:
                                                    revert with 'NH{q', 17
                                                if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                    revert with 'NH{q', 17
                                                if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                    if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3818 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3834 = mem[_3818]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3951 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4046 = mem[_3951]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4194 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4258 = mem[_4194]
                                                    if _4046 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _4046 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4194]:
                                                        if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4352 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4352] < _3834:
                                                                revert with 'NH{q', 17
                                                            if mem[_4352] - _3834 and 10^12 > -1 / mem[_4352] - _3834:
                                                                revert with 'NH{q', 17
                                                            if not _1814:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4352]) - (10^12 * _3834) / _1814):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4352]) - (10^12 * _3834) / _1814
                                                        else:
                                                            mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4420 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4420] < _3834:
                                                                revert with 'NH{q', 17
                                                            if mem[_4420] - _3834 and 10^12 > -1 / mem[_4420] - _3834:
                                                                revert with 'NH{q', 17
                                                            if not _1814:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4420]) - (10^12 * _3834) / _1814):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4420]) - (10^12 * _3834) / _1814
                                                    else:
                                                        if mem[_4194] < _4046:
                                                            revert with 'NH{q', 17
                                                        if not mem[_4194] - _4046:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4472 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4472] < _3834:
                                                                revert with 'NH{q', 17
                                                            if mem[_4472] - _3834 and 10^12 > -1 / mem[_4472] - _3834:
                                                                revert with 'NH{q', 17
                                                            if not _1814:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4472]) - (10^12 * _3834) / _1814):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4472]) - (10^12 * _3834) / _1814
                                                        else:
                                                            mem[mem[64] + 36] = mem[_4194] - _4046
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _4258 - _4046
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4542 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4542] < _3834:
                                                                revert with 'NH{q', 17
                                                            if mem[_4542] - _3834 and 10^12 > -1 / mem[_4542] - _3834:
                                                                revert with 'NH{q', 17
                                                            if not _1814:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4542]) - (10^12 * _3834) / _1814):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4542]) - (10^12 * _3834) / _1814
                                                    poolInfo[idx].field_512 = block.number
                                            else:
                                                if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                    revert with 'NH{q', 17
                                                if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                    revert with 'NH{q', 18
                                                if block.number < u:
                                                    revert with 'NH{q', 17
                                                if block.number - u and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - u:
                                                    revert with 'NH{q', 17
                                                if t > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                    revert with 'NH{q', 17
                                                if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                    if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3886 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3950 = mem[_3886]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4150 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4224 = mem[_4150]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4294 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4306 = mem[_4294]
                                                    if _4224 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _4224 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4294]:
                                                        if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4468 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4468] < _3950:
                                                                revert with 'NH{q', 17
                                                            if mem[_4468] - _3950 and 10^12 > -1 / mem[_4468] - _3950:
                                                                revert with 'NH{q', 17
                                                            if not _1814:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4468]) - (10^12 * _3950) / _1814):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4468]) - (10^12 * _3950) / _1814
                                                        else:
                                                            mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4538 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4538] < _3950:
                                                                revert with 'NH{q', 17
                                                            if mem[_4538] - _3950 and 10^12 > -1 / mem[_4538] - _3950:
                                                                revert with 'NH{q', 17
                                                            if not _1814:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4538]) - (10^12 * _3950) / _1814):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4538]) - (10^12 * _3950) / _1814
                                                    else:
                                                        if mem[_4294] < _4224:
                                                            revert with 'NH{q', 17
                                                        if not mem[_4294] - _4224:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4583 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4583] < _3950:
                                                                revert with 'NH{q', 17
                                                            if mem[_4583] - _3950 and 10^12 > -1 / mem[_4583] - _3950:
                                                                revert with 'NH{q', 17
                                                            if not _1814:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4583]) - (10^12 * _3950) / _1814):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4583]) - (10^12 * _3950) / _1814
                                                        else:
                                                            mem[mem[64] + 36] = mem[_4294] - _4224
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _4306 - _4224
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4614 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4614] < _3950:
                                                                revert with 'NH{q', 17
                                                            if mem[_4614] - _3950 and 10^12 > -1 / mem[_4614] - _3950:
                                                                revert with 'NH{q', 17
                                                            if not _1814:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4614]) - (10^12 * _3950) / _1814):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4614]) - (10^12 * _3950) / _1814
                                                    poolInfo[idx].field_512 = block.number
                                else:
                                    if block.number <= startBlock:
                                        s = poolInfo[idx].field_512 + -startBlock - 1 / halvingPeriod
                                        t = 0
                                        u = poolInfo[idx].field_512
                                        while s < 0:
                                            if s == -1:
                                                revert with 'NH{q', 17
                                            if s + 1 and halvingPeriod > -1 / s + 1:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) > !startBlock:
                                                revert with 'NH{q', 17
                                            if 0 == halvingPeriod:
                                                if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                    revert with 'NH{q', 17
                                                if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                    revert with 'NH{q', 17
                                                if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                s = s + 1
                                                t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                                u = halvingPeriod + (s * halvingPeriod) + startBlock
                                                continue 
                                            if halvingPeriod + (s * halvingPeriod) + startBlock <= startBlock:
                                                if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                    revert with 'NH{q', 17
                                                if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                    revert with 'NH{q', 17
                                                if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                s = s + 1
                                                t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                                u = halvingPeriod + (s * halvingPeriod) + startBlock
                                                continue 
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < startBlock:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) < 1:
                                                revert with 'NH{q', 17
                                            if not halvingPeriod:
                                                revert with 'NH{q', 18
                                            if not halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                                if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                    revert with 'NH{q', 17
                                                if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                    revert with 'NH{q', 17
                                                if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                s = s + 1
                                                t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                                u = halvingPeriod + (s * halvingPeriod) + startBlock
                                                continue 
                                            if halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > 255:
                                                revert with 'NH{q', 17
                                            if not 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                                revert with 'NH{q', 18
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if 0 == halvingPeriod:
                                            if block.number < u:
                                                revert with 'NH{q', 17
                                            if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                revert with 'NH{q', 17
                                            if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3640 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3656 = mem[_3640]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3704 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3720 = mem[_3704]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3768 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3784 = mem[_3768]
                                                if _3720 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _3720 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3768]:
                                                    if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3942 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_3942] < _3656:
                                                            revert with 'NH{q', 17
                                                        if mem[_3942] - _3656 and 10^12 > -1 / mem[_3942] - _3656:
                                                            revert with 'NH{q', 17
                                                        if not _1814:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_3942]) - (10^12 * _3656) / _1814):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_3942]) - (10^12 * _3656) / _1814
                                                    else:
                                                        mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4030 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4030] < _3656:
                                                            revert with 'NH{q', 17
                                                        if mem[_4030] - _3656 and 10^12 > -1 / mem[_4030] - _3656:
                                                            revert with 'NH{q', 17
                                                        if not _1814:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4030]) - (10^12 * _3656) / _1814):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4030]) - (10^12 * _3656) / _1814
                                                else:
                                                    if mem[_3768] < _3720:
                                                        revert with 'NH{q', 17
                                                    if not mem[_3768] - _3720:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4142 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4142] < _3656:
                                                            revert with 'NH{q', 17
                                                        if mem[_4142] - _3656 and 10^12 > -1 / mem[_4142] - _3656:
                                                            revert with 'NH{q', 17
                                                        if not _1814:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4142]) - (10^12 * _3656) / _1814):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4142]) - (10^12 * _3656) / _1814
                                                    else:
                                                        mem[mem[64] + 36] = mem[_3768] - _3720
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _3784 - _3720
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4220 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4220] < _3656:
                                                            revert with 'NH{q', 17
                                                        if mem[_4220] - _3656 and 10^12 > -1 / mem[_4220] - _3656:
                                                            revert with 'NH{q', 17
                                                        if not _1814:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4220]) - (10^12 * _3656) / _1814):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4220]) - (10^12 * _3656) / _1814
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number <= startBlock:
                                                if block.number < u:
                                                    revert with 'NH{q', 17
                                                if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                    revert with 'NH{q', 17
                                                if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                    if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3648 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3664 = mem[_3648]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3712 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3730 = mem[_3712]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3776 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3794 = mem[_3776]
                                                    if _3730 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _3730 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3776]:
                                                        if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _3980 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_3980] < _3664:
                                                                revert with 'NH{q', 17
                                                            if mem[_3980] - _3664 and 10^12 > -1 / mem[_3980] - _3664:
                                                                revert with 'NH{q', 17
                                                            if not _1814:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_3980]) - (10^12 * _3664) / _1814):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_3980]) - (10^12 * _3664) / _1814
                                                        else:
                                                            mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4094 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4094] < _3664:
                                                                revert with 'NH{q', 17
                                                            if mem[_4094] - _3664 and 10^12 > -1 / mem[_4094] - _3664:
                                                                revert with 'NH{q', 17
                                                            if not _1814:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4094]) - (10^12 * _3664) / _1814):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4094]) - (10^12 * _3664) / _1814
                                                    else:
                                                        if mem[_3776] < _3730:
                                                            revert with 'NH{q', 17
                                                        if not mem[_3776] - _3730:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4181 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4181] < _3664:
                                                                revert with 'NH{q', 17
                                                            if mem[_4181] - _3664 and 10^12 > -1 / mem[_4181] - _3664:
                                                                revert with 'NH{q', 17
                                                            if not _1814:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4181]) - (10^12 * _3664) / _1814):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4181]) - (10^12 * _3664) / _1814
                                                        else:
                                                            mem[mem[64] + 36] = mem[_3776] - _3730
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _3794 - _3730
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4245 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4245] < _3664:
                                                                revert with 'NH{q', 17
                                                            if mem[_4245] - _3664 and 10^12 > -1 / mem[_4245] - _3664:
                                                                revert with 'NH{q', 17
                                                            if not _1814:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4245]) - (10^12 * _3664) / _1814):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4245]) - (10^12 * _3664) / _1814
                                                    poolInfo[idx].field_512 = block.number
                                            else:
                                                if block.number < startBlock:
                                                    revert with 'NH{q', 17
                                                if block.number - startBlock < 1:
                                                    revert with 'NH{q', 17
                                                if not halvingPeriod:
                                                    revert with 'NH{q', 18
                                                if not block.number + -startBlock - 1 / halvingPeriod:
                                                    if block.number < u:
                                                        revert with 'NH{q', 17
                                                    if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                        revert with 'NH{q', 17
                                                    if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                        revert with 'NH{q', 17
                                                    if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                        if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                            revert with 'NH{q', 17
                                                        if not totalAllocPoint:
                                                            revert with 'NH{q', 18
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3816 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _3828 = mem[_3816]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x18160ddd with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3941 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4028 = mem[_3941]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.maxSupply() with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4184 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4248 = mem[_4184]
                                                        if _4028 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                            revert with 'NH{q', 17
                                                        if _4028 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4184]:
                                                            if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4346 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4346] < _3828:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4346] - _3828 and 10^12 > -1 / mem[_4346] - _3828:
                                                                    revert with 'NH{q', 17
                                                                if not _1814:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4346]) - (10^12 * _3828) / _1814):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4346]) - (10^12 * _3828) / _1814
                                                            else:
                                                                mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4408 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4408] < _3828:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4408] - _3828 and 10^12 > -1 / mem[_4408] - _3828:
                                                                    revert with 'NH{q', 17
                                                                if not _1814:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4408]) - (10^12 * _3828) / _1814):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4408]) - (10^12 * _3828) / _1814
                                                        else:
                                                            if mem[_4184] < _4028:
                                                                revert with 'NH{q', 17
                                                            if not mem[_4184] - _4028:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4458 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4458] < _3828:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4458] - _3828 and 10^12 > -1 / mem[_4458] - _3828:
                                                                    revert with 'NH{q', 17
                                                                if not _1814:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4458]) - (10^12 * _3828) / _1814):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4458]) - (10^12 * _3828) / _1814
                                                            else:
                                                                mem[mem[64] + 36] = mem[_4184] - _4028
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, _4248 - _4028
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4530 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4530] < _3828:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4530] - _3828 and 10^12 > -1 / mem[_4530] - _3828:
                                                                    revert with 'NH{q', 17
                                                                if not _1814:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4530]) - (10^12 * _3828) / _1814):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4530]) - (10^12 * _3828) / _1814
                                                        poolInfo[idx].field_512 = block.number
                                                else:
                                                    if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                        revert with 'NH{q', 17
                                                    if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                        revert with 'NH{q', 18
                                                    if block.number < u:
                                                        revert with 'NH{q', 17
                                                    if block.number - u and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - u:
                                                        revert with 'NH{q', 17
                                                    if t > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                        revert with 'NH{q', 17
                                                    if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                        if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                            revert with 'NH{q', 17
                                                        if not totalAllocPoint:
                                                            revert with 'NH{q', 18
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3872 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _3940 = mem[_3872]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x18160ddd with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4140 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4218 = mem[_4140]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.maxSupply() with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4290 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4304 = mem[_4290]
                                                        if _4218 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                            revert with 'NH{q', 17
                                                        if _4218 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4290]:
                                                            if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4454 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4454] < _3940:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4454] - _3940 and 10^12 > -1 / mem[_4454] - _3940:
                                                                    revert with 'NH{q', 17
                                                                if not _1814:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4454]) - (10^12 * _3940) / _1814):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4454]) - (10^12 * _3940) / _1814
                                                            else:
                                                                mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4526 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4526] < _3940:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4526] - _3940 and 10^12 > -1 / mem[_4526] - _3940:
                                                                    revert with 'NH{q', 17
                                                                if not _1814:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4526]) - (10^12 * _3940) / _1814):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4526]) - (10^12 * _3940) / _1814
                                                        else:
                                                            if mem[_4290] < _4218:
                                                                revert with 'NH{q', 17
                                                            if not mem[_4290] - _4218:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4573 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4573] < _3940:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4573] - _3940 and 10^12 > -1 / mem[_4573] - _3940:
                                                                    revert with 'NH{q', 17
                                                                if not _1814:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4573]) - (10^12 * _3940) / _1814):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4573]) - (10^12 * _3940) / _1814
                                                            else:
                                                                mem[mem[64] + 36] = mem[_4290] - _4218
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, _4304 - _4218
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4610 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4610] < _3940:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4610] - _3940 and 10^12 > -1 / mem[_4610] - _3940:
                                                                    revert with 'NH{q', 17
                                                                if not _1814:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4610]) - (10^12 * _3940) / _1814):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4610]) - (10^12 * _3940) / _1814
                                                        poolInfo[idx].field_512 = block.number
                                    else:
                                        if block.number < startBlock:
                                            revert with 'NH{q', 17
                                        if block.number - startBlock < 1:
                                            revert with 'NH{q', 17
                                        if not halvingPeriod:
                                            revert with 'NH{q', 18
                                        s = poolInfo[idx].field_512 + -startBlock - 1 / halvingPeriod
                                        t = 0
                                        u = poolInfo[idx].field_512
                                        while s < block.number + -startBlock - 1 / halvingPeriod:
                                            if s == -1:
                                                revert with 'NH{q', 17
                                            if s + 1 and halvingPeriod > -1 / s + 1:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) > !startBlock:
                                                revert with 'NH{q', 17
                                            if 0 == halvingPeriod:
                                                if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                    revert with 'NH{q', 17
                                                if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                    revert with 'NH{q', 17
                                                if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                s = s + 1
                                                t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                                u = halvingPeriod + (s * halvingPeriod) + startBlock
                                                continue 
                                            if halvingPeriod + (s * halvingPeriod) + startBlock <= startBlock:
                                                if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                    revert with 'NH{q', 17
                                                if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                    revert with 'NH{q', 17
                                                if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                s = s + 1
                                                t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                                u = halvingPeriod + (s * halvingPeriod) + startBlock
                                                continue 
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < startBlock:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) < 1:
                                                revert with 'NH{q', 17
                                            if not halvingPeriod:
                                                revert with 'NH{q', 18
                                            if not halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                                if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                    revert with 'NH{q', 17
                                                if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                    revert with 'NH{q', 17
                                                if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                s = s + 1
                                                t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                                u = halvingPeriod + (s * halvingPeriod) + startBlock
                                                continue 
                                            if halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > 255:
                                                revert with 'NH{q', 17
                                            if not 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                                revert with 'NH{q', 18
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if 0 == halvingPeriod:
                                            if block.number < u:
                                                revert with 'NH{q', 17
                                            if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                revert with 'NH{q', 17
                                            if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3641 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3657 = mem[_3641]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3705 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3721 = mem[_3705]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3769 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3785 = mem[_3769]
                                                if _3721 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _3721 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3769]:
                                                    if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3947 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_3947] < _3657:
                                                            revert with 'NH{q', 17
                                                        if mem[_3947] - _3657 and 10^12 > -1 / mem[_3947] - _3657:
                                                            revert with 'NH{q', 17
                                                        if not _1814:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_3947]) - (10^12 * _3657) / _1814):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_3947]) - (10^12 * _3657) / _1814
                                                    else:
                                                        mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4039 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4039] < _3657:
                                                            revert with 'NH{q', 17
                                                        if mem[_4039] - _3657 and 10^12 > -1 / mem[_4039] - _3657:
                                                            revert with 'NH{q', 17
                                                        if not _1814:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4039]) - (10^12 * _3657) / _1814):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4039]) - (10^12 * _3657) / _1814
                                                else:
                                                    if mem[_3769] < _3721:
                                                        revert with 'NH{q', 17
                                                    if not mem[_3769] - _3721:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4147 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4147] < _3657:
                                                            revert with 'NH{q', 17
                                                        if mem[_4147] - _3657 and 10^12 > -1 / mem[_4147] - _3657:
                                                            revert with 'NH{q', 17
                                                        if not _1814:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4147]) - (10^12 * _3657) / _1814):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4147]) - (10^12 * _3657) / _1814
                                                    else:
                                                        mem[mem[64] + 36] = mem[_3769] - _3721
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _3785 - _3721
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4223 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4223] < _3657:
                                                            revert with 'NH{q', 17
                                                        if mem[_4223] - _3657 and 10^12 > -1 / mem[_4223] - _3657:
                                                            revert with 'NH{q', 17
                                                        if not _1814:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4223]) - (10^12 * _3657) / _1814):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4223]) - (10^12 * _3657) / _1814
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number <= startBlock:
                                                if block.number < u:
                                                    revert with 'NH{q', 17
                                                if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                    revert with 'NH{q', 17
                                                if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                    if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3649 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3665 = mem[_3649]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3713 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3733 = mem[_3713]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3777 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3797 = mem[_3777]
                                                    if _3733 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _3733 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3777]:
                                                        if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _3985 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_3985] < _3665:
                                                                revert with 'NH{q', 17
                                                            if mem[_3985] - _3665 and 10^12 > -1 / mem[_3985] - _3665:
                                                                revert with 'NH{q', 17
                                                            if not _1814:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_3985]) - (10^12 * _3665) / _1814):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_3985]) - (10^12 * _3665) / _1814
                                                        else:
                                                            mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4100 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4100] < _3665:
                                                                revert with 'NH{q', 17
                                                            if mem[_4100] - _3665 and 10^12 > -1 / mem[_4100] - _3665:
                                                                revert with 'NH{q', 17
                                                            if not _1814:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4100]) - (10^12 * _3665) / _1814):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4100]) - (10^12 * _3665) / _1814
                                                    else:
                                                        if mem[_3777] < _3733:
                                                            revert with 'NH{q', 17
                                                        if not mem[_3777] - _3733:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4186 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4186] < _3665:
                                                                revert with 'NH{q', 17
                                                            if mem[_4186] - _3665 and 10^12 > -1 / mem[_4186] - _3665:
                                                                revert with 'NH{q', 17
                                                            if not _1814:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4186]) - (10^12 * _3665) / _1814):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4186]) - (10^12 * _3665) / _1814
                                                        else:
                                                            mem[mem[64] + 36] = mem[_3777] - _3733
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _3797 - _3733
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4250 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4250] < _3665:
                                                                revert with 'NH{q', 17
                                                            if mem[_4250] - _3665 and 10^12 > -1 / mem[_4250] - _3665:
                                                                revert with 'NH{q', 17
                                                            if not _1814:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4250]) - (10^12 * _3665) / _1814):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4250]) - (10^12 * _3665) / _1814
                                                    poolInfo[idx].field_512 = block.number
                                            else:
                                                if block.number < startBlock:
                                                    revert with 'NH{q', 17
                                                if block.number - startBlock < 1:
                                                    revert with 'NH{q', 17
                                                if not halvingPeriod:
                                                    revert with 'NH{q', 18
                                                if not block.number + -startBlock - 1 / halvingPeriod:
                                                    if block.number < u:
                                                        revert with 'NH{q', 17
                                                    if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                        revert with 'NH{q', 17
                                                    if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                        revert with 'NH{q', 17
                                                    if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                        if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                            revert with 'NH{q', 17
                                                        if not totalAllocPoint:
                                                            revert with 'NH{q', 18
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3817 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _3831 = mem[_3817]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x18160ddd with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3946 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4037 = mem[_3946]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.maxSupply() with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4189 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4253 = mem[_4189]
                                                        if _4037 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                            revert with 'NH{q', 17
                                                        if _4037 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4189]:
                                                            if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4349 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4349] < _3831:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4349] - _3831 and 10^12 > -1 / mem[_4349] - _3831:
                                                                    revert with 'NH{q', 17
                                                                if not _1814:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4349]) - (10^12 * _3831) / _1814):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4349]) - (10^12 * _3831) / _1814
                                                            else:
                                                                mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4414 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4414] < _3831:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4414] - _3831 and 10^12 > -1 / mem[_4414] - _3831:
                                                                    revert with 'NH{q', 17
                                                                if not _1814:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4414]) - (10^12 * _3831) / _1814):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4414]) - (10^12 * _3831) / _1814
                                                        else:
                                                            if mem[_4189] < _4037:
                                                                revert with 'NH{q', 17
                                                            if not mem[_4189] - _4037:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4465 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4465] < _3831:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4465] - _3831 and 10^12 > -1 / mem[_4465] - _3831:
                                                                    revert with 'NH{q', 17
                                                                if not _1814:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4465]) - (10^12 * _3831) / _1814):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4465]) - (10^12 * _3831) / _1814
                                                            else:
                                                                mem[mem[64] + 36] = mem[_4189] - _4037
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, _4253 - _4037
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4536 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4536] < _3831:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4536] - _3831 and 10^12 > -1 / mem[_4536] - _3831:
                                                                    revert with 'NH{q', 17
                                                                if not _1814:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4536]) - (10^12 * _3831) / _1814):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4536]) - (10^12 * _3831) / _1814
                                                        poolInfo[idx].field_512 = block.number
                                                else:
                                                    if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                        revert with 'NH{q', 17
                                                    if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                        revert with 'NH{q', 18
                                                    if block.number < u:
                                                        revert with 'NH{q', 17
                                                    if block.number - u and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - u:
                                                        revert with 'NH{q', 17
                                                    if t > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                        revert with 'NH{q', 17
                                                    if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                        if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                            revert with 'NH{q', 17
                                                        if not totalAllocPoint:
                                                            revert with 'NH{q', 18
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3879 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _3945 = mem[_3879]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x18160ddd with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4145 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4221 = mem[_4145]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.maxSupply() with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4292 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4305 = mem[_4292]
                                                        if _4221 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                            revert with 'NH{q', 17
                                                        if _4221 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4292]:
                                                            if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4461 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4461] < _3945:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4461] - _3945 and 10^12 > -1 / mem[_4461] - _3945:
                                                                    revert with 'NH{q', 17
                                                                if not _1814:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4461]) - (10^12 * _3945) / _1814):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4461]) - (10^12 * _3945) / _1814
                                                            else:
                                                                mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4532 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4532] < _3945:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4532] - _3945 and 10^12 > -1 / mem[_4532] - _3945:
                                                                    revert with 'NH{q', 17
                                                                if not _1814:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4532]) - (10^12 * _3945) / _1814):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4532]) - (10^12 * _3945) / _1814
                                                        else:
                                                            if mem[_4292] < _4221:
                                                                revert with 'NH{q', 17
                                                            if not mem[_4292] - _4221:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4578 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4578] < _3945:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4578] - _3945 and 10^12 > -1 / mem[_4578] - _3945:
                                                                    revert with 'NH{q', 17
                                                                if not _1814:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4578]) - (10^12 * _3945) / _1814):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4578]) - (10^12 * _3945) / _1814
                                                            else:
                                                                mem[mem[64] + 36] = mem[_4292] - _4221
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, _4305 - _4221
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4612 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4612] < _3945:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4612] - _3945 and 10^12 > -1 / mem[_4612] - _3945:
                                                                    revert with 'NH{q', 17
                                                                if not _1814:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4612]) - (10^12 * _3945) / _1814):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4612]) - (10^12 * _3945) / _1814
                                                        poolInfo[idx].field_512 = block.number
            if idx == -1:
                revert with 'NH{q', 17
            idx = idx + 1
            continue 
    if arg1 >= poolInfo.length:
        revert with 'NH{q', 50
    if totalAllocPoint < poolInfo[arg1].field_256:
        revert with 'NH{q', 17
    if totalAllocPoint - poolInfo[arg1].field_256 > !arg2:
        revert with 'NH{q', 17
    totalAllocPoint = totalAllocPoint - poolInfo[arg1].field_256 + arg2
    if arg1 >= poolInfo.length:
        revert with 'NH{q', 50
    poolInfo[arg1].field_256 = arg2
}

function add(uint256 arg1, address arg2, bool arg3) payable {
    mem[64] = 96
    require calldata.size - 4 >= 96
    require arg2 == arg2
    require arg3 == arg3
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg2:
        revert with 0, '_lpToken is the zero address'
    if arg3:
        idx = 0
        while idx < poolInfo.length:
            mem[0] = 5
            if block.number > poolInfo[idx].field_512:
                mem[0] = poolInfo[idx].field_0
                mem[32] = 2
                if stor2[stor5[idx].field_0]:
                    if not poolInfo[idx].field_1280:
                        poolInfo[idx].field_512 = block.number
                    else:
                        if 0 == halvingPeriod:
                            if 0 == halvingPeriod:
                                if block.number < poolInfo[idx].field_512:
                                    revert with 'NH{q', 17
                                if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                    revert with 'NH{q', 17
                                if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                    revert with 'NH{q', 17
                                if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                    if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                        revert with 'NH{q', 17
                                    if not totalAllocPoint:
                                        revert with 'NH{q', 18
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(HCTAddress)
                                    staticcall HCTAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1867 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _1876 = mem[_1867]
                                    require ext_code.size(HCTAddress)
                                    staticcall HCTAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1909 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _1923 = mem[_1909]
                                    require ext_code.size(HCTAddress)
                                    staticcall HCTAddress.maxSupply() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1954 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _1969 = mem[_1954]
                                    if _1923 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                        revert with 'NH{q', 17
                                    if _1923 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_1954]:
                                        if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2120 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if mem[_2120] < _1876:
                                                revert with 'NH{q', 17
                                            if mem[_2120] - _1876 and 10^12 > -1 / mem[_2120] - _1876:
                                                revert with 'NH{q', 17
                                            if not poolInfo[idx].field_1280:
                                                revert with 'NH{q', 18
                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2120]) - (10^12 * _1876) / poolInfo[idx].field_1280):
                                                revert with 'NH{q', 17
                                            poolInfo[idx].field_768 += (10^12 * mem[_2120]) - (10^12 * _1876) / poolInfo[idx].field_1280
                                        else:
                                            mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                            require ext_code.size(HCTAddress)
                                            call HCTAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2181 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if mem[_2181] < _1876:
                                                revert with 'NH{q', 17
                                            if mem[_2181] - _1876 and 10^12 > -1 / mem[_2181] - _1876:
                                                revert with 'NH{q', 17
                                            if not poolInfo[idx].field_1280:
                                                revert with 'NH{q', 18
                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2181]) - (10^12 * _1876) / poolInfo[idx].field_1280):
                                                revert with 'NH{q', 17
                                            poolInfo[idx].field_768 += (10^12 * mem[_2181]) - (10^12 * _1876) / poolInfo[idx].field_1280
                                    else:
                                        if mem[_1954] < _1923:
                                            revert with 'NH{q', 17
                                        if not mem[_1954] - _1923:
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2270 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if mem[_2270] < _1876:
                                                revert with 'NH{q', 17
                                            if mem[_2270] - _1876 and 10^12 > -1 / mem[_2270] - _1876:
                                                revert with 'NH{q', 17
                                            if not poolInfo[idx].field_1280:
                                                revert with 'NH{q', 18
                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2270]) - (10^12 * _1876) / poolInfo[idx].field_1280):
                                                revert with 'NH{q', 17
                                            poolInfo[idx].field_768 += (10^12 * mem[_2270]) - (10^12 * _1876) / poolInfo[idx].field_1280
                                        else:
                                            mem[mem[64] + 36] = mem[_1954] - _1923
                                            require ext_code.size(HCTAddress)
                                            call HCTAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args this.address, _1969 - _1923
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2346 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if mem[_2346] < _1876:
                                                revert with 'NH{q', 17
                                            if mem[_2346] - _1876 and 10^12 > -1 / mem[_2346] - _1876:
                                                revert with 'NH{q', 17
                                            if not poolInfo[idx].field_1280:
                                                revert with 'NH{q', 18
                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2346]) - (10^12 * _1876) / poolInfo[idx].field_1280):
                                                revert with 'NH{q', 17
                                            poolInfo[idx].field_768 += (10^12 * mem[_2346]) - (10^12 * _1876) / poolInfo[idx].field_1280
                                    poolInfo[idx].field_512 = block.number
                            else:
                                if block.number <= startBlock:
                                    if block.number < poolInfo[idx].field_512:
                                        revert with 'NH{q', 17
                                    if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                        revert with 'NH{q', 17
                                    if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                        revert with 'NH{q', 17
                                    if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                        if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                            revert with 'NH{q', 17
                                        if not totalAllocPoint:
                                            revert with 'NH{q', 18
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1871 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _1883 = mem[_1871]
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1916 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _1931 = mem[_1916]
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.maxSupply() with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1961 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _1980 = mem[_1961]
                                        if _1931 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                            revert with 'NH{q', 17
                                        if _1931 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_1961]:
                                            if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2141 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2141] < _1883:
                                                    revert with 'NH{q', 17
                                                if mem[_2141] - _1883 and 10^12 > -1 / mem[_2141] - _1883:
                                                    revert with 'NH{q', 17
                                                if not poolInfo[idx].field_1280:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2141]) - (10^12 * _1883) / poolInfo[idx].field_1280):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2141]) - (10^12 * _1883) / poolInfo[idx].field_1280
                                            else:
                                                mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                require ext_code.size(HCTAddress)
                                                call HCTAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2221 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2221] < _1883:
                                                    revert with 'NH{q', 17
                                                if mem[_2221] - _1883 and 10^12 > -1 / mem[_2221] - _1883:
                                                    revert with 'NH{q', 17
                                                if not poolInfo[idx].field_1280:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2221]) - (10^12 * _1883) / poolInfo[idx].field_1280):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2221]) - (10^12 * _1883) / poolInfo[idx].field_1280
                                        else:
                                            if mem[_1961] < _1931:
                                                revert with 'NH{q', 17
                                            if not mem[_1961] - _1931:
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2305 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2305] < _1883:
                                                    revert with 'NH{q', 17
                                                if mem[_2305] - _1883 and 10^12 > -1 / mem[_2305] - _1883:
                                                    revert with 'NH{q', 17
                                                if not poolInfo[idx].field_1280:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2305]) - (10^12 * _1883) / poolInfo[idx].field_1280):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2305]) - (10^12 * _1883) / poolInfo[idx].field_1280
                                            else:
                                                mem[mem[64] + 36] = mem[_1961] - _1931
                                                require ext_code.size(HCTAddress)
                                                call HCTAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args this.address, _1980 - _1931
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2384 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2384] < _1883:
                                                    revert with 'NH{q', 17
                                                if mem[_2384] - _1883 and 10^12 > -1 / mem[_2384] - _1883:
                                                    revert with 'NH{q', 17
                                                if not poolInfo[idx].field_1280:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2384]) - (10^12 * _1883) / poolInfo[idx].field_1280):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2384]) - (10^12 * _1883) / poolInfo[idx].field_1280
                                        poolInfo[idx].field_512 = block.number
                                else:
                                    if block.number < startBlock:
                                        revert with 'NH{q', 17
                                    if block.number - startBlock < 1:
                                        revert with 'NH{q', 17
                                    if not halvingPeriod:
                                        revert with 'NH{q', 18
                                    if not block.number + -startBlock - 1 / halvingPeriod:
                                        if block.number < poolInfo[idx].field_512:
                                            revert with 'NH{q', 17
                                        if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                            revert with 'NH{q', 17
                                        if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                            if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                revert with 'NH{q', 17
                                            if not totalAllocPoint:
                                                revert with 'NH{q', 18
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2011 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _2032 = mem[_2011]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2119 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _2179 = mem[_2119]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.maxSupply() with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2308 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _2387 = mem[_2308]
                                            if _2179 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                revert with 'NH{q', 17
                                            if _2179 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2308]:
                                                if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2628 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2628] < _2032:
                                                        revert with 'NH{q', 17
                                                    if mem[_2628] - _2032 and 10^12 > -1 / mem[_2628] - _2032:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2628]) - (10^12 * _2032) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2628]) - (10^12 * _2032) / poolInfo[idx].field_1280
                                                else:
                                                    mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2713 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2713] < _2032:
                                                        revert with 'NH{q', 17
                                                    if mem[_2713] - _2032 and 10^12 > -1 / mem[_2713] - _2032:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2713]) - (10^12 * _2032) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2713]) - (10^12 * _2032) / poolInfo[idx].field_1280
                                            else:
                                                if mem[_2308] < _2179:
                                                    revert with 'NH{q', 17
                                                if not mem[_2308] - _2179:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2819 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2819] < _2032:
                                                        revert with 'NH{q', 17
                                                    if mem[_2819] - _2032 and 10^12 > -1 / mem[_2819] - _2032:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2819]) - (10^12 * _2032) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2819]) - (10^12 * _2032) / poolInfo[idx].field_1280
                                                else:
                                                    mem[mem[64] + 36] = mem[_2308] - _2179
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, _2387 - _2179
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2931 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2931] < _2032:
                                                        revert with 'NH{q', 17
                                                    if mem[_2931] - _2032 and 10^12 > -1 / mem[_2931] - _2032:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2931]) - (10^12 * _2032) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2931]) - (10^12 * _2032) / poolInfo[idx].field_1280
                                            poolInfo[idx].field_512 = block.number
                                    else:
                                        if block.number + -startBlock - 1 / halvingPeriod > 255:
                                            revert with 'NH{q', 17
                                        if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                            revert with 'NH{q', 18
                                        if block.number < poolInfo[idx].field_512:
                                            revert with 'NH{q', 17
                                        if block.number - poolInfo[idx].field_512 and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - poolInfo[idx].field_512:
                                            revert with 'NH{q', 17
                                        if 0 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                            revert with 'NH{q', 17
                                        if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                            if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                revert with 'NH{q', 17
                                            if not totalAllocPoint:
                                                revert with 'NH{q', 18
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2071 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _2118 = mem[_2071]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2268 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _2344 = mem[_2268]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.maxSupply() with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2468 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _2511 = mem[_2468]
                                            if _2344 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                revert with 'NH{q', 17
                                            if _2344 + ((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2468]:
                                                if not (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2815 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2815] < _2118:
                                                        revert with 'NH{q', 17
                                                    if mem[_2815] - _2118 and 10^12 > -1 / mem[_2815] - _2118:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2815]) - (10^12 * _2118) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2815]) - (10^12 * _2118) / poolInfo[idx].field_1280
                                                else:
                                                    mem[mem[64] + 36] = (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2927 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2927] < _2118:
                                                        revert with 'NH{q', 17
                                                    if mem[_2927] - _2118 and 10^12 > -1 / mem[_2927] - _2118:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2927]) - (10^12 * _2118) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2927]) - (10^12 * _2118) / poolInfo[idx].field_1280
                                            else:
                                                if mem[_2468] < _2344:
                                                    revert with 'NH{q', 17
                                                if not mem[_2468] - _2344:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3042 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_3042] < _2118:
                                                        revert with 'NH{q', 17
                                                    if mem[_3042] - _2118 and 10^12 > -1 / mem[_3042] - _2118:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_3042]) - (10^12 * _2118) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_3042]) - (10^12 * _2118) / poolInfo[idx].field_1280
                                                else:
                                                    mem[mem[64] + 36] = mem[_2468] - _2344
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, _2511 - _2344
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3120 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_3120] < _2118:
                                                        revert with 'NH{q', 17
                                                    if mem[_3120] - _2118 and 10^12 > -1 / mem[_3120] - _2118:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_3120]) - (10^12 * _2118) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_3120]) - (10^12 * _2118) / poolInfo[idx].field_1280
                                            poolInfo[idx].field_512 = block.number
                        else:
                            if poolInfo[idx].field_512 <= startBlock:
                                if 0 == halvingPeriod:
                                    if 0 == halvingPeriod:
                                        if block.number < poolInfo[idx].field_512:
                                            revert with 'NH{q', 17
                                        if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                            revert with 'NH{q', 17
                                        if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                            if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                revert with 'NH{q', 17
                                            if not totalAllocPoint:
                                                revert with 'NH{q', 18
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _1870 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _1882 = mem[_1870]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _1915 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _1930 = mem[_1915]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.maxSupply() with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _1960 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _1977 = mem[_1960]
                                            if _1930 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                revert with 'NH{q', 17
                                            if _1930 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_1960]:
                                                if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2136 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2136] < _1882:
                                                        revert with 'NH{q', 17
                                                    if mem[_2136] - _1882 and 10^12 > -1 / mem[_2136] - _1882:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2136]) - (10^12 * _1882) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2136]) - (10^12 * _1882) / poolInfo[idx].field_1280
                                                else:
                                                    mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2213 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2213] < _1882:
                                                        revert with 'NH{q', 17
                                                    if mem[_2213] - _1882 and 10^12 > -1 / mem[_2213] - _1882:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2213]) - (10^12 * _1882) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2213]) - (10^12 * _1882) / poolInfo[idx].field_1280
                                            else:
                                                if mem[_1960] < _1930:
                                                    revert with 'NH{q', 17
                                                if not mem[_1960] - _1930:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2298 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2298] < _1882:
                                                        revert with 'NH{q', 17
                                                    if mem[_2298] - _1882 and 10^12 > -1 / mem[_2298] - _1882:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2298]) - (10^12 * _1882) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2298]) - (10^12 * _1882) / poolInfo[idx].field_1280
                                                else:
                                                    mem[mem[64] + 36] = mem[_1960] - _1930
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, _1977 - _1930
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2380 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2380] < _1882:
                                                        revert with 'NH{q', 17
                                                    if mem[_2380] - _1882 and 10^12 > -1 / mem[_2380] - _1882:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2380]) - (10^12 * _1882) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2380]) - (10^12 * _1882) / poolInfo[idx].field_1280
                                            poolInfo[idx].field_512 = block.number
                                    else:
                                        if block.number <= startBlock:
                                            if block.number < poolInfo[idx].field_512:
                                                revert with 'NH{q', 17
                                            if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                                revert with 'NH{q', 17
                                            if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                                if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _1875 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _1890 = mem[_1875]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _1922 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _1940 = mem[_1922]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _1968 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _1992 = mem[_1968]
                                                if _1940 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _1940 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_1968]:
                                                    if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2168 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2168] < _1890:
                                                            revert with 'NH{q', 17
                                                        if mem[_2168] - _1890 and 10^12 > -1 / mem[_2168] - _1890:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2168]) - (10^12 * _1890) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2168]) - (10^12 * _1890) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2258 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2258] < _1890:
                                                            revert with 'NH{q', 17
                                                        if mem[_2258] - _1890 and 10^12 > -1 / mem[_2258] - _1890:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2258]) - (10^12 * _1890) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2258]) - (10^12 * _1890) / poolInfo[idx].field_1280
                                                else:
                                                    if mem[_1968] < _1940:
                                                        revert with 'NH{q', 17
                                                    if not mem[_1968] - _1940:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2338 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2338] < _1890:
                                                            revert with 'NH{q', 17
                                                        if mem[_2338] - _1890 and 10^12 > -1 / mem[_2338] - _1890:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2338]) - (10^12 * _1890) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2338]) - (10^12 * _1890) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = mem[_1968] - _1940
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _1992 - _1940
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2421 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2421] < _1890:
                                                            revert with 'NH{q', 17
                                                        if mem[_2421] - _1890 and 10^12 > -1 / mem[_2421] - _1890:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2421]) - (10^12 * _1890) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2421]) - (10^12 * _1890) / poolInfo[idx].field_1280
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number < startBlock:
                                                revert with 'NH{q', 17
                                            if block.number - startBlock < 1:
                                                revert with 'NH{q', 17
                                            if not halvingPeriod:
                                                revert with 'NH{q', 18
                                            if not block.number + -startBlock - 1 / halvingPeriod:
                                                if block.number < poolInfo[idx].field_512:
                                                    revert with 'NH{q', 17
                                                if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                                    revert with 'NH{q', 17
                                                if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                                    if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2016 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2046 = mem[_2016]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2135 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2211 = mem[_2135]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2341 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2424 = mem[_2341]
                                                    if _2211 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _2211 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2341]:
                                                        if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2648 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2648] < _2046:
                                                                revert with 'NH{q', 17
                                                            if mem[_2648] - _2046 and 10^12 > -1 / mem[_2648] - _2046:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2648]) - (10^12 * _2046) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2648]) - (10^12 * _2046) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2754 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2754] < _2046:
                                                                revert with 'NH{q', 17
                                                            if mem[_2754] - _2046 and 10^12 > -1 / mem[_2754] - _2046:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2754]) - (10^12 * _2046) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2754]) - (10^12 * _2046) / poolInfo[idx].field_1280
                                                    else:
                                                        if mem[_2341] < _2211:
                                                            revert with 'NH{q', 17
                                                        if not mem[_2341] - _2211:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2854 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2854] < _2046:
                                                                revert with 'NH{q', 17
                                                            if mem[_2854] - _2046 and 10^12 > -1 / mem[_2854] - _2046:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2854]) - (10^12 * _2046) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2854]) - (10^12 * _2046) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = mem[_2341] - _2211
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _2424 - _2211
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2979 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2979] < _2046:
                                                                revert with 'NH{q', 17
                                                            if mem[_2979] - _2046 and 10^12 > -1 / mem[_2979] - _2046:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2979]) - (10^12 * _2046) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2979]) - (10^12 * _2046) / poolInfo[idx].field_1280
                                                    poolInfo[idx].field_512 = block.number
                                            else:
                                                if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                    revert with 'NH{q', 17
                                                if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                    revert with 'NH{q', 18
                                                if block.number < poolInfo[idx].field_512:
                                                    revert with 'NH{q', 17
                                                if block.number - poolInfo[idx].field_512 and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - poolInfo[idx].field_512:
                                                    revert with 'NH{q', 17
                                                if 0 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                    revert with 'NH{q', 17
                                                if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                    if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2086 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2134 = mem[_2086]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2296 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2378 = mem[_2296]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2487 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2528 = mem[_2487]
                                                    if _2378 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _2378 + ((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2487]:
                                                        if not (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2850 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2850] < _2134:
                                                                revert with 'NH{q', 17
                                                            if mem[_2850] - _2134 and 10^12 > -1 / mem[_2850] - _2134:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2850]) - (10^12 * _2134) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2850]) - (10^12 * _2134) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2975 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2975] < _2134:
                                                                revert with 'NH{q', 17
                                                            if mem[_2975] - _2134 and 10^12 > -1 / mem[_2975] - _2134:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2975]) - (10^12 * _2134) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2975]) - (10^12 * _2134) / poolInfo[idx].field_1280
                                                    else:
                                                        if mem[_2487] < _2378:
                                                            revert with 'NH{q', 17
                                                        if not mem[_2487] - _2378:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _3073 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_3073] < _2134:
                                                                revert with 'NH{q', 17
                                                            if mem[_3073] - _2134 and 10^12 > -1 / mem[_3073] - _2134:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_3073]) - (10^12 * _2134) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_3073]) - (10^12 * _2134) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = mem[_2487] - _2378
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _2528 - _2378
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _3142 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_3142] < _2134:
                                                                revert with 'NH{q', 17
                                                            if mem[_3142] - _2134 and 10^12 > -1 / mem[_3142] - _2134:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_3142]) - (10^12 * _2134) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_3142]) - (10^12 * _2134) / poolInfo[idx].field_1280
                                                    poolInfo[idx].field_512 = block.number
                                else:
                                    if block.number <= startBlock:
                                        if 0 == halvingPeriod:
                                            if block.number < poolInfo[idx].field_512:
                                                revert with 'NH{q', 17
                                            if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                                revert with 'NH{q', 17
                                            if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                                if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _1874 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _1889 = mem[_1874]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _1921 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _1939 = mem[_1921]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _1967 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _1989 = mem[_1967]
                                                if _1939 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _1939 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_1967]:
                                                    if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2164 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2164] < _1889:
                                                            revert with 'NH{q', 17
                                                        if mem[_2164] - _1889 and 10^12 > -1 / mem[_2164] - _1889:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2164]) - (10^12 * _1889) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2164]) - (10^12 * _1889) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2251 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2251] < _1889:
                                                            revert with 'NH{q', 17
                                                        if mem[_2251] - _1889 and 10^12 > -1 / mem[_2251] - _1889:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2251]) - (10^12 * _1889) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2251]) - (10^12 * _1889) / poolInfo[idx].field_1280
                                                else:
                                                    if mem[_1967] < _1939:
                                                        revert with 'NH{q', 17
                                                    if not mem[_1967] - _1939:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2333 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2333] < _1889:
                                                            revert with 'NH{q', 17
                                                        if mem[_2333] - _1889 and 10^12 > -1 / mem[_2333] - _1889:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2333]) - (10^12 * _1889) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2333]) - (10^12 * _1889) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = mem[_1967] - _1939
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _1989 - _1939
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2418 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2418] < _1889:
                                                            revert with 'NH{q', 17
                                                        if mem[_2418] - _1889 and 10^12 > -1 / mem[_2418] - _1889:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2418]) - (10^12 * _1889) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2418]) - (10^12 * _1889) / poolInfo[idx].field_1280
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number <= startBlock:
                                                if block.number < poolInfo[idx].field_512:
                                                    revert with 'NH{q', 17
                                                if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                                    revert with 'NH{q', 17
                                                if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                                    if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _1881 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _1897 = mem[_1881]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _1929 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _1949 = mem[_1929]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _1976 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2003 = mem[_1976]
                                                    if _1949 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _1949 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_1976]:
                                                        if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2201 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2201] < _1897:
                                                                revert with 'NH{q', 17
                                                            if mem[_2201] - _1897 and 10^12 > -1 / mem[_2201] - _1897:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2201]) - (10^12 * _1897) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2201]) - (10^12 * _1897) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2289 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2289] < _1897:
                                                                revert with 'NH{q', 17
                                                            if mem[_2289] - _1897 and 10^12 > -1 / mem[_2289] - _1897:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2289]) - (10^12 * _1897) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2289]) - (10^12 * _1897) / poolInfo[idx].field_1280
                                                    else:
                                                        if mem[_1976] < _1949:
                                                            revert with 'NH{q', 17
                                                        if not mem[_1976] - _1949:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2373 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2373] < _1897:
                                                                revert with 'NH{q', 17
                                                            if mem[_2373] - _1897 and 10^12 > -1 / mem[_2373] - _1897:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2373]) - (10^12 * _1897) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2373]) - (10^12 * _1897) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = mem[_1976] - _1949
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _2003 - _1949
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2454 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2454] < _1897:
                                                                revert with 'NH{q', 17
                                                            if mem[_2454] - _1897 and 10^12 > -1 / mem[_2454] - _1897:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2454]) - (10^12 * _1897) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2454]) - (10^12 * _1897) / poolInfo[idx].field_1280
                                                    poolInfo[idx].field_512 = block.number
                                            else:
                                                if block.number < startBlock:
                                                    revert with 'NH{q', 17
                                                if block.number - startBlock < 1:
                                                    revert with 'NH{q', 17
                                                if not halvingPeriod:
                                                    revert with 'NH{q', 18
                                                if not block.number + -startBlock - 1 / halvingPeriod:
                                                    if block.number < poolInfo[idx].field_512:
                                                        revert with 'NH{q', 17
                                                    if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                                        revert with 'NH{q', 17
                                                    if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                                        revert with 'NH{q', 17
                                                    if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                                        if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                            revert with 'NH{q', 17
                                                        if not totalAllocPoint:
                                                            revert with 'NH{q', 18
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2026 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _2062 = mem[_2026]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x18160ddd with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2163 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _2249 = mem[_2163]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.maxSupply() with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2376 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _2457 = mem[_2376]
                                                        if _2249 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                            revert with 'NH{q', 17
                                                        if _2249 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2376]:
                                                            if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _2683 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_2683] < _2062:
                                                                    revert with 'NH{q', 17
                                                                if mem[_2683] - _2062 and 10^12 > -1 / mem[_2683] - _2062:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2683]) - (10^12 * _2062) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_2683]) - (10^12 * _2062) / poolInfo[idx].field_1280
                                                            else:
                                                                mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _2793 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_2793] < _2062:
                                                                    revert with 'NH{q', 17
                                                                if mem[_2793] - _2062 and 10^12 > -1 / mem[_2793] - _2062:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2793]) - (10^12 * _2062) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_2793]) - (10^12 * _2062) / poolInfo[idx].field_1280
                                                        else:
                                                            if mem[_2376] < _2249:
                                                                revert with 'NH{q', 17
                                                            if not mem[_2376] - _2249:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _2907 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_2907] < _2062:
                                                                    revert with 'NH{q', 17
                                                                if mem[_2907] - _2062 and 10^12 > -1 / mem[_2907] - _2062:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2907]) - (10^12 * _2062) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_2907]) - (10^12 * _2062) / poolInfo[idx].field_1280
                                                            else:
                                                                mem[mem[64] + 36] = mem[_2376] - _2249
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, _2457 - _2249
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _3026 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_3026] < _2062:
                                                                    revert with 'NH{q', 17
                                                                if mem[_3026] - _2062 and 10^12 > -1 / mem[_3026] - _2062:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_3026]) - (10^12 * _2062) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_3026]) - (10^12 * _2062) / poolInfo[idx].field_1280
                                                        poolInfo[idx].field_512 = block.number
                                                else:
                                                    if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                        revert with 'NH{q', 17
                                                    if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                        revert with 'NH{q', 18
                                                    if block.number < poolInfo[idx].field_512:
                                                        revert with 'NH{q', 17
                                                    if block.number - poolInfo[idx].field_512 and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - poolInfo[idx].field_512:
                                                        revert with 'NH{q', 17
                                                    if 0 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                        revert with 'NH{q', 17
                                                    if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                        if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                            revert with 'NH{q', 17
                                                        if not totalAllocPoint:
                                                            revert with 'NH{q', 18
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2106 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _2162 = mem[_2106]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x18160ddd with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2331 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _2416 = mem[_2331]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.maxSupply() with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2507 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _2549 = mem[_2507]
                                                        if _2416 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                            revert with 'NH{q', 17
                                                        if _2416 + ((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2507]:
                                                            if not (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _2903 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_2903] < _2162:
                                                                    revert with 'NH{q', 17
                                                                if mem[_2903] - _2162 and 10^12 > -1 / mem[_2903] - _2162:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2903]) - (10^12 * _2162) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_2903]) - (10^12 * _2162) / poolInfo[idx].field_1280
                                                            else:
                                                                mem[mem[64] + 36] = (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _3022 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_3022] < _2162:
                                                                    revert with 'NH{q', 17
                                                                if mem[_3022] - _2162 and 10^12 > -1 / mem[_3022] - _2162:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_3022]) - (10^12 * _2162) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_3022]) - (10^12 * _2162) / poolInfo[idx].field_1280
                                                        else:
                                                            if mem[_2507] < _2416:
                                                                revert with 'NH{q', 17
                                                            if not mem[_2507] - _2416:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _3110 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_3110] < _2162:
                                                                    revert with 'NH{q', 17
                                                                if mem[_3110] - _2162 and 10^12 > -1 / mem[_3110] - _2162:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_3110]) - (10^12 * _2162) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_3110]) - (10^12 * _2162) / poolInfo[idx].field_1280
                                                            else:
                                                                mem[mem[64] + 36] = mem[_2507] - _2416
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, _2549 - _2416
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _3170 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_3170] < _2162:
                                                                    revert with 'NH{q', 17
                                                                if mem[_3170] - _2162 and 10^12 > -1 / mem[_3170] - _2162:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_3170]) - (10^12 * _2162) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_3170]) - (10^12 * _2162) / poolInfo[idx].field_1280
                                                        poolInfo[idx].field_512 = block.number
                                    else:
                                        if block.number < startBlock:
                                            revert with 'NH{q', 17
                                        if block.number - startBlock < 1:
                                            revert with 'NH{q', 17
                                        if not halvingPeriod:
                                            revert with 'NH{q', 18
                                        s = 0
                                        t = 0
                                        u = poolInfo[idx].field_512
                                        while s < block.number + -startBlock - 1 / halvingPeriod:
                                            if s == -1:
                                                revert with 'NH{q', 17
                                            if s + 1 and halvingPeriod > -1 / s + 1:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) > !startBlock:
                                                revert with 'NH{q', 17
                                            if 0 == halvingPeriod:
                                                if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                    revert with 'NH{q', 17
                                                if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                    revert with 'NH{q', 17
                                                if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                s = s + 1
                                                t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                                u = halvingPeriod + (s * halvingPeriod) + startBlock
                                                continue 
                                            if halvingPeriod + (s * halvingPeriod) + startBlock <= startBlock:
                                                if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                    revert with 'NH{q', 17
                                                if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                    revert with 'NH{q', 17
                                                if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                s = s + 1
                                                t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                                u = halvingPeriod + (s * halvingPeriod) + startBlock
                                                continue 
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < startBlock:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) < 1:
                                                revert with 'NH{q', 17
                                            if not halvingPeriod:
                                                revert with 'NH{q', 18
                                            if not halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                                if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                    revert with 'NH{q', 17
                                                if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                    revert with 'NH{q', 17
                                                if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                s = s + 1
                                                t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                                u = halvingPeriod + (s * halvingPeriod) + startBlock
                                                continue 
                                            if halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > 255:
                                                revert with 'NH{q', 17
                                            if not 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                                revert with 'NH{q', 18
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if 0 == halvingPeriod:
                                            if block.number < u:
                                                revert with 'NH{q', 17
                                            if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                revert with 'NH{q', 17
                                            if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3685 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3701 = mem[_3685]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3749 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3765 = mem[_3749]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3813 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3829 = mem[_3813]
                                                if _3765 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _3765 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3813]:
                                                    if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3999 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_3999] < _3701:
                                                            revert with 'NH{q', 17
                                                        if mem[_3999] - _3701 and 10^12 > -1 / mem[_3999] - _3701:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_3999]) - (10^12 * _3701) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_3999]) - (10^12 * _3701) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4099 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4099] < _3701:
                                                            revert with 'NH{q', 17
                                                        if mem[_4099] - _3701 and 10^12 > -1 / mem[_4099] - _3701:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4099]) - (10^12 * _3701) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4099]) - (10^12 * _3701) / poolInfo[idx].field_1280
                                                else:
                                                    if mem[_3813] < _3765:
                                                        revert with 'NH{q', 17
                                                    if not mem[_3813] - _3765:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4199 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4199] < _3701:
                                                            revert with 'NH{q', 17
                                                        if mem[_4199] - _3701 and 10^12 > -1 / mem[_4199] - _3701:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4199]) - (10^12 * _3701) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4199]) - (10^12 * _3701) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = mem[_3813] - _3765
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _3829 - _3765
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4271 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4271] < _3701:
                                                            revert with 'NH{q', 17
                                                        if mem[_4271] - _3701 and 10^12 > -1 / mem[_4271] - _3701:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4271]) - (10^12 * _3701) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4271]) - (10^12 * _3701) / poolInfo[idx].field_1280
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number <= startBlock:
                                                if block.number < u:
                                                    revert with 'NH{q', 17
                                                if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                    revert with 'NH{q', 17
                                                if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                    if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3693 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3709 = mem[_3693]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3757 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3781 = mem[_3757]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3821 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3845 = mem[_3821]
                                                    if _3781 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _3781 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3821]:
                                                        if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4037 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4037] < _3709:
                                                                revert with 'NH{q', 17
                                                            if mem[_4037] - _3709 and 10^12 > -1 / mem[_4037] - _3709:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4037]) - (10^12 * _3709) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4037]) - (10^12 * _3709) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4154 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4154] < _3709:
                                                                revert with 'NH{q', 17
                                                            if mem[_4154] - _3709 and 10^12 > -1 / mem[_4154] - _3709:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4154]) - (10^12 * _3709) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4154]) - (10^12 * _3709) / poolInfo[idx].field_1280
                                                    else:
                                                        if mem[_3821] < _3781:
                                                            revert with 'NH{q', 17
                                                        if not mem[_3821] - _3781:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4238 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4238] < _3709:
                                                                revert with 'NH{q', 17
                                                            if mem[_4238] - _3709 and 10^12 > -1 / mem[_4238] - _3709:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4238]) - (10^12 * _3709) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4238]) - (10^12 * _3709) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = mem[_3821] - _3781
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _3845 - _3781
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4302 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4302] < _3709:
                                                                revert with 'NH{q', 17
                                                            if mem[_4302] - _3709 and 10^12 > -1 / mem[_4302] - _3709:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4302]) - (10^12 * _3709) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4302]) - (10^12 * _3709) / poolInfo[idx].field_1280
                                                    poolInfo[idx].field_512 = block.number
                                            else:
                                                if block.number < startBlock:
                                                    revert with 'NH{q', 17
                                                if block.number - startBlock < 1:
                                                    revert with 'NH{q', 17
                                                if not halvingPeriod:
                                                    revert with 'NH{q', 18
                                                if not block.number + -startBlock - 1 / halvingPeriod:
                                                    if block.number < u:
                                                        revert with 'NH{q', 17
                                                    if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                        revert with 'NH{q', 17
                                                    if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                        revert with 'NH{q', 17
                                                    if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                        if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                            revert with 'NH{q', 17
                                                        if not totalAllocPoint:
                                                            revert with 'NH{q', 18
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3861 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _3879 = mem[_3861]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x18160ddd with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3998 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4097 = mem[_3998]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.maxSupply() with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4241 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4305 = mem[_4241]
                                                        if _4097 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                            revert with 'NH{q', 17
                                                        if _4097 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4241]:
                                                            if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4397 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4397] < _3879:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4397] - _3879 and 10^12 > -1 / mem[_4397] - _3879:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4397]) - (10^12 * _3879) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4397]) - (10^12 * _3879) / poolInfo[idx].field_1280
                                                            else:
                                                                mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4468 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4468] < _3879:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4468] - _3879 and 10^12 > -1 / mem[_4468] - _3879:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4468]) - (10^12 * _3879) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4468]) - (10^12 * _3879) / poolInfo[idx].field_1280
                                                        else:
                                                            if mem[_4241] < _4097:
                                                                revert with 'NH{q', 17
                                                            if not mem[_4241] - _4097:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4521 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4521] < _3879:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4521] - _3879 and 10^12 > -1 / mem[_4521] - _3879:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4521]) - (10^12 * _3879) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4521]) - (10^12 * _3879) / poolInfo[idx].field_1280
                                                            else:
                                                                mem[mem[64] + 36] = mem[_4241] - _4097
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, _4305 - _4097
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4590 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4590] < _3879:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4590] - _3879 and 10^12 > -1 / mem[_4590] - _3879:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4590]) - (10^12 * _3879) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4590]) - (10^12 * _3879) / poolInfo[idx].field_1280
                                                        poolInfo[idx].field_512 = block.number
                                                else:
                                                    if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                        revert with 'NH{q', 17
                                                    if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                        revert with 'NH{q', 18
                                                    if block.number < u:
                                                        revert with 'NH{q', 17
                                                    if block.number - u and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - u:
                                                        revert with 'NH{q', 17
                                                    if t > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                        revert with 'NH{q', 17
                                                    if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                        if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                            revert with 'NH{q', 17
                                                        if not totalAllocPoint:
                                                            revert with 'NH{q', 18
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3935 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _3997 = mem[_3935]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x18160ddd with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4197 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4269 = mem[_4197]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.maxSupply() with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4338 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4349 = mem[_4338]
                                                        if _4269 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                            revert with 'NH{q', 17
                                                        if _4269 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4338]:
                                                            if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4517 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4517] < _3997:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4517] - _3997 and 10^12 > -1 / mem[_4517] - _3997:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4517]) - (10^12 * _3997) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4517]) - (10^12 * _3997) / poolInfo[idx].field_1280
                                                            else:
                                                                mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4586 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4586] < _3997:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4586] - _3997 and 10^12 > -1 / mem[_4586] - _3997:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4586]) - (10^12 * _3997) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4586]) - (10^12 * _3997) / poolInfo[idx].field_1280
                                                        else:
                                                            if mem[_4338] < _4269:
                                                                revert with 'NH{q', 17
                                                            if not mem[_4338] - _4269:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4630 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4630] < _3997:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4630] - _3997 and 10^12 > -1 / mem[_4630] - _3997:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4630]) - (10^12 * _3997) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4630]) - (10^12 * _3997) / poolInfo[idx].field_1280
                                                            else:
                                                                mem[mem[64] + 36] = mem[_4338] - _4269
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, _4349 - _4269
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4658 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4658] < _3997:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4658] - _3997 and 10^12 > -1 / mem[_4658] - _3997:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4658]) - (10^12 * _3997) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4658]) - (10^12 * _3997) / poolInfo[idx].field_1280
                                                        poolInfo[idx].field_512 = block.number
                            else:
                                if poolInfo[idx].field_512 < startBlock:
                                    revert with 'NH{q', 17
                                if poolInfo[idx].field_512 - startBlock < 1:
                                    revert with 'NH{q', 17
                                if not halvingPeriod:
                                    revert with 'NH{q', 18
                                if 0 == halvingPeriod:
                                    s = poolInfo[idx].field_512 + -startBlock - 1 / halvingPeriod
                                    t = 0
                                    u = poolInfo[idx].field_512
                                    while s < 0:
                                        if s == -1:
                                            revert with 'NH{q', 17
                                        if s + 1 and halvingPeriod > -1 / s + 1:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) > !startBlock:
                                            revert with 'NH{q', 17
                                        if 0 == halvingPeriod:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) + startBlock <= startBlock:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) + startBlock < startBlock:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) < 1:
                                            revert with 'NH{q', 17
                                        if not halvingPeriod:
                                            revert with 'NH{q', 18
                                        if not halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > 255:
                                            revert with 'NH{q', 17
                                        if not 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                            revert with 'NH{q', 18
                                        if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                            revert with 'NH{q', 17
                                        if t > !((halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)):
                                            revert with 'NH{q', 17
                                        s = s + 1
                                        t = t + (halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)
                                        u = halvingPeriod + (s * halvingPeriod) + startBlock
                                        continue 
                                    if 0 == halvingPeriod:
                                        if block.number < u:
                                            revert with 'NH{q', 17
                                        if block.number - u and hCTPerBlock > -1 / block.number - u:
                                            revert with 'NH{q', 17
                                        if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                revert with 'NH{q', 17
                                            if not totalAllocPoint:
                                                revert with 'NH{q', 18
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3688 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3704 = mem[_3688]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3752 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3768 = mem[_3752]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.maxSupply() with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3816 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3832 = mem[_3816]
                                            if _3768 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                revert with 'NH{q', 17
                                            if _3768 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3816]:
                                                if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4014 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4014] < _3704:
                                                        revert with 'NH{q', 17
                                                    if mem[_4014] - _3704 and 10^12 > -1 / mem[_4014] - _3704:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4014]) - (10^12 * _3704) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4014]) - (10^12 * _3704) / poolInfo[idx].field_1280
                                                else:
                                                    mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4126 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4126] < _3704:
                                                        revert with 'NH{q', 17
                                                    if mem[_4126] - _3704 and 10^12 > -1 / mem[_4126] - _3704:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4126]) - (10^12 * _3704) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4126]) - (10^12 * _3704) / poolInfo[idx].field_1280
                                            else:
                                                if mem[_3816] < _3768:
                                                    revert with 'NH{q', 17
                                                if not mem[_3816] - _3768:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4214 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4214] < _3704:
                                                        revert with 'NH{q', 17
                                                    if mem[_4214] - _3704 and 10^12 > -1 / mem[_4214] - _3704:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4214]) - (10^12 * _3704) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4214]) - (10^12 * _3704) / poolInfo[idx].field_1280
                                                else:
                                                    mem[mem[64] + 36] = mem[_3816] - _3768
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, _3832 - _3768
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4280 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4280] < _3704:
                                                        revert with 'NH{q', 17
                                                    if mem[_4280] - _3704 and 10^12 > -1 / mem[_4280] - _3704:
                                                        revert with 'NH{q', 17
                                                    if not poolInfo[idx].field_1280:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4280]) - (10^12 * _3704) / poolInfo[idx].field_1280):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4280]) - (10^12 * _3704) / poolInfo[idx].field_1280
                                            poolInfo[idx].field_512 = block.number
                                    else:
                                        if block.number <= startBlock:
                                            if block.number < u:
                                                revert with 'NH{q', 17
                                            if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                revert with 'NH{q', 17
                                            if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3696 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3712 = mem[_3696]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3760 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3790 = mem[_3760]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3824 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3854 = mem[_3824]
                                                if _3790 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _3790 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3824]:
                                                    if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4052 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4052] < _3712:
                                                            revert with 'NH{q', 17
                                                        if mem[_4052] - _3712 and 10^12 > -1 / mem[_4052] - _3712:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4052]) - (10^12 * _3712) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4052]) - (10^12 * _3712) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4172 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4172] < _3712:
                                                            revert with 'NH{q', 17
                                                        if mem[_4172] - _3712 and 10^12 > -1 / mem[_4172] - _3712:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4172]) - (10^12 * _3712) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4172]) - (10^12 * _3712) / poolInfo[idx].field_1280
                                                else:
                                                    if mem[_3824] < _3790:
                                                        revert with 'NH{q', 17
                                                    if not mem[_3824] - _3790:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4253 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4253] < _3712:
                                                            revert with 'NH{q', 17
                                                        if mem[_4253] - _3712 and 10^12 > -1 / mem[_4253] - _3712:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4253]) - (10^12 * _3712) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4253]) - (10^12 * _3712) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = mem[_3824] - _3790
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _3854 - _3790
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4317 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4317] < _3712:
                                                            revert with 'NH{q', 17
                                                        if mem[_4317] - _3712 and 10^12 > -1 / mem[_4317] - _3712:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4317]) - (10^12 * _3712) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4317]) - (10^12 * _3712) / poolInfo[idx].field_1280
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number < startBlock:
                                                revert with 'NH{q', 17
                                            if block.number - startBlock < 1:
                                                revert with 'NH{q', 17
                                            if not halvingPeriod:
                                                revert with 'NH{q', 18
                                            if not block.number + -startBlock - 1 / halvingPeriod:
                                                if block.number < u:
                                                    revert with 'NH{q', 17
                                                if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                    revert with 'NH{q', 17
                                                if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                    if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3864 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3888 = mem[_3864]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4013 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4124 = mem[_4013]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4256 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4320 = mem[_4256]
                                                    if _4124 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _4124 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4256]:
                                                        if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4406 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4406] < _3888:
                                                                revert with 'NH{q', 17
                                                            if mem[_4406] - _3888 and 10^12 > -1 / mem[_4406] - _3888:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4406]) - (10^12 * _3888) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4406]) - (10^12 * _3888) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4486 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4486] < _3888:
                                                                revert with 'NH{q', 17
                                                            if mem[_4486] - _3888 and 10^12 > -1 / mem[_4486] - _3888:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4486]) - (10^12 * _3888) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4486]) - (10^12 * _3888) / poolInfo[idx].field_1280
                                                    else:
                                                        if mem[_4256] < _4124:
                                                            revert with 'NH{q', 17
                                                        if not mem[_4256] - _4124:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4542 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4542] < _3888:
                                                                revert with 'NH{q', 17
                                                            if mem[_4542] - _3888 and 10^12 > -1 / mem[_4542] - _3888:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4542]) - (10^12 * _3888) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4542]) - (10^12 * _3888) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = mem[_4256] - _4124
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _4320 - _4124
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4608 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4608] < _3888:
                                                                revert with 'NH{q', 17
                                                            if mem[_4608] - _3888 and 10^12 > -1 / mem[_4608] - _3888:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4608]) - (10^12 * _3888) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4608]) - (10^12 * _3888) / poolInfo[idx].field_1280
                                                    poolInfo[idx].field_512 = block.number
                                            else:
                                                if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                    revert with 'NH{q', 17
                                                if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                    revert with 'NH{q', 18
                                                if block.number < u:
                                                    revert with 'NH{q', 17
                                                if block.number - u and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - u:
                                                    revert with 'NH{q', 17
                                                if t > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                    revert with 'NH{q', 17
                                                if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                    if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3956 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4012 = mem[_3956]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4212 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4278 = mem[_4212]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4344 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4352 = mem[_4344]
                                                    if _4278 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _4278 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4344]:
                                                        if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4538 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4538] < _4012:
                                                                revert with 'NH{q', 17
                                                            if mem[_4538] - _4012 and 10^12 > -1 / mem[_4538] - _4012:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4538]) - (10^12 * _4012) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4538]) - (10^12 * _4012) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4604 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4604] < _4012:
                                                                revert with 'NH{q', 17
                                                            if mem[_4604] - _4012 and 10^12 > -1 / mem[_4604] - _4012:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4604]) - (10^12 * _4012) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4604]) - (10^12 * _4012) / poolInfo[idx].field_1280
                                                    else:
                                                        if mem[_4344] < _4278:
                                                            revert with 'NH{q', 17
                                                        if not mem[_4344] - _4278:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4645 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4645] < _4012:
                                                                revert with 'NH{q', 17
                                                            if mem[_4645] - _4012 and 10^12 > -1 / mem[_4645] - _4012:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4645]) - (10^12 * _4012) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4645]) - (10^12 * _4012) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = mem[_4344] - _4278
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _4352 - _4278
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4664 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4664] < _4012:
                                                                revert with 'NH{q', 17
                                                            if mem[_4664] - _4012 and 10^12 > -1 / mem[_4664] - _4012:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4664]) - (10^12 * _4012) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4664]) - (10^12 * _4012) / poolInfo[idx].field_1280
                                                    poolInfo[idx].field_512 = block.number
                                else:
                                    if block.number <= startBlock:
                                        s = poolInfo[idx].field_512 + -startBlock - 1 / halvingPeriod
                                        t = 0
                                        u = poolInfo[idx].field_512
                                        while s < 0:
                                            if s == -1:
                                                revert with 'NH{q', 17
                                            if s + 1 and halvingPeriod > -1 / s + 1:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) > !startBlock:
                                                revert with 'NH{q', 17
                                            if 0 == halvingPeriod:
                                                if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                    revert with 'NH{q', 17
                                                if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                    revert with 'NH{q', 17
                                                if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                s = s + 1
                                                t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                                u = halvingPeriod + (s * halvingPeriod) + startBlock
                                                continue 
                                            if halvingPeriod + (s * halvingPeriod) + startBlock <= startBlock:
                                                if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                    revert with 'NH{q', 17
                                                if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                    revert with 'NH{q', 17
                                                if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                s = s + 1
                                                t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                                u = halvingPeriod + (s * halvingPeriod) + startBlock
                                                continue 
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < startBlock:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) < 1:
                                                revert with 'NH{q', 17
                                            if not halvingPeriod:
                                                revert with 'NH{q', 18
                                            if not halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                                if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                    revert with 'NH{q', 17
                                                if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                    revert with 'NH{q', 17
                                                if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                s = s + 1
                                                t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                                u = halvingPeriod + (s * halvingPeriod) + startBlock
                                                continue 
                                            if halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > 255:
                                                revert with 'NH{q', 17
                                            if not 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                                revert with 'NH{q', 18
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if 0 == halvingPeriod:
                                            if block.number < u:
                                                revert with 'NH{q', 17
                                            if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                revert with 'NH{q', 17
                                            if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3686 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3702 = mem[_3686]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3750 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3766 = mem[_3750]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3814 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3830 = mem[_3814]
                                                if _3766 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _3766 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3814]:
                                                    if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4004 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4004] < _3702:
                                                            revert with 'NH{q', 17
                                                        if mem[_4004] - _3702 and 10^12 > -1 / mem[_4004] - _3702:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4004]) - (10^12 * _3702) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4004]) - (10^12 * _3702) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4108 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4108] < _3702:
                                                            revert with 'NH{q', 17
                                                        if mem[_4108] - _3702 and 10^12 > -1 / mem[_4108] - _3702:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4108]) - (10^12 * _3702) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4108]) - (10^12 * _3702) / poolInfo[idx].field_1280
                                                else:
                                                    if mem[_3814] < _3766:
                                                        revert with 'NH{q', 17
                                                    if not mem[_3814] - _3766:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4204 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4204] < _3702:
                                                            revert with 'NH{q', 17
                                                        if mem[_4204] - _3702 and 10^12 > -1 / mem[_4204] - _3702:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4204]) - (10^12 * _3702) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4204]) - (10^12 * _3702) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = mem[_3814] - _3766
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _3830 - _3766
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4274 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4274] < _3702:
                                                            revert with 'NH{q', 17
                                                        if mem[_4274] - _3702 and 10^12 > -1 / mem[_4274] - _3702:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4274]) - (10^12 * _3702) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4274]) - (10^12 * _3702) / poolInfo[idx].field_1280
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number <= startBlock:
                                                if block.number < u:
                                                    revert with 'NH{q', 17
                                                if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                    revert with 'NH{q', 17
                                                if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                    if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3694 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3710 = mem[_3694]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3758 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3784 = mem[_3758]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3822 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3848 = mem[_3822]
                                                    if _3784 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _3784 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3822]:
                                                        if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4042 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4042] < _3710:
                                                                revert with 'NH{q', 17
                                                            if mem[_4042] - _3710 and 10^12 > -1 / mem[_4042] - _3710:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4042]) - (10^12 * _3710) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4042]) - (10^12 * _3710) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4160 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4160] < _3710:
                                                                revert with 'NH{q', 17
                                                            if mem[_4160] - _3710 and 10^12 > -1 / mem[_4160] - _3710:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4160]) - (10^12 * _3710) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4160]) - (10^12 * _3710) / poolInfo[idx].field_1280
                                                    else:
                                                        if mem[_3822] < _3784:
                                                            revert with 'NH{q', 17
                                                        if not mem[_3822] - _3784:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4243 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4243] < _3710:
                                                                revert with 'NH{q', 17
                                                            if mem[_4243] - _3710 and 10^12 > -1 / mem[_4243] - _3710:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4243]) - (10^12 * _3710) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4243]) - (10^12 * _3710) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = mem[_3822] - _3784
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _3848 - _3784
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4307 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4307] < _3710:
                                                                revert with 'NH{q', 17
                                                            if mem[_4307] - _3710 and 10^12 > -1 / mem[_4307] - _3710:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4307]) - (10^12 * _3710) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4307]) - (10^12 * _3710) / poolInfo[idx].field_1280
                                                    poolInfo[idx].field_512 = block.number
                                            else:
                                                if block.number < startBlock:
                                                    revert with 'NH{q', 17
                                                if block.number - startBlock < 1:
                                                    revert with 'NH{q', 17
                                                if not halvingPeriod:
                                                    revert with 'NH{q', 18
                                                if not block.number + -startBlock - 1 / halvingPeriod:
                                                    if block.number < u:
                                                        revert with 'NH{q', 17
                                                    if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                        revert with 'NH{q', 17
                                                    if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                        revert with 'NH{q', 17
                                                    if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                        if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                            revert with 'NH{q', 17
                                                        if not totalAllocPoint:
                                                            revert with 'NH{q', 18
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3862 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _3882 = mem[_3862]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x18160ddd with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4003 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4106 = mem[_4003]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.maxSupply() with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4246 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4310 = mem[_4246]
                                                        if _4106 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                            revert with 'NH{q', 17
                                                        if _4106 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4246]:
                                                            if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4400 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4400] < _3882:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4400] - _3882 and 10^12 > -1 / mem[_4400] - _3882:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4400]) - (10^12 * _3882) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4400]) - (10^12 * _3882) / poolInfo[idx].field_1280
                                                            else:
                                                                mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4474 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4474] < _3882:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4474] - _3882 and 10^12 > -1 / mem[_4474] - _3882:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4474]) - (10^12 * _3882) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4474]) - (10^12 * _3882) / poolInfo[idx].field_1280
                                                        else:
                                                            if mem[_4246] < _4106:
                                                                revert with 'NH{q', 17
                                                            if not mem[_4246] - _4106:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4528 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4528] < _3882:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4528] - _3882 and 10^12 > -1 / mem[_4528] - _3882:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4528]) - (10^12 * _3882) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4528]) - (10^12 * _3882) / poolInfo[idx].field_1280
                                                            else:
                                                                mem[mem[64] + 36] = mem[_4246] - _4106
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, _4310 - _4106
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4596 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4596] < _3882:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4596] - _3882 and 10^12 > -1 / mem[_4596] - _3882:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4596]) - (10^12 * _3882) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4596]) - (10^12 * _3882) / poolInfo[idx].field_1280
                                                        poolInfo[idx].field_512 = block.number
                                                else:
                                                    if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                        revert with 'NH{q', 17
                                                    if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                        revert with 'NH{q', 18
                                                    if block.number < u:
                                                        revert with 'NH{q', 17
                                                    if block.number - u and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - u:
                                                        revert with 'NH{q', 17
                                                    if t > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                        revert with 'NH{q', 17
                                                    if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                        if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                            revert with 'NH{q', 17
                                                        if not totalAllocPoint:
                                                            revert with 'NH{q', 18
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3942 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4002 = mem[_3942]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x18160ddd with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4202 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4272 = mem[_4202]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.maxSupply() with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4340 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4350 = mem[_4340]
                                                        if _4272 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                            revert with 'NH{q', 17
                                                        if _4272 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4340]:
                                                            if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4524 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4524] < _4002:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4524] - _4002 and 10^12 > -1 / mem[_4524] - _4002:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4524]) - (10^12 * _4002) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4524]) - (10^12 * _4002) / poolInfo[idx].field_1280
                                                            else:
                                                                mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4592 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4592] < _4002:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4592] - _4002 and 10^12 > -1 / mem[_4592] - _4002:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4592]) - (10^12 * _4002) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4592]) - (10^12 * _4002) / poolInfo[idx].field_1280
                                                        else:
                                                            if mem[_4340] < _4272:
                                                                revert with 'NH{q', 17
                                                            if not mem[_4340] - _4272:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4635 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4635] < _4002:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4635] - _4002 and 10^12 > -1 / mem[_4635] - _4002:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4635]) - (10^12 * _4002) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4635]) - (10^12 * _4002) / poolInfo[idx].field_1280
                                                            else:
                                                                mem[mem[64] + 36] = mem[_4340] - _4272
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, _4350 - _4272
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4660 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4660] < _4002:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4660] - _4002 and 10^12 > -1 / mem[_4660] - _4002:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4660]) - (10^12 * _4002) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4660]) - (10^12 * _4002) / poolInfo[idx].field_1280
                                                        poolInfo[idx].field_512 = block.number
                                    else:
                                        if block.number < startBlock:
                                            revert with 'NH{q', 17
                                        if block.number - startBlock < 1:
                                            revert with 'NH{q', 17
                                        if not halvingPeriod:
                                            revert with 'NH{q', 18
                                        s = poolInfo[idx].field_512 + -startBlock - 1 / halvingPeriod
                                        t = 0
                                        u = poolInfo[idx].field_512
                                        while s < block.number + -startBlock - 1 / halvingPeriod:
                                            if s == -1:
                                                revert with 'NH{q', 17
                                            if s + 1 and halvingPeriod > -1 / s + 1:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) > !startBlock:
                                                revert with 'NH{q', 17
                                            if 0 == halvingPeriod:
                                                if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                    revert with 'NH{q', 17
                                                if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                    revert with 'NH{q', 17
                                                if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                s = s + 1
                                                t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                                u = halvingPeriod + (s * halvingPeriod) + startBlock
                                                continue 
                                            if halvingPeriod + (s * halvingPeriod) + startBlock <= startBlock:
                                                if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                    revert with 'NH{q', 17
                                                if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                    revert with 'NH{q', 17
                                                if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                s = s + 1
                                                t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                                u = halvingPeriod + (s * halvingPeriod) + startBlock
                                                continue 
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < startBlock:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) < 1:
                                                revert with 'NH{q', 17
                                            if not halvingPeriod:
                                                revert with 'NH{q', 18
                                            if not halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                                if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                    revert with 'NH{q', 17
                                                if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                    revert with 'NH{q', 17
                                                if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                s = s + 1
                                                t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                                u = halvingPeriod + (s * halvingPeriod) + startBlock
                                                continue 
                                            if halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > 255:
                                                revert with 'NH{q', 17
                                            if not 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                                revert with 'NH{q', 18
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if 0 == halvingPeriod:
                                            if block.number < u:
                                                revert with 'NH{q', 17
                                            if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                revert with 'NH{q', 17
                                            if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3687 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3703 = mem[_3687]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3751 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3767 = mem[_3751]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3815 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3831 = mem[_3815]
                                                if _3767 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _3767 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3815]:
                                                    if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4009 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4009] < _3703:
                                                            revert with 'NH{q', 17
                                                        if mem[_4009] - _3703 and 10^12 > -1 / mem[_4009] - _3703:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4009]) - (10^12 * _3703) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4009]) - (10^12 * _3703) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4117 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4117] < _3703:
                                                            revert with 'NH{q', 17
                                                        if mem[_4117] - _3703 and 10^12 > -1 / mem[_4117] - _3703:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4117]) - (10^12 * _3703) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4117]) - (10^12 * _3703) / poolInfo[idx].field_1280
                                                else:
                                                    if mem[_3815] < _3767:
                                                        revert with 'NH{q', 17
                                                    if not mem[_3815] - _3767:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4209 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4209] < _3703:
                                                            revert with 'NH{q', 17
                                                        if mem[_4209] - _3703 and 10^12 > -1 / mem[_4209] - _3703:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4209]) - (10^12 * _3703) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4209]) - (10^12 * _3703) / poolInfo[idx].field_1280
                                                    else:
                                                        mem[mem[64] + 36] = mem[_3815] - _3767
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _3831 - _3767
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4277 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4277] < _3703:
                                                            revert with 'NH{q', 17
                                                        if mem[_4277] - _3703 and 10^12 > -1 / mem[_4277] - _3703:
                                                            revert with 'NH{q', 17
                                                        if not poolInfo[idx].field_1280:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4277]) - (10^12 * _3703) / poolInfo[idx].field_1280):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4277]) - (10^12 * _3703) / poolInfo[idx].field_1280
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number <= startBlock:
                                                if block.number < u:
                                                    revert with 'NH{q', 17
                                                if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                    revert with 'NH{q', 17
                                                if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                    if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3695 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3711 = mem[_3695]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3759 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3787 = mem[_3759]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3823 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3851 = mem[_3823]
                                                    if _3787 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _3787 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3823]:
                                                        if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4047 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4047] < _3711:
                                                                revert with 'NH{q', 17
                                                            if mem[_4047] - _3711 and 10^12 > -1 / mem[_4047] - _3711:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4047]) - (10^12 * _3711) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4047]) - (10^12 * _3711) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4166 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4166] < _3711:
                                                                revert with 'NH{q', 17
                                                            if mem[_4166] - _3711 and 10^12 > -1 / mem[_4166] - _3711:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4166]) - (10^12 * _3711) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4166]) - (10^12 * _3711) / poolInfo[idx].field_1280
                                                    else:
                                                        if mem[_3823] < _3787:
                                                            revert with 'NH{q', 17
                                                        if not mem[_3823] - _3787:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4248 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4248] < _3711:
                                                                revert with 'NH{q', 17
                                                            if mem[_4248] - _3711 and 10^12 > -1 / mem[_4248] - _3711:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4248]) - (10^12 * _3711) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4248]) - (10^12 * _3711) / poolInfo[idx].field_1280
                                                        else:
                                                            mem[mem[64] + 36] = mem[_3823] - _3787
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _3851 - _3787
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4312 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4312] < _3711:
                                                                revert with 'NH{q', 17
                                                            if mem[_4312] - _3711 and 10^12 > -1 / mem[_4312] - _3711:
                                                                revert with 'NH{q', 17
                                                            if not poolInfo[idx].field_1280:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4312]) - (10^12 * _3711) / poolInfo[idx].field_1280):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4312]) - (10^12 * _3711) / poolInfo[idx].field_1280
                                                    poolInfo[idx].field_512 = block.number
                                            else:
                                                if block.number < startBlock:
                                                    revert with 'NH{q', 17
                                                if block.number - startBlock < 1:
                                                    revert with 'NH{q', 17
                                                if not halvingPeriod:
                                                    revert with 'NH{q', 18
                                                if not block.number + -startBlock - 1 / halvingPeriod:
                                                    if block.number < u:
                                                        revert with 'NH{q', 17
                                                    if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                        revert with 'NH{q', 17
                                                    if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                        revert with 'NH{q', 17
                                                    if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                        if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                            revert with 'NH{q', 17
                                                        if not totalAllocPoint:
                                                            revert with 'NH{q', 18
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3863 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _3885 = mem[_3863]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x18160ddd with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4008 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4115 = mem[_4008]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.maxSupply() with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4251 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4315 = mem[_4251]
                                                        if _4115 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                            revert with 'NH{q', 17
                                                        if _4115 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4251]:
                                                            if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4403 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4403] < _3885:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4403] - _3885 and 10^12 > -1 / mem[_4403] - _3885:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4403]) - (10^12 * _3885) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4403]) - (10^12 * _3885) / poolInfo[idx].field_1280
                                                            else:
                                                                mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4480 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4480] < _3885:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4480] - _3885 and 10^12 > -1 / mem[_4480] - _3885:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4480]) - (10^12 * _3885) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4480]) - (10^12 * _3885) / poolInfo[idx].field_1280
                                                        else:
                                                            if mem[_4251] < _4115:
                                                                revert with 'NH{q', 17
                                                            if not mem[_4251] - _4115:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4535 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4535] < _3885:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4535] - _3885 and 10^12 > -1 / mem[_4535] - _3885:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4535]) - (10^12 * _3885) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4535]) - (10^12 * _3885) / poolInfo[idx].field_1280
                                                            else:
                                                                mem[mem[64] + 36] = mem[_4251] - _4115
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, _4315 - _4115
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4602 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4602] < _3885:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4602] - _3885 and 10^12 > -1 / mem[_4602] - _3885:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4602]) - (10^12 * _3885) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4602]) - (10^12 * _3885) / poolInfo[idx].field_1280
                                                        poolInfo[idx].field_512 = block.number
                                                else:
                                                    if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                        revert with 'NH{q', 17
                                                    if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                        revert with 'NH{q', 18
                                                    if block.number < u:
                                                        revert with 'NH{q', 17
                                                    if block.number - u and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - u:
                                                        revert with 'NH{q', 17
                                                    if t > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                        revert with 'NH{q', 17
                                                    if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                        if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                            revert with 'NH{q', 17
                                                        if not totalAllocPoint:
                                                            revert with 'NH{q', 18
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3949 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4007 = mem[_3949]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x18160ddd with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4207 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4275 = mem[_4207]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.maxSupply() with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4342 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4351 = mem[_4342]
                                                        if _4275 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                            revert with 'NH{q', 17
                                                        if _4275 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4342]:
                                                            if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4531 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4531] < _4007:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4531] - _4007 and 10^12 > -1 / mem[_4531] - _4007:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4531]) - (10^12 * _4007) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4531]) - (10^12 * _4007) / poolInfo[idx].field_1280
                                                            else:
                                                                mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4598 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4598] < _4007:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4598] - _4007 and 10^12 > -1 / mem[_4598] - _4007:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4598]) - (10^12 * _4007) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4598]) - (10^12 * _4007) / poolInfo[idx].field_1280
                                                        else:
                                                            if mem[_4342] < _4275:
                                                                revert with 'NH{q', 17
                                                            if not mem[_4342] - _4275:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4640 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4640] < _4007:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4640] - _4007 and 10^12 > -1 / mem[_4640] - _4007:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4640]) - (10^12 * _4007) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4640]) - (10^12 * _4007) / poolInfo[idx].field_1280
                                                            else:
                                                                mem[mem[64] + 36] = mem[_4342] - _4275
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, _4351 - _4275
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4662 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4662] < _4007:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4662] - _4007 and 10^12 > -1 / mem[_4662] - _4007:
                                                                    revert with 'NH{q', 17
                                                                if not poolInfo[idx].field_1280:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4662]) - (10^12 * _4007) / poolInfo[idx].field_1280):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4662]) - (10^12 * _4007) / poolInfo[idx].field_1280
                                                        poolInfo[idx].field_512 = block.number
                else:
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(poolInfo[idx].field_0)
                    staticcall poolInfo[idx].field_0.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1855 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1856 = mem[_1855]
                    if not mem[_1855]:
                        poolInfo[idx].field_512 = block.number
                    else:
                        if 0 == halvingPeriod:
                            if 0 == halvingPeriod:
                                if block.number < poolInfo[idx].field_512:
                                    revert with 'NH{q', 17
                                if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                    revert with 'NH{q', 17
                                if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                    revert with 'NH{q', 17
                                if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                    if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                        revert with 'NH{q', 17
                                    if not totalAllocPoint:
                                        revert with 'NH{q', 18
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(HCTAddress)
                                    staticcall HCTAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1888 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _1904 = mem[_1888]
                                    require ext_code.size(HCTAddress)
                                    staticcall HCTAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1938 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _1957 = mem[_1938]
                                    require ext_code.size(HCTAddress)
                                    staticcall HCTAddress.maxSupply() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1988 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _2014 = mem[_1988]
                                    if _1957 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                        revert with 'NH{q', 17
                                    if _1957 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_1988]:
                                        if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2242 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if mem[_2242] < _1904:
                                                revert with 'NH{q', 17
                                            if mem[_2242] - _1904 and 10^12 > -1 / mem[_2242] - _1904:
                                                revert with 'NH{q', 17
                                            if not _1856:
                                                revert with 'NH{q', 18
                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2242]) - (10^12 * _1904) / _1856):
                                                revert with 'NH{q', 17
                                            poolInfo[idx].field_768 += (10^12 * mem[_2242]) - (10^12 * _1904) / _1856
                                        else:
                                            mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                            require ext_code.size(HCTAddress)
                                            call HCTAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2328 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if mem[_2328] < _1904:
                                                revert with 'NH{q', 17
                                            if mem[_2328] - _1904 and 10^12 > -1 / mem[_2328] - _1904:
                                                revert with 'NH{q', 17
                                            if not _1856:
                                                revert with 'NH{q', 18
                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2328]) - (10^12 * _1904) / _1856):
                                                revert with 'NH{q', 17
                                            poolInfo[idx].field_768 += (10^12 * mem[_2328]) - (10^12 * _1904) / _1856
                                    else:
                                        if mem[_1988] < _1957:
                                            revert with 'NH{q', 17
                                        if not mem[_1988] - _1957:
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2413 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if mem[_2413] < _1904:
                                                revert with 'NH{q', 17
                                            if mem[_2413] - _1904 and 10^12 > -1 / mem[_2413] - _1904:
                                                revert with 'NH{q', 17
                                            if not _1856:
                                                revert with 'NH{q', 18
                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2413]) - (10^12 * _1904) / _1856):
                                                revert with 'NH{q', 17
                                            poolInfo[idx].field_768 += (10^12 * mem[_2413]) - (10^12 * _1904) / _1856
                                        else:
                                            mem[mem[64] + 36] = mem[_1988] - _1957
                                            require ext_code.size(HCTAddress)
                                            call HCTAddress.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args this.address, _2014 - _1957
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2484 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if mem[_2484] < _1904:
                                                revert with 'NH{q', 17
                                            if mem[_2484] - _1904 and 10^12 > -1 / mem[_2484] - _1904:
                                                revert with 'NH{q', 17
                                            if not _1856:
                                                revert with 'NH{q', 18
                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2484]) - (10^12 * _1904) / _1856):
                                                revert with 'NH{q', 17
                                            poolInfo[idx].field_768 += (10^12 * mem[_2484]) - (10^12 * _1904) / _1856
                                    poolInfo[idx].field_512 = block.number
                            else:
                                if block.number <= startBlock:
                                    if block.number < poolInfo[idx].field_512:
                                        revert with 'NH{q', 17
                                    if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                        revert with 'NH{q', 17
                                    if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                        revert with 'NH{q', 17
                                    if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                        if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                            revert with 'NH{q', 17
                                        if not totalAllocPoint:
                                            revert with 'NH{q', 18
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1896 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _1912 = mem[_1896]
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1948 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _1964 = mem[_1948]
                                        require ext_code.size(HCTAddress)
                                        staticcall HCTAddress.maxSupply() with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _2002 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _2023 = mem[_2002]
                                        if _1964 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                            revert with 'NH{q', 17
                                        if _1964 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2002]:
                                            if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2283 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2283] < _1912:
                                                    revert with 'NH{q', 17
                                                if mem[_2283] - _1912 and 10^12 > -1 / mem[_2283] - _1912:
                                                    revert with 'NH{q', 17
                                                if not _1856:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2283]) - (10^12 * _1912) / _1856):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2283]) - (10^12 * _1912) / _1856
                                            else:
                                                mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                require ext_code.size(HCTAddress)
                                                call HCTAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2367 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2367] < _1912:
                                                    revert with 'NH{q', 17
                                                if mem[_2367] - _1912 and 10^12 > -1 / mem[_2367] - _1912:
                                                    revert with 'NH{q', 17
                                                if not _1856:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2367]) - (10^12 * _1912) / _1856):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2367]) - (10^12 * _1912) / _1856
                                        else:
                                            if mem[_2002] < _1964:
                                                revert with 'NH{q', 17
                                            if not mem[_2002] - _1964:
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2449 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2449] < _1912:
                                                    revert with 'NH{q', 17
                                                if mem[_2449] - _1912 and 10^12 > -1 / mem[_2449] - _1912:
                                                    revert with 'NH{q', 17
                                                if not _1856:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2449]) - (10^12 * _1912) / _1856):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2449]) - (10^12 * _1912) / _1856
                                            else:
                                                mem[mem[64] + 36] = mem[_2002] - _1964
                                                require ext_code.size(HCTAddress)
                                                call HCTAddress.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args this.address, _2023 - _1964
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2502 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                if mem[_2502] < _1912:
                                                    revert with 'NH{q', 17
                                                if mem[_2502] - _1912 and 10^12 > -1 / mem[_2502] - _1912:
                                                    revert with 'NH{q', 17
                                                if not _1856:
                                                    revert with 'NH{q', 18
                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2502]) - (10^12 * _1912) / _1856):
                                                    revert with 'NH{q', 17
                                                poolInfo[idx].field_768 += (10^12 * mem[_2502]) - (10^12 * _1912) / _1856
                                        poolInfo[idx].field_512 = block.number
                                else:
                                    if block.number < startBlock:
                                        revert with 'NH{q', 17
                                    if block.number - startBlock < 1:
                                        revert with 'NH{q', 17
                                    if not halvingPeriod:
                                        revert with 'NH{q', 18
                                    if not block.number + -startBlock - 1 / halvingPeriod:
                                        if block.number < poolInfo[idx].field_512:
                                            revert with 'NH{q', 17
                                        if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                            revert with 'NH{q', 17
                                        if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                            if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                revert with 'NH{q', 17
                                            if not totalAllocPoint:
                                                revert with 'NH{q', 18
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2059 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _2103 = mem[_2059]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2241 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _2326 = mem[_2241]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.maxSupply() with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2452 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _2505 = mem[_2452]
                                            if _2326 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                revert with 'NH{q', 17
                                            if _2326 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2452]:
                                                if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2787 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2787] < _2103:
                                                        revert with 'NH{q', 17
                                                    if mem[_2787] - _2103 and 10^12 > -1 / mem[_2787] - _2103:
                                                        revert with 'NH{q', 17
                                                    if not _1856:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2787]) - (10^12 * _2103) / _1856):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2787]) - (10^12 * _2103) / _1856
                                                else:
                                                    mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2900 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2900] < _2103:
                                                        revert with 'NH{q', 17
                                                    if mem[_2900] - _2103 and 10^12 > -1 / mem[_2900] - _2103:
                                                        revert with 'NH{q', 17
                                                    if not _1856:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2900]) - (10^12 * _2103) / _1856):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2900]) - (10^12 * _2103) / _1856
                                            else:
                                                if mem[_2452] < _2326:
                                                    revert with 'NH{q', 17
                                                if not mem[_2452] - _2326:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3018 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_3018] < _2103:
                                                        revert with 'NH{q', 17
                                                    if mem[_3018] - _2103 and 10^12 > -1 / mem[_3018] - _2103:
                                                        revert with 'NH{q', 17
                                                    if not _1856:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_3018]) - (10^12 * _2103) / _1856):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_3018]) - (10^12 * _2103) / _1856
                                                else:
                                                    mem[mem[64] + 36] = mem[_2452] - _2326
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, _2505 - _2326
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3108 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_3108] < _2103:
                                                        revert with 'NH{q', 17
                                                    if mem[_3108] - _2103 and 10^12 > -1 / mem[_3108] - _2103:
                                                        revert with 'NH{q', 17
                                                    if not _1856:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_3108]) - (10^12 * _2103) / _1856):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_3108]) - (10^12 * _2103) / _1856
                                            poolInfo[idx].field_512 = block.number
                                    else:
                                        if block.number + -startBlock - 1 / halvingPeriod > 255:
                                            revert with 'NH{q', 17
                                        if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                            revert with 'NH{q', 18
                                        if block.number < poolInfo[idx].field_512:
                                            revert with 'NH{q', 17
                                        if block.number - poolInfo[idx].field_512 and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - poolInfo[idx].field_512:
                                            revert with 'NH{q', 17
                                        if 0 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                            revert with 'NH{q', 17
                                        if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                            if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                revert with 'NH{q', 17
                                            if not totalAllocPoint:
                                                revert with 'NH{q', 18
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2157 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _2240 = mem[_2157]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2411 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _2482 = mem[_2411]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.maxSupply() with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2548 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _2588 = mem[_2548]
                                            if _2482 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                revert with 'NH{q', 17
                                            if _2482 + ((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2548]:
                                                if not (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3014 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_3014] < _2240:
                                                        revert with 'NH{q', 17
                                                    if mem[_3014] - _2240 and 10^12 > -1 / mem[_3014] - _2240:
                                                        revert with 'NH{q', 17
                                                    if not _1856:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_3014]) - (10^12 * _2240) / _1856):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_3014]) - (10^12 * _2240) / _1856
                                                else:
                                                    mem[mem[64] + 36] = (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3104 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_3104] < _2240:
                                                        revert with 'NH{q', 17
                                                    if mem[_3104] - _2240 and 10^12 > -1 / mem[_3104] - _2240:
                                                        revert with 'NH{q', 17
                                                    if not _1856:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_3104]) - (10^12 * _2240) / _1856):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_3104]) - (10^12 * _2240) / _1856
                                            else:
                                                if mem[_2548] < _2482:
                                                    revert with 'NH{q', 17
                                                if not mem[_2548] - _2482:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3165 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_3165] < _2240:
                                                        revert with 'NH{q', 17
                                                    if mem[_3165] - _2240 and 10^12 > -1 / mem[_3165] - _2240:
                                                        revert with 'NH{q', 17
                                                    if not _1856:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_3165]) - (10^12 * _2240) / _1856):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_3165]) - (10^12 * _2240) / _1856
                                                else:
                                                    mem[mem[64] + 36] = mem[_2548] - _2482
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, _2588 - _2482
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3202 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_3202] < _2240:
                                                        revert with 'NH{q', 17
                                                    if mem[_3202] - _2240 and 10^12 > -1 / mem[_3202] - _2240:
                                                        revert with 'NH{q', 17
                                                    if not _1856:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_3202]) - (10^12 * _2240) / _1856):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_3202]) - (10^12 * _2240) / _1856
                                            poolInfo[idx].field_512 = block.number
                        else:
                            if poolInfo[idx].field_512 <= startBlock:
                                if 0 == halvingPeriod:
                                    if 0 == halvingPeriod:
                                        if block.number < poolInfo[idx].field_512:
                                            revert with 'NH{q', 17
                                        if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                            revert with 'NH{q', 17
                                        if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                            if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                revert with 'NH{q', 17
                                            if not totalAllocPoint:
                                                revert with 'NH{q', 18
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _1895 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _1911 = mem[_1895]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _1947 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _1963 = mem[_1947]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.maxSupply() with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _2001 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _2020 = mem[_2001]
                                            if _1963 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                revert with 'NH{q', 17
                                            if _1963 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2001]:
                                                if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2278 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2278] < _1911:
                                                        revert with 'NH{q', 17
                                                    if mem[_2278] - _1911 and 10^12 > -1 / mem[_2278] - _1911:
                                                        revert with 'NH{q', 17
                                                    if not _1856:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2278]) - (10^12 * _1911) / _1856):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2278]) - (10^12 * _1911) / _1856
                                                else:
                                                    mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2359 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2359] < _1911:
                                                        revert with 'NH{q', 17
                                                    if mem[_2359] - _1911 and 10^12 > -1 / mem[_2359] - _1911:
                                                        revert with 'NH{q', 17
                                                    if not _1856:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2359]) - (10^12 * _1911) / _1856):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2359]) - (10^12 * _1911) / _1856
                                            else:
                                                if mem[_2001] < _1963:
                                                    revert with 'NH{q', 17
                                                if not mem[_2001] - _1963:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2442 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2442] < _1911:
                                                        revert with 'NH{q', 17
                                                    if mem[_2442] - _1911 and 10^12 > -1 / mem[_2442] - _1911:
                                                        revert with 'NH{q', 17
                                                    if not _1856:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2442]) - (10^12 * _1911) / _1856):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2442]) - (10^12 * _1911) / _1856
                                                else:
                                                    mem[mem[64] + 36] = mem[_2001] - _1963
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, _2020 - _1963
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2498 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_2498] < _1911:
                                                        revert with 'NH{q', 17
                                                    if mem[_2498] - _1911 and 10^12 > -1 / mem[_2498] - _1911:
                                                        revert with 'NH{q', 17
                                                    if not _1856:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_2498]) - (10^12 * _1911) / _1856):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_2498]) - (10^12 * _1911) / _1856
                                            poolInfo[idx].field_512 = block.number
                                    else:
                                        if block.number <= startBlock:
                                            if block.number < poolInfo[idx].field_512:
                                                revert with 'NH{q', 17
                                            if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                                revert with 'NH{q', 17
                                            if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                                if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _1903 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _1918 = mem[_1903]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _1956 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _1971 = mem[_1956]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2013 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _2036 = mem[_2013]
                                                if _1971 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _1971 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2013]:
                                                    if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2315 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2315] < _1918:
                                                            revert with 'NH{q', 17
                                                        if mem[_2315] - _1918 and 10^12 > -1 / mem[_2315] - _1918:
                                                            revert with 'NH{q', 17
                                                        if not _1856:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2315]) - (10^12 * _1918) / _1856):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2315]) - (10^12 * _1918) / _1856
                                                    else:
                                                        mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2401 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2401] < _1918:
                                                            revert with 'NH{q', 17
                                                        if mem[_2401] - _1918 and 10^12 > -1 / mem[_2401] - _1918:
                                                            revert with 'NH{q', 17
                                                        if not _1856:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2401]) - (10^12 * _1918) / _1856):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2401]) - (10^12 * _1918) / _1856
                                                else:
                                                    if mem[_2013] < _1971:
                                                        revert with 'NH{q', 17
                                                    if not mem[_2013] - _1971:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2476 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2476] < _1918:
                                                            revert with 'NH{q', 17
                                                        if mem[_2476] - _1918 and 10^12 > -1 / mem[_2476] - _1918:
                                                            revert with 'NH{q', 17
                                                        if not _1856:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2476]) - (10^12 * _1918) / _1856):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2476]) - (10^12 * _1918) / _1856
                                                    else:
                                                        mem[mem[64] + 36] = mem[_2013] - _1971
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _2036 - _1971
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2517 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2517] < _1918:
                                                            revert with 'NH{q', 17
                                                        if mem[_2517] - _1918 and 10^12 > -1 / mem[_2517] - _1918:
                                                            revert with 'NH{q', 17
                                                        if not _1856:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2517]) - (10^12 * _1918) / _1856):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2517]) - (10^12 * _1918) / _1856
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number < startBlock:
                                                revert with 'NH{q', 17
                                            if block.number - startBlock < 1:
                                                revert with 'NH{q', 17
                                            if not halvingPeriod:
                                                revert with 'NH{q', 18
                                            if not block.number + -startBlock - 1 / halvingPeriod:
                                                if block.number < poolInfo[idx].field_512:
                                                    revert with 'NH{q', 17
                                                if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                                    revert with 'NH{q', 17
                                                if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                                    if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2077 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2126 = mem[_2077]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2277 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2357 = mem[_2277]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2479 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2520 = mem[_2479]
                                                    if _2357 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _2357 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2479]:
                                                        if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2827 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2827] < _2126:
                                                                revert with 'NH{q', 17
                                                            if mem[_2827] - _2126 and 10^12 > -1 / mem[_2827] - _2126:
                                                                revert with 'NH{q', 17
                                                            if not _1856:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2827]) - (10^12 * _2126) / _1856):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2827]) - (10^12 * _2126) / _1856
                                                        else:
                                                            mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2948 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2948] < _2126:
                                                                revert with 'NH{q', 17
                                                            if mem[_2948] - _2126 and 10^12 > -1 / mem[_2948] - _2126:
                                                                revert with 'NH{q', 17
                                                            if not _1856:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2948]) - (10^12 * _2126) / _1856):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2948]) - (10^12 * _2126) / _1856
                                                    else:
                                                        if mem[_2479] < _2357:
                                                            revert with 'NH{q', 17
                                                        if not mem[_2479] - _2357:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _3055 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_3055] < _2126:
                                                                revert with 'NH{q', 17
                                                            if mem[_3055] - _2126 and 10^12 > -1 / mem[_3055] - _2126:
                                                                revert with 'NH{q', 17
                                                            if not _1856:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_3055]) - (10^12 * _2126) / _1856):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_3055]) - (10^12 * _2126) / _1856
                                                        else:
                                                            mem[mem[64] + 36] = mem[_2479] - _2357
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _2520 - _2357
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _3131 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_3131] < _2126:
                                                                revert with 'NH{q', 17
                                                            if mem[_3131] - _2126 and 10^12 > -1 / mem[_3131] - _2126:
                                                                revert with 'NH{q', 17
                                                            if not _1856:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_3131]) - (10^12 * _2126) / _1856):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_3131]) - (10^12 * _2126) / _1856
                                                    poolInfo[idx].field_512 = block.number
                                            else:
                                                if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                    revert with 'NH{q', 17
                                                if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                    revert with 'NH{q', 18
                                                if block.number < poolInfo[idx].field_512:
                                                    revert with 'NH{q', 17
                                                if block.number - poolInfo[idx].field_512 and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - poolInfo[idx].field_512:
                                                    revert with 'NH{q', 17
                                                if 0 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                    revert with 'NH{q', 17
                                                if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                    if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2190 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2276 = mem[_2190]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2440 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2496 = mem[_2440]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2563 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2611 = mem[_2563]
                                                    if _2496 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _2496 + ((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2563]:
                                                        if not (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _3051 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_3051] < _2276:
                                                                revert with 'NH{q', 17
                                                            if mem[_3051] - _2276 and 10^12 > -1 / mem[_3051] - _2276:
                                                                revert with 'NH{q', 17
                                                            if not _1856:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_3051]) - (10^12 * _2276) / _1856):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_3051]) - (10^12 * _2276) / _1856
                                                        else:
                                                            mem[mem[64] + 36] = (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _3127 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_3127] < _2276:
                                                                revert with 'NH{q', 17
                                                            if mem[_3127] - _2276 and 10^12 > -1 / mem[_3127] - _2276:
                                                                revert with 'NH{q', 17
                                                            if not _1856:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_3127]) - (10^12 * _2276) / _1856):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_3127]) - (10^12 * _2276) / _1856
                                                    else:
                                                        if mem[_2563] < _2496:
                                                            revert with 'NH{q', 17
                                                        if not mem[_2563] - _2496:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _3179 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_3179] < _2276:
                                                                revert with 'NH{q', 17
                                                            if mem[_3179] - _2276 and 10^12 > -1 / mem[_3179] - _2276:
                                                                revert with 'NH{q', 17
                                                            if not _1856:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_3179]) - (10^12 * _2276) / _1856):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_3179]) - (10^12 * _2276) / _1856
                                                        else:
                                                            mem[mem[64] + 36] = mem[_2563] - _2496
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _2611 - _2496
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _3218 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_3218] < _2276:
                                                                revert with 'NH{q', 17
                                                            if mem[_3218] - _2276 and 10^12 > -1 / mem[_3218] - _2276:
                                                                revert with 'NH{q', 17
                                                            if not _1856:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_3218]) - (10^12 * _2276) / _1856):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_3218]) - (10^12 * _2276) / _1856
                                                    poolInfo[idx].field_512 = block.number
                                else:
                                    if block.number <= startBlock:
                                        if 0 == halvingPeriod:
                                            if block.number < poolInfo[idx].field_512:
                                                revert with 'NH{q', 17
                                            if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                                revert with 'NH{q', 17
                                            if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                                if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _1902 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _1917 = mem[_1902]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _1955 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _1970 = mem[_1955]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _2012 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _2033 = mem[_2012]
                                                if _1970 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _1970 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2012]:
                                                    if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2311 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2311] < _1917:
                                                            revert with 'NH{q', 17
                                                        if mem[_2311] - _1917 and 10^12 > -1 / mem[_2311] - _1917:
                                                            revert with 'NH{q', 17
                                                        if not _1856:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2311]) - (10^12 * _1917) / _1856):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2311]) - (10^12 * _1917) / _1856
                                                    else:
                                                        mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2394 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2394] < _1917:
                                                            revert with 'NH{q', 17
                                                        if mem[_2394] - _1917 and 10^12 > -1 / mem[_2394] - _1917:
                                                            revert with 'NH{q', 17
                                                        if not _1856:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2394]) - (10^12 * _1917) / _1856):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2394]) - (10^12 * _1917) / _1856
                                                else:
                                                    if mem[_2012] < _1970:
                                                        revert with 'NH{q', 17
                                                    if not mem[_2012] - _1970:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2471 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2471] < _1917:
                                                            revert with 'NH{q', 17
                                                        if mem[_2471] - _1917 and 10^12 > -1 / mem[_2471] - _1917:
                                                            revert with 'NH{q', 17
                                                        if not _1856:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2471]) - (10^12 * _1917) / _1856):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2471]) - (10^12 * _1917) / _1856
                                                    else:
                                                        mem[mem[64] + 36] = mem[_2012] - _1970
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _2033 - _1970
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2514 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_2514] < _1917:
                                                            revert with 'NH{q', 17
                                                        if mem[_2514] - _1917 and 10^12 > -1 / mem[_2514] - _1917:
                                                            revert with 'NH{q', 17
                                                        if not _1856:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_2514]) - (10^12 * _1917) / _1856):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_2514]) - (10^12 * _1917) / _1856
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number <= startBlock:
                                                if block.number < poolInfo[idx].field_512:
                                                    revert with 'NH{q', 17
                                                if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                                    revert with 'NH{q', 17
                                                if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                                    if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _1910 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _1924 = mem[_1910]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _1962 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _1983 = mem[_1962]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _2019 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _2051 = mem[_2019]
                                                    if _1983 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _1983 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2019]:
                                                        if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2347 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2347] < _1924:
                                                                revert with 'NH{q', 17
                                                            if mem[_2347] - _1924 and 10^12 > -1 / mem[_2347] - _1924:
                                                                revert with 'NH{q', 17
                                                            if not _1856:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2347]) - (10^12 * _1924) / _1856):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2347]) - (10^12 * _1924) / _1856
                                                        else:
                                                            mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2433 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2433] < _1924:
                                                                revert with 'NH{q', 17
                                                            if mem[_2433] - _1924 and 10^12 > -1 / mem[_2433] - _1924:
                                                                revert with 'NH{q', 17
                                                            if not _1856:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2433]) - (10^12 * _1924) / _1856):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2433]) - (10^12 * _1924) / _1856
                                                    else:
                                                        if mem[_2019] < _1983:
                                                            revert with 'NH{q', 17
                                                        if not mem[_2019] - _1983:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2491 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2491] < _1924:
                                                                revert with 'NH{q', 17
                                                            if mem[_2491] - _1924 and 10^12 > -1 / mem[_2491] - _1924:
                                                                revert with 'NH{q', 17
                                                            if not _1856:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2491]) - (10^12 * _1924) / _1856):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2491]) - (10^12 * _1924) / _1856
                                                        else:
                                                            mem[mem[64] + 36] = mem[_2019] - _1983
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _2051 - _1983
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _2534 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_2534] < _1924:
                                                                revert with 'NH{q', 17
                                                            if mem[_2534] - _1924 and 10^12 > -1 / mem[_2534] - _1924:
                                                                revert with 'NH{q', 17
                                                            if not _1856:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_2534]) - (10^12 * _1924) / _1856):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_2534]) - (10^12 * _1924) / _1856
                                                    poolInfo[idx].field_512 = block.number
                                            else:
                                                if block.number < startBlock:
                                                    revert with 'NH{q', 17
                                                if block.number - startBlock < 1:
                                                    revert with 'NH{q', 17
                                                if not halvingPeriod:
                                                    revert with 'NH{q', 18
                                                if not block.number + -startBlock - 1 / halvingPeriod:
                                                    if block.number < poolInfo[idx].field_512:
                                                        revert with 'NH{q', 17
                                                    if block.number - poolInfo[idx].field_512 and hCTPerBlock > -1 / block.number - poolInfo[idx].field_512:
                                                        revert with 'NH{q', 17
                                                    if 0 > !((block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock)):
                                                        revert with 'NH{q', 17
                                                    if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) > 0:
                                                        if (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock) - (poolInfo[idx].field_512 * hCTPerBlock):
                                                            revert with 'NH{q', 17
                                                        if not totalAllocPoint:
                                                            revert with 'NH{q', 18
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2097 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _2148 = mem[_2097]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x18160ddd with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2310 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _2392 = mem[_2310]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.maxSupply() with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2494 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _2537 = mem[_2494]
                                                        if _2392 > !((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                            revert with 'NH{q', 17
                                                        if _2392 + ((block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2494]:
                                                            if not (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _2870 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_2870] < _2148:
                                                                    revert with 'NH{q', 17
                                                                if mem[_2870] - _2148 and 10^12 > -1 / mem[_2870] - _2148:
                                                                    revert with 'NH{q', 17
                                                                if not _1856:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2870]) - (10^12 * _2148) / _1856):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_2870]) - (10^12 * _2148) / _1856
                                                            else:
                                                                mem[mem[64] + 36] = (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, (block.number * hCTPerBlock * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _2992 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_2992] < _2148:
                                                                    revert with 'NH{q', 17
                                                                if mem[_2992] - _2148 and 10^12 > -1 / mem[_2992] - _2148:
                                                                    revert with 'NH{q', 17
                                                                if not _1856:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_2992]) - (10^12 * _2148) / _1856):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_2992]) - (10^12 * _2148) / _1856
                                                        else:
                                                            if mem[_2494] < _2392:
                                                                revert with 'NH{q', 17
                                                            if not mem[_2494] - _2392:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _3084 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_3084] < _2148:
                                                                    revert with 'NH{q', 17
                                                                if mem[_3084] - _2148 and 10^12 > -1 / mem[_3084] - _2148:
                                                                    revert with 'NH{q', 17
                                                                if not _1856:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_3084]) - (10^12 * _2148) / _1856):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_3084]) - (10^12 * _2148) / _1856
                                                            else:
                                                                mem[mem[64] + 36] = mem[_2494] - _2392
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, _2537 - _2392
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _3149 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_3149] < _2148:
                                                                    revert with 'NH{q', 17
                                                                if mem[_3149] - _2148 and 10^12 > -1 / mem[_3149] - _2148:
                                                                    revert with 'NH{q', 17
                                                                if not _1856:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_3149]) - (10^12 * _2148) / _1856):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_3149]) - (10^12 * _2148) / _1856
                                                        poolInfo[idx].field_512 = block.number
                                                else:
                                                    if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                        revert with 'NH{q', 17
                                                    if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                        revert with 'NH{q', 18
                                                    if block.number < poolInfo[idx].field_512:
                                                        revert with 'NH{q', 17
                                                    if block.number - poolInfo[idx].field_512 and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - poolInfo[idx].field_512:
                                                        revert with 'NH{q', 17
                                                    if 0 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                        revert with 'NH{q', 17
                                                    if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                        if (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                            revert with 'NH{q', 17
                                                        if not totalAllocPoint:
                                                            revert with 'NH{q', 18
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2228 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _2309 = mem[_2228]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x18160ddd with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2469 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _2512 = mem[_2469]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.maxSupply() with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _2584 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _2631 = mem[_2584]
                                                        if _2512 > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                            revert with 'NH{q', 17
                                                        if _2512 + ((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_2584]:
                                                            if not (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _3080 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_3080] < _2309:
                                                                    revert with 'NH{q', 17
                                                                if mem[_3080] - _2309 and 10^12 > -1 / mem[_3080] - _2309:
                                                                    revert with 'NH{q', 17
                                                                if not _1856:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_3080]) - (10^12 * _2309) / _1856):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_3080]) - (10^12 * _2309) / _1856
                                                            else:
                                                                mem[mem[64] + 36] = (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (poolInfo[idx].field_512 * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _3145 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_3145] < _2309:
                                                                    revert with 'NH{q', 17
                                                                if mem[_3145] - _2309 and 10^12 > -1 / mem[_3145] - _2309:
                                                                    revert with 'NH{q', 17
                                                                if not _1856:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_3145]) - (10^12 * _2309) / _1856):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_3145]) - (10^12 * _2309) / _1856
                                                        else:
                                                            if mem[_2584] < _2512:
                                                                revert with 'NH{q', 17
                                                            if not mem[_2584] - _2512:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _3192 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_3192] < _2309:
                                                                    revert with 'NH{q', 17
                                                                if mem[_3192] - _2309 and 10^12 > -1 / mem[_3192] - _2309:
                                                                    revert with 'NH{q', 17
                                                                if not _1856:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_3192]) - (10^12 * _2309) / _1856):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_3192]) - (10^12 * _2309) / _1856
                                                            else:
                                                                mem[mem[64] + 36] = mem[_2584] - _2512
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, _2631 - _2512
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _3227 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_3227] < _2309:
                                                                    revert with 'NH{q', 17
                                                                if mem[_3227] - _2309 and 10^12 > -1 / mem[_3227] - _2309:
                                                                    revert with 'NH{q', 17
                                                                if not _1856:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_3227]) - (10^12 * _2309) / _1856):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_3227]) - (10^12 * _2309) / _1856
                                                        poolInfo[idx].field_512 = block.number
                                    else:
                                        if block.number < startBlock:
                                            revert with 'NH{q', 17
                                        if block.number - startBlock < 1:
                                            revert with 'NH{q', 17
                                        if not halvingPeriod:
                                            revert with 'NH{q', 18
                                        s = 0
                                        t = 0
                                        u = poolInfo[idx].field_512
                                        while s < block.number + -startBlock - 1 / halvingPeriod:
                                            if s == -1:
                                                revert with 'NH{q', 17
                                            if s + 1 and halvingPeriod > -1 / s + 1:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) > !startBlock:
                                                revert with 'NH{q', 17
                                            if 0 == halvingPeriod:
                                                if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                    revert with 'NH{q', 17
                                                if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                    revert with 'NH{q', 17
                                                if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                s = s + 1
                                                t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                                u = halvingPeriod + (s * halvingPeriod) + startBlock
                                                continue 
                                            if halvingPeriod + (s * halvingPeriod) + startBlock <= startBlock:
                                                if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                    revert with 'NH{q', 17
                                                if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                    revert with 'NH{q', 17
                                                if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                s = s + 1
                                                t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                                u = halvingPeriod + (s * halvingPeriod) + startBlock
                                                continue 
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < startBlock:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) < 1:
                                                revert with 'NH{q', 17
                                            if not halvingPeriod:
                                                revert with 'NH{q', 18
                                            if not halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                                if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                    revert with 'NH{q', 17
                                                if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                    revert with 'NH{q', 17
                                                if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                s = s + 1
                                                t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                                u = halvingPeriod + (s * halvingPeriod) + startBlock
                                                continue 
                                            if halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > 255:
                                                revert with 'NH{q', 17
                                            if not 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                                revert with 'NH{q', 18
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if 0 == halvingPeriod:
                                            if block.number < u:
                                                revert with 'NH{q', 17
                                            if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                revert with 'NH{q', 17
                                            if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3681 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3697 = mem[_3681]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3745 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3761 = mem[_3745]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3809 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3825 = mem[_3809]
                                                if _3761 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _3761 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3809]:
                                                    if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3979 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_3979] < _3697:
                                                            revert with 'NH{q', 17
                                                        if mem[_3979] - _3697 and 10^12 > -1 / mem[_3979] - _3697:
                                                            revert with 'NH{q', 17
                                                        if not _1856:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_3979]) - (10^12 * _3697) / _1856):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_3979]) - (10^12 * _3697) / _1856
                                                    else:
                                                        mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4063 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4063] < _3697:
                                                            revert with 'NH{q', 17
                                                        if mem[_4063] - _3697 and 10^12 > -1 / mem[_4063] - _3697:
                                                            revert with 'NH{q', 17
                                                        if not _1856:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4063]) - (10^12 * _3697) / _1856):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4063]) - (10^12 * _3697) / _1856
                                                else:
                                                    if mem[_3809] < _3761:
                                                        revert with 'NH{q', 17
                                                    if not mem[_3809] - _3761:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4179 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4179] < _3697:
                                                            revert with 'NH{q', 17
                                                        if mem[_4179] - _3697 and 10^12 > -1 / mem[_4179] - _3697:
                                                            revert with 'NH{q', 17
                                                        if not _1856:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4179]) - (10^12 * _3697) / _1856):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4179]) - (10^12 * _3697) / _1856
                                                    else:
                                                        mem[mem[64] + 36] = mem[_3809] - _3761
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _3825 - _3761
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4259 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4259] < _3697:
                                                            revert with 'NH{q', 17
                                                        if mem[_4259] - _3697 and 10^12 > -1 / mem[_4259] - _3697:
                                                            revert with 'NH{q', 17
                                                        if not _1856:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4259]) - (10^12 * _3697) / _1856):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4259]) - (10^12 * _3697) / _1856
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number <= startBlock:
                                                if block.number < u:
                                                    revert with 'NH{q', 17
                                                if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                    revert with 'NH{q', 17
                                                if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                    if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3689 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3705 = mem[_3689]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3753 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3769 = mem[_3753]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3817 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3833 = mem[_3817]
                                                    if _3769 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _3769 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3817]:
                                                        if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4017 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4017] < _3705:
                                                                revert with 'NH{q', 17
                                                            if mem[_4017] - _3705 and 10^12 > -1 / mem[_4017] - _3705:
                                                                revert with 'NH{q', 17
                                                            if not _1856:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4017]) - (10^12 * _3705) / _1856):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4017]) - (10^12 * _3705) / _1856
                                                        else:
                                                            mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4130 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4130] < _3705:
                                                                revert with 'NH{q', 17
                                                            if mem[_4130] - _3705 and 10^12 > -1 / mem[_4130] - _3705:
                                                                revert with 'NH{q', 17
                                                            if not _1856:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4130]) - (10^12 * _3705) / _1856):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4130]) - (10^12 * _3705) / _1856
                                                    else:
                                                        if mem[_3817] < _3769:
                                                            revert with 'NH{q', 17
                                                        if not mem[_3817] - _3769:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4218 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4218] < _3705:
                                                                revert with 'NH{q', 17
                                                            if mem[_4218] - _3705 and 10^12 > -1 / mem[_4218] - _3705:
                                                                revert with 'NH{q', 17
                                                            if not _1856:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4218]) - (10^12 * _3705) / _1856):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4218]) - (10^12 * _3705) / _1856
                                                        else:
                                                            mem[mem[64] + 36] = mem[_3817] - _3769
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _3833 - _3769
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4282 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4282] < _3705:
                                                                revert with 'NH{q', 17
                                                            if mem[_4282] - _3705 and 10^12 > -1 / mem[_4282] - _3705:
                                                                revert with 'NH{q', 17
                                                            if not _1856:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4282]) - (10^12 * _3705) / _1856):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4282]) - (10^12 * _3705) / _1856
                                                    poolInfo[idx].field_512 = block.number
                                            else:
                                                if block.number < startBlock:
                                                    revert with 'NH{q', 17
                                                if block.number - startBlock < 1:
                                                    revert with 'NH{q', 17
                                                if not halvingPeriod:
                                                    revert with 'NH{q', 18
                                                if not block.number + -startBlock - 1 / halvingPeriod:
                                                    if block.number < u:
                                                        revert with 'NH{q', 17
                                                    if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                        revert with 'NH{q', 17
                                                    if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                        revert with 'NH{q', 17
                                                    if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                        if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                            revert with 'NH{q', 17
                                                        if not totalAllocPoint:
                                                            revert with 'NH{q', 18
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3857 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _3867 = mem[_3857]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x18160ddd with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3978 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4061 = mem[_3978]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.maxSupply() with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4221 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4285 = mem[_4221]
                                                        if _4061 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                            revert with 'NH{q', 17
                                                        if _4061 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4221]:
                                                            if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4385 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4385] < _3867:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4385] - _3867 and 10^12 > -1 / mem[_4385] - _3867:
                                                                    revert with 'NH{q', 17
                                                                if not _1856:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4385]) - (10^12 * _3867) / _1856):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4385]) - (10^12 * _3867) / _1856
                                                            else:
                                                                mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4444 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4444] < _3867:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4444] - _3867 and 10^12 > -1 / mem[_4444] - _3867:
                                                                    revert with 'NH{q', 17
                                                                if not _1856:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4444]) - (10^12 * _3867) / _1856):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4444]) - (10^12 * _3867) / _1856
                                                        else:
                                                            if mem[_4221] < _4061:
                                                                revert with 'NH{q', 17
                                                            if not mem[_4221] - _4061:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4493 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4493] < _3867:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4493] - _3867 and 10^12 > -1 / mem[_4493] - _3867:
                                                                    revert with 'NH{q', 17
                                                                if not _1856:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4493]) - (10^12 * _3867) / _1856):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4493]) - (10^12 * _3867) / _1856
                                                            else:
                                                                mem[mem[64] + 36] = mem[_4221] - _4061
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, _4285 - _4061
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4566 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4566] < _3867:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4566] - _3867 and 10^12 > -1 / mem[_4566] - _3867:
                                                                    revert with 'NH{q', 17
                                                                if not _1856:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4566]) - (10^12 * _3867) / _1856):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4566]) - (10^12 * _3867) / _1856
                                                        poolInfo[idx].field_512 = block.number
                                                else:
                                                    if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                        revert with 'NH{q', 17
                                                    if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                        revert with 'NH{q', 18
                                                    if block.number < u:
                                                        revert with 'NH{q', 17
                                                    if block.number - u and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - u:
                                                        revert with 'NH{q', 17
                                                    if t > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                        revert with 'NH{q', 17
                                                    if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                        if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                            revert with 'NH{q', 17
                                                        if not totalAllocPoint:
                                                            revert with 'NH{q', 18
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3907 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _3977 = mem[_3907]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x18160ddd with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4177 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4257 = mem[_4177]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.maxSupply() with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4330 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4345 = mem[_4330]
                                                        if _4257 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                            revert with 'NH{q', 17
                                                        if _4257 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4330]:
                                                            if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4489 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4489] < _3977:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4489] - _3977 and 10^12 > -1 / mem[_4489] - _3977:
                                                                    revert with 'NH{q', 17
                                                                if not _1856:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4489]) - (10^12 * _3977) / _1856):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4489]) - (10^12 * _3977) / _1856
                                                            else:
                                                                mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4562 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4562] < _3977:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4562] - _3977 and 10^12 > -1 / mem[_4562] - _3977:
                                                                    revert with 'NH{q', 17
                                                                if not _1856:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4562]) - (10^12 * _3977) / _1856):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4562]) - (10^12 * _3977) / _1856
                                                        else:
                                                            if mem[_4330] < _4257:
                                                                revert with 'NH{q', 17
                                                            if not mem[_4330] - _4257:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4610 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4610] < _3977:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4610] - _3977 and 10^12 > -1 / mem[_4610] - _3977:
                                                                    revert with 'NH{q', 17
                                                                if not _1856:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4610]) - (10^12 * _3977) / _1856):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4610]) - (10^12 * _3977) / _1856
                                                            else:
                                                                mem[mem[64] + 36] = mem[_4330] - _4257
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, _4345 - _4257
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4650 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4650] < _3977:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4650] - _3977 and 10^12 > -1 / mem[_4650] - _3977:
                                                                    revert with 'NH{q', 17
                                                                if not _1856:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4650]) - (10^12 * _3977) / _1856):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4650]) - (10^12 * _3977) / _1856
                                                        poolInfo[idx].field_512 = block.number
                            else:
                                if poolInfo[idx].field_512 < startBlock:
                                    revert with 'NH{q', 17
                                if poolInfo[idx].field_512 - startBlock < 1:
                                    revert with 'NH{q', 17
                                if not halvingPeriod:
                                    revert with 'NH{q', 18
                                if 0 == halvingPeriod:
                                    s = poolInfo[idx].field_512 + -startBlock - 1 / halvingPeriod
                                    t = 0
                                    u = poolInfo[idx].field_512
                                    while s < 0:
                                        if s == -1:
                                            revert with 'NH{q', 17
                                        if s + 1 and halvingPeriod > -1 / s + 1:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) > !startBlock:
                                            revert with 'NH{q', 17
                                        if 0 == halvingPeriod:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) + startBlock <= startBlock:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) + startBlock < startBlock:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) < 1:
                                            revert with 'NH{q', 17
                                        if not halvingPeriod:
                                            revert with 'NH{q', 18
                                        if not halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > 255:
                                            revert with 'NH{q', 17
                                        if not 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                            revert with 'NH{q', 18
                                        if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                            revert with 'NH{q', 17
                                        if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                            revert with 'NH{q', 17
                                        if t > !((halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)):
                                            revert with 'NH{q', 17
                                        s = s + 1
                                        t = t + (halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)
                                        u = halvingPeriod + (s * halvingPeriod) + startBlock
                                        continue 
                                    if 0 == halvingPeriod:
                                        if block.number < u:
                                            revert with 'NH{q', 17
                                        if block.number - u and hCTPerBlock > -1 / block.number - u:
                                            revert with 'NH{q', 17
                                        if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                            revert with 'NH{q', 17
                                        if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                revert with 'NH{q', 17
                                            if not totalAllocPoint:
                                                revert with 'NH{q', 18
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3684 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3700 = mem[_3684]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3748 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3764 = mem[_3748]
                                            require ext_code.size(HCTAddress)
                                            staticcall HCTAddress.maxSupply() with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _3812 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _3828 = mem[_3812]
                                            if _3764 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                revert with 'NH{q', 17
                                            if _3764 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3812]:
                                                if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3994 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_3994] < _3700:
                                                        revert with 'NH{q', 17
                                                    if mem[_3994] - _3700 and 10^12 > -1 / mem[_3994] - _3700:
                                                        revert with 'NH{q', 17
                                                    if not _1856:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_3994]) - (10^12 * _3700) / _1856):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_3994]) - (10^12 * _3700) / _1856
                                                else:
                                                    mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4090 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4090] < _3700:
                                                        revert with 'NH{q', 17
                                                    if mem[_4090] - _3700 and 10^12 > -1 / mem[_4090] - _3700:
                                                        revert with 'NH{q', 17
                                                    if not _1856:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4090]) - (10^12 * _3700) / _1856):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4090]) - (10^12 * _3700) / _1856
                                            else:
                                                if mem[_3812] < _3764:
                                                    revert with 'NH{q', 17
                                                if not mem[_3812] - _3764:
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4194 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4194] < _3700:
                                                        revert with 'NH{q', 17
                                                    if mem[_4194] - _3700 and 10^12 > -1 / mem[_4194] - _3700:
                                                        revert with 'NH{q', 17
                                                    if not _1856:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4194]) - (10^12 * _3700) / _1856):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4194]) - (10^12 * _3700) / _1856
                                                else:
                                                    mem[mem[64] + 36] = mem[_3812] - _3764
                                                    require ext_code.size(HCTAddress)
                                                    call HCTAddress.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args this.address, _3828 - _3764
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4268 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    if mem[_4268] < _3700:
                                                        revert with 'NH{q', 17
                                                    if mem[_4268] - _3700 and 10^12 > -1 / mem[_4268] - _3700:
                                                        revert with 'NH{q', 17
                                                    if not _1856:
                                                        revert with 'NH{q', 18
                                                    if poolInfo[idx].field_768 > !((10^12 * mem[_4268]) - (10^12 * _3700) / _1856):
                                                        revert with 'NH{q', 17
                                                    poolInfo[idx].field_768 += (10^12 * mem[_4268]) - (10^12 * _3700) / _1856
                                            poolInfo[idx].field_512 = block.number
                                    else:
                                        if block.number <= startBlock:
                                            if block.number < u:
                                                revert with 'NH{q', 17
                                            if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                revert with 'NH{q', 17
                                            if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3692 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3708 = mem[_3692]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3756 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3778 = mem[_3756]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3820 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3842 = mem[_3820]
                                                if _3778 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _3778 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3820]:
                                                    if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4032 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4032] < _3708:
                                                            revert with 'NH{q', 17
                                                        if mem[_4032] - _3708 and 10^12 > -1 / mem[_4032] - _3708:
                                                            revert with 'NH{q', 17
                                                        if not _1856:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4032]) - (10^12 * _3708) / _1856):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4032]) - (10^12 * _3708) / _1856
                                                    else:
                                                        mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4148 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4148] < _3708:
                                                            revert with 'NH{q', 17
                                                        if mem[_4148] - _3708 and 10^12 > -1 / mem[_4148] - _3708:
                                                            revert with 'NH{q', 17
                                                        if not _1856:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4148]) - (10^12 * _3708) / _1856):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4148]) - (10^12 * _3708) / _1856
                                                else:
                                                    if mem[_3820] < _3778:
                                                        revert with 'NH{q', 17
                                                    if not mem[_3820] - _3778:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4233 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4233] < _3708:
                                                            revert with 'NH{q', 17
                                                        if mem[_4233] - _3708 and 10^12 > -1 / mem[_4233] - _3708:
                                                            revert with 'NH{q', 17
                                                        if not _1856:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4233]) - (10^12 * _3708) / _1856):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4233]) - (10^12 * _3708) / _1856
                                                    else:
                                                        mem[mem[64] + 36] = mem[_3820] - _3778
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _3842 - _3778
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4297 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4297] < _3708:
                                                            revert with 'NH{q', 17
                                                        if mem[_4297] - _3708 and 10^12 > -1 / mem[_4297] - _3708:
                                                            revert with 'NH{q', 17
                                                        if not _1856:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4297]) - (10^12 * _3708) / _1856):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4297]) - (10^12 * _3708) / _1856
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number < startBlock:
                                                revert with 'NH{q', 17
                                            if block.number - startBlock < 1:
                                                revert with 'NH{q', 17
                                            if not halvingPeriod:
                                                revert with 'NH{q', 18
                                            if not block.number + -startBlock - 1 / halvingPeriod:
                                                if block.number < u:
                                                    revert with 'NH{q', 17
                                                if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                    revert with 'NH{q', 17
                                                if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                    if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3860 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3876 = mem[_3860]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3993 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4088 = mem[_3993]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4236 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4300 = mem[_4236]
                                                    if _4088 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _4088 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4236]:
                                                        if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4394 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4394] < _3876:
                                                                revert with 'NH{q', 17
                                                            if mem[_4394] - _3876 and 10^12 > -1 / mem[_4394] - _3876:
                                                                revert with 'NH{q', 17
                                                            if not _1856:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4394]) - (10^12 * _3876) / _1856):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4394]) - (10^12 * _3876) / _1856
                                                        else:
                                                            mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4462 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4462] < _3876:
                                                                revert with 'NH{q', 17
                                                            if mem[_4462] - _3876 and 10^12 > -1 / mem[_4462] - _3876:
                                                                revert with 'NH{q', 17
                                                            if not _1856:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4462]) - (10^12 * _3876) / _1856):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4462]) - (10^12 * _3876) / _1856
                                                    else:
                                                        if mem[_4236] < _4088:
                                                            revert with 'NH{q', 17
                                                        if not mem[_4236] - _4088:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4514 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4514] < _3876:
                                                                revert with 'NH{q', 17
                                                            if mem[_4514] - _3876 and 10^12 > -1 / mem[_4514] - _3876:
                                                                revert with 'NH{q', 17
                                                            if not _1856:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4514]) - (10^12 * _3876) / _1856):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4514]) - (10^12 * _3876) / _1856
                                                        else:
                                                            mem[mem[64] + 36] = mem[_4236] - _4088
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _4300 - _4088
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4584 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4584] < _3876:
                                                                revert with 'NH{q', 17
                                                            if mem[_4584] - _3876 and 10^12 > -1 / mem[_4584] - _3876:
                                                                revert with 'NH{q', 17
                                                            if not _1856:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4584]) - (10^12 * _3876) / _1856):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4584]) - (10^12 * _3876) / _1856
                                                    poolInfo[idx].field_512 = block.number
                                            else:
                                                if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                    revert with 'NH{q', 17
                                                if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                    revert with 'NH{q', 18
                                                if block.number < u:
                                                    revert with 'NH{q', 17
                                                if block.number - u and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - u:
                                                    revert with 'NH{q', 17
                                                if t > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                    revert with 'NH{q', 17
                                                if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                    if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3928 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3992 = mem[_3928]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4192 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4266 = mem[_4192]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _4336 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _4348 = mem[_4336]
                                                    if _4266 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _4266 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4336]:
                                                        if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4510 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4510] < _3992:
                                                                revert with 'NH{q', 17
                                                            if mem[_4510] - _3992 and 10^12 > -1 / mem[_4510] - _3992:
                                                                revert with 'NH{q', 17
                                                            if not _1856:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4510]) - (10^12 * _3992) / _1856):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4510]) - (10^12 * _3992) / _1856
                                                        else:
                                                            mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4580 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4580] < _3992:
                                                                revert with 'NH{q', 17
                                                            if mem[_4580] - _3992 and 10^12 > -1 / mem[_4580] - _3992:
                                                                revert with 'NH{q', 17
                                                            if not _1856:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4580]) - (10^12 * _3992) / _1856):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4580]) - (10^12 * _3992) / _1856
                                                    else:
                                                        if mem[_4336] < _4266:
                                                            revert with 'NH{q', 17
                                                        if not mem[_4336] - _4266:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4625 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4625] < _3992:
                                                                revert with 'NH{q', 17
                                                            if mem[_4625] - _3992 and 10^12 > -1 / mem[_4625] - _3992:
                                                                revert with 'NH{q', 17
                                                            if not _1856:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4625]) - (10^12 * _3992) / _1856):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4625]) - (10^12 * _3992) / _1856
                                                        else:
                                                            mem[mem[64] + 36] = mem[_4336] - _4266
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _4348 - _4266
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4656 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4656] < _3992:
                                                                revert with 'NH{q', 17
                                                            if mem[_4656] - _3992 and 10^12 > -1 / mem[_4656] - _3992:
                                                                revert with 'NH{q', 17
                                                            if not _1856:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4656]) - (10^12 * _3992) / _1856):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4656]) - (10^12 * _3992) / _1856
                                                    poolInfo[idx].field_512 = block.number
                                else:
                                    if block.number <= startBlock:
                                        s = poolInfo[idx].field_512 + -startBlock - 1 / halvingPeriod
                                        t = 0
                                        u = poolInfo[idx].field_512
                                        while s < 0:
                                            if s == -1:
                                                revert with 'NH{q', 17
                                            if s + 1 and halvingPeriod > -1 / s + 1:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) > !startBlock:
                                                revert with 'NH{q', 17
                                            if 0 == halvingPeriod:
                                                if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                    revert with 'NH{q', 17
                                                if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                    revert with 'NH{q', 17
                                                if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                s = s + 1
                                                t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                                u = halvingPeriod + (s * halvingPeriod) + startBlock
                                                continue 
                                            if halvingPeriod + (s * halvingPeriod) + startBlock <= startBlock:
                                                if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                    revert with 'NH{q', 17
                                                if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                    revert with 'NH{q', 17
                                                if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                s = s + 1
                                                t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                                u = halvingPeriod + (s * halvingPeriod) + startBlock
                                                continue 
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < startBlock:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) < 1:
                                                revert with 'NH{q', 17
                                            if not halvingPeriod:
                                                revert with 'NH{q', 18
                                            if not halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                                if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                    revert with 'NH{q', 17
                                                if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                    revert with 'NH{q', 17
                                                if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                s = s + 1
                                                t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                                u = halvingPeriod + (s * halvingPeriod) + startBlock
                                                continue 
                                            if halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > 255:
                                                revert with 'NH{q', 17
                                            if not 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                                revert with 'NH{q', 18
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if 0 == halvingPeriod:
                                            if block.number < u:
                                                revert with 'NH{q', 17
                                            if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                revert with 'NH{q', 17
                                            if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3682 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3698 = mem[_3682]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3746 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3762 = mem[_3746]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3810 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3826 = mem[_3810]
                                                if _3762 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _3762 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3810]:
                                                    if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3984 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_3984] < _3698:
                                                            revert with 'NH{q', 17
                                                        if mem[_3984] - _3698 and 10^12 > -1 / mem[_3984] - _3698:
                                                            revert with 'NH{q', 17
                                                        if not _1856:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_3984]) - (10^12 * _3698) / _1856):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_3984]) - (10^12 * _3698) / _1856
                                                    else:
                                                        mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4072 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4072] < _3698:
                                                            revert with 'NH{q', 17
                                                        if mem[_4072] - _3698 and 10^12 > -1 / mem[_4072] - _3698:
                                                            revert with 'NH{q', 17
                                                        if not _1856:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4072]) - (10^12 * _3698) / _1856):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4072]) - (10^12 * _3698) / _1856
                                                else:
                                                    if mem[_3810] < _3762:
                                                        revert with 'NH{q', 17
                                                    if not mem[_3810] - _3762:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4184 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4184] < _3698:
                                                            revert with 'NH{q', 17
                                                        if mem[_4184] - _3698 and 10^12 > -1 / mem[_4184] - _3698:
                                                            revert with 'NH{q', 17
                                                        if not _1856:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4184]) - (10^12 * _3698) / _1856):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4184]) - (10^12 * _3698) / _1856
                                                    else:
                                                        mem[mem[64] + 36] = mem[_3810] - _3762
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _3826 - _3762
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4262 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4262] < _3698:
                                                            revert with 'NH{q', 17
                                                        if mem[_4262] - _3698 and 10^12 > -1 / mem[_4262] - _3698:
                                                            revert with 'NH{q', 17
                                                        if not _1856:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4262]) - (10^12 * _3698) / _1856):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4262]) - (10^12 * _3698) / _1856
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number <= startBlock:
                                                if block.number < u:
                                                    revert with 'NH{q', 17
                                                if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                    revert with 'NH{q', 17
                                                if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                    if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3690 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3706 = mem[_3690]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3754 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3772 = mem[_3754]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3818 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3836 = mem[_3818]
                                                    if _3772 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _3772 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3818]:
                                                        if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4022 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4022] < _3706:
                                                                revert with 'NH{q', 17
                                                            if mem[_4022] - _3706 and 10^12 > -1 / mem[_4022] - _3706:
                                                                revert with 'NH{q', 17
                                                            if not _1856:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4022]) - (10^12 * _3706) / _1856):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4022]) - (10^12 * _3706) / _1856
                                                        else:
                                                            mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4136 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4136] < _3706:
                                                                revert with 'NH{q', 17
                                                            if mem[_4136] - _3706 and 10^12 > -1 / mem[_4136] - _3706:
                                                                revert with 'NH{q', 17
                                                            if not _1856:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4136]) - (10^12 * _3706) / _1856):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4136]) - (10^12 * _3706) / _1856
                                                    else:
                                                        if mem[_3818] < _3772:
                                                            revert with 'NH{q', 17
                                                        if not mem[_3818] - _3772:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4223 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4223] < _3706:
                                                                revert with 'NH{q', 17
                                                            if mem[_4223] - _3706 and 10^12 > -1 / mem[_4223] - _3706:
                                                                revert with 'NH{q', 17
                                                            if not _1856:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4223]) - (10^12 * _3706) / _1856):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4223]) - (10^12 * _3706) / _1856
                                                        else:
                                                            mem[mem[64] + 36] = mem[_3818] - _3772
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _3836 - _3772
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4287 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4287] < _3706:
                                                                revert with 'NH{q', 17
                                                            if mem[_4287] - _3706 and 10^12 > -1 / mem[_4287] - _3706:
                                                                revert with 'NH{q', 17
                                                            if not _1856:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4287]) - (10^12 * _3706) / _1856):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4287]) - (10^12 * _3706) / _1856
                                                    poolInfo[idx].field_512 = block.number
                                            else:
                                                if block.number < startBlock:
                                                    revert with 'NH{q', 17
                                                if block.number - startBlock < 1:
                                                    revert with 'NH{q', 17
                                                if not halvingPeriod:
                                                    revert with 'NH{q', 18
                                                if not block.number + -startBlock - 1 / halvingPeriod:
                                                    if block.number < u:
                                                        revert with 'NH{q', 17
                                                    if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                        revert with 'NH{q', 17
                                                    if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                        revert with 'NH{q', 17
                                                    if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                        if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                            revert with 'NH{q', 17
                                                        if not totalAllocPoint:
                                                            revert with 'NH{q', 18
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3858 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _3870 = mem[_3858]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x18160ddd with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3983 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4070 = mem[_3983]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.maxSupply() with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4226 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4290 = mem[_4226]
                                                        if _4070 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                            revert with 'NH{q', 17
                                                        if _4070 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4226]:
                                                            if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4388 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4388] < _3870:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4388] - _3870 and 10^12 > -1 / mem[_4388] - _3870:
                                                                    revert with 'NH{q', 17
                                                                if not _1856:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4388]) - (10^12 * _3870) / _1856):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4388]) - (10^12 * _3870) / _1856
                                                            else:
                                                                mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4450 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4450] < _3870:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4450] - _3870 and 10^12 > -1 / mem[_4450] - _3870:
                                                                    revert with 'NH{q', 17
                                                                if not _1856:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4450]) - (10^12 * _3870) / _1856):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4450]) - (10^12 * _3870) / _1856
                                                        else:
                                                            if mem[_4226] < _4070:
                                                                revert with 'NH{q', 17
                                                            if not mem[_4226] - _4070:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4500 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4500] < _3870:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4500] - _3870 and 10^12 > -1 / mem[_4500] - _3870:
                                                                    revert with 'NH{q', 17
                                                                if not _1856:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4500]) - (10^12 * _3870) / _1856):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4500]) - (10^12 * _3870) / _1856
                                                            else:
                                                                mem[mem[64] + 36] = mem[_4226] - _4070
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, _4290 - _4070
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4572 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4572] < _3870:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4572] - _3870 and 10^12 > -1 / mem[_4572] - _3870:
                                                                    revert with 'NH{q', 17
                                                                if not _1856:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4572]) - (10^12 * _3870) / _1856):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4572]) - (10^12 * _3870) / _1856
                                                        poolInfo[idx].field_512 = block.number
                                                else:
                                                    if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                        revert with 'NH{q', 17
                                                    if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                        revert with 'NH{q', 18
                                                    if block.number < u:
                                                        revert with 'NH{q', 17
                                                    if block.number - u and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - u:
                                                        revert with 'NH{q', 17
                                                    if t > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                        revert with 'NH{q', 17
                                                    if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                        if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                            revert with 'NH{q', 17
                                                        if not totalAllocPoint:
                                                            revert with 'NH{q', 18
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3914 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _3982 = mem[_3914]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x18160ddd with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4182 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4260 = mem[_4182]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.maxSupply() with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4332 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4346 = mem[_4332]
                                                        if _4260 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                            revert with 'NH{q', 17
                                                        if _4260 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4332]:
                                                            if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4496 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4496] < _3982:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4496] - _3982 and 10^12 > -1 / mem[_4496] - _3982:
                                                                    revert with 'NH{q', 17
                                                                if not _1856:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4496]) - (10^12 * _3982) / _1856):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4496]) - (10^12 * _3982) / _1856
                                                            else:
                                                                mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4568 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4568] < _3982:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4568] - _3982 and 10^12 > -1 / mem[_4568] - _3982:
                                                                    revert with 'NH{q', 17
                                                                if not _1856:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4568]) - (10^12 * _3982) / _1856):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4568]) - (10^12 * _3982) / _1856
                                                        else:
                                                            if mem[_4332] < _4260:
                                                                revert with 'NH{q', 17
                                                            if not mem[_4332] - _4260:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4615 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4615] < _3982:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4615] - _3982 and 10^12 > -1 / mem[_4615] - _3982:
                                                                    revert with 'NH{q', 17
                                                                if not _1856:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4615]) - (10^12 * _3982) / _1856):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4615]) - (10^12 * _3982) / _1856
                                                            else:
                                                                mem[mem[64] + 36] = mem[_4332] - _4260
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, _4346 - _4260
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4652 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4652] < _3982:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4652] - _3982 and 10^12 > -1 / mem[_4652] - _3982:
                                                                    revert with 'NH{q', 17
                                                                if not _1856:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4652]) - (10^12 * _3982) / _1856):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4652]) - (10^12 * _3982) / _1856
                                                        poolInfo[idx].field_512 = block.number
                                    else:
                                        if block.number < startBlock:
                                            revert with 'NH{q', 17
                                        if block.number - startBlock < 1:
                                            revert with 'NH{q', 17
                                        if not halvingPeriod:
                                            revert with 'NH{q', 18
                                        s = poolInfo[idx].field_512 + -startBlock - 1 / halvingPeriod
                                        t = 0
                                        u = poolInfo[idx].field_512
                                        while s < block.number + -startBlock - 1 / halvingPeriod:
                                            if s == -1:
                                                revert with 'NH{q', 17
                                            if s + 1 and halvingPeriod > -1 / s + 1:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) > !startBlock:
                                                revert with 'NH{q', 17
                                            if 0 == halvingPeriod:
                                                if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                    revert with 'NH{q', 17
                                                if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                    revert with 'NH{q', 17
                                                if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                s = s + 1
                                                t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                                u = halvingPeriod + (s * halvingPeriod) + startBlock
                                                continue 
                                            if halvingPeriod + (s * halvingPeriod) + startBlock <= startBlock:
                                                if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                    revert with 'NH{q', 17
                                                if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                    revert with 'NH{q', 17
                                                if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                s = s + 1
                                                t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                                u = halvingPeriod + (s * halvingPeriod) + startBlock
                                                continue 
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < startBlock:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) < 1:
                                                revert with 'NH{q', 17
                                            if not halvingPeriod:
                                                revert with 'NH{q', 18
                                            if not halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                                if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                    revert with 'NH{q', 17
                                                if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                    revert with 'NH{q', 17
                                                if t > !((halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                s = s + 1
                                                t = t + (halvingPeriod * hCTPerBlock) + (s * halvingPeriod * hCTPerBlock) + (startBlock * hCTPerBlock) - (u * hCTPerBlock)
                                                u = halvingPeriod + (s * halvingPeriod) + startBlock
                                                continue 
                                            if halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > 255:
                                                revert with 'NH{q', 17
                                            if not 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod:
                                                revert with 'NH{q', 18
                                            if halvingPeriod + (s * halvingPeriod) + startBlock < u:
                                                revert with 'NH{q', 17
                                            if halvingPeriod + (s * halvingPeriod) + startBlock - u and hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod > -1 / halvingPeriod + (s * halvingPeriod) + startBlock - u:
                                                revert with 'NH{q', 17
                                            if t > !((halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)):
                                                revert with 'NH{q', 17
                                            s = s + 1
                                            t = t + (halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (s * halvingPeriod * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) + (startBlock * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << halvingPeriod + (s * halvingPeriod) - 1 / halvingPeriod)
                                            u = halvingPeriod + (s * halvingPeriod) + startBlock
                                            continue 
                                        if 0 == halvingPeriod:
                                            if block.number < u:
                                                revert with 'NH{q', 17
                                            if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                revert with 'NH{q', 17
                                            if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                revert with 'NH{q', 17
                                            if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                    revert with 'NH{q', 17
                                                if not totalAllocPoint:
                                                    revert with 'NH{q', 18
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3683 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3699 = mem[_3683]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.0x18160ddd with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3747 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3763 = mem[_3747]
                                                require ext_code.size(HCTAddress)
                                                staticcall HCTAddress.maxSupply() with:
                                                        gas gas_remaining wei
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _3811 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _3827 = mem[_3811]
                                                if _3763 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                    revert with 'NH{q', 17
                                                if _3763 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3811]:
                                                    if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3989 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_3989] < _3699:
                                                            revert with 'NH{q', 17
                                                        if mem[_3989] - _3699 and 10^12 > -1 / mem[_3989] - _3699:
                                                            revert with 'NH{q', 17
                                                        if not _1856:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_3989]) - (10^12 * _3699) / _1856):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_3989]) - (10^12 * _3699) / _1856
                                                    else:
                                                        mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4081 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4081] < _3699:
                                                            revert with 'NH{q', 17
                                                        if mem[_4081] - _3699 and 10^12 > -1 / mem[_4081] - _3699:
                                                            revert with 'NH{q', 17
                                                        if not _1856:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4081]) - (10^12 * _3699) / _1856):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4081]) - (10^12 * _3699) / _1856
                                                else:
                                                    if mem[_3811] < _3763:
                                                        revert with 'NH{q', 17
                                                    if not mem[_3811] - _3763:
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4189 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4189] < _3699:
                                                            revert with 'NH{q', 17
                                                        if mem[_4189] - _3699 and 10^12 > -1 / mem[_4189] - _3699:
                                                            revert with 'NH{q', 17
                                                        if not _1856:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4189]) - (10^12 * _3699) / _1856):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4189]) - (10^12 * _3699) / _1856
                                                    else:
                                                        mem[mem[64] + 36] = mem[_3811] - _3763
                                                        require ext_code.size(HCTAddress)
                                                        call HCTAddress.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args this.address, _3827 - _3763
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4265 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        if mem[_4265] < _3699:
                                                            revert with 'NH{q', 17
                                                        if mem[_4265] - _3699 and 10^12 > -1 / mem[_4265] - _3699:
                                                            revert with 'NH{q', 17
                                                        if not _1856:
                                                            revert with 'NH{q', 18
                                                        if poolInfo[idx].field_768 > !((10^12 * mem[_4265]) - (10^12 * _3699) / _1856):
                                                            revert with 'NH{q', 17
                                                        poolInfo[idx].field_768 += (10^12 * mem[_4265]) - (10^12 * _3699) / _1856
                                                poolInfo[idx].field_512 = block.number
                                        else:
                                            if block.number <= startBlock:
                                                if block.number < u:
                                                    revert with 'NH{q', 17
                                                if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                    revert with 'NH{q', 17
                                                if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                    revert with 'NH{q', 17
                                                if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                    if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                        revert with 'NH{q', 17
                                                    if not totalAllocPoint:
                                                        revert with 'NH{q', 18
                                                    mem[mem[64] + 4] = this.address
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3691 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3707 = mem[_3691]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.0x18160ddd with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3755 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3775 = mem[_3755]
                                                    require ext_code.size(HCTAddress)
                                                    staticcall HCTAddress.maxSupply() with:
                                                            gas gas_remaining wei
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _3819 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    _3839 = mem[_3819]
                                                    if _3775 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                        revert with 'NH{q', 17
                                                    if _3775 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_3819]:
                                                        if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4027 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4027] < _3707:
                                                                revert with 'NH{q', 17
                                                            if mem[_4027] - _3707 and 10^12 > -1 / mem[_4027] - _3707:
                                                                revert with 'NH{q', 17
                                                            if not _1856:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4027]) - (10^12 * _3707) / _1856):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4027]) - (10^12 * _3707) / _1856
                                                        else:
                                                            mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4142 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4142] < _3707:
                                                                revert with 'NH{q', 17
                                                            if mem[_4142] - _3707 and 10^12 > -1 / mem[_4142] - _3707:
                                                                revert with 'NH{q', 17
                                                            if not _1856:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4142]) - (10^12 * _3707) / _1856):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4142]) - (10^12 * _3707) / _1856
                                                    else:
                                                        if mem[_3819] < _3775:
                                                            revert with 'NH{q', 17
                                                        if not mem[_3819] - _3775:
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4228 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4228] < _3707:
                                                                revert with 'NH{q', 17
                                                            if mem[_4228] - _3707 and 10^12 > -1 / mem[_4228] - _3707:
                                                                revert with 'NH{q', 17
                                                            if not _1856:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4228]) - (10^12 * _3707) / _1856):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4228]) - (10^12 * _3707) / _1856
                                                        else:
                                                            mem[mem[64] + 36] = mem[_3819] - _3775
                                                            require ext_code.size(HCTAddress)
                                                            call HCTAddress.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args this.address, _3839 - _3775
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[mem[64] + 4] = this.address
                                                            require ext_code.size(HCTAddress)
                                                            staticcall HCTAddress.0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _4292 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            if mem[_4292] < _3707:
                                                                revert with 'NH{q', 17
                                                            if mem[_4292] - _3707 and 10^12 > -1 / mem[_4292] - _3707:
                                                                revert with 'NH{q', 17
                                                            if not _1856:
                                                                revert with 'NH{q', 18
                                                            if poolInfo[idx].field_768 > !((10^12 * mem[_4292]) - (10^12 * _3707) / _1856):
                                                                revert with 'NH{q', 17
                                                            poolInfo[idx].field_768 += (10^12 * mem[_4292]) - (10^12 * _3707) / _1856
                                                    poolInfo[idx].field_512 = block.number
                                            else:
                                                if block.number < startBlock:
                                                    revert with 'NH{q', 17
                                                if block.number - startBlock < 1:
                                                    revert with 'NH{q', 17
                                                if not halvingPeriod:
                                                    revert with 'NH{q', 18
                                                if not block.number + -startBlock - 1 / halvingPeriod:
                                                    if block.number < u:
                                                        revert with 'NH{q', 17
                                                    if block.number - u and hCTPerBlock > -1 / block.number - u:
                                                        revert with 'NH{q', 17
                                                    if t > !((block.number * hCTPerBlock) - (u * hCTPerBlock)):
                                                        revert with 'NH{q', 17
                                                    if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) > 0:
                                                        if t + (block.number * hCTPerBlock) - (u * hCTPerBlock) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock) - (u * hCTPerBlock):
                                                            revert with 'NH{q', 17
                                                        if not totalAllocPoint:
                                                            revert with 'NH{q', 18
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3859 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _3873 = mem[_3859]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x18160ddd with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3988 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4079 = mem[_3988]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.maxSupply() with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4231 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4295 = mem[_4231]
                                                        if _4079 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint):
                                                            revert with 'NH{q', 17
                                                        if _4079 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4231]:
                                                            if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4391 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4391] < _3873:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4391] - _3873 and 10^12 > -1 / mem[_4391] - _3873:
                                                                    revert with 'NH{q', 17
                                                                if not _1856:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4391]) - (10^12 * _3873) / _1856):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4391]) - (10^12 * _3873) / _1856
                                                            else:
                                                                mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock * poolInfo[idx].field_256) - (u * hCTPerBlock * poolInfo[idx].field_256) / totalAllocPoint
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4456 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4456] < _3873:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4456] - _3873 and 10^12 > -1 / mem[_4456] - _3873:
                                                                    revert with 'NH{q', 17
                                                                if not _1856:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4456]) - (10^12 * _3873) / _1856):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4456]) - (10^12 * _3873) / _1856
                                                        else:
                                                            if mem[_4231] < _4079:
                                                                revert with 'NH{q', 17
                                                            if not mem[_4231] - _4079:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4507 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4507] < _3873:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4507] - _3873 and 10^12 > -1 / mem[_4507] - _3873:
                                                                    revert with 'NH{q', 17
                                                                if not _1856:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4507]) - (10^12 * _3873) / _1856):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4507]) - (10^12 * _3873) / _1856
                                                            else:
                                                                mem[mem[64] + 36] = mem[_4231] - _4079
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, _4295 - _4079
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4578 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4578] < _3873:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4578] - _3873 and 10^12 > -1 / mem[_4578] - _3873:
                                                                    revert with 'NH{q', 17
                                                                if not _1856:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4578]) - (10^12 * _3873) / _1856):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4578]) - (10^12 * _3873) / _1856
                                                        poolInfo[idx].field_512 = block.number
                                                else:
                                                    if block.number + -startBlock - 1 / halvingPeriod > 255:
                                                        revert with 'NH{q', 17
                                                    if not 1 << block.number + -startBlock - 1 / halvingPeriod:
                                                        revert with 'NH{q', 18
                                                    if block.number < u:
                                                        revert with 'NH{q', 17
                                                    if block.number - u and hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod > -1 / block.number - u:
                                                        revert with 'NH{q', 17
                                                    if t > !((block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod)):
                                                        revert with 'NH{q', 17
                                                    if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) > 0:
                                                        if t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) and poolInfo[idx].field_256 > -1 / t + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod):
                                                            revert with 'NH{q', 17
                                                        if not totalAllocPoint:
                                                            revert with 'NH{q', 18
                                                        mem[mem[64] + 4] = this.address
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x70a08231 with:
                                                                gas gas_remaining wei
                                                               args this.address
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _3921 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _3987 = mem[_3921]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.0x18160ddd with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4187 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4263 = mem[_4187]
                                                        require ext_code.size(HCTAddress)
                                                        staticcall HCTAddress.maxSupply() with:
                                                                gas gas_remaining wei
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _4334 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        _4347 = mem[_4334]
                                                        if _4263 > !((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint):
                                                            revert with 'NH{q', 17
                                                        if _4263 + ((t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint) <= mem[_4334]:
                                                            if not (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4503 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4503] < _3987:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4503] - _3987 and 10^12 > -1 / mem[_4503] - _3987:
                                                                    revert with 'NH{q', 17
                                                                if not _1856:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4503]) - (10^12 * _3987) / _1856):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4503]) - (10^12 * _3987) / _1856
                                                            else:
                                                                mem[mem[64] + 36] = (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, (t * poolInfo[idx].field_256) + (block.number * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) - (u * hCTPerBlock / 1 << block.number + -startBlock - 1 / halvingPeriod * poolInfo[idx].field_256) / totalAllocPoint
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4574 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4574] < _3987:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4574] - _3987 and 10^12 > -1 / mem[_4574] - _3987:
                                                                    revert with 'NH{q', 17
                                                                if not _1856:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4574]) - (10^12 * _3987) / _1856):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4574]) - (10^12 * _3987) / _1856
                                                        else:
                                                            if mem[_4334] < _4263:
                                                                revert with 'NH{q', 17
                                                            if not mem[_4334] - _4263:
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4620 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4620] < _3987:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4620] - _3987 and 10^12 > -1 / mem[_4620] - _3987:
                                                                    revert with 'NH{q', 17
                                                                if not _1856:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4620]) - (10^12 * _3987) / _1856):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4620]) - (10^12 * _3987) / _1856
                                                            else:
                                                                mem[mem[64] + 36] = mem[_4334] - _4263
                                                                require ext_code.size(HCTAddress)
                                                                call HCTAddress.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args this.address, _4347 - _4263
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[mem[64] + 4] = this.address
                                                                require ext_code.size(HCTAddress)
                                                                staticcall HCTAddress.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _4654 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                if mem[_4654] < _3987:
                                                                    revert with 'NH{q', 17
                                                                if mem[_4654] - _3987 and 10^12 > -1 / mem[_4654] - _3987:
                                                                    revert with 'NH{q', 17
                                                                if not _1856:
                                                                    revert with 'NH{q', 18
                                                                if poolInfo[idx].field_768 > !((10^12 * mem[_4654]) - (10^12 * _3987) / _1856):
                                                                    revert with 'NH{q', 17
                                                                poolInfo[idx].field_768 += (10^12 * mem[_4654]) - (10^12 * _3987) / _1856
                                                        poolInfo[idx].field_512 = block.number
            if idx == -1:
                revert with 'NH{q', 17
            idx = idx + 1
            continue 
    if totalAllocPoint > !arg1:
        revert with 'NH{q', 17
    totalAllocPoint += arg1
    poolInfo.length++
    stor36B6[stor5.length] = arg2
    stor36B6[stor5.length] = arg1
    if block.number > startBlock:
        stor36B6[stor5.length] = block.number
    else:
        stor36B6[stor5.length] = startBlock
    stor36B6[stor5.length] = 0
    stor36B6[stor5.length] = 0
    stor36B6[stor5.length] = 0
    if poolInfo.length < 1:
        revert with 'NH{q', 17
    lpOfPid[address(arg2)] = poolInfo.length - 1
}



}
