contract main {




// =====================  Runtime code  =====================


#
#  - sub_5faf43f3(?)
#  - sub_d85eb6b0(?)
#  - sub_f0c462b8(?)
#  - _fallback()
#
function withdraw(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    require ext_code.size(arg1)
    staticcall arg1.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(arg1)
    call arg1.0xa9059cbb with:
         gas gas_remaining wei
        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function joeCall(address arg1, uint256 arg2, uint256 arg3, bytes arg4) {
    require calldata.size - 4 >= 128
    require arg1 == arg1
    require arg4 <= test266151307()
    require arg4 + 35 < calldata.size
    require arg4.length <= test266151307()
    require arg4 + arg4.length + 36 <= calldata.size
    require arg4.length >= 96
    require cd[(arg4 + 68)] == address(cd[(arg4 + 68)])
    require cd[(arg4 + 100)] == address(cd[(arg4 + 100)])
    require ext_code.size(msg.sender)
    staticcall msg.sender.token0() with:
            gas gas_remaining wei
    mem[96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(msg.sender)
    staticcall msg.sender.token1() with:
            gas gas_remaining wei
    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    mem[(2 * ceil32(return_data.size)) + 100] = address(ext_call.return_data[0])
    mem[(2 * ceil32(return_data.size)) + 132] = address(ext_call.return_data[0])
    require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
    staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
            gas gas_remaining wei
           args address(ext_call.return_data[0]), address(ext_call.return_data[0])
    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    if ext_call.return_data[12 len 20] != msg.sender:
        revert with 0, 'Sender wrong'
    mem[(4 * ceil32(return_data.size)) + 100] = address(cd[(arg4 + 68)])
    if not arg2:
        mem[(4 * ceil32(return_data.size)) + 132] = arg3
        require ext_code.size(address(ext_call.return_data[0]))
        call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
             gas gas_remaining wei
            args address(cd[(arg4 + 68)]), arg3
        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == bool(ext_call.return_data[0])
        require ext_code.size(address(cd[(arg4 + 68)]))
        call address(cd[(arg4 + 68)]).liquidateVault(uint256 arg1) with:
             gas gas_remaining wei
            args cd[(arg4 + 36)]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require ext_code.size(address(cd[(arg4 + 68)]))
        call address(cd[(arg4 + 68)]).getPaid() with:
             gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require ext_code.size(address(cd[(arg4 + 100)]))
        call address(cd[(arg4 + 100)]).withdrawAll() with:
             gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        mem[(6 * ceil32(return_data.size)) + 100] = this.address
        require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
        staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not address(ext_call.return_data[0]):
            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
        if not address(ext_call.return_data[0]):
            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
        mem[(7 * ceil32(return_data.size)) + 128] = address(ext_call.return_data[0])
        mem[(7 * ceil32(return_data.size)) + 148] = address(ext_call.return_data[0])
        mem[(7 * ceil32(return_data.size)) + 96] = 40
        mem[(7 * ceil32(return_data.size)) + 200] = 0xff00000000000000000000000000000000000000000000000000000000000000
        mem[(7 * ceil32(return_data.size)) + 201] = 0x9ad6c38be94206ca50bb0d90783181662f0cfa10000000000000000000000000
        mem[(7 * ceil32(return_data.size)) + 221] = sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0]))
        mem[(7 * ceil32(return_data.size)) + 253] = 0xbbca9af0511ad1a1da383135cf3a8d2ac620e549ef9f6ae3a4c33c2fed0af91
        mem[(7 * ceil32(return_data.size)) + 168] = 85
        if not address(ext_call.return_data[0]):
            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
        mem[(7 * ceil32(return_data.size)) + 317] = address(ext_call.return_data[0])
        mem[(7 * ceil32(return_data.size)) + 337] = address(ext_call.return_data[0])
        mem[(7 * ceil32(return_data.size)) + 285] = 40
        mem[(7 * ceil32(return_data.size)) + 389] = 0xff00000000000000000000000000000000000000000000000000000000000000
        mem[(7 * ceil32(return_data.size)) + 390] = 0x9ad6c38be94206ca50bb0d90783181662f0cfa10000000000000000000000000
        mem[(7 * ceil32(return_data.size)) + 410] = sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0]))
        mem[(7 * ceil32(return_data.size)) + 442] = 0xbbca9af0511ad1a1da383135cf3a8d2ac620e549ef9f6ae3a4c33c2fed0af91
        mem[(7 * ceil32(return_data.size)) + 357] = 85
        require ext_code.size(address(sha3(0, 11157320132538271434, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0xbbca9af0511ad1a1da383135cf3a8d2ac620e549ef9f6ae3a4c33c2fed0af91)))
        staticcall address(sha3(0, 11157320132538271434, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0xbbca9af0511ad1a1da383135cf3a8d2ac620e549ef9f6ae3a4c33c2fed0af91)).getReserves() with:
                gas gas_remaining wei
        mem[(7 * ceil32(return_data.size)) + 474 len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
        if arg3 <= 0:
            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[(8 * ceil32(return_data.size)) + 478] = 32
            mem[(8 * ceil32(return_data.size)) + 510] = 45
            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
            mem[(8 * ceil32(return_data.size)) + 574] = 'OUTPUT_AMOUNT'
            revert with memory
              from (8 * ceil32(return_data.size)) + 474
               len ceil32(return_data.size) + 132
        if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
            if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg3 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5189 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5285 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                require return_data.size >= _5189 + (32 * _5285) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5285] = mem[(10 * ceil32(return_data.size)) + _5189 + 602 len 32 * _5285]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7013 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7013] == bool(mem[_7013])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7397 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7493 = mem[_7397]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7493
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7493
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7781 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7781] == bool(mem[_7781])
                        else:
                            if ext_call.return_data[50 len 14] and arg3 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg3:
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5188 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5284 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _5188 + (32 * _5284) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5284] = mem[(10 * ceil32(return_data.size)) + _5188 + 602 len 32 * _5284]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7012 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7012] == bool(mem[_7012])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7396 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7492 = mem[_7396]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7492
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7492
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7780 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7780] == bool(mem[_7780])
                            else:
                                if ext_call.return_data[50 len 14] * arg3 and 1000 > -1 / ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5187 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5283 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _5187 + (32 * _5283) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5283] = mem[(10 * ceil32(return_data.size)) + _5187 + 602 len 32 * _5283]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7011 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7011] == bool(mem[_7011])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7395 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7491 = mem[_7395]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7491
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7491
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7779 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7779] == bool(mem[_7779])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg3 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5192 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5288 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                require return_data.size >= _5192 + (32 * _5288) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5288] = mem[(10 * ceil32(return_data.size)) + _5192 + 602 len 32 * _5288]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7016 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7016] == bool(mem[_7016])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7400 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7496 = mem[_7400]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7496
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7496
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7784 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7784] == bool(mem[_7784])
                        else:
                            if ext_call.return_data[18 len 14] and arg3 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg3:
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5191 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5287 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _5191 + (32 * _5287) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5287] = mem[(10 * ceil32(return_data.size)) + _5191 + 602 len 32 * _5287]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7015 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7015] == bool(mem[_7015])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7399 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7495 = mem[_7399]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7495
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7495
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7783 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7783] == bool(mem[_7783])
                            else:
                                if ext_call.return_data[18 len 14] * arg3 and 1000 > -1 / ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5190 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5286 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _5190 + (32 * _5286) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5286] = mem[(10 * ceil32(return_data.size)) + _5190 + 602 len 32 * _5286]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7014 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7014] == bool(mem[_7014])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7398 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7494 = mem[_7398]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7494
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7494
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7782 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7782] == bool(mem[_7782])
                else:
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg3 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5195 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5291 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                require return_data.size >= _5195 + (32 * _5291) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5291] = mem[(10 * ceil32(return_data.size)) + _5195 + 602 len 32 * _5291]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7019 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7019] == bool(mem[_7019])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7403 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7499 = mem[_7403]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7499
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7499
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7787 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7787] == bool(mem[_7787])
                        else:
                            if ext_call.return_data[50 len 14] and arg3 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg3:
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5194 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5290 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _5194 + (32 * _5290) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5290] = mem[(10 * ceil32(return_data.size)) + _5194 + 602 len 32 * _5290]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7018 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7018] == bool(mem[_7018])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7402 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7498 = mem[_7402]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7498
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7498
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7786 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7786] == bool(mem[_7786])
                            else:
                                if ext_call.return_data[50 len 14] * arg3 and 1000 > -1 / ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5193 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5289 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _5193 + (32 * _5289) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5289] = mem[(10 * ceil32(return_data.size)) + _5193 + 602 len 32 * _5289]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7017 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7017] == bool(mem[_7017])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7401 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7497 = mem[_7401]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7497
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7497
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7785 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7785] == bool(mem[_7785])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg3 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5198 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5294 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                require return_data.size >= _5198 + (32 * _5294) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5294] = mem[(10 * ceil32(return_data.size)) + _5198 + 602 len 32 * _5294]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7022 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7022] == bool(mem[_7022])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7406 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7502 = mem[_7406]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7502
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7502
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7790 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7790] == bool(mem[_7790])
                        else:
                            if ext_call.return_data[18 len 14] and arg3 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg3:
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5197 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5293 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _5197 + (32 * _5293) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5293] = mem[(10 * ceil32(return_data.size)) + _5197 + 602 len 32 * _5293]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7021 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7021] == bool(mem[_7021])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7405 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7501 = mem[_7405]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7501
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7501
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7789 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7789] == bool(mem[_7789])
                            else:
                                if ext_call.return_data[18 len 14] * arg3 and 1000 > -1 / ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5196 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5292 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _5196 + (32 * _5292) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5292] = mem[(10 * ceil32(return_data.size)) + _5196 + 602 len 32 * _5292]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7020 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7020] == bool(mem[_7020])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7404 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7500 = mem[_7404]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7500
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7500
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7788 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7788] == bool(mem[_7788])
            else:
                if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg3 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5201 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5297 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                require return_data.size >= _5201 + (32 * _5297) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5297] = mem[(10 * ceil32(return_data.size)) + _5201 + 602 len 32 * _5297]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7025 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7025] == bool(mem[_7025])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7409 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7505 = mem[_7409]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7505
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7505
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7793 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7793] == bool(mem[_7793])
                        else:
                            if ext_call.return_data[50 len 14] and arg3 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg3:
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5200 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5296 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _5200 + (32 * _5296) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5296] = mem[(10 * ceil32(return_data.size)) + _5200 + 602 len 32 * _5296]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7024 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7024] == bool(mem[_7024])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7408 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7504 = mem[_7408]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7504
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7504
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7792 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7792] == bool(mem[_7792])
                            else:
                                if ext_call.return_data[50 len 14] * arg3 and 1000 > -1 / ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5199 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5295 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _5199 + (32 * _5295) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5295] = mem[(10 * ceil32(return_data.size)) + _5199 + 602 len 32 * _5295]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7023 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7023] == bool(mem[_7023])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7407 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7503 = mem[_7407]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7503
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7503
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7791 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7791] == bool(mem[_7791])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg3 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5204 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5300 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                require return_data.size >= _5204 + (32 * _5300) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5300] = mem[(10 * ceil32(return_data.size)) + _5204 + 602 len 32 * _5300]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7028 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7028] == bool(mem[_7028])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7412 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7508 = mem[_7412]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7508
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7508
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7796 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7796] == bool(mem[_7796])
                        else:
                            if ext_call.return_data[18 len 14] and arg3 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg3:
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5203 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5299 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _5203 + (32 * _5299) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5299] = mem[(10 * ceil32(return_data.size)) + _5203 + 602 len 32 * _5299]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7027 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7027] == bool(mem[_7027])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7411 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7507 = mem[_7411]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7507
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7507
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7795 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7795] == bool(mem[_7795])
                            else:
                                if ext_call.return_data[18 len 14] * arg3 and 1000 > -1 / ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5202 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5298 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _5202 + (32 * _5298) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5298] = mem[(10 * ceil32(return_data.size)) + _5202 + 602 len 32 * _5298]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7026 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7026] == bool(mem[_7026])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7410 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7506 = mem[_7410]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7506
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7506
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7794 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7794] == bool(mem[_7794])
                else:
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg3 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5207 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5303 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                require return_data.size >= _5207 + (32 * _5303) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5303] = mem[(10 * ceil32(return_data.size)) + _5207 + 602 len 32 * _5303]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7031 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7031] == bool(mem[_7031])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7415 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7511 = mem[_7415]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7511
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7511
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7799 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7799] == bool(mem[_7799])
                        else:
                            if ext_call.return_data[50 len 14] and arg3 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg3:
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5206 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5302 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _5206 + (32 * _5302) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5302] = mem[(10 * ceil32(return_data.size)) + _5206 + 602 len 32 * _5302]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7030 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7030] == bool(mem[_7030])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7414 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7510 = mem[_7414]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7510
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7510
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7798 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7798] == bool(mem[_7798])
                            else:
                                if ext_call.return_data[50 len 14] * arg3 and 1000 > -1 / ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5205 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5301 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _5205 + (32 * _5301) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5301] = mem[(10 * ceil32(return_data.size)) + _5205 + 602 len 32 * _5301]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7029 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7029] == bool(mem[_7029])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7413 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7509 = mem[_7413]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7509
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7509
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7797 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7797] == bool(mem[_7797])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg3 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5210 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5306 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                require return_data.size >= _5210 + (32 * _5306) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5306] = mem[(10 * ceil32(return_data.size)) + _5210 + 602 len 32 * _5306]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7034 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7034] == bool(mem[_7034])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7418 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7514 = mem[_7418]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7514
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7514
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7802 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7802] == bool(mem[_7802])
                        else:
                            if ext_call.return_data[18 len 14] and arg3 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg3:
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5209 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5305 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _5209 + (32 * _5305) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5305] = mem[(10 * ceil32(return_data.size)) + _5209 + 602 len 32 * _5305]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7033 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7033] == bool(mem[_7033])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7417 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7513 = mem[_7417]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7513
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7513
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7801 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7801] == bool(mem[_7801])
                            else:
                                if ext_call.return_data[18 len 14] * arg3 and 1000 > -1 / ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5208 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5304 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _5208 + (32 * _5304) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5304] = mem[(10 * ceil32(return_data.size)) + _5208 + 602 len 32 * _5304]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7032 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7032] == bool(mem[_7032])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7416 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7512 = mem[_7416]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7512
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7512
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7800 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7800] == bool(mem[_7800])
        else:
            if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg3 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5213 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5309 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                require return_data.size >= _5213 + (32 * _5309) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5309] = mem[(10 * ceil32(return_data.size)) + _5213 + 602 len 32 * _5309]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7037 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7037] == bool(mem[_7037])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7421 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7517 = mem[_7421]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7517
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7517
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7805 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7805] == bool(mem[_7805])
                        else:
                            if ext_call.return_data[50 len 14] and arg3 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg3:
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5212 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5308 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _5212 + (32 * _5308) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5308] = mem[(10 * ceil32(return_data.size)) + _5212 + 602 len 32 * _5308]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7036 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7036] == bool(mem[_7036])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7420 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7516 = mem[_7420]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7516
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7516
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7804 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7804] == bool(mem[_7804])
                            else:
                                if ext_call.return_data[50 len 14] * arg3 and 1000 > -1 / ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5211 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5307 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _5211 + (32 * _5307) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5307] = mem[(10 * ceil32(return_data.size)) + _5211 + 602 len 32 * _5307]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7035 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7035] == bool(mem[_7035])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7419 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7515 = mem[_7419]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7515
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7515
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7803 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7803] == bool(mem[_7803])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg3 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5216 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5312 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                require return_data.size >= _5216 + (32 * _5312) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5312] = mem[(10 * ceil32(return_data.size)) + _5216 + 602 len 32 * _5312]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7040 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7040] == bool(mem[_7040])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7424 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7520 = mem[_7424]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7520
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7520
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7808 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7808] == bool(mem[_7808])
                        else:
                            if ext_call.return_data[18 len 14] and arg3 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg3:
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5215 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5311 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _5215 + (32 * _5311) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5311] = mem[(10 * ceil32(return_data.size)) + _5215 + 602 len 32 * _5311]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7039 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7039] == bool(mem[_7039])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7423 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7519 = mem[_7423]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7519
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7519
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7807 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7807] == bool(mem[_7807])
                            else:
                                if ext_call.return_data[18 len 14] * arg3 and 1000 > -1 / ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5214 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5310 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _5214 + (32 * _5310) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5310] = mem[(10 * ceil32(return_data.size)) + _5214 + 602 len 32 * _5310]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7038 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7038] == bool(mem[_7038])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7422 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7518 = mem[_7422]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7518
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7518
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7806 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7806] == bool(mem[_7806])
                else:
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg3 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5219 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5315 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                require return_data.size >= _5219 + (32 * _5315) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5315] = mem[(10 * ceil32(return_data.size)) + _5219 + 602 len 32 * _5315]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7043 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7043] == bool(mem[_7043])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7427 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7523 = mem[_7427]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7523
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7523
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7811 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7811] == bool(mem[_7811])
                        else:
                            if ext_call.return_data[50 len 14] and arg3 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg3:
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5218 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5314 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _5218 + (32 * _5314) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5314] = mem[(10 * ceil32(return_data.size)) + _5218 + 602 len 32 * _5314]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7042 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7042] == bool(mem[_7042])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7426 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7522 = mem[_7426]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7522
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7522
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7810 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7810] == bool(mem[_7810])
                            else:
                                if ext_call.return_data[50 len 14] * arg3 and 1000 > -1 / ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5217 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5313 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _5217 + (32 * _5313) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5313] = mem[(10 * ceil32(return_data.size)) + _5217 + 602 len 32 * _5313]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7041 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7041] == bool(mem[_7041])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7425 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7521 = mem[_7425]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7521
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7521
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7809 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7809] == bool(mem[_7809])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg3 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5222 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5318 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                require return_data.size >= _5222 + (32 * _5318) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5318] = mem[(10 * ceil32(return_data.size)) + _5222 + 602 len 32 * _5318]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7046 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7046] == bool(mem[_7046])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7430 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7526 = mem[_7430]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7526
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7526
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7814 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7814] == bool(mem[_7814])
                        else:
                            if ext_call.return_data[18 len 14] and arg3 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg3:
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5221 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5317 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _5221 + (32 * _5317) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5317] = mem[(10 * ceil32(return_data.size)) + _5221 + 602 len 32 * _5317]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7045 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7045] == bool(mem[_7045])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7429 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7525 = mem[_7429]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7525
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7525
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7813 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7813] == bool(mem[_7813])
                            else:
                                if ext_call.return_data[18 len 14] * arg3 and 1000 > -1 / ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5220 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5316 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _5220 + (32 * _5316) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5316] = mem[(10 * ceil32(return_data.size)) + _5220 + 602 len 32 * _5316]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7044 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7044] == bool(mem[_7044])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7428 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7524 = mem[_7428]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7524
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7524
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7812 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7812] == bool(mem[_7812])
            else:
                if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg3 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5225 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5321 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                require return_data.size >= _5225 + (32 * _5321) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5321] = mem[(10 * ceil32(return_data.size)) + _5225 + 602 len 32 * _5321]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7049 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7049] == bool(mem[_7049])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7433 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7529 = mem[_7433]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7529
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7529
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7817 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7817] == bool(mem[_7817])
                        else:
                            if ext_call.return_data[50 len 14] and arg3 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg3:
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5224 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5320 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _5224 + (32 * _5320) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5320] = mem[(10 * ceil32(return_data.size)) + _5224 + 602 len 32 * _5320]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7048 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7048] == bool(mem[_7048])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7432 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7528 = mem[_7432]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7528
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7528
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7816 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7816] == bool(mem[_7816])
                            else:
                                if ext_call.return_data[50 len 14] * arg3 and 1000 > -1 / ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5223 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5319 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _5223 + (32 * _5319) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5319] = mem[(10 * ceil32(return_data.size)) + _5223 + 602 len 32 * _5319]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7047 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7047] == bool(mem[_7047])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7431 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7527 = mem[_7431]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7527
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7527
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7815 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7815] == bool(mem[_7815])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg3 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5228 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5324 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                require return_data.size >= _5228 + (32 * _5324) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5324] = mem[(10 * ceil32(return_data.size)) + _5228 + 602 len 32 * _5324]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7052 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7052] == bool(mem[_7052])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7436 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7532 = mem[_7436]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7532
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7532
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7820 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7820] == bool(mem[_7820])
                        else:
                            if ext_call.return_data[18 len 14] and arg3 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg3:
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5227 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5323 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _5227 + (32 * _5323) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5323] = mem[(10 * ceil32(return_data.size)) + _5227 + 602 len 32 * _5323]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7051 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7051] == bool(mem[_7051])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7435 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7531 = mem[_7435]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7531
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7531
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7819 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7819] == bool(mem[_7819])
                            else:
                                if ext_call.return_data[18 len 14] * arg3 and 1000 > -1 / ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5226 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5322 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _5226 + (32 * _5322) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5322] = mem[(10 * ceil32(return_data.size)) + _5226 + 602 len 32 * _5322]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7050 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7050] == bool(mem[_7050])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7434 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7530 = mem[_7434]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7530
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7530
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7818 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7818] == bool(mem[_7818])
                else:
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg3 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5231 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5327 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                require return_data.size >= _5231 + (32 * _5327) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5327] = mem[(10 * ceil32(return_data.size)) + _5231 + 602 len 32 * _5327]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7055 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7055] == bool(mem[_7055])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7439 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7535 = mem[_7439]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7535
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7535
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7823 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7823] == bool(mem[_7823])
                        else:
                            if ext_call.return_data[50 len 14] and arg3 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg3:
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5230 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5326 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _5230 + (32 * _5326) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5326] = mem[(10 * ceil32(return_data.size)) + _5230 + 602 len 32 * _5326]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7054 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7054] == bool(mem[_7054])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7438 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7534 = mem[_7438]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7534
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7534
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7822 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7822] == bool(mem[_7822])
                            else:
                                if ext_call.return_data[50 len 14] * arg3 and 1000 > -1 / ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / ext_call.return_data[50 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg3 and 997 > -1 / ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg3) / ext_call.return_data[18 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg3 / (997 * ext_call.return_data[18 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5229 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5325 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _5229 + (32 * _5325) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5325] = mem[(10 * ceil32(return_data.size)) + _5229 + 602 len 32 * _5325]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7053 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7053] == bool(mem[_7053])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7437 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7533 = mem[_7437]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7533
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7533
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7821 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7821] == bool(mem[_7821])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg3 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg3:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5234 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5330 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                require return_data.size >= _5234 + (32 * _5330) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5330] = mem[(10 * ceil32(return_data.size)) + _5234 + 602 len 32 * _5330]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7058 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7058] == bool(mem[_7058])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7442 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7538 = mem[_7442]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7538
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7538
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7826 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7826] == bool(mem[_7826])
                        else:
                            if ext_call.return_data[18 len 14] and arg3 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] != arg3:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg3:
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5233 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5329 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _5233 + (32 * _5329) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5329] = mem[(10 * ceil32(return_data.size)) + _5233 + 602 len 32 * _5329]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7057 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7057] == bool(mem[_7057])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7441 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7537 = mem[_7441]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7537
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7537
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7825 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7825] == bool(mem[_7825])
                            else:
                                if ext_call.return_data[18 len 14] * arg3 and 1000 > -1 / ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg3:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / ext_call.return_data[18 len 14] * arg3 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg3 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg3 and 997 > -1 / ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg3:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg3) / ext_call.return_data[50 len 14] - arg3 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg3 / (997 * ext_call.return_data[50 len 14]) - (997 * arg3):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5232 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5328 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1) >> 32 + 570]
                                    require return_data.size >= _5232 + (32 * _5328) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5328] = mem[(10 * ceil32(return_data.size)) + _5232 + 602 len 32 * _5328]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg3 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg3)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7056 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7056] == bool(mem[_7056])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7440 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7536 = mem[_7440]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7536
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7536
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7824 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7824] == bool(mem[_7824])
    else:
        mem[(4 * ceil32(return_data.size)) + 132] = arg2
        require ext_code.size(address(ext_call.return_data[0]))
        call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
             gas gas_remaining wei
            args address(cd[(arg4 + 68)]), arg2
        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == bool(ext_call.return_data[0])
        require ext_code.size(address(cd[(arg4 + 68)]))
        call address(cd[(arg4 + 68)]).liquidateVault(uint256 arg1) with:
             gas gas_remaining wei
            args cd[(arg4 + 36)]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require ext_code.size(address(cd[(arg4 + 68)]))
        call address(cd[(arg4 + 68)]).getPaid() with:
             gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require ext_code.size(address(cd[(arg4 + 100)]))
        call address(cd[(arg4 + 100)]).withdrawAll() with:
             gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        mem[(6 * ceil32(return_data.size)) + 100] = this.address
        require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
        staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not address(ext_call.return_data[0]):
            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
        if not address(ext_call.return_data[0]):
            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
        mem[(7 * ceil32(return_data.size)) + 128] = address(ext_call.return_data[0])
        mem[(7 * ceil32(return_data.size)) + 148] = address(ext_call.return_data[0])
        mem[(7 * ceil32(return_data.size)) + 96] = 40
        mem[(7 * ceil32(return_data.size)) + 200] = 0xff00000000000000000000000000000000000000000000000000000000000000
        mem[(7 * ceil32(return_data.size)) + 201] = 0x9ad6c38be94206ca50bb0d90783181662f0cfa10000000000000000000000000
        mem[(7 * ceil32(return_data.size)) + 221] = sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0]))
        mem[(7 * ceil32(return_data.size)) + 253] = 0xbbca9af0511ad1a1da383135cf3a8d2ac620e549ef9f6ae3a4c33c2fed0af91
        mem[(7 * ceil32(return_data.size)) + 168] = 85
        if not address(ext_call.return_data[0]):
            revert with 0, 'PancakeLibrary: ZERO_ADDRESS'
        mem[(7 * ceil32(return_data.size)) + 317] = address(ext_call.return_data[0])
        mem[(7 * ceil32(return_data.size)) + 337] = address(ext_call.return_data[0])
        mem[(7 * ceil32(return_data.size)) + 285] = 40
        mem[(7 * ceil32(return_data.size)) + 389] = 0xff00000000000000000000000000000000000000000000000000000000000000
        mem[(7 * ceil32(return_data.size)) + 390] = 0x9ad6c38be94206ca50bb0d90783181662f0cfa10000000000000000000000000
        mem[(7 * ceil32(return_data.size)) + 410] = sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0]))
        mem[(7 * ceil32(return_data.size)) + 442] = 0xbbca9af0511ad1a1da383135cf3a8d2ac620e549ef9f6ae3a4c33c2fed0af91
        mem[(7 * ceil32(return_data.size)) + 357] = 85
        require ext_code.size(address(sha3(0, 11157320132538271434, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0xbbca9af0511ad1a1da383135cf3a8d2ac620e549ef9f6ae3a4c33c2fed0af91)))
        staticcall address(sha3(0, 11157320132538271434, sha3(address(ext_call.return_data[0]), address(ext_call.return_data[0])), 0xbbca9af0511ad1a1da383135cf3a8d2ac620e549ef9f6ae3a4c33c2fed0af91)).getReserves() with:
                gas gas_remaining wei
        mem[(7 * ceil32(return_data.size)) + 474 len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
        if arg2 <= 0:
            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[(8 * ceil32(return_data.size)) + 478] = 32
            mem[(8 * ceil32(return_data.size)) + 510] = 45
            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
            mem[(8 * ceil32(return_data.size)) + 574] = 'OUTPUT_AMOUNT'
            revert with memory
              from (8 * ceil32(return_data.size)) + 474
               len ceil32(return_data.size) + 132
        if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
            if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg2 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5237 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5333 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                require return_data.size >= _5237 + (32 * _5333) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5333] = mem[(10 * ceil32(return_data.size)) + _5237 + 602 len 32 * _5333]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7061 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7061] == bool(mem[_7061])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7445 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7541 = mem[_7445]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7541
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7541
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7829 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7829] == bool(mem[_7829])
                        else:
                            if ext_call.return_data[50 len 14] and arg2 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg2:
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5236 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5332 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _5236 + (32 * _5332) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5332] = mem[(10 * ceil32(return_data.size)) + _5236 + 602 len 32 * _5332]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7060 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7060] == bool(mem[_7060])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7444 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7540 = mem[_7444]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7540
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7540
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7828 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7828] == bool(mem[_7828])
                            else:
                                if ext_call.return_data[50 len 14] * arg2 and 1000 > -1 / ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5235 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5331 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _5235 + (32 * _5331) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5331] = mem[(10 * ceil32(return_data.size)) + _5235 + 602 len 32 * _5331]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7059 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7059] == bool(mem[_7059])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7443 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7539 = mem[_7443]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7539
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7539
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7827 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7827] == bool(mem[_7827])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg2 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5240 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5336 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                require return_data.size >= _5240 + (32 * _5336) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5336] = mem[(10 * ceil32(return_data.size)) + _5240 + 602 len 32 * _5336]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7064 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7064] == bool(mem[_7064])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7448 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7544 = mem[_7448]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7544
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7544
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7832 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7832] == bool(mem[_7832])
                        else:
                            if ext_call.return_data[18 len 14] and arg2 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg2:
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5239 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5335 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _5239 + (32 * _5335) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5335] = mem[(10 * ceil32(return_data.size)) + _5239 + 602 len 32 * _5335]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7063 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7063] == bool(mem[_7063])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7447 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7543 = mem[_7447]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7543
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7543
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7831 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7831] == bool(mem[_7831])
                            else:
                                if ext_call.return_data[18 len 14] * arg2 and 1000 > -1 / ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5238 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5334 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _5238 + (32 * _5334) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5334] = mem[(10 * ceil32(return_data.size)) + _5238 + 602 len 32 * _5334]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7062 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7062] == bool(mem[_7062])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7446 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7542 = mem[_7446]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7542
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7542
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7830 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7830] == bool(mem[_7830])
                else:
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg2 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5243 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5339 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                require return_data.size >= _5243 + (32 * _5339) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5339] = mem[(10 * ceil32(return_data.size)) + _5243 + 602 len 32 * _5339]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7067 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7067] == bool(mem[_7067])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7451 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7547 = mem[_7451]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7547
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7547
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7835 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7835] == bool(mem[_7835])
                        else:
                            if ext_call.return_data[50 len 14] and arg2 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg2:
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5242 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5338 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _5242 + (32 * _5338) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5338] = mem[(10 * ceil32(return_data.size)) + _5242 + 602 len 32 * _5338]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7066 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7066] == bool(mem[_7066])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7450 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7546 = mem[_7450]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7546
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7546
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7834 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7834] == bool(mem[_7834])
                            else:
                                if ext_call.return_data[50 len 14] * arg2 and 1000 > -1 / ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5241 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5337 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _5241 + (32 * _5337) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5337] = mem[(10 * ceil32(return_data.size)) + _5241 + 602 len 32 * _5337]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7065 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7065] == bool(mem[_7065])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7449 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7545 = mem[_7449]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7545
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7545
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7833 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7833] == bool(mem[_7833])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg2 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5246 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5342 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                require return_data.size >= _5246 + (32 * _5342) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5342] = mem[(10 * ceil32(return_data.size)) + _5246 + 602 len 32 * _5342]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7070 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7070] == bool(mem[_7070])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7454 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7550 = mem[_7454]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7550
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7550
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7838 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7838] == bool(mem[_7838])
                        else:
                            if ext_call.return_data[18 len 14] and arg2 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg2:
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5245 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5341 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _5245 + (32 * _5341) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5341] = mem[(10 * ceil32(return_data.size)) + _5245 + 602 len 32 * _5341]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7069 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7069] == bool(mem[_7069])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7453 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7549 = mem[_7453]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7549
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7549
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7837 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7837] == bool(mem[_7837])
                            else:
                                if ext_call.return_data[18 len 14] * arg2 and 1000 > -1 / ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5244 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5340 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _5244 + (32 * _5340) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5340] = mem[(10 * ceil32(return_data.size)) + _5244 + 602 len 32 * _5340]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7068 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7068] == bool(mem[_7068])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7452 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7548 = mem[_7452]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7548
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7548
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7836 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7836] == bool(mem[_7836])
            else:
                if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg2 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5249 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5345 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                require return_data.size >= _5249 + (32 * _5345) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5345] = mem[(10 * ceil32(return_data.size)) + _5249 + 602 len 32 * _5345]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7073 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7073] == bool(mem[_7073])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7457 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7553 = mem[_7457]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7553
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7553
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7841 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7841] == bool(mem[_7841])
                        else:
                            if ext_call.return_data[50 len 14] and arg2 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg2:
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5248 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5344 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _5248 + (32 * _5344) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5344] = mem[(10 * ceil32(return_data.size)) + _5248 + 602 len 32 * _5344]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7072 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7072] == bool(mem[_7072])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7456 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7552 = mem[_7456]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7552
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7552
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7840 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7840] == bool(mem[_7840])
                            else:
                                if ext_call.return_data[50 len 14] * arg2 and 1000 > -1 / ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5247 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5343 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _5247 + (32 * _5343) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5343] = mem[(10 * ceil32(return_data.size)) + _5247 + 602 len 32 * _5343]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7071 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7071] == bool(mem[_7071])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7455 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7551 = mem[_7455]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7551
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7551
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7839 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7839] == bool(mem[_7839])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg2 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5252 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5348 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                require return_data.size >= _5252 + (32 * _5348) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5348] = mem[(10 * ceil32(return_data.size)) + _5252 + 602 len 32 * _5348]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7076 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7076] == bool(mem[_7076])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7460 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7556 = mem[_7460]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7556
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7556
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7844 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7844] == bool(mem[_7844])
                        else:
                            if ext_call.return_data[18 len 14] and arg2 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg2:
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5251 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5347 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _5251 + (32 * _5347) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5347] = mem[(10 * ceil32(return_data.size)) + _5251 + 602 len 32 * _5347]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7075 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7075] == bool(mem[_7075])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7459 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7555 = mem[_7459]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7555
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7555
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7843 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7843] == bool(mem[_7843])
                            else:
                                if ext_call.return_data[18 len 14] * arg2 and 1000 > -1 / ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5250 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5346 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _5250 + (32 * _5346) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5346] = mem[(10 * ceil32(return_data.size)) + _5250 + 602 len 32 * _5346]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7074 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7074] == bool(mem[_7074])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7458 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7554 = mem[_7458]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7554
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7554
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7842 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7842] == bool(mem[_7842])
                else:
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg2 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5255 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5351 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                require return_data.size >= _5255 + (32 * _5351) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5351] = mem[(10 * ceil32(return_data.size)) + _5255 + 602 len 32 * _5351]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7079 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7079] == bool(mem[_7079])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7463 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7559 = mem[_7463]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7559
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7559
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7847 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7847] == bool(mem[_7847])
                        else:
                            if ext_call.return_data[50 len 14] and arg2 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg2:
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5254 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5350 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _5254 + (32 * _5350) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5350] = mem[(10 * ceil32(return_data.size)) + _5254 + 602 len 32 * _5350]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7078 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7078] == bool(mem[_7078])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7462 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7558 = mem[_7462]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7558
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7558
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7846 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7846] == bool(mem[_7846])
                            else:
                                if ext_call.return_data[50 len 14] * arg2 and 1000 > -1 / ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5253 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5349 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _5253 + (32 * _5349) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5349] = mem[(10 * ceil32(return_data.size)) + _5253 + 602 len 32 * _5349]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7077 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7077] == bool(mem[_7077])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7461 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7557 = mem[_7461]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7557
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7557
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7845 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7845] == bool(mem[_7845])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg2 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5258 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5354 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                require return_data.size >= _5258 + (32 * _5354) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5354] = mem[(10 * ceil32(return_data.size)) + _5258 + 602 len 32 * _5354]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7082 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7082] == bool(mem[_7082])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7466 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7562 = mem[_7466]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7562
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7562
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7850 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7850] == bool(mem[_7850])
                        else:
                            if ext_call.return_data[18 len 14] and arg2 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg2:
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5257 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5353 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _5257 + (32 * _5353) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5353] = mem[(10 * ceil32(return_data.size)) + _5257 + 602 len 32 * _5353]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7081 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7081] == bool(mem[_7081])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7465 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7561 = mem[_7465]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7561
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7561
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7849 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7849] == bool(mem[_7849])
                            else:
                                if ext_call.return_data[18 len 14] * arg2 and 1000 > -1 / ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5256 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5352 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _5256 + (32 * _5352) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5352] = mem[(10 * ceil32(return_data.size)) + _5256 + 602 len 32 * _5352]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7080 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7080] == bool(mem[_7080])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7464 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7560 = mem[_7464]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7560
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7560
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7848 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7848] == bool(mem[_7848])
        else:
            if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg2 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5261 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5357 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                require return_data.size >= _5261 + (32 * _5357) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5357] = mem[(10 * ceil32(return_data.size)) + _5261 + 602 len 32 * _5357]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7085 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7085] == bool(mem[_7085])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7469 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7565 = mem[_7469]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7565
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7565
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7853 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7853] == bool(mem[_7853])
                        else:
                            if ext_call.return_data[50 len 14] and arg2 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg2:
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5260 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5356 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _5260 + (32 * _5356) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5356] = mem[(10 * ceil32(return_data.size)) + _5260 + 602 len 32 * _5356]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7084 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7084] == bool(mem[_7084])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7468 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7564 = mem[_7468]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7564
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7564
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7852 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7852] == bool(mem[_7852])
                            else:
                                if ext_call.return_data[50 len 14] * arg2 and 1000 > -1 / ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5259 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5355 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _5259 + (32 * _5355) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5355] = mem[(10 * ceil32(return_data.size)) + _5259 + 602 len 32 * _5355]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7083 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7083] == bool(mem[_7083])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7467 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7563 = mem[_7467]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7563
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7563
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7851 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7851] == bool(mem[_7851])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg2 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5264 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5360 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                require return_data.size >= _5264 + (32 * _5360) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5360] = mem[(10 * ceil32(return_data.size)) + _5264 + 602 len 32 * _5360]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7088 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7088] == bool(mem[_7088])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7472 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7568 = mem[_7472]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7568
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7568
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7856 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7856] == bool(mem[_7856])
                        else:
                            if ext_call.return_data[18 len 14] and arg2 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg2:
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5263 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5359 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _5263 + (32 * _5359) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5359] = mem[(10 * ceil32(return_data.size)) + _5263 + 602 len 32 * _5359]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7087 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7087] == bool(mem[_7087])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7471 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7567 = mem[_7471]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7567
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7567
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7855 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7855] == bool(mem[_7855])
                            else:
                                if ext_call.return_data[18 len 14] * arg2 and 1000 > -1 / ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5262 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5358 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _5262 + (32 * _5358) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5358] = mem[(10 * ceil32(return_data.size)) + _5262 + 602 len 32 * _5358]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7086 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7086] == bool(mem[_7086])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7470 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7566 = mem[_7470]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7566
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7566
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7854 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7854] == bool(mem[_7854])
                else:
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg2 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5267 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5363 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                require return_data.size >= _5267 + (32 * _5363) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5363] = mem[(10 * ceil32(return_data.size)) + _5267 + 602 len 32 * _5363]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7091 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7091] == bool(mem[_7091])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7475 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7571 = mem[_7475]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7571
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7571
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7859 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7859] == bool(mem[_7859])
                        else:
                            if ext_call.return_data[50 len 14] and arg2 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg2:
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5266 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5362 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _5266 + (32 * _5362) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5362] = mem[(10 * ceil32(return_data.size)) + _5266 + 602 len 32 * _5362]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7090 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7090] == bool(mem[_7090])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7474 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7570 = mem[_7474]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7570
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7570
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7858 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7858] == bool(mem[_7858])
                            else:
                                if ext_call.return_data[50 len 14] * arg2 and 1000 > -1 / ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5265 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5361 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _5265 + (32 * _5361) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5361] = mem[(10 * ceil32(return_data.size)) + _5265 + 602 len 32 * _5361]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7089 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7089] == bool(mem[_7089])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7473 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7569 = mem[_7473]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7569
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7569
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7857 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7857] == bool(mem[_7857])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg2 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5270 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5366 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                require return_data.size >= _5270 + (32 * _5366) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5366] = mem[(10 * ceil32(return_data.size)) + _5270 + 602 len 32 * _5366]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7094 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7094] == bool(mem[_7094])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7478 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7574 = mem[_7478]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7574
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7574
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7862 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7862] == bool(mem[_7862])
                        else:
                            if ext_call.return_data[18 len 14] and arg2 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg2:
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5269 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5365 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _5269 + (32 * _5365) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5365] = mem[(10 * ceil32(return_data.size)) + _5269 + 602 len 32 * _5365]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7093 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7093] == bool(mem[_7093])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7477 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7573 = mem[_7477]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7573
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7573
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7861 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7861] == bool(mem[_7861])
                            else:
                                if ext_call.return_data[18 len 14] * arg2 and 1000 > -1 / ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5268 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5364 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _5268 + (32 * _5364) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5364] = mem[(10 * ceil32(return_data.size)) + _5268 + 602 len 32 * _5364]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7092 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7092] == bool(mem[_7092])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7476 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7572 = mem[_7476]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7572
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7572
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7860 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7860] == bool(mem[_7860])
            else:
                if address(ext_call.return_data[0]) < address(ext_call.return_data[0]):
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg2 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5273 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5369 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                require return_data.size >= _5273 + (32 * _5369) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5369] = mem[(10 * ceil32(return_data.size)) + _5273 + 602 len 32 * _5369]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7097 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7097] == bool(mem[_7097])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7481 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7577 = mem[_7481]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7577
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7577
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7865 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7865] == bool(mem[_7865])
                        else:
                            if ext_call.return_data[50 len 14] and arg2 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg2:
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5272 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5368 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _5272 + (32 * _5368) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5368] = mem[(10 * ceil32(return_data.size)) + _5272 + 602 len 32 * _5368]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7096 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7096] == bool(mem[_7096])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7480 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7576 = mem[_7480]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7576
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7576
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7864 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7864] == bool(mem[_7864])
                            else:
                                if ext_call.return_data[50 len 14] * arg2 and 1000 > -1 / ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5271 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5367 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _5271 + (32 * _5367) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5367] = mem[(10 * ceil32(return_data.size)) + _5271 + 602 len 32 * _5367]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7095 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7095] == bool(mem[_7095])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7479 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7575 = mem[_7479]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7575
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7575
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7863 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7863] == bool(mem[_7863])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg2 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5276 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5372 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                require return_data.size >= _5276 + (32 * _5372) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5372] = mem[(10 * ceil32(return_data.size)) + _5276 + 602 len 32 * _5372]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7100 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7100] == bool(mem[_7100])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7484 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7580 = mem[_7484]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7580
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7580
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7868 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7868] == bool(mem[_7868])
                        else:
                            if ext_call.return_data[18 len 14] and arg2 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg2:
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5275 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5371 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _5275 + (32 * _5371) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5371] = mem[(10 * ceil32(return_data.size)) + _5275 + 602 len 32 * _5371]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7099 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7099] == bool(mem[_7099])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7483 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7579 = mem[_7483]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7579
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7579
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7867 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7867] == bool(mem[_7867])
                            else:
                                if ext_call.return_data[18 len 14] * arg2 and 1000 > -1 / ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5274 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5370 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _5274 + (32 * _5370) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5370] = mem[(10 * ceil32(return_data.size)) + _5274 + 602 len 32 * _5370]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7098 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7098] == bool(mem[_7098])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7482 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7578 = mem[_7482]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7578
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7578
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7866 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7866] == bool(mem[_7866])
                else:
                    if address(ext_call.return_data[0]) == address(ext_call.return_data[0]):
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[50 len 14]:
                            if arg2 > ext_call.return_data[18 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[18 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5279 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5375 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                require return_data.size >= _5279 + (32 * _5375) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5375] = mem[(10 * ceil32(return_data.size)) + _5279 + 602 len 32 * _5375]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7103 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7103] == bool(mem[_7103])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7487 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7583 = mem[_7487]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7583
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7583
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7871 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7871] == bool(mem[_7871])
                        else:
                            if ext_call.return_data[50 len 14] and arg2 > -1 / ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[50 len 14] * arg2:
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5278 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5374 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _5278 + (32 * _5374) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5374] = mem[(10 * ceil32(return_data.size)) + _5278 + 602 len 32 * _5374]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7102 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7102] == bool(mem[_7102])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7486 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7582 = mem[_7486]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7582
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7582
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7870 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7870] == bool(mem[_7870])
                            else:
                                if ext_call.return_data[50 len 14] * arg2 and 1000 > -1 / ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / ext_call.return_data[50 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[18 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[18 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[18 len 14] - arg2 and 997 > -1 / ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[18 len 14]) - (997 * arg2) / ext_call.return_data[18 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[50 len 14] * arg2 / (997 * ext_call.return_data[18 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5277 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5373 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _5277 + (32 * _5373) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5373] = mem[(10 * ceil32(return_data.size)) + _5277 + 602 len 32 * _5373]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[32]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7101 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7101] == bool(mem[_7101])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7485 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7581 = mem[_7485]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7581
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7581
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7869 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7869] == bool(mem[_7869])
                    else:
                        if ext_call.return_data[18 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if ext_call.return_data[50 len 14] <= 0:
                            mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 478] = 32
                            mem[(8 * ceil32(return_data.size)) + 510] = 41
                            mem[(8 * ceil32(return_data.size)) + 542] = 'SpiritswapLibrary: INSUFFICIENT_'
                            mem[(8 * ceil32(return_data.size)) + 574] = 'LIQUIDITY'
                            revert with memory
                              from (8 * ceil32(return_data.size)) + 474
                               len ceil32(return_data.size) + 132
                        if not ext_call.return_data[18 len 14]:
                            if arg2 > ext_call.return_data[50 len 14]:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 30
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[50 len 14] < arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] - arg2:
                                revert with 'NH{q', 18
                            if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                revert with 'NH{q', 18
                            if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                revert with 'NH{q', 17
                            if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 27
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 100
                            if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 474] = 2
                                mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                mem[(10 * ceil32(return_data.size)) + 638] = 160
                                mem[(10 * ceil32(return_data.size)) + 734] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 766
                                t = (10 * ceil32(return_data.size)) + 506
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 570
                                require return_data.size >= 32
                                _5282 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                _5378 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                    revert with 'NH{q', 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                require return_data.size >= _5282 + (32 * _5378) + 32
                                mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5378] = mem[(10 * ceil32(return_data.size)) + _5282 + 602 len 32 * _5378]
                                mem[mem[64] + 4] = msg.sender
                                mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).0xa9059cbb with:
                                     gas gas_remaining wei
                                    args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7106 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7106] == bool(mem[_7106])
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7490 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _7586 = mem[_7490]
                                mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                mem[mem[64] + 36] = _7586
                                require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7586
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7874 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_7874] == bool(mem[_7874])
                        else:
                            if ext_call.return_data[18 len 14] and arg2 > -1 / ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] != arg2:
                                mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 478] = 32
                                mem[(8 * ceil32(return_data.size)) + 510] = 33
                                mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 474
                                   len ceil32(return_data.size) + 132
                            if not ext_call.return_data[18 len 14] * arg2:
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 0 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5281 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5377 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _5281 + (32 * _5377) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5377] = mem[(10 * ceil32(return_data.size)) + _5281 + 602 len 32 * _5377]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (0 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7105 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7105] == bool(mem[_7105])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7489 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7585 = mem[_7489]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7585
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7585
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7873 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7873] == bool(mem[_7873])
                            else:
                                if ext_call.return_data[18 len 14] * arg2 and 1000 > -1 / ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[18 len 14] * arg2:
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / ext_call.return_data[18 len 14] * arg2 != 1000:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if arg2 > ext_call.return_data[50 len 14]:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 30
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: subtraction overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[50 len 14] < arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if ext_call.return_data[50 len 14] - arg2 and 997 > -1 / ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 17
                                if not ext_call.return_data[50 len 14] - arg2:
                                    revert with 'NH{q', 18
                                if (997 * ext_call.return_data[50 len 14]) - (997 * arg2) / ext_call.return_data[50 len 14] - arg2 != 997:
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 33
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: multiplication overflo'
                                    mem[(8 * ceil32(return_data.size)) + 574] = 'w'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 132
                                if not (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    revert with 'NH{q', 18
                                if 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2) > -2:
                                    revert with 'NH{q', 17
                                if (1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2)) + 1 < 1000 * ext_call.return_data[18 len 14] * arg2 / (997 * ext_call.return_data[50 len 14]) - (997 * arg2):
                                    mem[(8 * ceil32(return_data.size)) + 474] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 478] = 32
                                    mem[(8 * ceil32(return_data.size)) + 510] = 27
                                    mem[(8 * ceil32(return_data.size)) + 542] = 'SafeMath: addition overflow'
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 474
                                       len ceil32(return_data.size) + 100
                                if 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7 == address(ext_call.return_data[0]):
                                    mem[(8 * ceil32(return_data.size)) + 478] = msg.sender
                                    mem[(8 * ceil32(return_data.size)) + 510] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address, mem[(10 * ceil32(return_data.size)) + 510 len 5 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0], mem[(12 * ceil32(return_data.size)) + 542 len 9 * ceil32(return_data.size)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 478] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                                    mem[(8 * ceil32(return_data.size)) + 510] = ext_call.return_data[0]
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args mem[(8 * ceil32(return_data.size)) + 478 len ceil32(return_data.size) + 64]
                                    mem[(8 * ceil32(return_data.size)) + 474] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 474] = 2
                                    mem[(10 * ceil32(return_data.size)) + 506] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7
                                    mem[(10 * ceil32(return_data.size)) + 538] = address(ext_call.return_data[0])
                                    mem[(10 * ceil32(return_data.size)) + 570] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[(10 * ceil32(return_data.size)) + 574] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[(10 * ceil32(return_data.size)) + 606] = ext_call.return_data[0]
                                    mem[(10 * ceil32(return_data.size)) + 638] = 160
                                    mem[(10 * ceil32(return_data.size)) + 734] = 2
                                    idx = 0
                                    s = (10 * ceil32(return_data.size)) + 766
                                    t = (10 * ceil32(return_data.size)) + 506
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(10 * ceil32(return_data.size)) + 670] = this.address
                                    mem[(10 * ceil32(return_data.size)) + 702] = block.timestamp
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1, ext_call.return_data[0], Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 766 len 64]), address(this.address), block.timestamp
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(10 * ceil32(return_data.size)) + 570 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (11 * ceil32(return_data.size)) + 570
                                    require return_data.size >= 32
                                    _5280 = mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32
                                    require mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 <= test266151307()
                                    require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 601 < (10 * ceil32(return_data.size)) + return_data.size + 570
                                    _5376 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570] > test266151307():
                                        revert with 'NH{q', 65
                                    if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]) + 571
                                    mem[(11 * ceil32(return_data.size)) + 570] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 570 len 4], Mask(224, 32, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1) >> 32 + 570]
                                    require return_data.size >= _5280 + (32 * _5376) + 32
                                    mem[(11 * ceil32(return_data.size)) + 602 len 32 * _5376] = mem[(10 * ceil32(return_data.size)) + _5280 + 602 len 32 * _5376]
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args msg.sender, (1000 * Mask(112, 0, ext_call.return_data[0]) * arg2 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * arg2)) + 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7104 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7104] == bool(mem[_7104])
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7488 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _7584 = mem[_7488]
                                    mem[mem[64] + 4] = 0xf8f181d466d44974257f9ccf0ce8398b7e059054
                                    mem[mem[64] + 36] = _7584
                                    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
                                    call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, _7584
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7872 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_7872] == bool(mem[_7872])
}



}
