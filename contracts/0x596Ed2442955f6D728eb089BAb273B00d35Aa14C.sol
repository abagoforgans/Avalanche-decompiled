contract main {




// =====================  Runtime code  =====================


#
#  - sub_8152ab8e(?)
#
address owner;

function owner() payable {
    return owner
}

function _fallback() payable {
    revert
}

function renounceOwnership() payable {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    emit OwnershipTransferred(owner, 0);
    owner = 0
}

function recoverEth() payable {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    call msg.sender with:
       value eth.balance(this.address) wei
         gas 2300 * is_zero(value) wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function getBalance(address arg1) payable {
    require calldata.size - 4 >= 32
    require ext_code.size(arg1)
    staticcall arg1.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return ext_call.return_data[0]
}

function sub_7043b528(?) payable {
    require calldata.size - 4 >= 64
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    require ext_code.size(arg1)
    call arg1.0xa9059cbb with:
         gas gas_remaining wei
        args msg.sender, arg2
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
}

function transferOwnership(address arg1) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    38,
                    0xfe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573,
                    mem[202 len 26]
    emit OwnershipTransferred(owner, arg1);
    owner = arg1
}

function recoverTokens(address arg1) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    require ext_code.size(arg1)
    staticcall arg1.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(arg1)
    call arg1.0xa9059cbb with:
         gas gas_remaining wei
        args msg.sender, ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
}

function getAmountOutMin(address arg1, address arg2, address arg3, uint256 arg4) payable {
    require calldata.size - 4 >= 128
    mem[160] = arg3
    mem[192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
    mem[196] = arg4
    mem[228] = 64
    mem[260] = 2
    mem[292 len 0] = None
    require ext_code.size(arg1)
    staticcall arg1.getAmountsOut(uint256 arg1, address[] arg2) with:
            gas gas_remaining wei
           args arg4, Array(len=2, data=mem[292 len 64])
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    mem[192 len return_data.size] = ext_call.return_data[0 len return_data.size]
    mem[64] = ceil32(return_data.size) + 192
    require return_data.size >= 32
    _23 = mem[192 len 4], Mask(224, 32, arg4) >> 32
    require mem[192 len 4], Mask(224, 32, arg4) >> 32 <= 4294967296
    require mem[192 len 4], Mask(224, 32, arg4) >> 32 + 32 <= return_data.size
    require mem[mem[192 len 4], Mask(224, 32, arg4) >> 32 + 192] <= 4294967296 and mem[192 len 4], Mask(224, 32, arg4) >> 32 + (32 * mem[mem[192 len 4], Mask(224, 32, arg4) >> 32 + 192]) + 32 <= return_data.size
    mem[ceil32(return_data.size) + 192] = mem[mem[192 len 4], Mask(224, 32, arg4) >> 32 + 192]
    _26 = mem[_23 + 192]
    mem[ceil32(return_data.size) + 224 len floor32(mem[_23 + 192])] = mem[_23 + 224 len floor32(mem[_23 + 192])]
    require 1 < mem[ceil32(return_data.size) + 192]
    mem[(32 * _26) + ceil32(return_data.size) + 224] = mem[ceil32(return_data.size) + 256]
    return memory
      from (32 * _26) + ceil32(return_data.size) + 224
       len 32
}

function sub_322f6377(?) payable {
    require calldata.size - 4 >= 128
    require ext_code.size(arg1)
    staticcall arg1.getReserves() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 96
    if arg4 <= 0:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    43,
                    0x59556e697377617056324c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                    mem[207 len 21]
    if arg2 < arg3:
        if arg2 == arg2:
            if ext_call.return_data[18 len 14] <= 0:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            40,
                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                            mem[204 len 24]
            if ext_call.return_data[50 len 14] <= 0:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            40,
                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                            mem[204 len 24]
            if 997 * arg4 / 997 != arg4:
                revert with 0, 'ds-math-mul-overflow'
            if not ext_call.return_data[50 len 14]:
                if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                    revert with 0, 'ds-math-mul-overflow'
                if (1000 * ext_call.return_data[18 len 14]) + (997 * arg4) < 1000 * ext_call.return_data[18 len 14]:
                    revert with 0, 'ds-math-add-overflow'
                if (1000 * ext_call.return_data[18 len 14]) + (997 * arg4):
                    return (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * arg4))
            else:
                if ext_call.return_data[50 len 14]:
                    if 997 * arg4 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * arg4:
                        revert with 0, 'ds-math-mul-overflow'
                    if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                        revert with 0, 'ds-math-mul-overflow'
                    if (1000 * ext_call.return_data[18 len 14]) + (997 * arg4) < 1000 * ext_call.return_data[18 len 14]:
                        revert with 0, 'ds-math-add-overflow'
                    if (1000 * ext_call.return_data[18 len 14]) + (997 * arg4):
                        return (997 * arg4 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * arg4))
        else:
            if ext_call.return_data[50 len 14] <= 0:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            40,
                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                            mem[204 len 24]
            if ext_call.return_data[18 len 14] <= 0:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            40,
                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                            mem[204 len 24]
            if 997 * arg4 / 997 != arg4:
                revert with 0, 'ds-math-mul-overflow'
            if not ext_call.return_data[18 len 14]:
                if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                    revert with 0, 'ds-math-mul-overflow'
                if (1000 * ext_call.return_data[50 len 14]) + (997 * arg4) < 1000 * ext_call.return_data[50 len 14]:
                    revert with 0, 'ds-math-add-overflow'
                if (1000 * ext_call.return_data[50 len 14]) + (997 * arg4):
                    return (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * arg4))
            else:
                if ext_call.return_data[18 len 14]:
                    if 997 * arg4 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * arg4:
                        revert with 0, 'ds-math-mul-overflow'
                    if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                        revert with 0, 'ds-math-mul-overflow'
                    if (1000 * ext_call.return_data[50 len 14]) + (997 * arg4) < 1000 * ext_call.return_data[50 len 14]:
                        revert with 0, 'ds-math-add-overflow'
                    if (1000 * ext_call.return_data[50 len 14]) + (997 * arg4):
                        return (997 * arg4 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * arg4))
    else:
        if arg2 == arg3:
            if ext_call.return_data[18 len 14] <= 0:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            40,
                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                            mem[204 len 24]
            if ext_call.return_data[50 len 14] <= 0:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            40,
                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                            mem[204 len 24]
            if 997 * arg4 / 997 != arg4:
                revert with 0, 'ds-math-mul-overflow'
            if not ext_call.return_data[50 len 14]:
                if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                    revert with 0, 'ds-math-mul-overflow'
                if (1000 * ext_call.return_data[18 len 14]) + (997 * arg4) < 1000 * ext_call.return_data[18 len 14]:
                    revert with 0, 'ds-math-add-overflow'
                if (1000 * ext_call.return_data[18 len 14]) + (997 * arg4):
                    return (0 / (1000 * ext_call.return_data[18 len 14]) + (997 * arg4))
            else:
                if ext_call.return_data[50 len 14]:
                    if 997 * arg4 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 997 * arg4:
                        revert with 0, 'ds-math-mul-overflow'
                    if 1000 * ext_call.return_data[18 len 14] / 1000 != ext_call.return_data[18 len 14]:
                        revert with 0, 'ds-math-mul-overflow'
                    if (1000 * ext_call.return_data[18 len 14]) + (997 * arg4) < 1000 * ext_call.return_data[18 len 14]:
                        revert with 0, 'ds-math-add-overflow'
                    if (1000 * ext_call.return_data[18 len 14]) + (997 * arg4):
                        return (997 * arg4 * ext_call.return_data[50 len 14] / (1000 * ext_call.return_data[18 len 14]) + (997 * arg4))
        else:
            if ext_call.return_data[50 len 14] <= 0:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            40,
                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                            mem[204 len 24]
            if ext_call.return_data[18 len 14] <= 0:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            40,
                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                            mem[204 len 24]
            if 997 * arg4 / 997 != arg4:
                revert with 0, 'ds-math-mul-overflow'
            if not ext_call.return_data[18 len 14]:
                if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                    revert with 0, 'ds-math-mul-overflow'
                if (1000 * ext_call.return_data[50 len 14]) + (997 * arg4) < 1000 * ext_call.return_data[50 len 14]:
                    revert with 0, 'ds-math-add-overflow'
                if (1000 * ext_call.return_data[50 len 14]) + (997 * arg4):
                    return (0 / (1000 * ext_call.return_data[50 len 14]) + (997 * arg4))
            else:
                if ext_call.return_data[18 len 14]:
                    if 997 * arg4 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 997 * arg4:
                        revert with 0, 'ds-math-mul-overflow'
                    if 1000 * ext_call.return_data[50 len 14] / 1000 != ext_call.return_data[50 len 14]:
                        revert with 0, 'ds-math-mul-overflow'
                    if (1000 * ext_call.return_data[50 len 14]) + (997 * arg4) < 1000 * ext_call.return_data[50 len 14]:
                        revert with 0, 'ds-math-add-overflow'
                    if (1000 * ext_call.return_data[50 len 14]) + (997 * arg4):
                        return (997 * arg4 * ext_call.return_data[18 len 14] / (1000 * ext_call.return_data[50 len 14]) + (997 * arg4))
    revert
}

function sub_e27bf6cc(?) payable {
    require calldata.size - 4 >= 96
    require arg1 <= 4294967296
    require arg1 + 36 <= calldata.size
    require arg1.length <= 4294967296 and arg1 + (32 * arg1.length) + 36 <= calldata.size
    mem[128 len 32 * arg1.length] = call.data[arg1 + 36 len 32 * arg1.length]
    require arg2 <= 4294967296
    require arg2 + 36 <= calldata.size
    require arg2.length <= 4294967296 and arg2 + (32 * arg2.length) + 36 <= calldata.size
    mem[(32 * arg1.length) + 128] = arg2.length
    mem[(32 * arg1.length) + 160 len 32 * arg2.length] = call.data[arg2 + 36 len 32 * arg2.length]
    require arg2.length <= test266151307()
    mem[(32 * arg1.length) + (32 * arg2.length) + 160] = arg2.length
    if not arg2.length:
        idx = 0
        while idx < arg2.length:
            require idx < arg1.length
            require idx < arg2.length
            if not idx:
                _239 = mem[(32 * idx) + (32 * arg1.length) + 160]
                require idx + 1 < arg2.length
                _253 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                require ext_code.size(mem[(32 * idx) + 140 len 20])
                staticcall mem[(32 * idx) + 140 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[(32 * arg1.length) + (64 * arg2.length) + 192 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                if arg3 <= 0:
                    revert with 0, 
                                32,
                                43,
                                0x59556e697377617056324c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                mem[(32 * arg1.length) + (64 * arg2.length) + 303 len 21]
                if mem[(32 * idx) + (32 * arg1.length) + 172 len 20] < mem[(32 * idx + 1) + (32 * arg1.length) + 172 len 20]:
                    if address(_239) == address(_239):
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                        if 997 * arg3 / 997 != arg3:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[32]):
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3)
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3)
                        else:
                            require Mask(112, 0, ext_call.return_data[32])
                            if 997 * arg3 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * arg3:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3)
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * arg3 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3)
                    else:
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                        if 997 * arg3 / 997 != arg3:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3)
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3)
                        else:
                            require Mask(112, 0, ext_call.return_data[0])
                            if 997 * arg3 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * arg3:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3)
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * arg3 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3)
                else:
                    if address(_239) == address(_253):
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                        if 997 * arg3 / 997 != arg3:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[32]):
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3)
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3)
                        else:
                            require Mask(112, 0, ext_call.return_data[32])
                            if 997 * arg3 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * arg3:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3)
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * arg3 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3)
                    else:
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                        if 997 * arg3 / 997 != arg3:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3)
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3)
                        else:
                            require Mask(112, 0, ext_call.return_data[0])
                            if 997 * arg3 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * arg3:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3)
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * arg3 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3)
            else:
                if idx == arg2.length - 1:
                    _251 = mem[(32 * idx) + (32 * arg1.length) + 160]
                    require 0 < arg2.length
                    require idx - 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                    _268 = mem[(32 * idx - 1) + (32 * arg1.length) + (32 * arg2.length) + 192]
                    require ext_code.size(mem[(32 * idx) + 140 len 20])
                    staticcall mem[(32 * idx) + 140 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[(32 * arg1.length) + (64 * arg2.length) + 192 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    if _268 <= 0:
                        revert with 0, 
                                    32,
                                    43,
                                    0x59556e697377617056324c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                    mem[(32 * arg1.length) + (64 * arg2.length) + 303 len 21]
                    if mem[(32 * idx) + (32 * arg1.length) + 172 len 20] < mem[(32 * arg1.length) + 172 len 20]:
                        if address(_251) == address(_251):
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if 997 * _268 / 997 != _268:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _268) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _268)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _268)
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * _268 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * _268:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _268) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _268)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * _268 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _268)
                        else:
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if 997 * _268 / 997 != _268:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _268) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _268)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _268)
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if 997 * _268 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * _268:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _268) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _268)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * _268 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _268)
                    else:
                        if address(_251) == mem[(32 * arg1.length) + 172 len 20]:
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if 997 * _268 / 997 != _268:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _268) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _268)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _268)
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * _268 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * _268:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _268) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _268)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * _268 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _268)
                        else:
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if 997 * _268 / 997 != _268:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _268) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _268)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _268)
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if 997 * _268 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * _268:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _268) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _268)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * _268 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _268)
                else:
                    _249 = mem[(32 * idx) + (32 * arg1.length) + 160]
                    require idx + 1 < arg2.length
                    _259 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                    require idx - 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                    _267 = mem[(32 * idx - 1) + (32 * arg1.length) + (32 * arg2.length) + 192]
                    require ext_code.size(mem[(32 * idx) + 140 len 20])
                    staticcall mem[(32 * idx) + 140 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[(32 * arg1.length) + (64 * arg2.length) + 192 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    if _267 <= 0:
                        revert with 0, 
                                    32,
                                    43,
                                    0x59556e697377617056324c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                    mem[(32 * arg1.length) + (64 * arg2.length) + 303 len 21]
                    if mem[(32 * idx) + (32 * arg1.length) + 172 len 20] < mem[(32 * idx + 1) + (32 * arg1.length) + 172 len 20]:
                        if address(_249) == address(_249):
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if 997 * _267 / 997 != _267:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _267) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _267)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _267)
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * _267 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * _267:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _267) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _267)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * _267 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _267)
                        else:
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if 997 * _267 / 997 != _267:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _267) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _267)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _267)
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if 997 * _267 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * _267:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _267) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _267)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * _267 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _267)
                    else:
                        if address(_249) == address(_259):
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if 997 * _267 / 997 != _267:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _267) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _267)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _267)
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * _267 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * _267:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _267) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _267)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * _267 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _267)
                        else:
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if 997 * _267 / 997 != _267:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _267) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _267)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _267)
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if 997 * _267 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * _267:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _267) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _267)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * _267 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _267)
            idx = idx + 1
            continue 
    else:
        mem[(32 * arg1.length) + (32 * arg2.length) + 192 len 32 * arg2.length] = call.data[calldata.size len 32 * arg2.length]
        idx = 0
        while idx < arg2.length:
            require idx < arg1.length
            require idx < arg2.length
            if not idx:
                _247 = mem[(32 * idx) + (32 * arg1.length) + 160]
                require idx + 1 < arg2.length
                _258 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                require ext_code.size(mem[(32 * idx) + 140 len 20])
                staticcall mem[(32 * idx) + 140 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[(32 * arg1.length) + (64 * arg2.length) + 192 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                if arg3 <= 0:
                    revert with 0, 
                                32,
                                43,
                                0x59556e697377617056324c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                mem[(32 * arg1.length) + (64 * arg2.length) + 303 len 21]
                if mem[(32 * idx) + (32 * arg1.length) + 172 len 20] < mem[(32 * idx + 1) + (32 * arg1.length) + 172 len 20]:
                    if address(_247) == address(_247):
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                        if 997 * arg3 / 997 != arg3:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[32]):
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3)
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3)
                        else:
                            require Mask(112, 0, ext_call.return_data[32])
                            if 997 * arg3 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * arg3:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3)
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * arg3 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3)
                    else:
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                        if 997 * arg3 / 997 != arg3:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3)
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3)
                        else:
                            require Mask(112, 0, ext_call.return_data[0])
                            if 997 * arg3 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * arg3:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3)
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * arg3 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3)
                else:
                    if address(_247) == address(_258):
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                        if 997 * arg3 / 997 != arg3:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[32]):
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3)
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3)
                        else:
                            require Mask(112, 0, ext_call.return_data[32])
                            if 997 * arg3 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * arg3:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3)
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * arg3 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3)
                    else:
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                        if 997 * arg3 / 997 != arg3:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3)
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3)
                        else:
                            require Mask(112, 0, ext_call.return_data[0])
                            if 997 * arg3 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * arg3:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3)
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * arg3 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3)
            else:
                if idx == arg2.length - 1:
                    _256 = mem[(32 * idx) + (32 * arg1.length) + 160]
                    require 0 < arg2.length
                    require idx - 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                    _270 = mem[(32 * idx - 1) + (32 * arg1.length) + (32 * arg2.length) + 192]
                    require ext_code.size(mem[(32 * idx) + 140 len 20])
                    staticcall mem[(32 * idx) + 140 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[(32 * arg1.length) + (64 * arg2.length) + 192 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    if _270 <= 0:
                        revert with 0, 
                                    32,
                                    43,
                                    0x59556e697377617056324c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                    mem[(32 * arg1.length) + (64 * arg2.length) + 303 len 21]
                    if mem[(32 * idx) + (32 * arg1.length) + 172 len 20] < mem[(32 * arg1.length) + 172 len 20]:
                        if address(_256) == address(_256):
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if 997 * _270 / 997 != _270:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _270) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _270)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _270)
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * _270 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * _270:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _270) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _270)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * _270 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _270)
                        else:
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if 997 * _270 / 997 != _270:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _270) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _270)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _270)
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if 997 * _270 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * _270:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _270) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _270)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * _270 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _270)
                    else:
                        if address(_256) == mem[(32 * arg1.length) + 172 len 20]:
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if 997 * _270 / 997 != _270:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _270) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _270)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _270)
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * _270 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * _270:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _270) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _270)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * _270 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _270)
                        else:
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if 997 * _270 / 997 != _270:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _270) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _270)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _270)
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if 997 * _270 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * _270:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _270) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _270)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * _270 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _270)
                else:
                    _254 = mem[(32 * idx) + (32 * arg1.length) + 160]
                    require idx + 1 < arg2.length
                    _263 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                    require idx - 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                    _269 = mem[(32 * idx - 1) + (32 * arg1.length) + (32 * arg2.length) + 192]
                    require ext_code.size(mem[(32 * idx) + 140 len 20])
                    staticcall mem[(32 * idx) + 140 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[(32 * arg1.length) + (64 * arg2.length) + 192 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    if _269 <= 0:
                        revert with 0, 
                                    32,
                                    43,
                                    0x59556e697377617056324c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                    mem[(32 * arg1.length) + (64 * arg2.length) + 303 len 21]
                    if mem[(32 * idx) + (32 * arg1.length) + 172 len 20] < mem[(32 * idx + 1) + (32 * arg1.length) + 172 len 20]:
                        if address(_254) == address(_254):
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if 997 * _269 / 997 != _269:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _269) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _269)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _269)
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * _269 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * _269:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _269) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _269)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * _269 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _269)
                        else:
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if 997 * _269 / 997 != _269:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _269) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _269)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _269)
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if 997 * _269 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * _269:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _269) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _269)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * _269 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _269)
                    else:
                        if address(_254) == address(_263):
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if 997 * _269 / 997 != _269:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _269) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _269)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _269)
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * _269 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * _269:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _269) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _269)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * _269 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _269)
                        else:
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if 997 * _269 / 997 != _269:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _269) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _269)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _269)
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if 997 * _269 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * _269:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _269) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _269)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * _269 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _269)
            idx = idx + 1
            continue 
    mem[(32 * arg1.length) + (64 * arg2.length) + 192] = 32
    mem[(32 * arg1.length) + (64 * arg2.length) + 224] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
    mem[(32 * arg1.length) + (64 * arg2.length) + 256 len floor32(mem[(32 * arg1.length) + (32 * arg2.length) + 160])] = mem[(32 * arg1.length) + (32 * arg2.length) + 192 len floor32(mem[(32 * arg1.length) + (32 * arg2.length) + 160])]
    return 32, mem[(32 * arg1.length) + (64 * arg2.length) + 224 len (32 * mem[(32 * arg1.length) + (32 * arg2.length) + 160]) + 32], 
}

function sub_2c70cd70(?) payable {
    require calldata.size - 4 >= 96
    require arg1 <= 4294967296
    require arg1 + 36 <= calldata.size
    require arg1.length <= 4294967296 and arg1 + (32 * arg1.length) + 36 <= calldata.size
    mem[128 len 32 * arg1.length] = call.data[arg1 + 36 len 32 * arg1.length]
    require arg2 <= 4294967296
    require arg2 + 36 <= calldata.size
    require arg2.length <= 4294967296 and arg2 + (32 * arg2.length) + 36 <= calldata.size
    mem[(32 * arg1.length) + 128] = arg2.length
    mem[(32 * arg1.length) + 160 len 32 * arg2.length] = call.data[arg2 + 36 len 32 * arg2.length]
    require arg2.length <= test266151307()
    mem[(32 * arg1.length) + (32 * arg2.length) + 160] = arg2.length
    if not arg2.length:
        idx = 0
        while idx < arg2.length:
            require idx < arg1.length
            require idx < arg2.length
            if not idx:
                _254 = mem[(32 * idx) + (32 * arg1.length) + 160]
                require idx + 1 < arg2.length
                _269 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                require ext_code.size(mem[(32 * idx) + 140 len 20])
                staticcall mem[(32 * idx) + 140 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[(32 * arg1.length) + (64 * arg2.length) + 192 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                if arg3 <= 0:
                    revert with 0, 
                                32,
                                43,
                                0x59556e697377617056324c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                mem[(32 * arg1.length) + (64 * arg2.length) + 303 len 21]
                if mem[(32 * idx) + (32 * arg1.length) + 172 len 20] < mem[(32 * idx + 1) + (32 * arg1.length) + 172 len 20]:
                    if address(_254) == address(_254):
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                        if 997 * arg3 / 997 != arg3:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[32]):
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3)
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3)
                        else:
                            require Mask(112, 0, ext_call.return_data[32])
                            if 997 * arg3 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * arg3:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3)
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * arg3 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3)
                    else:
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                        if 997 * arg3 / 997 != arg3:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3)
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3)
                        else:
                            require Mask(112, 0, ext_call.return_data[0])
                            if 997 * arg3 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * arg3:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3)
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * arg3 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3)
                else:
                    if address(_254) == address(_269):
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                        if 997 * arg3 / 997 != arg3:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[32]):
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3)
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3)
                        else:
                            require Mask(112, 0, ext_call.return_data[32])
                            if 997 * arg3 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * arg3:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3)
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * arg3 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3)
                    else:
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                        if 997 * arg3 / 997 != arg3:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3)
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3)
                        else:
                            require Mask(112, 0, ext_call.return_data[0])
                            if 997 * arg3 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * arg3:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3)
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * arg3 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3)
            else:
                if idx == arg2.length - 1:
                    _267 = mem[(32 * idx) + (32 * arg1.length) + 160]
                    require 0 < arg2.length
                    require idx - 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                    _288 = mem[(32 * idx - 1) + (32 * arg1.length) + (32 * arg2.length) + 192]
                    require ext_code.size(mem[(32 * idx) + 140 len 20])
                    staticcall mem[(32 * idx) + 140 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[(32 * arg1.length) + (64 * arg2.length) + 192 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    if _288 <= 0:
                        revert with 0, 
                                    32,
                                    43,
                                    0x59556e697377617056324c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                    mem[(32 * arg1.length) + (64 * arg2.length) + 303 len 21]
                    if mem[(32 * idx) + (32 * arg1.length) + 172 len 20] < mem[(32 * arg1.length) + 172 len 20]:
                        if address(_267) == address(_267):
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if 997 * _288 / 997 != _288:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _288) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _288)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _288)
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * _288 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * _288:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _288) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _288)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * _288 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _288)
                        else:
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if 997 * _288 / 997 != _288:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _288) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _288)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _288)
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if 997 * _288 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * _288:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _288) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _288)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * _288 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _288)
                    else:
                        if address(_267) == mem[(32 * arg1.length) + 172 len 20]:
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if 997 * _288 / 997 != _288:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _288) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _288)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _288)
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * _288 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * _288:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _288) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _288)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * _288 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _288)
                        else:
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if 997 * _288 / 997 != _288:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _288) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _288)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _288)
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if 997 * _288 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * _288:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _288) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _288)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * _288 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _288)
                else:
                    _265 = mem[(32 * idx) + (32 * arg1.length) + 160]
                    require idx + 1 < arg2.length
                    _277 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                    require idx - 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                    _287 = mem[(32 * idx - 1) + (32 * arg1.length) + (32 * arg2.length) + 192]
                    require ext_code.size(mem[(32 * idx) + 140 len 20])
                    staticcall mem[(32 * idx) + 140 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[(32 * arg1.length) + (64 * arg2.length) + 192 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    if _287 <= 0:
                        revert with 0, 
                                    32,
                                    43,
                                    0x59556e697377617056324c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                    mem[(32 * arg1.length) + (64 * arg2.length) + 303 len 21]
                    if mem[(32 * idx) + (32 * arg1.length) + 172 len 20] < mem[(32 * idx + 1) + (32 * arg1.length) + 172 len 20]:
                        if address(_265) == address(_265):
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if 997 * _287 / 997 != _287:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _287) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _287)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _287)
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * _287 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * _287:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _287) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _287)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * _287 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _287)
                        else:
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if 997 * _287 / 997 != _287:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _287) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _287)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _287)
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if 997 * _287 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * _287:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _287) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _287)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * _287 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _287)
                    else:
                        if address(_265) == address(_277):
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if 997 * _287 / 997 != _287:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _287) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _287)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _287)
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * _287 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * _287:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _287) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _287)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * _287 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _287)
                        else:
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if 997 * _287 / 997 != _287:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _287) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _287)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _287)
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if 997 * _287 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * _287:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _287) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _287)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * _287 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _287)
            idx = idx + 1
            continue 
    else:
        mem[(32 * arg1.length) + (32 * arg2.length) + 192 len 32 * arg2.length] = call.data[calldata.size len 32 * arg2.length]
        idx = 0
        while idx < arg2.length:
            require idx < arg1.length
            require idx < arg2.length
            if not idx:
                _263 = mem[(32 * idx) + (32 * arg1.length) + 160]
                require idx + 1 < arg2.length
                _274 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                require ext_code.size(mem[(32 * idx) + 140 len 20])
                staticcall mem[(32 * idx) + 140 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[(32 * arg1.length) + (64 * arg2.length) + 192 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                if arg3 <= 0:
                    revert with 0, 
                                32,
                                43,
                                0x59556e697377617056324c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                mem[(32 * arg1.length) + (64 * arg2.length) + 303 len 21]
                if mem[(32 * idx) + (32 * arg1.length) + 172 len 20] < mem[(32 * idx + 1) + (32 * arg1.length) + 172 len 20]:
                    if address(_263) == address(_263):
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                        if 997 * arg3 / 997 != arg3:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[32]):
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3)
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3)
                        else:
                            require Mask(112, 0, ext_call.return_data[32])
                            if 997 * arg3 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * arg3:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3)
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * arg3 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3)
                    else:
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                        if 997 * arg3 / 997 != arg3:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3)
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3)
                        else:
                            require Mask(112, 0, ext_call.return_data[0])
                            if 997 * arg3 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * arg3:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3)
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * arg3 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3)
                else:
                    if address(_263) == address(_274):
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                        if 997 * arg3 / 997 != arg3:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[32]):
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3)
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3)
                        else:
                            require Mask(112, 0, ext_call.return_data[32])
                            if 997 * arg3 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * arg3:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3)
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * arg3 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * arg3)
                    else:
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                        if 997 * arg3 / 997 != arg3:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3)
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3)
                        else:
                            require Mask(112, 0, ext_call.return_data[0])
                            if 997 * arg3 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * arg3:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3)
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * arg3 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * arg3)
            else:
                if idx == arg2.length - 1:
                    _272 = mem[(32 * idx) + (32 * arg1.length) + 160]
                    require 0 < arg2.length
                    require idx - 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                    _290 = mem[(32 * idx - 1) + (32 * arg1.length) + (32 * arg2.length) + 192]
                    require ext_code.size(mem[(32 * idx) + 140 len 20])
                    staticcall mem[(32 * idx) + 140 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[(32 * arg1.length) + (64 * arg2.length) + 192 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    if _290 <= 0:
                        revert with 0, 
                                    32,
                                    43,
                                    0x59556e697377617056324c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                    mem[(32 * arg1.length) + (64 * arg2.length) + 303 len 21]
                    if mem[(32 * idx) + (32 * arg1.length) + 172 len 20] < mem[(32 * arg1.length) + 172 len 20]:
                        if address(_272) == address(_272):
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if 997 * _290 / 997 != _290:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _290) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _290)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _290)
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * _290 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * _290:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _290) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _290)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * _290 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _290)
                        else:
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if 997 * _290 / 997 != _290:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _290) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _290)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _290)
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if 997 * _290 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * _290:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _290) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _290)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * _290 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _290)
                    else:
                        if address(_272) == mem[(32 * arg1.length) + 172 len 20]:
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if 997 * _290 / 997 != _290:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _290) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _290)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _290)
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * _290 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * _290:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _290) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _290)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * _290 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _290)
                        else:
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if 997 * _290 / 997 != _290:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _290) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _290)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _290)
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if 997 * _290 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * _290:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _290) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _290)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * _290 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _290)
                else:
                    _270 = mem[(32 * idx) + (32 * arg1.length) + 160]
                    require idx + 1 < arg2.length
                    _283 = mem[(32 * idx + 1) + (32 * arg1.length) + 160]
                    require idx - 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                    _289 = mem[(32 * idx - 1) + (32 * arg1.length) + (32 * arg2.length) + 192]
                    require ext_code.size(mem[(32 * idx) + 140 len 20])
                    staticcall mem[(32 * idx) + 140 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[(32 * arg1.length) + (64 * arg2.length) + 192 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    if _289 <= 0:
                        revert with 0, 
                                    32,
                                    43,
                                    0x59556e697377617056324c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                    mem[(32 * arg1.length) + (64 * arg2.length) + 303 len 21]
                    if mem[(32 * idx) + (32 * arg1.length) + 172 len 20] < mem[(32 * idx + 1) + (32 * arg1.length) + 172 len 20]:
                        if address(_270) == address(_270):
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if 997 * _289 / 997 != _289:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _289) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _289)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _289)
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * _289 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * _289:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _289) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _289)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * _289 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _289)
                        else:
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if 997 * _289 / 997 != _289:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _289) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _289)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _289)
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if 997 * _289 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * _289:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _289) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _289)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * _289 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _289)
                    else:
                        if address(_270) == address(_283):
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if 997 * _289 / 997 != _289:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _289) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _289)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _289)
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * _289 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * _289:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _289) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _289)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * _289 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _289)
                        else:
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * arg1.length) + (64 * arg2.length) + 300 len 24]
                            if 997 * _289 / 997 != _289:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _289) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _289)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _289)
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if 997 * _289 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * _289:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _289) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _289)
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] = 997 * _289 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _289)
            idx = idx + 1
            continue 
    require arg2.length - 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
    if mem[(32 * arg2.length - 1) + (32 * arg1.length) + (32 * arg2.length) + 192] <= arg3:
        revert with 0, 'prek'
    mem[(32 * arg1.length) + (64 * arg2.length) + 192] = 32
    mem[(32 * arg1.length) + (64 * arg2.length) + 224] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
    mem[(32 * arg1.length) + (64 * arg2.length) + 256 len floor32(mem[(32 * arg1.length) + (32 * arg2.length) + 160])] = mem[(32 * arg1.length) + (32 * arg2.length) + 192 len floor32(mem[(32 * arg1.length) + (32 * arg2.length) + 160])]
    return 32, mem[(32 * arg1.length) + (64 * arg2.length) + 224 len (32 * mem[(32 * arg1.length) + (32 * arg2.length) + 160]) + 32], 
}

function sub_78710b76(?) payable {
    require calldata.size - 4 >= 96
    require cd[4] <= 4294967296
    require cd[4] + 36 <= calldata.size
    require ('cd', 4).length <= 4294967296 and cd[4] + (32 * ('cd', 4).length) + 36 <= calldata.size
    require cd[36] <= 4294967296
    require cd[36] + 36 <= calldata.size
    require ('cd', 36).length <= 4294967296 and cd[36] + (32 * ('cd', 36).length) + 36 <= calldata.size
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    require ('cd', 36).length <= test266151307()
    mem[96] = ('cd', 36).length
    mem[64] = (32 * ('cd', 36).length) + 128
    if not ('cd', 36).length:
        require 0 < ('cd', 36).length
        mem[(32 * ('cd', 36).length) + 132] = this.address
        require ext_code.size(address(('cd', 36)[0]))
        staticcall address(('cd', 36)[0]).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[(32 * ('cd', 36).length) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        idx = 0
        while idx < ('cd', 36).length:
            require idx < ('cd', 4).length
            require idx < ('cd', 36).length
            if not idx:
                require idx + 1 < ('cd', 36).length
                require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                staticcall address(cd[((32 * idx) + cd[4] + 36)]).getReserves() with:
                        gas gas_remaining wei
                mem[(32 * ('cd', 36).length) + 128 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                if cd[68] <= 0:
                    revert with 0, 
                                32,
                                43,
                                0x59556e697377617056324c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                mem[(32 * ('cd', 36).length) + 239 len 21]
                if address(cd[((32 * idx) + cd[36] + 36)]) < address(cd[((32 * idx + 1) + cd[36] + 36)]):
                    if address(cd[((32 * idx) + cd[36] + 36)]) == address(cd[((32 * idx) + cd[36] + 36)]):
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 36).length) + 236 len 24]
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 36).length) + 236 len 24]
                        if 997 * cd[68] / 997 != cd[68]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[32]):
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68]) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68])
                            require idx < ('cd', 36).length
                            mem[(32 * idx) + 128] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68])
                        else:
                            require Mask(112, 0, ext_call.return_data[32])
                            if 997 * cd[68] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * cd[68]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68]) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68])
                            require idx < ('cd', 36).length
                            mem[(32 * idx) + 128] = 997 * cd[68] * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68])
                    else:
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 36).length) + 236 len 24]
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 36).length) + 236 len 24]
                        if 997 * cd[68] / 997 != cd[68]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68]) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68])
                            require idx < ('cd', 36).length
                            mem[(32 * idx) + 128] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68])
                        else:
                            require Mask(112, 0, ext_call.return_data[0])
                            if 997 * cd[68] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * cd[68]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68]) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68])
                            require idx < ('cd', 36).length
                            mem[(32 * idx) + 128] = 997 * cd[68] * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68])
                else:
                    if address(cd[((32 * idx) + cd[36] + 36)]) == address(cd[((32 * idx + 1) + cd[36] + 36)]):
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 36).length) + 236 len 24]
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 36).length) + 236 len 24]
                        if 997 * cd[68] / 997 != cd[68]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[32]):
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68]) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68])
                            require idx < ('cd', 36).length
                            mem[(32 * idx) + 128] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68])
                        else:
                            require Mask(112, 0, ext_call.return_data[32])
                            if 997 * cd[68] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * cd[68]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68]) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68])
                            require idx < ('cd', 36).length
                            mem[(32 * idx) + 128] = 997 * cd[68] * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68])
                    else:
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 36).length) + 236 len 24]
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 36).length) + 236 len 24]
                        if 997 * cd[68] / 997 != cd[68]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68]) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68])
                            require idx < ('cd', 36).length
                            mem[(32 * idx) + 128] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68])
                        else:
                            require Mask(112, 0, ext_call.return_data[0])
                            if 997 * cd[68] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * cd[68]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68]) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68])
                            require idx < ('cd', 36).length
                            mem[(32 * idx) + 128] = 997 * cd[68] * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68])
            else:
                if idx != ('cd', 36).length - 1:
                    require idx + 1 < ('cd', 36).length
                    require idx - 1 < ('cd', 36).length
                    _208 = mem[(32 * idx - 1) + 128]
                    require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                    staticcall address(cd[((32 * idx) + cd[4] + 36)]).getReserves() with:
                            gas gas_remaining wei
                    mem[(32 * ('cd', 36).length) + 128 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    if _208 <= 0:
                        revert with 0, 
                                    32,
                                    43,
                                    0x59556e697377617056324c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                    mem[(32 * ('cd', 36).length) + 239 len 21]
                    if address(cd[((32 * idx) + cd[36] + 36)]) < address(cd[((32 * idx + 1) + cd[36] + 36)]):
                        if address(cd[((32 * idx) + cd[36] + 36)]) == address(cd[((32 * idx) + cd[36] + 36)]):
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 36).length) + 236 len 24]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 36).length) + 236 len 24]
                            if 997 * _208 / 997 != _208:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _208) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _208)
                                require idx < ('cd', 36).length
                                mem[(32 * idx) + 128] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _208)
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * _208 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * _208:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _208) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _208)
                                require idx < ('cd', 36).length
                                mem[(32 * idx) + 128] = 997 * _208 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _208)
                        else:
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 36).length) + 236 len 24]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 36).length) + 236 len 24]
                            if 997 * _208 / 997 != _208:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _208) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _208)
                                require idx < ('cd', 36).length
                                mem[(32 * idx) + 128] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _208)
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if 997 * _208 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * _208:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _208) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _208)
                                require idx < ('cd', 36).length
                                mem[(32 * idx) + 128] = 997 * _208 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _208)
                    else:
                        if address(cd[((32 * idx) + cd[36] + 36)]) == address(cd[((32 * idx + 1) + cd[36] + 36)]):
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 36).length) + 236 len 24]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 36).length) + 236 len 24]
                            if 997 * _208 / 997 != _208:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _208) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _208)
                                require idx < ('cd', 36).length
                                mem[(32 * idx) + 128] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _208)
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * _208 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * _208:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _208) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _208)
                                require idx < ('cd', 36).length
                                mem[(32 * idx) + 128] = 997 * _208 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _208)
                        else:
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 36).length) + 236 len 24]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 36).length) + 236 len 24]
                            if 997 * _208 / 997 != _208:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _208) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _208)
                                require idx < ('cd', 36).length
                                mem[(32 * idx) + 128] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _208)
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if 997 * _208 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * _208:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _208) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _208)
                                require idx < ('cd', 36).length
                                mem[(32 * idx) + 128] = 997 * _208 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _208)
                else:
                    require 0 < ('cd', 36).length
                    require idx - 1 < ('cd', 36).length
                    _209 = mem[(32 * idx - 1) + 128]
                    require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                    staticcall address(cd[((32 * idx) + cd[4] + 36)]).getReserves() with:
                            gas gas_remaining wei
                    mem[(32 * ('cd', 36).length) + 128 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    if _209 <= 0:
                        revert with 0, 
                                    32,
                                    43,
                                    0x59556e697377617056324c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                    mem[(32 * ('cd', 36).length) + 239 len 21]
                    if address(cd[((32 * idx) + cd[36] + 36)]) < address(('cd', 36)[0]):
                        if address(cd[((32 * idx) + cd[36] + 36)]) == address(cd[((32 * idx) + cd[36] + 36)]):
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 36).length) + 236 len 24]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 36).length) + 236 len 24]
                            if 997 * _209 / 997 != _209:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _209) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _209)
                                require idx < ('cd', 36).length
                                mem[(32 * idx) + 128] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _209)
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * _209 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * _209:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _209) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _209)
                                require idx < ('cd', 36).length
                                mem[(32 * idx) + 128] = 997 * _209 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _209)
                        else:
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 36).length) + 236 len 24]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 36).length) + 236 len 24]
                            if 997 * _209 / 997 != _209:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _209) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _209)
                                require idx < ('cd', 36).length
                                mem[(32 * idx) + 128] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _209)
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if 997 * _209 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * _209:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _209) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _209)
                                require idx < ('cd', 36).length
                                mem[(32 * idx) + 128] = 997 * _209 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _209)
                    else:
                        if address(cd[((32 * idx) + cd[36] + 36)]) == address(('cd', 36)[0]):
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 36).length) + 236 len 24]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 36).length) + 236 len 24]
                            if 997 * _209 / 997 != _209:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _209) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _209)
                                require idx < ('cd', 36).length
                                mem[(32 * idx) + 128] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _209)
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * _209 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * _209:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _209) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _209)
                                require idx < ('cd', 36).length
                                mem[(32 * idx) + 128] = 997 * _209 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _209)
                        else:
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 36).length) + 236 len 24]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 36).length) + 236 len 24]
                            if 997 * _209 / 997 != _209:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _209) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _209)
                                require idx < ('cd', 36).length
                                mem[(32 * idx) + 128] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _209)
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if 997 * _209 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * _209:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _209) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _209)
                                require idx < ('cd', 36).length
                                mem[(32 * idx) + 128] = 997 * _209 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _209)
            idx = idx + 1
            continue 
        require 0 < ('cd', 36).length
        require 0 < ('cd', 4).length
        mem[(32 * ('cd', 36).length) + 132] = address(('cd', 4)[0])
        mem[(32 * ('cd', 36).length) + 164] = cd[68]
        require ext_code.size(address(('cd', 36)[0]))
        call address(('cd', 36)[0]).0xa9059cbb with:
             gas gas_remaining wei
            args address(('cd', 4)[0]), cd[68]
        mem[(32 * ('cd', 36).length) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        idx = 0
        while idx < ('cd', 36).length:
            require idx < mem[96]
            if idx == ('cd', 36).length - 1:
                _929 = mem[(32 * idx) + 128]
                require idx < ('cd', 36).length
                require 0 < ('cd', 36).length
                require idx < ('cd', 4).length
                if address(cd[((32 * idx) + cd[36] + 36)]) == address(('cd', 36)[0]):
                    revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                if address(cd[((32 * idx) + cd[36] + 36)]) < address(('cd', 36)[0]):
                    if not address(cd[((32 * idx) + cd[36] + 36)]):
                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                    if address(cd[((32 * idx) + cd[36] + 36)]) == address(cd[((32 * idx) + cd[36] + 36)]):
                        _956 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_956 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_956 + 36] = 0
                        mem[_956 + 68] = _929
                        mem[_956 + 100] = this.address
                        mem[_956 + 132] = 128
                        mem[_956 + 164] = mem[_956]
                        s = 0
                        while s < mem[_956]:
                            mem[_956 + s + 196] = mem[_956 + s + 32]
                            s = s + 32
                            continue 
                        if not mem[_956] % 32:
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _929, address(this.address), 128, mem[_956 + 164 len mem[_956] + 32]
                        else:
                            mem[floor32(mem[_956]) + _956 + 196] = mem[floor32(mem[_956]) + _956 + -(mem[_956] % 32) + 228 len mem[_956] % 32]
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _929, address(this.address), 128, mem[_956], mem[_956 + 196 len floor32(mem[_956]) + 32]
                    else:
                        _957 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_957 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_957 + 36] = _929
                        mem[_957 + 68] = 0
                        mem[_957 + 100] = this.address
                        mem[_957 + 132] = 128
                        mem[_957 + 164] = mem[_957]
                        s = 0
                        while s < mem[_957]:
                            mem[_957 + s + 196] = mem[_957 + s + 32]
                            s = s + 32
                            continue 
                        if not mem[_957] % 32:
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _929, 0, address(this.address), 128, mem[_957 + 164 len mem[_957] + 32]
                        else:
                            mem[floor32(mem[_957]) + _957 + 196] = mem[floor32(mem[_957]) + _957 + -(mem[_957] % 32) + 228 len mem[_957] % 32]
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _929, 0, address(this.address), 128, mem[_957], mem[_957 + 196 len floor32(mem[_957]) + 32]
                else:
                    if not address(('cd', 36)[0]):
                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                    if address(cd[((32 * idx) + cd[36] + 36)]) == address(('cd', 36)[0]):
                        _958 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_958 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_958 + 36] = 0
                        mem[_958 + 68] = _929
                        mem[_958 + 100] = this.address
                        mem[_958 + 132] = 128
                        mem[_958 + 164] = mem[_958]
                        s = 0
                        while s < mem[_958]:
                            mem[_958 + s + 196] = mem[_958 + s + 32]
                            s = s + 32
                            continue 
                        if not mem[_958] % 32:
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _929, address(this.address), 128, mem[_958 + 164 len mem[_958] + 32]
                        else:
                            mem[floor32(mem[_958]) + _958 + 196] = mem[floor32(mem[_958]) + _958 + -(mem[_958] % 32) + 228 len mem[_958] % 32]
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _929, address(this.address), 128, mem[_958], mem[_958 + 196 len floor32(mem[_958]) + 32]
                    else:
                        _959 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_959 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_959 + 36] = _929
                        mem[_959 + 68] = 0
                        mem[_959 + 100] = this.address
                        mem[_959 + 132] = 128
                        mem[_959 + 164] = mem[_959]
                        s = 0
                        while s < mem[_959]:
                            mem[_959 + s + 196] = mem[_959 + s + 32]
                            s = s + 32
                            continue 
                        if not mem[_959] % 32:
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _929, 0, address(this.address), 128, mem[_959 + 164 len mem[_959] + 32]
                        else:
                            mem[floor32(mem[_959]) + _959 + 196] = mem[floor32(mem[_959]) + _959 + -(mem[_959] % 32) + 228 len mem[_959] % 32]
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _929, 0, address(this.address), 128, mem[_959], mem[_959 + 196 len floor32(mem[_959]) + 32]
            else:
                _928 = mem[(32 * idx) + 128]
                require idx < ('cd', 36).length
                require idx + 1 < ('cd', 36).length
                require idx < ('cd', 4).length
                require idx + 1 < ('cd', 4).length
                if address(cd[((32 * idx) + cd[36] + 36)]) == address(cd[((32 * idx + 1) + cd[36] + 36)]):
                    revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                if address(cd[((32 * idx) + cd[36] + 36)]) < address(cd[((32 * idx + 1) + cd[36] + 36)]):
                    if not address(cd[((32 * idx) + cd[36] + 36)]):
                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                    if address(cd[((32 * idx) + cd[36] + 36)]) == address(cd[((32 * idx) + cd[36] + 36)]):
                        _964 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_964 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_964 + 36] = 0
                        mem[_964 + 68] = _928
                        mem[_964 + 100] = address(cd[((32 * idx + 1) + cd[4] + 36)])
                        mem[_964 + 132] = 128
                        mem[_964 + 164] = mem[_964]
                        s = 0
                        while s < mem[_964]:
                            mem[_964 + s + 196] = mem[_964 + s + 32]
                            s = s + 32
                            continue 
                        if not mem[_964] % 32:
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _928, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_964 + 164 len mem[_964] + 32]
                        else:
                            mem[floor32(mem[_964]) + _964 + 196] = mem[floor32(mem[_964]) + _964 + -(mem[_964] % 32) + 228 len mem[_964] % 32]
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _928, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_964], mem[_964 + 196 len floor32(mem[_964]) + 32]
                    else:
                        _965 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_965 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_965 + 36] = _928
                        mem[_965 + 68] = 0
                        mem[_965 + 100] = address(cd[((32 * idx + 1) + cd[4] + 36)])
                        mem[_965 + 132] = 128
                        mem[_965 + 164] = mem[_965]
                        s = 0
                        while s < mem[_965]:
                            mem[_965 + s + 196] = mem[_965 + s + 32]
                            s = s + 32
                            continue 
                        if not mem[_965] % 32:
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _928, 0, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_965 + 164 len mem[_965] + 32]
                        else:
                            mem[floor32(mem[_965]) + _965 + 196] = mem[floor32(mem[_965]) + _965 + -(mem[_965] % 32) + 228 len mem[_965] % 32]
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _928, 0, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_965], mem[_965 + 196 len floor32(mem[_965]) + 32]
                else:
                    if not address(cd[((32 * idx + 1) + cd[36] + 36)]):
                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                    if address(cd[((32 * idx) + cd[36] + 36)]) == address(cd[((32 * idx + 1) + cd[36] + 36)]):
                        _966 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_966 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_966 + 36] = 0
                        mem[_966 + 68] = _928
                        mem[_966 + 100] = address(cd[((32 * idx + 1) + cd[4] + 36)])
                        mem[_966 + 132] = 128
                        mem[_966 + 164] = mem[_966]
                        s = 0
                        while s < mem[_966]:
                            mem[_966 + s + 196] = mem[_966 + s + 32]
                            s = s + 32
                            continue 
                        if not mem[_966] % 32:
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _928, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_966 + 164 len mem[_966] + 32]
                        else:
                            mem[floor32(mem[_966]) + _966 + 196] = mem[floor32(mem[_966]) + _966 + -(mem[_966] % 32) + 228 len mem[_966] % 32]
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _928, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_966], mem[_966 + 196 len floor32(mem[_966]) + 32]
                    else:
                        _967 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_967 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_967 + 36] = _928
                        mem[_967 + 68] = 0
                        mem[_967 + 100] = address(cd[((32 * idx + 1) + cd[4] + 36)])
                        mem[_967 + 132] = 128
                        mem[_967 + 164] = mem[_967]
                        s = 0
                        while s < mem[_967]:
                            mem[_967 + s + 196] = mem[_967 + s + 32]
                            s = s + 32
                            continue 
                        if not mem[_967] % 32:
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _928, 0, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_967 + 164 len mem[_967] + 32]
                        else:
                            mem[floor32(mem[_967]) + _967 + 196] = mem[floor32(mem[_967]) + _967 + -(mem[_967] % 32) + 228 len mem[_967] % 32]
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _928, 0, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_967], mem[_967 + 196 len floor32(mem[_967]) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            idx = idx + 1
            continue 
    else:
        mem[128 len 32 * ('cd', 36).length] = call.data[calldata.size len 32 * ('cd', 36).length]
        require 0 < ('cd', 36).length
        mem[(32 * ('cd', 36).length) + 132] = this.address
        require ext_code.size(address(('cd', 36)[0]))
        staticcall address(('cd', 36)[0]).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[(32 * ('cd', 36).length) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        idx = 0
        while idx < ('cd', 36).length:
            require idx < ('cd', 4).length
            require idx < ('cd', 36).length
            if not idx:
                require idx + 1 < ('cd', 36).length
                require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                staticcall address(cd[((32 * idx) + cd[4] + 36)]).getReserves() with:
                        gas gas_remaining wei
                mem[(32 * ('cd', 36).length) + 128 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                if cd[68] <= 0:
                    revert with 0, 
                                32,
                                43,
                                0x59556e697377617056324c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                mem[(32 * ('cd', 36).length) + 239 len 21]
                if address(cd[((32 * idx) + cd[36] + 36)]) < address(cd[((32 * idx + 1) + cd[36] + 36)]):
                    if address(cd[((32 * idx) + cd[36] + 36)]) == address(cd[((32 * idx) + cd[36] + 36)]):
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 36).length) + 236 len 24]
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 36).length) + 236 len 24]
                        if 997 * cd[68] / 997 != cd[68]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[32]):
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68]) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68])
                            require idx < ('cd', 36).length
                            mem[(32 * idx) + 128] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68])
                        else:
                            require Mask(112, 0, ext_call.return_data[32])
                            if 997 * cd[68] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * cd[68]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68]) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68])
                            require idx < ('cd', 36).length
                            mem[(32 * idx) + 128] = 997 * cd[68] * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68])
                    else:
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 36).length) + 236 len 24]
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 36).length) + 236 len 24]
                        if 997 * cd[68] / 997 != cd[68]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68]) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68])
                            require idx < ('cd', 36).length
                            mem[(32 * idx) + 128] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68])
                        else:
                            require Mask(112, 0, ext_call.return_data[0])
                            if 997 * cd[68] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * cd[68]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68]) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68])
                            require idx < ('cd', 36).length
                            mem[(32 * idx) + 128] = 997 * cd[68] * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68])
                else:
                    if address(cd[((32 * idx) + cd[36] + 36)]) == address(cd[((32 * idx + 1) + cd[36] + 36)]):
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 36).length) + 236 len 24]
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 36).length) + 236 len 24]
                        if 997 * cd[68] / 997 != cd[68]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[32]):
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68]) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68])
                            require idx < ('cd', 36).length
                            mem[(32 * idx) + 128] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68])
                        else:
                            require Mask(112, 0, ext_call.return_data[32])
                            if 997 * cd[68] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * cd[68]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68]) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68])
                            require idx < ('cd', 36).length
                            mem[(32 * idx) + 128] = 997 * cd[68] * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68])
                    else:
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 36).length) + 236 len 24]
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 36).length) + 236 len 24]
                        if 997 * cd[68] / 997 != cd[68]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68]) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68])
                            require idx < ('cd', 36).length
                            mem[(32 * idx) + 128] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68])
                        else:
                            require Mask(112, 0, ext_call.return_data[0])
                            if 997 * cd[68] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * cd[68]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68]) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68])
                            require idx < ('cd', 36).length
                            mem[(32 * idx) + 128] = 997 * cd[68] * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68])
            else:
                if idx != ('cd', 36).length - 1:
                    require idx + 1 < ('cd', 36).length
                    require idx - 1 < ('cd', 36).length
                    require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                    staticcall address(cd[((32 * idx) + cd[4] + 36)]).getReserves() with:
                            gas gas_remaining wei
                    mem[(32 * ('cd', 36).length) + 128 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    if mem[(32 * idx - 1) + 128] <= 0:
                        revert with 0, 
                                    32,
                                    43,
                                    0x59556e697377617056324c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                    mem[(32 * ('cd', 36).length) + 239 len 21]
                    if address(cd[((32 * idx) + cd[36] + 36)]) < address(cd[((32 * idx + 1) + cd[36] + 36)]):
                        if address(cd[((32 * idx) + cd[36] + 36)]) == address(cd[((32 * idx) + cd[36] + 36)]):
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 36).length) + 236 len 24]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 36).length) + 236 len 24]
                            if 997 * mem[(32 * idx - 1) + 128] / 997 != mem[(32 * idx - 1) + 128]:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * mem[(32 * idx - 1) + 128]) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * mem[(32 * idx - 1) + 128])
                                require idx < ('cd', 36).length
                                mem[(32 * idx) + 128] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * mem[(32 * idx - 1) + 128])
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * mem[(32 * idx - 1) + 128] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * mem[(32 * idx - 1) + 128]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * mem[(32 * idx - 1) + 128]) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * mem[(32 * idx - 1) + 128])
                                require idx < ('cd', 36).length
                                mem[(32 * idx) + 128] = 997 * mem[(32 * idx - 1) + 128] * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * mem[(32 * idx - 1) + 128])
                        else:
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 36).length) + 236 len 24]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 36).length) + 236 len 24]
                            if 997 * mem[(32 * idx - 1) + 128] / 997 != mem[(32 * idx - 1) + 128]:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * mem[(32 * idx - 1) + 128]) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * mem[(32 * idx - 1) + 128])
                                require idx < ('cd', 36).length
                                mem[(32 * idx) + 128] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * mem[(32 * idx - 1) + 128])
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if 997 * mem[(32 * idx - 1) + 128] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * mem[(32 * idx - 1) + 128]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * mem[(32 * idx - 1) + 128]) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * mem[(32 * idx - 1) + 128])
                                require idx < ('cd', 36).length
                                mem[(32 * idx) + 128] = 997 * mem[(32 * idx - 1) + 128] * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * mem[(32 * idx - 1) + 128])
                    else:
                        if address(cd[((32 * idx) + cd[36] + 36)]) == address(cd[((32 * idx + 1) + cd[36] + 36)]):
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 36).length) + 236 len 24]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 36).length) + 236 len 24]
                            if 997 * mem[(32 * idx - 1) + 128] / 997 != mem[(32 * idx - 1) + 128]:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * mem[(32 * idx - 1) + 128]) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * mem[(32 * idx - 1) + 128])
                                require idx < ('cd', 36).length
                                mem[(32 * idx) + 128] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * mem[(32 * idx - 1) + 128])
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * mem[(32 * idx - 1) + 128] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * mem[(32 * idx - 1) + 128]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * mem[(32 * idx - 1) + 128]) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * mem[(32 * idx - 1) + 128])
                                require idx < ('cd', 36).length
                                mem[(32 * idx) + 128] = 997 * mem[(32 * idx - 1) + 128] * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * mem[(32 * idx - 1) + 128])
                        else:
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 36).length) + 236 len 24]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 36).length) + 236 len 24]
                            if 997 * mem[(32 * idx - 1) + 128] / 997 != mem[(32 * idx - 1) + 128]:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * mem[(32 * idx - 1) + 128]) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * mem[(32 * idx - 1) + 128])
                                require idx < ('cd', 36).length
                                mem[(32 * idx) + 128] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * mem[(32 * idx - 1) + 128])
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if 997 * mem[(32 * idx - 1) + 128] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * mem[(32 * idx - 1) + 128]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * mem[(32 * idx - 1) + 128]) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * mem[(32 * idx - 1) + 128])
                                require idx < ('cd', 36).length
                                mem[(32 * idx) + 128] = 997 * mem[(32 * idx - 1) + 128] * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * mem[(32 * idx - 1) + 128])
                else:
                    require 0 < ('cd', 36).length
                    require idx - 1 < ('cd', 36).length
                    require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                    staticcall address(cd[((32 * idx) + cd[4] + 36)]).getReserves() with:
                            gas gas_remaining wei
                    mem[(32 * ('cd', 36).length) + 128 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    if mem[(32 * idx - 1) + 128] <= 0:
                        revert with 0, 
                                    32,
                                    43,
                                    0x59556e697377617056324c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                    mem[(32 * ('cd', 36).length) + 239 len 21]
                    if address(cd[((32 * idx) + cd[36] + 36)]) < address(('cd', 36)[0]):
                        if address(cd[((32 * idx) + cd[36] + 36)]) == address(cd[((32 * idx) + cd[36] + 36)]):
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 36).length) + 236 len 24]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 36).length) + 236 len 24]
                            if 997 * mem[(32 * idx - 1) + 128] / 997 != mem[(32 * idx - 1) + 128]:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * mem[(32 * idx - 1) + 128]) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * mem[(32 * idx - 1) + 128])
                                require idx < ('cd', 36).length
                                mem[(32 * idx) + 128] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * mem[(32 * idx - 1) + 128])
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * mem[(32 * idx - 1) + 128] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * mem[(32 * idx - 1) + 128]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * mem[(32 * idx - 1) + 128]) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * mem[(32 * idx - 1) + 128])
                                require idx < ('cd', 36).length
                                mem[(32 * idx) + 128] = 997 * mem[(32 * idx - 1) + 128] * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * mem[(32 * idx - 1) + 128])
                        else:
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 36).length) + 236 len 24]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 36).length) + 236 len 24]
                            if 997 * mem[(32 * idx - 1) + 128] / 997 != mem[(32 * idx - 1) + 128]:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * mem[(32 * idx - 1) + 128]) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * mem[(32 * idx - 1) + 128])
                                require idx < ('cd', 36).length
                                mem[(32 * idx) + 128] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * mem[(32 * idx - 1) + 128])
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if 997 * mem[(32 * idx - 1) + 128] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * mem[(32 * idx - 1) + 128]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * mem[(32 * idx - 1) + 128]) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * mem[(32 * idx - 1) + 128])
                                require idx < ('cd', 36).length
                                mem[(32 * idx) + 128] = 997 * mem[(32 * idx - 1) + 128] * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * mem[(32 * idx - 1) + 128])
                    else:
                        if address(cd[((32 * idx) + cd[36] + 36)]) == address(('cd', 36)[0]):
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 36).length) + 236 len 24]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 36).length) + 236 len 24]
                            if 997 * mem[(32 * idx - 1) + 128] / 997 != mem[(32 * idx - 1) + 128]:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * mem[(32 * idx - 1) + 128]) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * mem[(32 * idx - 1) + 128])
                                require idx < ('cd', 36).length
                                mem[(32 * idx) + 128] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * mem[(32 * idx - 1) + 128])
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * mem[(32 * idx - 1) + 128] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * mem[(32 * idx - 1) + 128]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * mem[(32 * idx - 1) + 128]) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * mem[(32 * idx - 1) + 128])
                                require idx < ('cd', 36).length
                                mem[(32 * idx) + 128] = 997 * mem[(32 * idx - 1) + 128] * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * mem[(32 * idx - 1) + 128])
                        else:
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 36).length) + 236 len 24]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 36).length) + 236 len 24]
                            if 997 * mem[(32 * idx - 1) + 128] / 997 != mem[(32 * idx - 1) + 128]:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * mem[(32 * idx - 1) + 128]) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * mem[(32 * idx - 1) + 128])
                                require idx < ('cd', 36).length
                                mem[(32 * idx) + 128] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * mem[(32 * idx - 1) + 128])
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if 997 * mem[(32 * idx - 1) + 128] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * mem[(32 * idx - 1) + 128]:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * mem[(32 * idx - 1) + 128]) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * mem[(32 * idx - 1) + 128])
                                require idx < ('cd', 36).length
                                mem[(32 * idx) + 128] = 997 * mem[(32 * idx - 1) + 128] * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * mem[(32 * idx - 1) + 128])
            idx = idx + 1
            continue 
        require 0 < ('cd', 36).length
        require 0 < ('cd', 4).length
        mem[(32 * ('cd', 36).length) + 132] = address(('cd', 4)[0])
        mem[(32 * ('cd', 36).length) + 164] = cd[68]
        require ext_code.size(address(('cd', 36)[0]))
        call address(('cd', 36)[0]).0xa9059cbb with:
             gas gas_remaining wei
            args address(('cd', 4)[0]), cd[68]
        mem[(32 * ('cd', 36).length) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        idx = 0
        while idx < ('cd', 36).length:
            require idx < mem[96]
            if idx == ('cd', 36).length - 1:
                _931 = mem[(32 * idx) + 128]
                require idx < ('cd', 36).length
                require 0 < ('cd', 36).length
                require idx < ('cd', 4).length
                if address(cd[((32 * idx) + cd[36] + 36)]) == address(('cd', 36)[0]):
                    revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                if address(cd[((32 * idx) + cd[36] + 36)]) < address(('cd', 36)[0]):
                    if not address(cd[((32 * idx) + cd[36] + 36)]):
                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                    if address(cd[((32 * idx) + cd[36] + 36)]) == address(cd[((32 * idx) + cd[36] + 36)]):
                        _960 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_960 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_960 + 36] = 0
                        mem[_960 + 68] = _931
                        mem[_960 + 100] = this.address
                        mem[_960 + 132] = 128
                        mem[_960 + 164] = mem[_960]
                        s = 0
                        while s < mem[_960]:
                            mem[_960 + s + 196] = mem[_960 + s + 32]
                            s = s + 32
                            continue 
                        if not mem[_960] % 32:
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _931, address(this.address), 128, mem[_960 + 164 len mem[_960] + 32]
                        else:
                            mem[floor32(mem[_960]) + _960 + 196] = mem[floor32(mem[_960]) + _960 + -(mem[_960] % 32) + 228 len mem[_960] % 32]
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _931, address(this.address), 128, mem[_960], mem[_960 + 196 len floor32(mem[_960]) + 32]
                    else:
                        _961 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_961 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_961 + 36] = _931
                        mem[_961 + 68] = 0
                        mem[_961 + 100] = this.address
                        mem[_961 + 132] = 128
                        mem[_961 + 164] = mem[_961]
                        s = 0
                        while s < mem[_961]:
                            mem[_961 + s + 196] = mem[_961 + s + 32]
                            s = s + 32
                            continue 
                        if not mem[_961] % 32:
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _931, 0, address(this.address), 128, mem[_961 + 164 len mem[_961] + 32]
                        else:
                            mem[floor32(mem[_961]) + _961 + 196] = mem[floor32(mem[_961]) + _961 + -(mem[_961] % 32) + 228 len mem[_961] % 32]
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _931, 0, address(this.address), 128, mem[_961], mem[_961 + 196 len floor32(mem[_961]) + 32]
                else:
                    if not address(('cd', 36)[0]):
                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                    if address(cd[((32 * idx) + cd[36] + 36)]) == address(('cd', 36)[0]):
                        _962 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_962 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_962 + 36] = 0
                        mem[_962 + 68] = _931
                        mem[_962 + 100] = this.address
                        mem[_962 + 132] = 128
                        mem[_962 + 164] = mem[_962]
                        s = 0
                        while s < mem[_962]:
                            mem[_962 + s + 196] = mem[_962 + s + 32]
                            s = s + 32
                            continue 
                        if not mem[_962] % 32:
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _931, address(this.address), 128, mem[_962 + 164 len mem[_962] + 32]
                        else:
                            mem[floor32(mem[_962]) + _962 + 196] = mem[floor32(mem[_962]) + _962 + -(mem[_962] % 32) + 228 len mem[_962] % 32]
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _931, address(this.address), 128, mem[_962], mem[_962 + 196 len floor32(mem[_962]) + 32]
                    else:
                        _963 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_963 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_963 + 36] = _931
                        mem[_963 + 68] = 0
                        mem[_963 + 100] = this.address
                        mem[_963 + 132] = 128
                        mem[_963 + 164] = mem[_963]
                        s = 0
                        while s < mem[_963]:
                            mem[_963 + s + 196] = mem[_963 + s + 32]
                            s = s + 32
                            continue 
                        if not mem[_963] % 32:
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _931, 0, address(this.address), 128, mem[_963 + 164 len mem[_963] + 32]
                        else:
                            mem[floor32(mem[_963]) + _963 + 196] = mem[floor32(mem[_963]) + _963 + -(mem[_963] % 32) + 228 len mem[_963] % 32]
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _931, 0, address(this.address), 128, mem[_963], mem[_963 + 196 len floor32(mem[_963]) + 32]
            else:
                _930 = mem[(32 * idx) + 128]
                require idx < ('cd', 36).length
                require idx + 1 < ('cd', 36).length
                require idx < ('cd', 4).length
                require idx + 1 < ('cd', 4).length
                if address(cd[((32 * idx) + cd[36] + 36)]) == address(cd[((32 * idx + 1) + cd[36] + 36)]):
                    revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                if address(cd[((32 * idx) + cd[36] + 36)]) < address(cd[((32 * idx + 1) + cd[36] + 36)]):
                    if not address(cd[((32 * idx) + cd[36] + 36)]):
                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                    if address(cd[((32 * idx) + cd[36] + 36)]) == address(cd[((32 * idx) + cd[36] + 36)]):
                        _980 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_980 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_980 + 36] = 0
                        mem[_980 + 68] = _930
                        mem[_980 + 100] = address(cd[((32 * idx + 1) + cd[4] + 36)])
                        mem[_980 + 132] = 128
                        mem[_980 + 164] = mem[_980]
                        s = 0
                        while s < mem[_980]:
                            mem[_980 + s + 196] = mem[_980 + s + 32]
                            s = s + 32
                            continue 
                        if not mem[_980] % 32:
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _930, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_980 + 164 len mem[_980] + 32]
                        else:
                            mem[floor32(mem[_980]) + _980 + 196] = mem[floor32(mem[_980]) + _980 + -(mem[_980] % 32) + 228 len mem[_980] % 32]
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _930, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_980], mem[_980 + 196 len floor32(mem[_980]) + 32]
                    else:
                        _981 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_981 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_981 + 36] = _930
                        mem[_981 + 68] = 0
                        mem[_981 + 100] = address(cd[((32 * idx + 1) + cd[4] + 36)])
                        mem[_981 + 132] = 128
                        mem[_981 + 164] = mem[_981]
                        s = 0
                        while s < mem[_981]:
                            mem[_981 + s + 196] = mem[_981 + s + 32]
                            s = s + 32
                            continue 
                        if not mem[_981] % 32:
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _930, 0, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_981 + 164 len mem[_981] + 32]
                        else:
                            mem[floor32(mem[_981]) + _981 + 196] = mem[floor32(mem[_981]) + _981 + -(mem[_981] % 32) + 228 len mem[_981] % 32]
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _930, 0, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_981], mem[_981 + 196 len floor32(mem[_981]) + 32]
                else:
                    if not address(cd[((32 * idx + 1) + cd[36] + 36)]):
                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                    if address(cd[((32 * idx) + cd[36] + 36)]) == address(cd[((32 * idx + 1) + cd[36] + 36)]):
                        _982 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_982 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_982 + 36] = 0
                        mem[_982 + 68] = _930
                        mem[_982 + 100] = address(cd[((32 * idx + 1) + cd[4] + 36)])
                        mem[_982 + 132] = 128
                        mem[_982 + 164] = mem[_982]
                        s = 0
                        while s < mem[_982]:
                            mem[_982 + s + 196] = mem[_982 + s + 32]
                            s = s + 32
                            continue 
                        if not mem[_982] % 32:
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _930, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_982 + 164 len mem[_982] + 32]
                        else:
                            mem[floor32(mem[_982]) + _982 + 196] = mem[floor32(mem[_982]) + _982 + -(mem[_982] % 32) + 228 len mem[_982] % 32]
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _930, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_982], mem[_982 + 196 len floor32(mem[_982]) + 32]
                    else:
                        _983 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_983 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_983 + 36] = _930
                        mem[_983 + 68] = 0
                        mem[_983 + 100] = address(cd[((32 * idx + 1) + cd[4] + 36)])
                        mem[_983 + 132] = 128
                        mem[_983 + 164] = mem[_983]
                        s = 0
                        while s < mem[_983]:
                            mem[_983 + s + 196] = mem[_983 + s + 32]
                            s = s + 32
                            continue 
                        if not mem[_983] % 32:
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _930, 0, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_983 + 164 len mem[_983] + 32]
                        else:
                            mem[floor32(mem[_983]) + _983 + 196] = mem[floor32(mem[_983]) + _983 + -(mem[_983] % 32) + 228 len mem[_983] % 32]
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _930, 0, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_983], mem[_983 + 196 len floor32(mem[_983]) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            idx = idx + 1
            continue 
}

function sub_b06e202d(?) payable {
    require calldata.size - 4 >= 96
    require cd[4] <= 4294967296
    require cd[4] + 36 <= calldata.size
    require ('cd', 4).length <= 4294967296 and cd[4] + (32 * ('cd', 4).length) + 36 <= calldata.size
    require cd[36] <= 4294967296
    require cd[36] + 36 <= calldata.size
    require ('cd', 36).length <= 4294967296 and cd[36] + (32 * ('cd', 36).length) + 36 <= calldata.size
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    mem[96] = ('cd', 4).length
    mem[128 len 32 * ('cd', 4).length] = call.data[cd[4] + 36 len 32 * ('cd', 4).length]
    mem[(32 * ('cd', 4).length) + 128] = ('cd', 36).length
    mem[(32 * ('cd', 4).length) + 160 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
    require ('cd', 36).length <= test266151307()
    mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160] = ('cd', 36).length
    mem[64] = (32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 192
    if not ('cd', 36).length:
        idx = 0
        while idx < ('cd', 36).length:
            require idx < ('cd', 4).length
            require idx < ('cd', 36).length
            if not idx:
                _339 = mem[(32 * idx) + (32 * ('cd', 4).length) + 160]
                require idx + 1 < ('cd', 36).length
                _353 = mem[(32 * idx + 1) + (32 * ('cd', 4).length) + 160]
                require ext_code.size(mem[(32 * idx) + 140 len 20])
                staticcall mem[(32 * idx) + 140 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 192 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                if cd[68] <= 0:
                    revert with 0, 
                                32,
                                43,
                                0x59556e697377617056324c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 303 len 21]
                if mem[(32 * idx) + (32 * ('cd', 4).length) + 172 len 20] < mem[(32 * idx + 1) + (32 * ('cd', 4).length) + 172 len 20]:
                    if address(_339) == address(_339):
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                        if 997 * cd[68] / 997 != cd[68]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[32]):
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68]) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68])
                            require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68])
                        else:
                            require Mask(112, 0, ext_call.return_data[32])
                            if 997 * cd[68] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * cd[68]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68]) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68])
                            require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * cd[68] * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68])
                    else:
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                        if 997 * cd[68] / 997 != cd[68]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68]) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68])
                            require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68])
                        else:
                            require Mask(112, 0, ext_call.return_data[0])
                            if 997 * cd[68] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * cd[68]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68]) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68])
                            require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * cd[68] * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68])
                else:
                    if address(_339) == address(_353):
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                        if 997 * cd[68] / 997 != cd[68]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[32]):
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68]) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68])
                            require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68])
                        else:
                            require Mask(112, 0, ext_call.return_data[32])
                            if 997 * cd[68] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * cd[68]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68]) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68])
                            require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * cd[68] * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68])
                    else:
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                        if 997 * cd[68] / 997 != cd[68]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68]) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68])
                            require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68])
                        else:
                            require Mask(112, 0, ext_call.return_data[0])
                            if 997 * cd[68] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * cd[68]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68]) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68])
                            require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * cd[68] * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68])
            else:
                if idx == ('cd', 36).length - 1:
                    _351 = mem[(32 * idx) + (32 * ('cd', 4).length) + 160]
                    require 0 < ('cd', 36).length
                    require idx - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                    _371 = mem[(32 * idx - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                    require ext_code.size(mem[(32 * idx) + 140 len 20])
                    staticcall mem[(32 * idx) + 140 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 192 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    if _371 <= 0:
                        revert with 0, 
                                    32,
                                    43,
                                    0x59556e697377617056324c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                    mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 303 len 21]
                    if mem[(32 * idx) + (32 * ('cd', 4).length) + 172 len 20] < mem[(32 * ('cd', 4).length) + 172 len 20]:
                        if address(_351) == address(_351):
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if 997 * _371 / 997 != _371:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _371) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _371)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _371)
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * _371 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * _371:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _371) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _371)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * _371 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _371)
                        else:
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if 997 * _371 / 997 != _371:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _371) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _371)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _371)
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if 997 * _371 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * _371:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _371) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _371)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * _371 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _371)
                    else:
                        if address(_351) == mem[(32 * ('cd', 4).length) + 172 len 20]:
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if 997 * _371 / 997 != _371:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _371) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _371)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _371)
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * _371 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * _371:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _371) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _371)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * _371 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _371)
                        else:
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if 997 * _371 / 997 != _371:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _371) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _371)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _371)
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if 997 * _371 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * _371:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _371) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _371)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * _371 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _371)
                else:
                    _349 = mem[(32 * idx) + (32 * ('cd', 4).length) + 160]
                    require idx + 1 < ('cd', 36).length
                    _361 = mem[(32 * idx + 1) + (32 * ('cd', 4).length) + 160]
                    require idx - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                    _370 = mem[(32 * idx - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                    require ext_code.size(mem[(32 * idx) + 140 len 20])
                    staticcall mem[(32 * idx) + 140 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 192 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    if _370 <= 0:
                        revert with 0, 
                                    32,
                                    43,
                                    0x59556e697377617056324c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                    mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 303 len 21]
                    if mem[(32 * idx) + (32 * ('cd', 4).length) + 172 len 20] < mem[(32 * idx + 1) + (32 * ('cd', 4).length) + 172 len 20]:
                        if address(_349) == address(_349):
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if 997 * _370 / 997 != _370:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _370) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _370)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _370)
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * _370 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * _370:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _370) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _370)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * _370 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _370)
                        else:
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if 997 * _370 / 997 != _370:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _370) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _370)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _370)
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if 997 * _370 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * _370:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _370) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _370)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * _370 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _370)
                    else:
                        if address(_349) == address(_361):
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if 997 * _370 / 997 != _370:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _370) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _370)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _370)
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * _370 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * _370:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _370) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _370)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * _370 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _370)
                        else:
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if 997 * _370 / 997 != _370:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _370) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _370)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _370)
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if 997 * _370 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * _370:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _370) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _370)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * _370 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _370)
            idx = idx + 1
            continue 
        require ('cd', 36).length - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
        if mem[(32 * ('cd', 36).length - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] <= cd[68]:
            revert with 0, 'prek'
        require 0 < ('cd', 36).length
        mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 196] = this.address
        require ext_code.size(address(('cd', 36)[0]))
        staticcall address(('cd', 36)[0]).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 192] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        idx = 0
        while idx < ('cd', 36).length:
            if idx:
                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                if idx == ('cd', 36).length - 1:
                    _1027 = mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                    require idx < ('cd', 36).length
                    require 0 < ('cd', 36).length
                    require idx < ('cd', 4).length
                    if address(cd[((32 * idx) + cd[36] + 36)]) == address(('cd', 36)[0]):
                        revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                    if address(cd[((32 * idx) + cd[36] + 36)]) < address(('cd', 36)[0]):
                        if not address(cd[((32 * idx) + cd[36] + 36)]):
                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                        if address(cd[((32 * idx) + cd[36] + 36)]) == address(cd[((32 * idx) + cd[36] + 36)]):
                            _1077 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_1077 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_1077 + 36] = 0
                            mem[_1077 + 68] = _1027
                            mem[_1077 + 100] = this.address
                            mem[_1077 + 132] = 128
                            mem[_1077 + 164] = mem[_1077]
                            s = 0
                            while s < mem[_1077]:
                                mem[_1077 + s + 196] = mem[_1077 + s + 32]
                                s = s + 32
                                continue 
                            if not mem[_1077] % 32:
                                require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                                call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _1027, address(this.address), 128, mem[_1077 + 164 len mem[_1077] + 32]
                            else:
                                mem[floor32(mem[_1077]) + _1077 + 196] = mem[floor32(mem[_1077]) + _1077 + -(mem[_1077] % 32) + 228 len mem[_1077] % 32]
                                require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                                call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _1027, address(this.address), 128, mem[_1077], mem[_1077 + 196 len floor32(mem[_1077]) + 32]
                        else:
                            _1078 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_1078 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_1078 + 36] = _1027
                            mem[_1078 + 68] = 0
                            mem[_1078 + 100] = this.address
                            mem[_1078 + 132] = 128
                            mem[_1078 + 164] = mem[_1078]
                            s = 0
                            while s < mem[_1078]:
                                mem[_1078 + s + 196] = mem[_1078 + s + 32]
                                s = s + 32
                                continue 
                            if not mem[_1078] % 32:
                                require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                                call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _1027, 0, address(this.address), 128, mem[_1078 + 164 len mem[_1078] + 32]
                            else:
                                mem[floor32(mem[_1078]) + _1078 + 196] = mem[floor32(mem[_1078]) + _1078 + -(mem[_1078] % 32) + 228 len mem[_1078] % 32]
                                require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                                call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _1027, 0, address(this.address), 128, mem[_1078], mem[_1078 + 196 len floor32(mem[_1078]) + 32]
                    else:
                        if not address(('cd', 36)[0]):
                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                        if address(cd[((32 * idx) + cd[36] + 36)]) == address(('cd', 36)[0]):
                            _1079 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_1079 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_1079 + 36] = 0
                            mem[_1079 + 68] = _1027
                            mem[_1079 + 100] = this.address
                            mem[_1079 + 132] = 128
                            mem[_1079 + 164] = mem[_1079]
                            s = 0
                            while s < mem[_1079]:
                                mem[_1079 + s + 196] = mem[_1079 + s + 32]
                                s = s + 32
                                continue 
                            if not mem[_1079] % 32:
                                require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                                call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _1027, address(this.address), 128, mem[_1079 + 164 len mem[_1079] + 32]
                            else:
                                mem[floor32(mem[_1079]) + _1079 + 196] = mem[floor32(mem[_1079]) + _1079 + -(mem[_1079] % 32) + 228 len mem[_1079] % 32]
                                require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                                call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _1027, address(this.address), 128, mem[_1079], mem[_1079 + 196 len floor32(mem[_1079]) + 32]
                        else:
                            _1080 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_1080 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_1080 + 36] = _1027
                            mem[_1080 + 68] = 0
                            mem[_1080 + 100] = this.address
                            mem[_1080 + 132] = 128
                            mem[_1080 + 164] = mem[_1080]
                            s = 0
                            while s < mem[_1080]:
                                mem[_1080 + s + 196] = mem[_1080 + s + 32]
                                s = s + 32
                                continue 
                            if not mem[_1080] % 32:
                                require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                                call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _1027, 0, address(this.address), 128, mem[_1080 + 164 len mem[_1080] + 32]
                            else:
                                mem[floor32(mem[_1080]) + _1080 + 196] = mem[floor32(mem[_1080]) + _1080 + -(mem[_1080] % 32) + 228 len mem[_1080] % 32]
                                require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                                call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _1027, 0, address(this.address), 128, mem[_1080], mem[_1080 + 196 len floor32(mem[_1080]) + 32]
                else:
                    _1026 = mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                    require idx < ('cd', 36).length
                    require idx + 1 < ('cd', 36).length
                    require idx < ('cd', 4).length
                    require idx + 1 < ('cd', 4).length
                    if address(cd[((32 * idx) + cd[36] + 36)]) == address(cd[((32 * idx + 1) + cd[36] + 36)]):
                        revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                    if address(cd[((32 * idx) + cd[36] + 36)]) < address(cd[((32 * idx + 1) + cd[36] + 36)]):
                        if not address(cd[((32 * idx) + cd[36] + 36)]):
                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                        if address(cd[((32 * idx) + cd[36] + 36)]) == address(cd[((32 * idx) + cd[36] + 36)]):
                            _1085 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_1085 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_1085 + 36] = 0
                            mem[_1085 + 68] = _1026
                            mem[_1085 + 100] = address(cd[((32 * idx + 1) + cd[4] + 36)])
                            mem[_1085 + 132] = 128
                            mem[_1085 + 164] = mem[_1085]
                            s = 0
                            while s < mem[_1085]:
                                mem[_1085 + s + 196] = mem[_1085 + s + 32]
                                s = s + 32
                                continue 
                            if not mem[_1085] % 32:
                                require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                                call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _1026, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_1085 + 164 len mem[_1085] + 32]
                            else:
                                mem[floor32(mem[_1085]) + _1085 + 196] = mem[floor32(mem[_1085]) + _1085 + -(mem[_1085] % 32) + 228 len mem[_1085] % 32]
                                require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                                call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _1026, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_1085], mem[_1085 + 196 len floor32(mem[_1085]) + 32]
                        else:
                            _1086 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_1086 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_1086 + 36] = _1026
                            mem[_1086 + 68] = 0
                            mem[_1086 + 100] = address(cd[((32 * idx + 1) + cd[4] + 36)])
                            mem[_1086 + 132] = 128
                            mem[_1086 + 164] = mem[_1086]
                            s = 0
                            while s < mem[_1086]:
                                mem[_1086 + s + 196] = mem[_1086 + s + 32]
                                s = s + 32
                                continue 
                            if not mem[_1086] % 32:
                                require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                                call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _1026, 0, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_1086 + 164 len mem[_1086] + 32]
                            else:
                                mem[floor32(mem[_1086]) + _1086 + 196] = mem[floor32(mem[_1086]) + _1086 + -(mem[_1086] % 32) + 228 len mem[_1086] % 32]
                                require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                                call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _1026, 0, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_1086], mem[_1086 + 196 len floor32(mem[_1086]) + 32]
                    else:
                        if not address(cd[((32 * idx + 1) + cd[36] + 36)]):
                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                        if address(cd[((32 * idx) + cd[36] + 36)]) == address(cd[((32 * idx + 1) + cd[36] + 36)]):
                            _1087 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_1087 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_1087 + 36] = 0
                            mem[_1087 + 68] = _1026
                            mem[_1087 + 100] = address(cd[((32 * idx + 1) + cd[4] + 36)])
                            mem[_1087 + 132] = 128
                            mem[_1087 + 164] = mem[_1087]
                            s = 0
                            while s < mem[_1087]:
                                mem[_1087 + s + 196] = mem[_1087 + s + 32]
                                s = s + 32
                                continue 
                            if not mem[_1087] % 32:
                                require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                                call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _1026, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_1087 + 164 len mem[_1087] + 32]
                            else:
                                mem[floor32(mem[_1087]) + _1087 + 196] = mem[floor32(mem[_1087]) + _1087 + -(mem[_1087] % 32) + 228 len mem[_1087] % 32]
                                require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                                call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _1026, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_1087], mem[_1087 + 196 len floor32(mem[_1087]) + 32]
                        else:
                            _1088 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_1088 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_1088 + 36] = _1026
                            mem[_1088 + 68] = 0
                            mem[_1088 + 100] = address(cd[((32 * idx + 1) + cd[4] + 36)])
                            mem[_1088 + 132] = 128
                            mem[_1088 + 164] = mem[_1088]
                            s = 0
                            while s < mem[_1088]:
                                mem[_1088 + s + 196] = mem[_1088 + s + 32]
                                s = s + 32
                                continue 
                            if not mem[_1088] % 32:
                                require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                                call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _1026, 0, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_1088 + 164 len mem[_1088] + 32]
                            else:
                                mem[floor32(mem[_1088]) + _1088 + 196] = mem[floor32(mem[_1088]) + _1088 + -(mem[_1088] % 32) + 228 len mem[_1088] % 32]
                                require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                                call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _1026, 0, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_1088], mem[_1088 + 196 len floor32(mem[_1088]) + 32]
            else:
                require 0 < ('cd', 36).length
                require 0 < ('cd', 4).length
                mem[mem[64] + 4] = address(('cd', 4)[0])
                mem[mem[64] + 36] = cd[68]
                require ext_code.size(address(('cd', 36)[0]))
                call address(('cd', 36)[0]).0xa9059cbb with:
                     gas gas_remaining wei
                    args address(('cd', 4)[0]), cd[68]
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                _1047 = mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                require idx < ('cd', 36).length
                require idx + 1 < ('cd', 36).length
                require idx < ('cd', 4).length
                require idx + 1 < ('cd', 4).length
                if address(cd[((32 * idx) + cd[36] + 36)]) == address(cd[((32 * idx + 1) + cd[36] + 36)]):
                    revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                if address(cd[((32 * idx) + cd[36] + 36)]) < address(cd[((32 * idx + 1) + cd[36] + 36)]):
                    if not address(cd[((32 * idx) + cd[36] + 36)]):
                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                    if address(cd[((32 * idx) + cd[36] + 36)]) == address(cd[((32 * idx) + cd[36] + 36)]):
                        _1193 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_1193 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_1193 + 36] = 0
                        mem[_1193 + 68] = _1047
                        mem[_1193 + 100] = address(cd[((32 * idx + 1) + cd[4] + 36)])
                        mem[_1193 + 132] = 128
                        mem[_1193 + 164] = mem[_1193]
                        s = 0
                        while s < mem[_1193]:
                            mem[_1193 + s + 196] = mem[_1193 + s + 32]
                            s = s + 32
                            continue 
                        if not mem[_1193] % 32:
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _1047, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_1193 + 164 len mem[_1193] + 32]
                        else:
                            mem[floor32(mem[_1193]) + _1193 + 196] = mem[floor32(mem[_1193]) + _1193 + -(mem[_1193] % 32) + 228 len mem[_1193] % 32]
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _1047, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_1193], mem[_1193 + 196 len floor32(mem[_1193]) + 32]
                    else:
                        _1194 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_1194 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_1194 + 36] = _1047
                        mem[_1194 + 68] = 0
                        mem[_1194 + 100] = address(cd[((32 * idx + 1) + cd[4] + 36)])
                        mem[_1194 + 132] = 128
                        mem[_1194 + 164] = mem[_1194]
                        s = 0
                        while s < mem[_1194]:
                            mem[_1194 + s + 196] = mem[_1194 + s + 32]
                            s = s + 32
                            continue 
                        if not mem[_1194] % 32:
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _1047, 0, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_1194 + 164 len mem[_1194] + 32]
                        else:
                            mem[floor32(mem[_1194]) + _1194 + 196] = mem[floor32(mem[_1194]) + _1194 + -(mem[_1194] % 32) + 228 len mem[_1194] % 32]
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _1047, 0, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_1194], mem[_1194 + 196 len floor32(mem[_1194]) + 32]
                else:
                    if not address(cd[((32 * idx + 1) + cd[36] + 36)]):
                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                    if address(cd[((32 * idx) + cd[36] + 36)]) == address(cd[((32 * idx + 1) + cd[36] + 36)]):
                        _1195 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_1195 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_1195 + 36] = 0
                        mem[_1195 + 68] = _1047
                        mem[_1195 + 100] = address(cd[((32 * idx + 1) + cd[4] + 36)])
                        mem[_1195 + 132] = 128
                        mem[_1195 + 164] = mem[_1195]
                        s = 0
                        while s < mem[_1195]:
                            mem[_1195 + s + 196] = mem[_1195 + s + 32]
                            s = s + 32
                            continue 
                        if not mem[_1195] % 32:
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _1047, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_1195 + 164 len mem[_1195] + 32]
                        else:
                            mem[floor32(mem[_1195]) + _1195 + 196] = mem[floor32(mem[_1195]) + _1195 + -(mem[_1195] % 32) + 228 len mem[_1195] % 32]
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _1047, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_1195], mem[_1195 + 196 len floor32(mem[_1195]) + 32]
                    else:
                        _1196 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_1196 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_1196 + 36] = _1047
                        mem[_1196 + 68] = 0
                        mem[_1196 + 100] = address(cd[((32 * idx + 1) + cd[4] + 36)])
                        mem[_1196 + 132] = 128
                        mem[_1196 + 164] = mem[_1196]
                        s = 0
                        while s < mem[_1196]:
                            mem[_1196 + s + 196] = mem[_1196 + s + 32]
                            s = s + 32
                            continue 
                        if not mem[_1196] % 32:
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _1047, 0, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_1196 + 164 len mem[_1196] + 32]
                        else:
                            mem[floor32(mem[_1196]) + _1196 + 196] = mem[floor32(mem[_1196]) + _1196 + -(mem[_1196] % 32) + 228 len mem[_1196] % 32]
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _1047, 0, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_1196], mem[_1196 + 196 len floor32(mem[_1196]) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            idx = idx + 1
            continue 
    else:
        mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192 len 32 * ('cd', 36).length] = call.data[calldata.size len 32 * ('cd', 36).length]
        idx = 0
        while idx < ('cd', 36).length:
            require idx < ('cd', 4).length
            require idx < ('cd', 36).length
            if not idx:
                _345 = mem[(32 * idx) + (32 * ('cd', 4).length) + 160]
                require idx + 1 < ('cd', 36).length
                _360 = mem[(32 * idx + 1) + (32 * ('cd', 4).length) + 160]
                require ext_code.size(mem[(32 * idx) + 140 len 20])
                staticcall mem[(32 * idx) + 140 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 192 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                if cd[68] <= 0:
                    revert with 0, 
                                32,
                                43,
                                0x59556e697377617056324c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 303 len 21]
                if mem[(32 * idx) + (32 * ('cd', 4).length) + 172 len 20] < mem[(32 * idx + 1) + (32 * ('cd', 4).length) + 172 len 20]:
                    if address(_345) == address(_345):
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                        if 997 * cd[68] / 997 != cd[68]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[32]):
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68]) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68])
                            require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68])
                        else:
                            require Mask(112, 0, ext_call.return_data[32])
                            if 997 * cd[68] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * cd[68]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68]) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68])
                            require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * cd[68] * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68])
                    else:
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                        if 997 * cd[68] / 997 != cd[68]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68]) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68])
                            require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68])
                        else:
                            require Mask(112, 0, ext_call.return_data[0])
                            if 997 * cd[68] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * cd[68]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68]) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68])
                            require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * cd[68] * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68])
                else:
                    if address(_345) == address(_360):
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                        if 997 * cd[68] / 997 != cd[68]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[32]):
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68]) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68])
                            require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68])
                        else:
                            require Mask(112, 0, ext_call.return_data[32])
                            if 997 * cd[68] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * cd[68]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68]) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68])
                            require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * cd[68] * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[68])
                    else:
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                        if 997 * cd[68] / 997 != cd[68]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68]) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68])
                            require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68])
                        else:
                            require Mask(112, 0, ext_call.return_data[0])
                            if 997 * cd[68] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * cd[68]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68]) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68])
                            require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * cd[68] * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[68])
            else:
                if idx == ('cd', 36).length - 1:
                    _358 = mem[(32 * idx) + (32 * ('cd', 4).length) + 160]
                    require 0 < ('cd', 36).length
                    require idx - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                    _374 = mem[(32 * idx - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                    require ext_code.size(mem[(32 * idx) + 140 len 20])
                    staticcall mem[(32 * idx) + 140 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 192 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    if _374 <= 0:
                        revert with 0, 
                                    32,
                                    43,
                                    0x59556e697377617056324c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                    mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 303 len 21]
                    if mem[(32 * idx) + (32 * ('cd', 4).length) + 172 len 20] < mem[(32 * ('cd', 4).length) + 172 len 20]:
                        if address(_358) == address(_358):
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if 997 * _374 / 997 != _374:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _374) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _374)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _374)
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * _374 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * _374:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _374) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _374)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * _374 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _374)
                        else:
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if 997 * _374 / 997 != _374:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _374) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _374)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _374)
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if 997 * _374 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * _374:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _374) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _374)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * _374 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _374)
                    else:
                        if address(_358) == mem[(32 * ('cd', 4).length) + 172 len 20]:
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if 997 * _374 / 997 != _374:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _374) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _374)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _374)
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * _374 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * _374:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _374) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _374)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * _374 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _374)
                        else:
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if 997 * _374 / 997 != _374:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _374) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _374)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _374)
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if 997 * _374 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * _374:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _374) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _374)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * _374 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _374)
                else:
                    _356 = mem[(32 * idx) + (32 * ('cd', 4).length) + 160]
                    require idx + 1 < ('cd', 36).length
                    _365 = mem[(32 * idx + 1) + (32 * ('cd', 4).length) + 160]
                    require idx - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                    _373 = mem[(32 * idx - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                    require ext_code.size(mem[(32 * idx) + 140 len 20])
                    staticcall mem[(32 * idx) + 140 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 192 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    if _373 <= 0:
                        revert with 0, 
                                    32,
                                    43,
                                    0x59556e697377617056324c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                    mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 303 len 21]
                    if mem[(32 * idx) + (32 * ('cd', 4).length) + 172 len 20] < mem[(32 * idx + 1) + (32 * ('cd', 4).length) + 172 len 20]:
                        if address(_356) == address(_356):
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if 997 * _373 / 997 != _373:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _373) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _373)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _373)
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * _373 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * _373:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _373) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _373)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * _373 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _373)
                        else:
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if 997 * _373 / 997 != _373:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _373) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _373)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _373)
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if 997 * _373 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * _373:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _373) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _373)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * _373 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _373)
                    else:
                        if address(_356) == address(_365):
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if 997 * _373 / 997 != _373:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _373) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _373)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _373)
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * _373 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * _373:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _373) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _373)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * _373 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _373)
                        else:
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if 997 * _373 / 997 != _373:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _373) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _373)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _373)
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if 997 * _373 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * _373:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _373) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _373)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * _373 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _373)
            idx = idx + 1
            continue 
        require ('cd', 36).length - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
        if mem[(32 * ('cd', 36).length - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] <= cd[68]:
            revert with 0, 'prek'
        require 0 < ('cd', 36).length
        mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 196] = this.address
        require ext_code.size(address(('cd', 36)[0]))
        staticcall address(('cd', 36)[0]).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 192] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        idx = 0
        while idx < ('cd', 36).length:
            if idx:
                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                if idx == ('cd', 36).length - 1:
                    _1032 = mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                    require idx < ('cd', 36).length
                    require 0 < ('cd', 36).length
                    require idx < ('cd', 4).length
                    if address(cd[((32 * idx) + cd[36] + 36)]) == address(('cd', 36)[0]):
                        revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                    if address(cd[((32 * idx) + cd[36] + 36)]) < address(('cd', 36)[0]):
                        if not address(cd[((32 * idx) + cd[36] + 36)]):
                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                        if address(cd[((32 * idx) + cd[36] + 36)]) == address(cd[((32 * idx) + cd[36] + 36)]):
                            _1081 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_1081 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_1081 + 36] = 0
                            mem[_1081 + 68] = _1032
                            mem[_1081 + 100] = this.address
                            mem[_1081 + 132] = 128
                            mem[_1081 + 164] = mem[_1081]
                            s = 0
                            while s < mem[_1081]:
                                mem[_1081 + s + 196] = mem[_1081 + s + 32]
                                s = s + 32
                                continue 
                            if not mem[_1081] % 32:
                                require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                                call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _1032, address(this.address), 128, mem[_1081 + 164 len mem[_1081] + 32]
                            else:
                                mem[floor32(mem[_1081]) + _1081 + 196] = mem[floor32(mem[_1081]) + _1081 + -(mem[_1081] % 32) + 228 len mem[_1081] % 32]
                                require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                                call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _1032, address(this.address), 128, mem[_1081], mem[_1081 + 196 len floor32(mem[_1081]) + 32]
                        else:
                            _1082 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_1082 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_1082 + 36] = _1032
                            mem[_1082 + 68] = 0
                            mem[_1082 + 100] = this.address
                            mem[_1082 + 132] = 128
                            mem[_1082 + 164] = mem[_1082]
                            s = 0
                            while s < mem[_1082]:
                                mem[_1082 + s + 196] = mem[_1082 + s + 32]
                                s = s + 32
                                continue 
                            if not mem[_1082] % 32:
                                require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                                call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _1032, 0, address(this.address), 128, mem[_1082 + 164 len mem[_1082] + 32]
                            else:
                                mem[floor32(mem[_1082]) + _1082 + 196] = mem[floor32(mem[_1082]) + _1082 + -(mem[_1082] % 32) + 228 len mem[_1082] % 32]
                                require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                                call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _1032, 0, address(this.address), 128, mem[_1082], mem[_1082 + 196 len floor32(mem[_1082]) + 32]
                    else:
                        if not address(('cd', 36)[0]):
                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                        if address(cd[((32 * idx) + cd[36] + 36)]) == address(('cd', 36)[0]):
                            _1083 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_1083 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_1083 + 36] = 0
                            mem[_1083 + 68] = _1032
                            mem[_1083 + 100] = this.address
                            mem[_1083 + 132] = 128
                            mem[_1083 + 164] = mem[_1083]
                            s = 0
                            while s < mem[_1083]:
                                mem[_1083 + s + 196] = mem[_1083 + s + 32]
                                s = s + 32
                                continue 
                            if not mem[_1083] % 32:
                                require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                                call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _1032, address(this.address), 128, mem[_1083 + 164 len mem[_1083] + 32]
                            else:
                                mem[floor32(mem[_1083]) + _1083 + 196] = mem[floor32(mem[_1083]) + _1083 + -(mem[_1083] % 32) + 228 len mem[_1083] % 32]
                                require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                                call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _1032, address(this.address), 128, mem[_1083], mem[_1083 + 196 len floor32(mem[_1083]) + 32]
                        else:
                            _1084 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_1084 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_1084 + 36] = _1032
                            mem[_1084 + 68] = 0
                            mem[_1084 + 100] = this.address
                            mem[_1084 + 132] = 128
                            mem[_1084 + 164] = mem[_1084]
                            s = 0
                            while s < mem[_1084]:
                                mem[_1084 + s + 196] = mem[_1084 + s + 32]
                                s = s + 32
                                continue 
                            if not mem[_1084] % 32:
                                require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                                call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _1032, 0, address(this.address), 128, mem[_1084 + 164 len mem[_1084] + 32]
                            else:
                                mem[floor32(mem[_1084]) + _1084 + 196] = mem[floor32(mem[_1084]) + _1084 + -(mem[_1084] % 32) + 228 len mem[_1084] % 32]
                                require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                                call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _1032, 0, address(this.address), 128, mem[_1084], mem[_1084 + 196 len floor32(mem[_1084]) + 32]
                else:
                    _1031 = mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                    require idx < ('cd', 36).length
                    require idx + 1 < ('cd', 36).length
                    require idx < ('cd', 4).length
                    require idx + 1 < ('cd', 4).length
                    if address(cd[((32 * idx) + cd[36] + 36)]) == address(cd[((32 * idx + 1) + cd[36] + 36)]):
                        revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                    if address(cd[((32 * idx) + cd[36] + 36)]) < address(cd[((32 * idx + 1) + cd[36] + 36)]):
                        if not address(cd[((32 * idx) + cd[36] + 36)]):
                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                        if address(cd[((32 * idx) + cd[36] + 36)]) == address(cd[((32 * idx) + cd[36] + 36)]):
                            _1105 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_1105 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_1105 + 36] = 0
                            mem[_1105 + 68] = _1031
                            mem[_1105 + 100] = address(cd[((32 * idx + 1) + cd[4] + 36)])
                            mem[_1105 + 132] = 128
                            mem[_1105 + 164] = mem[_1105]
                            s = 0
                            while s < mem[_1105]:
                                mem[_1105 + s + 196] = mem[_1105 + s + 32]
                                s = s + 32
                                continue 
                            if not mem[_1105] % 32:
                                require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                                call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _1031, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_1105 + 164 len mem[_1105] + 32]
                            else:
                                mem[floor32(mem[_1105]) + _1105 + 196] = mem[floor32(mem[_1105]) + _1105 + -(mem[_1105] % 32) + 228 len mem[_1105] % 32]
                                require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                                call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _1031, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_1105], mem[_1105 + 196 len floor32(mem[_1105]) + 32]
                        else:
                            _1106 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_1106 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_1106 + 36] = _1031
                            mem[_1106 + 68] = 0
                            mem[_1106 + 100] = address(cd[((32 * idx + 1) + cd[4] + 36)])
                            mem[_1106 + 132] = 128
                            mem[_1106 + 164] = mem[_1106]
                            s = 0
                            while s < mem[_1106]:
                                mem[_1106 + s + 196] = mem[_1106 + s + 32]
                                s = s + 32
                                continue 
                            if not mem[_1106] % 32:
                                require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                                call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _1031, 0, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_1106 + 164 len mem[_1106] + 32]
                            else:
                                mem[floor32(mem[_1106]) + _1106 + 196] = mem[floor32(mem[_1106]) + _1106 + -(mem[_1106] % 32) + 228 len mem[_1106] % 32]
                                require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                                call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _1031, 0, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_1106], mem[_1106 + 196 len floor32(mem[_1106]) + 32]
                    else:
                        if not address(cd[((32 * idx + 1) + cd[36] + 36)]):
                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                        if address(cd[((32 * idx) + cd[36] + 36)]) == address(cd[((32 * idx + 1) + cd[36] + 36)]):
                            _1107 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_1107 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_1107 + 36] = 0
                            mem[_1107 + 68] = _1031
                            mem[_1107 + 100] = address(cd[((32 * idx + 1) + cd[4] + 36)])
                            mem[_1107 + 132] = 128
                            mem[_1107 + 164] = mem[_1107]
                            s = 0
                            while s < mem[_1107]:
                                mem[_1107 + s + 196] = mem[_1107 + s + 32]
                                s = s + 32
                                continue 
                            if not mem[_1107] % 32:
                                require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                                call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _1031, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_1107 + 164 len mem[_1107] + 32]
                            else:
                                mem[floor32(mem[_1107]) + _1107 + 196] = mem[floor32(mem[_1107]) + _1107 + -(mem[_1107] % 32) + 228 len mem[_1107] % 32]
                                require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                                call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _1031, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_1107], mem[_1107 + 196 len floor32(mem[_1107]) + 32]
                        else:
                            _1108 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_1108 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_1108 + 36] = _1031
                            mem[_1108 + 68] = 0
                            mem[_1108 + 100] = address(cd[((32 * idx + 1) + cd[4] + 36)])
                            mem[_1108 + 132] = 128
                            mem[_1108 + 164] = mem[_1108]
                            s = 0
                            while s < mem[_1108]:
                                mem[_1108 + s + 196] = mem[_1108 + s + 32]
                                s = s + 32
                                continue 
                            if not mem[_1108] % 32:
                                require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                                call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _1031, 0, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_1108 + 164 len mem[_1108] + 32]
                            else:
                                mem[floor32(mem[_1108]) + _1108 + 196] = mem[floor32(mem[_1108]) + _1108 + -(mem[_1108] % 32) + 228 len mem[_1108] % 32]
                                require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                                call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _1031, 0, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_1108], mem[_1108 + 196 len floor32(mem[_1108]) + 32]
            else:
                require 0 < ('cd', 36).length
                require 0 < ('cd', 4).length
                mem[mem[64] + 4] = address(('cd', 4)[0])
                mem[mem[64] + 36] = cd[68]
                require ext_code.size(address(('cd', 36)[0]))
                call address(('cd', 36)[0]).0xa9059cbb with:
                     gas gas_remaining wei
                    args address(('cd', 4)[0]), cd[68]
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                _1048 = mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                require idx < ('cd', 36).length
                require idx + 1 < ('cd', 36).length
                require idx < ('cd', 4).length
                require idx + 1 < ('cd', 4).length
                if address(cd[((32 * idx) + cd[36] + 36)]) == address(cd[((32 * idx + 1) + cd[36] + 36)]):
                    revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                if address(cd[((32 * idx) + cd[36] + 36)]) < address(cd[((32 * idx + 1) + cd[36] + 36)]):
                    if not address(cd[((32 * idx) + cd[36] + 36)]):
                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                    if address(cd[((32 * idx) + cd[36] + 36)]) == address(cd[((32 * idx) + cd[36] + 36)]):
                        _1209 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_1209 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_1209 + 36] = 0
                        mem[_1209 + 68] = _1048
                        mem[_1209 + 100] = address(cd[((32 * idx + 1) + cd[4] + 36)])
                        mem[_1209 + 132] = 128
                        mem[_1209 + 164] = mem[_1209]
                        s = 0
                        while s < mem[_1209]:
                            mem[_1209 + s + 196] = mem[_1209 + s + 32]
                            s = s + 32
                            continue 
                        if not mem[_1209] % 32:
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _1048, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_1209 + 164 len mem[_1209] + 32]
                        else:
                            mem[floor32(mem[_1209]) + _1209 + 196] = mem[floor32(mem[_1209]) + _1209 + -(mem[_1209] % 32) + 228 len mem[_1209] % 32]
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _1048, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_1209], mem[_1209 + 196 len floor32(mem[_1209]) + 32]
                    else:
                        _1210 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_1210 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_1210 + 36] = _1048
                        mem[_1210 + 68] = 0
                        mem[_1210 + 100] = address(cd[((32 * idx + 1) + cd[4] + 36)])
                        mem[_1210 + 132] = 128
                        mem[_1210 + 164] = mem[_1210]
                        s = 0
                        while s < mem[_1210]:
                            mem[_1210 + s + 196] = mem[_1210 + s + 32]
                            s = s + 32
                            continue 
                        if not mem[_1210] % 32:
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _1048, 0, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_1210 + 164 len mem[_1210] + 32]
                        else:
                            mem[floor32(mem[_1210]) + _1210 + 196] = mem[floor32(mem[_1210]) + _1210 + -(mem[_1210] % 32) + 228 len mem[_1210] % 32]
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _1048, 0, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_1210], mem[_1210 + 196 len floor32(mem[_1210]) + 32]
                else:
                    if not address(cd[((32 * idx + 1) + cd[36] + 36)]):
                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                    if address(cd[((32 * idx) + cd[36] + 36)]) == address(cd[((32 * idx + 1) + cd[36] + 36)]):
                        _1211 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_1211 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_1211 + 36] = 0
                        mem[_1211 + 68] = _1048
                        mem[_1211 + 100] = address(cd[((32 * idx + 1) + cd[4] + 36)])
                        mem[_1211 + 132] = 128
                        mem[_1211 + 164] = mem[_1211]
                        s = 0
                        while s < mem[_1211]:
                            mem[_1211 + s + 196] = mem[_1211 + s + 32]
                            s = s + 32
                            continue 
                        if not mem[_1211] % 32:
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _1048, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_1211 + 164 len mem[_1211] + 32]
                        else:
                            mem[floor32(mem[_1211]) + _1211 + 196] = mem[floor32(mem[_1211]) + _1211 + -(mem[_1211] % 32) + 228 len mem[_1211] % 32]
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _1048, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_1211], mem[_1211 + 196 len floor32(mem[_1211]) + 32]
                    else:
                        _1212 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_1212 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_1212 + 36] = _1048
                        mem[_1212 + 68] = 0
                        mem[_1212 + 100] = address(cd[((32 * idx + 1) + cd[4] + 36)])
                        mem[_1212 + 132] = 128
                        mem[_1212 + 164] = mem[_1212]
                        s = 0
                        while s < mem[_1212]:
                            mem[_1212 + s + 196] = mem[_1212 + s + 32]
                            s = s + 32
                            continue 
                        if not mem[_1212] % 32:
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _1048, 0, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_1212 + 164 len mem[_1212] + 32]
                        else:
                            mem[floor32(mem[_1212]) + _1212 + 196] = mem[floor32(mem[_1212]) + _1212 + -(mem[_1212] % 32) + 228 len mem[_1212] % 32]
                            require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                            call address(cd[((32 * idx) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _1048, 0, address(cd[((32 * idx + 1) + cd[4] + 36)]), 128, mem[_1212], mem[_1212 + 196 len floor32(mem[_1212]) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            idx = idx + 1
            continue 
    require 0 < ('cd', 36).length
    require ext_code.size(address(('cd', 36)[0]))
    staticcall address(('cd', 36)[0]).0x70a08231 with:
            gas gas_remaining wei
           args address(this.address)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] <= ext_call.return_data[0]:
        revert with 0, 'nok'
}

function sub_a791148f(?) payable {
    require calldata.size - 4 >= 128
    require cd[4] <= 4294967296
    require cd[4] + 36 <= calldata.size
    require ('cd', 4).length <= 4294967296 and cd[4] + (32 * ('cd', 4).length) + 36 <= calldata.size
    require cd[36] <= 4294967296
    require cd[36] + 36 <= calldata.size
    require ('cd', 36).length <= 4294967296 and cd[36] + (32 * ('cd', 36).length) + 36 <= calldata.size
    require cd[68] <= 4294967296
    require cd[68] + 36 <= calldata.size
    require ('cd', 68).length <= 4294967296 and cd[68] + (32 * ('cd', 68).length) + 36 <= calldata.size
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    mem[96] = ('cd', 4).length
    mem[128 len 32 * ('cd', 4).length] = call.data[cd[4] + 36 len 32 * ('cd', 4).length]
    mem[(32 * ('cd', 4).length) + 128] = ('cd', 36).length
    mem[(32 * ('cd', 4).length) + 160 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
    require ('cd', 36).length <= test266151307()
    mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160] = ('cd', 36).length
    mem[64] = (32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 192
    if not ('cd', 36).length:
        idx = 0
        while idx < ('cd', 36).length:
            require idx < ('cd', 4).length
            require idx < ('cd', 36).length
            if not idx:
                _2091 = mem[(32 * idx) + (32 * ('cd', 4).length) + 160]
                require idx + 1 < ('cd', 36).length
                _2104 = mem[(32 * idx + 1) + (32 * ('cd', 4).length) + 160]
                require ext_code.size(mem[(32 * idx) + 140 len 20])
                staticcall mem[(32 * idx) + 140 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 192 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                if cd[100] <= 0:
                    revert with 0, 
                                32,
                                43,
                                0x59556e697377617056324c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 303 len 21]
                if mem[(32 * idx) + (32 * ('cd', 4).length) + 172 len 20] < mem[(32 * idx + 1) + (32 * ('cd', 4).length) + 172 len 20]:
                    if address(_2091) == address(_2091):
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                        if 997 * cd[100] / 997 != cd[100]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[32]):
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[100]) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[100])
                            require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[100])
                        else:
                            require Mask(112, 0, ext_call.return_data[32])
                            if 997 * cd[100] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * cd[100]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[100]) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[100])
                            require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * cd[100] * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[100])
                    else:
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                        if 997 * cd[100] / 997 != cd[100]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[100]) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[100])
                            require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[100])
                        else:
                            require Mask(112, 0, ext_call.return_data[0])
                            if 997 * cd[100] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * cd[100]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[100]) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[100])
                            require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * cd[100] * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[100])
                else:
                    if address(_2091) == address(_2104):
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                        if 997 * cd[100] / 997 != cd[100]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[32]):
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[100]) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[100])
                            require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[100])
                        else:
                            require Mask(112, 0, ext_call.return_data[32])
                            if 997 * cd[100] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * cd[100]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[100]) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[100])
                            require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * cd[100] * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[100])
                    else:
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                        if 997 * cd[100] / 997 != cd[100]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[100]) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[100])
                            require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[100])
                        else:
                            require Mask(112, 0, ext_call.return_data[0])
                            if 997 * cd[100] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * cd[100]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[100]) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[100])
                            require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * cd[100] * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[100])
            else:
                if idx == ('cd', 36).length - 1:
                    _2102 = mem[(32 * idx) + (32 * ('cd', 4).length) + 160]
                    require 0 < ('cd', 36).length
                    require idx - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                    _2122 = mem[(32 * idx - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                    require ext_code.size(mem[(32 * idx) + 140 len 20])
                    staticcall mem[(32 * idx) + 140 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 192 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    if _2122 <= 0:
                        revert with 0, 
                                    32,
                                    43,
                                    0x59556e697377617056324c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                    mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 303 len 21]
                    if mem[(32 * idx) + (32 * ('cd', 4).length) + 172 len 20] < mem[(32 * ('cd', 4).length) + 172 len 20]:
                        if address(_2102) == address(_2102):
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if 997 * _2122 / 997 != _2122:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2122) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2122)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2122)
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * _2122 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * _2122:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2122) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2122)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * _2122 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2122)
                        else:
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if 997 * _2122 / 997 != _2122:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2122) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2122)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2122)
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if 997 * _2122 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * _2122:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2122) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2122)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * _2122 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2122)
                    else:
                        if address(_2102) == mem[(32 * ('cd', 4).length) + 172 len 20]:
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if 997 * _2122 / 997 != _2122:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2122) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2122)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2122)
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * _2122 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * _2122:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2122) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2122)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * _2122 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2122)
                        else:
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if 997 * _2122 / 997 != _2122:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2122) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2122)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2122)
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if 997 * _2122 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * _2122:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2122) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2122)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * _2122 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2122)
                else:
                    _2100 = mem[(32 * idx) + (32 * ('cd', 4).length) + 160]
                    require idx + 1 < ('cd', 36).length
                    _2112 = mem[(32 * idx + 1) + (32 * ('cd', 4).length) + 160]
                    require idx - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                    _2121 = mem[(32 * idx - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                    require ext_code.size(mem[(32 * idx) + 140 len 20])
                    staticcall mem[(32 * idx) + 140 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 192 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    if _2121 <= 0:
                        revert with 0, 
                                    32,
                                    43,
                                    0x59556e697377617056324c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                    mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 303 len 21]
                    if mem[(32 * idx) + (32 * ('cd', 4).length) + 172 len 20] < mem[(32 * idx + 1) + (32 * ('cd', 4).length) + 172 len 20]:
                        if address(_2100) == address(_2100):
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if 997 * _2121 / 997 != _2121:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2121) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2121)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2121)
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * _2121 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * _2121:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2121) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2121)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * _2121 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2121)
                        else:
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if 997 * _2121 / 997 != _2121:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2121) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2121)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2121)
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if 997 * _2121 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * _2121:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2121) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2121)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * _2121 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2121)
                    else:
                        if address(_2100) == address(_2112):
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if 997 * _2121 / 997 != _2121:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2121) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2121)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2121)
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * _2121 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * _2121:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2121) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2121)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * _2121 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2121)
                        else:
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if 997 * _2121 / 997 != _2121:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2121) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2121)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2121)
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if 997 * _2121 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * _2121:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2121) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2121)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * _2121 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2121)
            idx = idx + 1
            continue 
        require 0 < ('cd', 36).length
        mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 196] = this.address
        require ext_code.size(address(('cd', 36)[0]))
        staticcall address(('cd', 36)[0]).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 192] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 0 < ('cd', 68).length
        s = 0
        t = not address(('cd', 68)[0])
        u = 0
        while s < ('cd', 36).length:
            if s == ('cd', 36).length - 1:
                require s < ('cd', 68).length
                if not t:
                    if not s:
                        if not address(cd[((32 * s) + cd[68] + 36)]):
                            require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            _4537 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                            require s < ('cd', 36).length
                            require s + 1 < ('cd', 36).length
                            require s < ('cd', 4).length
                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                            if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                if not address(cd[((32 * s) + cd[36] + 36)]):
                                    revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                    _5025 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_5025 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_5025 + 36] = 0
                                    mem[_5025 + 68] = _4537
                                    mem[_5025 + 100] = this.address
                                    mem[_5025 + 132] = 128
                                    mem[_5025 + 164] = mem[_5025]
                                    idx = 0
                                    while idx < mem[_5025]:
                                        mem[_5025 + idx + 196] = mem[_5025 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    if not mem[_5025] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _4537, address(this.address), 128, mem[_5025 + 164 len mem[_5025] + 32]
                                    else:
                                        mem[floor32(mem[_5025]) + _5025 + 196] = mem[floor32(mem[_5025]) + _5025 + -(mem[_5025] % 32) + 228 len mem[_5025] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _4537, address(this.address), 128, mem[_5025], mem[_5025 + 196 len floor32(mem[_5025]) + 32]
                                else:
                                    _5026 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_5026 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_5026 + 36] = _4537
                                    mem[_5026 + 68] = 0
                                    mem[_5026 + 100] = this.address
                                    mem[_5026 + 132] = 128
                                    mem[_5026 + 164] = mem[_5026]
                                    idx = 0
                                    while idx < mem[_5026]:
                                        mem[_5026 + idx + 196] = mem[_5026 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    if not mem[_5026] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _4537, 0, address(this.address), 128, mem[_5026 + 164 len mem[_5026] + 32]
                                    else:
                                        mem[floor32(mem[_5026]) + _5026 + 196] = mem[floor32(mem[_5026]) + _5026 + -(mem[_5026] % 32) + 228 len mem[_5026] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _4537, 0, address(this.address), 128, mem[_5026], mem[_5026 + 196 len floor32(mem[_5026]) + 32]
                            else:
                                if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                    revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                    _5027 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_5027 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_5027 + 36] = 0
                                    mem[_5027 + 68] = _4537
                                    mem[_5027 + 100] = this.address
                                    mem[_5027 + 132] = 128
                                    mem[_5027 + 164] = mem[_5027]
                                    idx = 0
                                    while idx < mem[_5027]:
                                        mem[_5027 + idx + 196] = mem[_5027 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    if not mem[_5027] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _4537, address(this.address), 128, mem[_5027 + 164 len mem[_5027] + 32]
                                    else:
                                        mem[floor32(mem[_5027]) + _5027 + 196] = mem[floor32(mem[_5027]) + _5027 + -(mem[_5027] % 32) + 228 len mem[_5027] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _4537, address(this.address), 128, mem[_5027], mem[_5027 + 196 len floor32(mem[_5027]) + 32]
                                else:
                                    _5028 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_5028 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_5028 + 36] = _4537
                                    mem[_5028 + 68] = 0
                                    mem[_5028 + 100] = this.address
                                    mem[_5028 + 132] = 128
                                    mem[_5028 + 164] = mem[_5028]
                                    idx = 0
                                    while idx < mem[_5028]:
                                        mem[_5028 + idx + 196] = mem[_5028 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    if not mem[_5028] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _4537, 0, address(this.address), 128, mem[_5028 + 164 len mem[_5028] + 32]
                                    else:
                                        mem[floor32(mem[_5028]) + _5028 + 196] = mem[floor32(mem[_5028]) + _5028 + -(mem[_5028] % 32) + 228 len mem[_5028] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _4537, 0, address(this.address), 128, mem[_5028], mem[_5028 + 196 len floor32(mem[_5028]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            s = s + 1
                            t = 0
                            u = this.address
                            continue 
                        require 0 < ('cd', 68).length
                        require s < ('cd', 36).length
                        require s + 1 < ('cd', 36).length
                        mem[mem[64] + 4] = this.address
                        mem[mem[64] + 36] = address(('cd', 68)[0])
                        require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                        staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                gas gas_remaining wei
                               args address(this.address), address(('cd', 68)[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= cd[100]:
                            _4707 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            require 0 < mem[_4707]
                            mem[_4707 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                            require 1 < mem[_4707]
                            mem[_4707 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                            mem[_4707 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_4707 + 100] = cd[100]
                            mem[_4707 + 132] = 1
                            mem[_4707 + 196] = this.address
                            mem[_4707 + 228] = block.timestamp + 300
                            mem[_4707 + 164] = 160
                            mem[_4707 + 260] = mem[_4707]
                            idx = 0
                            while idx < 32 * mem[_4707]:
                                mem[_4707 + idx + 292] = mem[_4707 + idx + 32]
                                idx = idx + 32
                                continue 
                            require ext_code.size(address(('cd', 68)[0]))
                            call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_4707 + 260 len (32 * mem[_4707]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_4707 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _4707 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _14157 = mem[_4707 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                            require mem[_4707 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                            require mem[_4707 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                            require mem[mem[_4707 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _4707 + 96] <= 4294967296 and mem[_4707 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_4707 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _4707 + 96]) + 32 <= return_data.size
                            mem[_4707 + ceil32(return_data.size) + 96] = mem[mem[_4707 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _4707 + 96]
                            _14729 = mem[_14157 + _4707 + 96]
                            idx = 0
                            while idx < 32 * _14729:
                                mem[_4707 + ceil32(return_data.size) + idx + 128] = mem[_14157 + _4707 + idx + 128]
                                idx = idx + 32
                                continue 
                            mem[64] = (32 * _14729) + _4707 + ceil32(return_data.size) + 128
                        else:
                            mem[mem[64] + 4] = address(('cd', 68)[0])
                            mem[mem[64] + 36] = 10000 * cd[100]
                            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                            call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(('cd', 68)[0]), 10000 * cd[100]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            _4950 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            require 0 < mem[_4950]
                            mem[_4950 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                            require 1 < mem[_4950]
                            mem[_4950 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                            mem[_4950 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_4950 + 100] = cd[100]
                            mem[_4950 + 132] = 1
                            mem[_4950 + 196] = this.address
                            mem[_4950 + 228] = block.timestamp + 300
                            mem[_4950 + 164] = 160
                            mem[_4950 + 260] = mem[_4950]
                            idx = 0
                            while idx < 32 * mem[_4950]:
                                mem[_4950 + idx + 292] = mem[_4950 + idx + 32]
                                idx = idx + 32
                                continue 
                            require ext_code.size(address(('cd', 68)[0]))
                            call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_4950 + 260 len (32 * mem[_4950]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_4950 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _4950 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _14159 = mem[_4950 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                            require mem[_4950 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                            require mem[_4950 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                            require mem[mem[_4950 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _4950 + 96] <= 4294967296 and mem[_4950 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_4950 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _4950 + 96]) + 32 <= return_data.size
                            mem[_4950 + ceil32(return_data.size) + 96] = mem[mem[_4950 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _4950 + 96]
                            _14730 = mem[_14159 + _4950 + 96]
                            idx = 0
                            while idx < 32 * _14730:
                                mem[_4950 + ceil32(return_data.size) + idx + 128] = mem[_14159 + _4950 + idx + 128]
                                idx = idx + 32
                                continue 
                            mem[64] = (32 * _14730) + _4950 + ceil32(return_data.size) + 128
                    else:
                        if s != ('cd', 36).length - 1:
                            if not address(cd[((32 * s) + cd[68] + 36)]):
                                require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                _4541 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                require s < ('cd', 36).length
                                require s + 1 < ('cd', 36).length
                                require s < ('cd', 4).length
                                if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                    revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                    if not address(cd[((32 * s) + cd[36] + 36)]):
                                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                        _5127 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_5127 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_5127 + 36] = 0
                                        mem[_5127 + 68] = _4541
                                        mem[_5127 + 100] = this.address
                                        mem[_5127 + 132] = 128
                                        mem[_5127 + 164] = mem[_5127]
                                        idx = 0
                                        while idx < mem[_5127]:
                                            mem[_5127 + idx + 196] = mem[_5127 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_5127] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4541, address(this.address), 128, mem[_5127 + 164 len mem[_5127] + 32]
                                        else:
                                            mem[floor32(mem[_5127]) + _5127 + 196] = mem[floor32(mem[_5127]) + _5127 + -(mem[_5127] % 32) + 228 len mem[_5127] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4541, address(this.address), 128, mem[_5127], mem[_5127 + 196 len floor32(mem[_5127]) + 32]
                                    else:
                                        _5128 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_5128 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_5128 + 36] = _4541
                                        mem[_5128 + 68] = 0
                                        mem[_5128 + 100] = this.address
                                        mem[_5128 + 132] = 128
                                        mem[_5128 + 164] = mem[_5128]
                                        idx = 0
                                        while idx < mem[_5128]:
                                            mem[_5128 + idx + 196] = mem[_5128 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_5128] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4541, 0, address(this.address), 128, mem[_5128 + 164 len mem[_5128] + 32]
                                        else:
                                            mem[floor32(mem[_5128]) + _5128 + 196] = mem[floor32(mem[_5128]) + _5128 + -(mem[_5128] % 32) + 228 len mem[_5128] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4541, 0, address(this.address), 128, mem[_5128], mem[_5128 + 196 len floor32(mem[_5128]) + 32]
                                else:
                                    if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        _5129 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_5129 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_5129 + 36] = 0
                                        mem[_5129 + 68] = _4541
                                        mem[_5129 + 100] = this.address
                                        mem[_5129 + 132] = 128
                                        mem[_5129 + 164] = mem[_5129]
                                        idx = 0
                                        while idx < mem[_5129]:
                                            mem[_5129 + idx + 196] = mem[_5129 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_5129] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4541, address(this.address), 128, mem[_5129 + 164 len mem[_5129] + 32]
                                        else:
                                            mem[floor32(mem[_5129]) + _5129 + 196] = mem[floor32(mem[_5129]) + _5129 + -(mem[_5129] % 32) + 228 len mem[_5129] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4541, address(this.address), 128, mem[_5129], mem[_5129 + 196 len floor32(mem[_5129]) + 32]
                                    else:
                                        _5130 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_5130 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_5130 + 36] = _4541
                                        mem[_5130 + 68] = 0
                                        mem[_5130 + 100] = this.address
                                        mem[_5130 + 132] = 128
                                        mem[_5130 + 164] = mem[_5130]
                                        idx = 0
                                        while idx < mem[_5130]:
                                            mem[_5130 + idx + 196] = mem[_5130 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_5130] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4541, 0, address(this.address), 128, mem[_5130 + 164 len mem[_5130] + 32]
                                        else:
                                            mem[floor32(mem[_5130]) + _5130 + 196] = mem[floor32(mem[_5130]) + _5130 + -(mem[_5130] % 32) + 228 len mem[_5130] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4541, 0, address(this.address), 128, mem[_5130], mem[_5130 + 196 len floor32(mem[_5130]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                s = s + 1
                                t = 0
                                u = this.address
                                continue 
                            require s < ('cd', 68).length
                            require s < ('cd', 36).length
                            require s + 1 < ('cd', 36).length
                            require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            _4577 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                            mem[mem[64] + 4] = this.address
                            mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                            staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                    gas gas_remaining wei
                                   args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= _4577:
                                _4799 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                require 0 < mem[_4799]
                                mem[_4799 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                require 1 < mem[_4799]
                                mem[_4799 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                mem[_4799 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_4799 + 100] = _4577
                                mem[_4799 + 132] = 1
                                mem[_4799 + 196] = this.address
                                mem[_4799 + 228] = block.timestamp + 300
                                mem[_4799 + 164] = 160
                                mem[_4799 + 260] = mem[_4799]
                                idx = 0
                                while idx < 32 * mem[_4799]:
                                    mem[_4799 + idx + 292] = mem[_4799 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _4577, 1, 160, address(this.address), block.timestamp + 300, mem[_4799 + 260 len (32 * mem[_4799]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_4799 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _4799 + ceil32(return_data.size) + 96
                                require return_data.size >= 32
                                _14149 = mem[_4799 + 96 len 4], Mask(224, 32, _4577) >> 32
                                require mem[_4799 + 96 len 4], Mask(224, 32, _4577) >> 32 <= 4294967296
                                require mem[_4799 + 96 len 4], Mask(224, 32, _4577) >> 32 + 32 <= return_data.size
                                require mem[mem[_4799 + 96 len 4], Mask(224, 32, _4577) >> 32 + _4799 + 96] <= 4294967296 and mem[_4799 + 96 len 4], Mask(224, 32, _4577) >> 32 + (32 * mem[mem[_4799 + 96 len 4], Mask(224, 32, _4577) >> 32 + _4799 + 96]) + 32 <= return_data.size
                                mem[_4799 + ceil32(return_data.size) + 96] = mem[mem[_4799 + 96 len 4], Mask(224, 32, _4577) >> 32 + _4799 + 96]
                                _14725 = mem[_14149 + _4799 + 96]
                                idx = 0
                                while idx < 32 * _14725:
                                    mem[_4799 + ceil32(return_data.size) + idx + 128] = mem[_14149 + _4799 + idx + 128]
                                    idx = idx + 32
                                    continue 
                                mem[64] = (32 * _14725) + _4799 + ceil32(return_data.size) + 128
                            else:
                                mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                mem[mem[64] + 36] = 10000 * _4577
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _4577
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _5126 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                require 0 < mem[_5126]
                                mem[_5126 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                require 1 < mem[_5126]
                                mem[_5126 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                mem[_5126 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_5126 + 100] = _4577
                                mem[_5126 + 132] = 1
                                mem[_5126 + 196] = this.address
                                mem[_5126 + 228] = block.timestamp + 300
                                mem[_5126 + 164] = 160
                                mem[_5126 + 260] = mem[_5126]
                                idx = 0
                                while idx < 32 * mem[_5126]:
                                    mem[_5126 + idx + 292] = mem[_5126 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _4577, 1, 160, address(this.address), block.timestamp + 300, mem[_5126 + 260 len (32 * mem[_5126]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_5126 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _5126 + ceil32(return_data.size) + 96
                                require return_data.size >= 32
                                _14151 = mem[_5126 + 96 len 4], Mask(224, 32, _4577) >> 32
                                require mem[_5126 + 96 len 4], Mask(224, 32, _4577) >> 32 <= 4294967296
                                require mem[_5126 + 96 len 4], Mask(224, 32, _4577) >> 32 + 32 <= return_data.size
                                require mem[mem[_5126 + 96 len 4], Mask(224, 32, _4577) >> 32 + _5126 + 96] <= 4294967296 and mem[_5126 + 96 len 4], Mask(224, 32, _4577) >> 32 + (32 * mem[mem[_5126 + 96 len 4], Mask(224, 32, _4577) >> 32 + _5126 + 96]) + 32 <= return_data.size
                                mem[_5126 + ceil32(return_data.size) + 96] = mem[mem[_5126 + 96 len 4], Mask(224, 32, _4577) >> 32 + _5126 + 96]
                                _14726 = mem[_14151 + _5126 + 96]
                                idx = 0
                                while idx < 32 * _14726:
                                    mem[_5126 + ceil32(return_data.size) + idx + 128] = mem[_14151 + _5126 + idx + 128]
                                    idx = idx + 32
                                    continue 
                                mem[64] = (32 * _14726) + _5126 + ceil32(return_data.size) + 128
                        else:
                            if not address(cd[((32 * s) + cd[68] + 36)]):
                                require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                _4542 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                require s < ('cd', 36).length
                                require 0 < ('cd', 36).length
                                require s < ('cd', 4).length
                                if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                    revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                if address(cd[((32 * s) + cd[36] + 36)]) < address(('cd', 36)[0]):
                                    if not address(cd[((32 * s) + cd[36] + 36)]):
                                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                        _5135 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_5135 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_5135 + 36] = 0
                                        mem[_5135 + 68] = _4542
                                        mem[_5135 + 100] = this.address
                                        mem[_5135 + 132] = 128
                                        mem[_5135 + 164] = mem[_5135]
                                        idx = 0
                                        while idx < mem[_5135]:
                                            mem[_5135 + idx + 196] = mem[_5135 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_5135] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4542, address(this.address), 128, mem[_5135 + 164 len mem[_5135] + 32]
                                        else:
                                            mem[floor32(mem[_5135]) + _5135 + 196] = mem[floor32(mem[_5135]) + _5135 + -(mem[_5135] % 32) + 228 len mem[_5135] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4542, address(this.address), 128, mem[_5135], mem[_5135 + 196 len floor32(mem[_5135]) + 32]
                                    else:
                                        _5136 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_5136 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_5136 + 36] = _4542
                                        mem[_5136 + 68] = 0
                                        mem[_5136 + 100] = this.address
                                        mem[_5136 + 132] = 128
                                        mem[_5136 + 164] = mem[_5136]
                                        idx = 0
                                        while idx < mem[_5136]:
                                            mem[_5136 + idx + 196] = mem[_5136 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_5136] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4542, 0, address(this.address), 128, mem[_5136 + 164 len mem[_5136] + 32]
                                        else:
                                            mem[floor32(mem[_5136]) + _5136 + 196] = mem[floor32(mem[_5136]) + _5136 + -(mem[_5136] % 32) + 228 len mem[_5136] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4542, 0, address(this.address), 128, mem[_5136], mem[_5136 + 196 len floor32(mem[_5136]) + 32]
                                else:
                                    if not address(('cd', 36)[0]):
                                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                        _5137 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_5137 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_5137 + 36] = 0
                                        mem[_5137 + 68] = _4542
                                        mem[_5137 + 100] = this.address
                                        mem[_5137 + 132] = 128
                                        mem[_5137 + 164] = mem[_5137]
                                        idx = 0
                                        while idx < mem[_5137]:
                                            mem[_5137 + idx + 196] = mem[_5137 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_5137] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4542, address(this.address), 128, mem[_5137 + 164 len mem[_5137] + 32]
                                        else:
                                            mem[floor32(mem[_5137]) + _5137 + 196] = mem[floor32(mem[_5137]) + _5137 + -(mem[_5137] % 32) + 228 len mem[_5137] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4542, address(this.address), 128, mem[_5137], mem[_5137 + 196 len floor32(mem[_5137]) + 32]
                                    else:
                                        _5138 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_5138 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_5138 + 36] = _4542
                                        mem[_5138 + 68] = 0
                                        mem[_5138 + 100] = this.address
                                        mem[_5138 + 132] = 128
                                        mem[_5138 + 164] = mem[_5138]
                                        idx = 0
                                        while idx < mem[_5138]:
                                            mem[_5138 + idx + 196] = mem[_5138 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_5138] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4542, 0, address(this.address), 128, mem[_5138 + 164 len mem[_5138] + 32]
                                        else:
                                            mem[floor32(mem[_5138]) + _5138 + 196] = mem[floor32(mem[_5138]) + _5138 + -(mem[_5138] % 32) + 228 len mem[_5138] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4542, 0, address(this.address), 128, mem[_5138], mem[_5138 + 196 len floor32(mem[_5138]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                s = s + 1
                                t = 0
                                u = this.address
                                continue 
                            require s < ('cd', 68).length
                            require s < ('cd', 36).length
                            require 0 < ('cd', 36).length
                            require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            _4578 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                            mem[mem[64] + 4] = this.address
                            mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                            staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                    gas gas_remaining wei
                                   args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= _4578:
                                _4804 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                require 0 < mem[_4804]
                                mem[_4804 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                require 1 < mem[_4804]
                                mem[_4804 + 64] = address(('cd', 36)[0])
                                mem[_4804 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_4804 + 100] = _4578
                                mem[_4804 + 132] = 1
                                mem[_4804 + 196] = this.address
                                mem[_4804 + 228] = block.timestamp + 300
                                mem[_4804 + 164] = 160
                                mem[_4804 + 260] = mem[_4804]
                                idx = 0
                                while idx < 32 * mem[_4804]:
                                    mem[_4804 + idx + 292] = mem[_4804 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _4578, 1, 160, address(this.address), block.timestamp + 300, mem[_4804 + 260 len (32 * mem[_4804]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_4804 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _4804 + ceil32(return_data.size) + 96
                                require return_data.size >= 32
                                _14153 = mem[_4804 + 96 len 4], Mask(224, 32, _4578) >> 32
                                require mem[_4804 + 96 len 4], Mask(224, 32, _4578) >> 32 <= 4294967296
                                require mem[_4804 + 96 len 4], Mask(224, 32, _4578) >> 32 + 32 <= return_data.size
                                require mem[mem[_4804 + 96 len 4], Mask(224, 32, _4578) >> 32 + _4804 + 96] <= 4294967296 and mem[_4804 + 96 len 4], Mask(224, 32, _4578) >> 32 + (32 * mem[mem[_4804 + 96 len 4], Mask(224, 32, _4578) >> 32 + _4804 + 96]) + 32 <= return_data.size
                                mem[_4804 + ceil32(return_data.size) + 96] = mem[mem[_4804 + 96 len 4], Mask(224, 32, _4578) >> 32 + _4804 + 96]
                                _14727 = mem[_14153 + _4804 + 96]
                                idx = 0
                                while idx < 32 * _14727:
                                    mem[_4804 + ceil32(return_data.size) + idx + 128] = mem[_14153 + _4804 + idx + 128]
                                    idx = idx + 32
                                    continue 
                                mem[64] = (32 * _14727) + _4804 + ceil32(return_data.size) + 128
                            else:
                                mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                mem[mem[64] + 36] = 10000 * _4578
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _4578
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _5134 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                require 0 < mem[_5134]
                                mem[_5134 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                require 1 < mem[_5134]
                                mem[_5134 + 64] = address(('cd', 36)[0])
                                mem[_5134 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_5134 + 100] = _4578
                                mem[_5134 + 132] = 1
                                mem[_5134 + 196] = this.address
                                mem[_5134 + 228] = block.timestamp + 300
                                mem[_5134 + 164] = 160
                                mem[_5134 + 260] = mem[_5134]
                                idx = 0
                                while idx < 32 * mem[_5134]:
                                    mem[_5134 + idx + 292] = mem[_5134 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _4578, 1, 160, address(this.address), block.timestamp + 300, mem[_5134 + 260 len (32 * mem[_5134]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_5134 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _5134 + ceil32(return_data.size) + 96
                                require return_data.size >= 32
                                _14155 = mem[_5134 + 96 len 4], Mask(224, 32, _4578) >> 32
                                require mem[_5134 + 96 len 4], Mask(224, 32, _4578) >> 32 <= 4294967296
                                require mem[_5134 + 96 len 4], Mask(224, 32, _4578) >> 32 + 32 <= return_data.size
                                require mem[mem[_5134 + 96 len 4], Mask(224, 32, _4578) >> 32 + _5134 + 96] <= 4294967296 and mem[_5134 + 96 len 4], Mask(224, 32, _4578) >> 32 + (32 * mem[mem[_5134 + 96 len 4], Mask(224, 32, _4578) >> 32 + _5134 + 96]) + 32 <= return_data.size
                                mem[_5134 + ceil32(return_data.size) + 96] = mem[mem[_5134 + 96 len 4], Mask(224, 32, _4578) >> 32 + _5134 + 96]
                                _14728 = mem[_14155 + _5134 + 96]
                                idx = 0
                                while idx < 32 * _14728:
                                    mem[_5134 + ceil32(return_data.size) + idx + 128] = mem[_14155 + _5134 + idx + 128]
                                    idx = idx + 32
                                    continue 
                                mem[64] = (32 * _14728) + _5134 + ceil32(return_data.size) + 128
                else:
                    if address(cd[((32 * s) + cd[68] + 36)]):
                        require s < ('cd', 68).length
                        if not s:
                            if not address(cd[((32 * s) + cd[68] + 36)]):
                                require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                _4581 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                require s < ('cd', 36).length
                                require s + 1 < ('cd', 36).length
                                require s < ('cd', 4).length
                                if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                    revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                    if not address(cd[((32 * s) + cd[36] + 36)]):
                                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                        _5579 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_5579 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_5579 + 36] = 0
                                        mem[_5579 + 68] = _4581
                                        mem[_5579 + 100] = this.address
                                        mem[_5579 + 132] = 128
                                        mem[_5579 + 164] = mem[_5579]
                                        idx = 0
                                        while idx < mem[_5579]:
                                            mem[_5579 + idx + 196] = mem[_5579 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_5579] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4581, address(this.address), 128, mem[_5579 + 164 len mem[_5579] + 32]
                                        else:
                                            mem[floor32(mem[_5579]) + _5579 + 196] = mem[floor32(mem[_5579]) + _5579 + -(mem[_5579] % 32) + 228 len mem[_5579] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4581, address(this.address), 128, mem[_5579], mem[_5579 + 196 len floor32(mem[_5579]) + 32]
                                    else:
                                        _5580 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_5580 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_5580 + 36] = _4581
                                        mem[_5580 + 68] = 0
                                        mem[_5580 + 100] = this.address
                                        mem[_5580 + 132] = 128
                                        mem[_5580 + 164] = mem[_5580]
                                        idx = 0
                                        while idx < mem[_5580]:
                                            mem[_5580 + idx + 196] = mem[_5580 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_5580] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4581, 0, address(this.address), 128, mem[_5580 + 164 len mem[_5580] + 32]
                                        else:
                                            mem[floor32(mem[_5580]) + _5580 + 196] = mem[floor32(mem[_5580]) + _5580 + -(mem[_5580] % 32) + 228 len mem[_5580] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4581, 0, address(this.address), 128, mem[_5580], mem[_5580 + 196 len floor32(mem[_5580]) + 32]
                                else:
                                    if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        _5581 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_5581 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_5581 + 36] = 0
                                        mem[_5581 + 68] = _4581
                                        mem[_5581 + 100] = this.address
                                        mem[_5581 + 132] = 128
                                        mem[_5581 + 164] = mem[_5581]
                                        idx = 0
                                        while idx < mem[_5581]:
                                            mem[_5581 + idx + 196] = mem[_5581 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_5581] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4581, address(this.address), 128, mem[_5581 + 164 len mem[_5581] + 32]
                                        else:
                                            mem[floor32(mem[_5581]) + _5581 + 196] = mem[floor32(mem[_5581]) + _5581 + -(mem[_5581] % 32) + 228 len mem[_5581] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4581, address(this.address), 128, mem[_5581], mem[_5581 + 196 len floor32(mem[_5581]) + 32]
                                    else:
                                        _5582 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_5582 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_5582 + 36] = _4581
                                        mem[_5582 + 68] = 0
                                        mem[_5582 + 100] = this.address
                                        mem[_5582 + 132] = 128
                                        mem[_5582 + 164] = mem[_5582]
                                        idx = 0
                                        while idx < mem[_5582]:
                                            mem[_5582 + idx + 196] = mem[_5582 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_5582] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4581, 0, address(this.address), 128, mem[_5582 + 164 len mem[_5582] + 32]
                                        else:
                                            mem[floor32(mem[_5582]) + _5582 + 196] = mem[floor32(mem[_5582]) + _5582 + -(mem[_5582] % 32) + 228 len mem[_5582] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4581, 0, address(this.address), 128, mem[_5582], mem[_5582 + 196 len floor32(mem[_5582]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                s = s + 1
                                t = 0
                                u = this.address
                                continue 
                            require 0 < ('cd', 68).length
                            require s < ('cd', 36).length
                            require s + 1 < ('cd', 36).length
                            mem[mem[64] + 4] = this.address
                            mem[mem[64] + 36] = address(('cd', 68)[0])
                            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                            staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                    gas gas_remaining wei
                                   args address(this.address), address(('cd', 68)[0])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= cd[100]:
                                _4953 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                require 0 < mem[_4953]
                                mem[_4953 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                require 1 < mem[_4953]
                                mem[_4953 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                mem[_4953 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_4953 + 100] = cd[100]
                                mem[_4953 + 132] = 1
                                mem[_4953 + 196] = this.address
                                mem[_4953 + 228] = block.timestamp + 300
                                mem[_4953 + 164] = 160
                                mem[_4953 + 260] = mem[_4953]
                                idx = 0
                                while idx < 32 * mem[_4953]:
                                    mem[_4953 + idx + 292] = mem[_4953 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                require ext_code.size(address(('cd', 68)[0]))
                                call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_4953 + 260 len (32 * mem[_4953]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_4953 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _4953 + ceil32(return_data.size) + 96
                                require return_data.size >= 32
                                _14169 = mem[_4953 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                                require mem[_4953 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                                require mem[_4953 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                                require mem[mem[_4953 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _4953 + 96] <= 4294967296 and mem[_4953 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_4953 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _4953 + 96]) + 32 <= return_data.size
                                mem[_4953 + ceil32(return_data.size) + 96] = mem[mem[_4953 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _4953 + 96]
                                _14735 = mem[_14169 + _4953 + 96]
                                idx = 0
                                while idx < 32 * _14735:
                                    mem[_4953 + ceil32(return_data.size) + idx + 128] = mem[_14169 + _4953 + idx + 128]
                                    idx = idx + 32
                                    continue 
                                mem[64] = (32 * _14735) + _4953 + ceil32(return_data.size) + 128
                            else:
                                mem[mem[64] + 4] = address(('cd', 68)[0])
                                mem[mem[64] + 36] = 10000 * cd[100]
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(('cd', 68)[0]), 10000 * cd[100]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _5424 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                require 0 < mem[_5424]
                                mem[_5424 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                require 1 < mem[_5424]
                                mem[_5424 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                mem[_5424 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_5424 + 100] = cd[100]
                                mem[_5424 + 132] = 1
                                mem[_5424 + 196] = this.address
                                mem[_5424 + 228] = block.timestamp + 300
                                mem[_5424 + 164] = 160
                                mem[_5424 + 260] = mem[_5424]
                                idx = 0
                                while idx < 32 * mem[_5424]:
                                    mem[_5424 + idx + 292] = mem[_5424 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                require ext_code.size(address(('cd', 68)[0]))
                                call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_5424 + 260 len (32 * mem[_5424]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_5424 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _5424 + ceil32(return_data.size) + 96
                                require return_data.size >= 32
                                _14171 = mem[_5424 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                                require mem[_5424 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                                require mem[_5424 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                                require mem[mem[_5424 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _5424 + 96] <= 4294967296 and mem[_5424 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_5424 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _5424 + 96]) + 32 <= return_data.size
                                mem[_5424 + ceil32(return_data.size) + 96] = mem[mem[_5424 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _5424 + 96]
                                _14736 = mem[_14171 + _5424 + 96]
                                idx = 0
                                while idx < 32 * _14736:
                                    mem[_5424 + ceil32(return_data.size) + idx + 128] = mem[_14171 + _5424 + idx + 128]
                                    idx = idx + 32
                                    continue 
                                mem[64] = (32 * _14736) + _5424 + ceil32(return_data.size) + 128
                        else:
                            if s != ('cd', 36).length - 1:
                                if not address(cd[((32 * s) + cd[68] + 36)]):
                                    require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _4606 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    require s < ('cd', 36).length
                                    require s + 1 < ('cd', 36).length
                                    require s < ('cd', 4).length
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                    if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        if not address(cd[((32 * s) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                            _5801 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_5801 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_5801 + 36] = 0
                                            mem[_5801 + 68] = _4606
                                            mem[_5801 + 100] = this.address
                                            mem[_5801 + 132] = 128
                                            mem[_5801 + 164] = mem[_5801]
                                            idx = 0
                                            while idx < mem[_5801]:
                                                mem[_5801 + idx + 196] = mem[_5801 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_5801] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4606, address(this.address), 128, mem[_5801 + 164 len mem[_5801] + 32]
                                            else:
                                                mem[floor32(mem[_5801]) + _5801 + 196] = mem[floor32(mem[_5801]) + _5801 + -(mem[_5801] % 32) + 228 len mem[_5801] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4606, address(this.address), 128, mem[_5801], mem[_5801 + 196 len floor32(mem[_5801]) + 32]
                                        else:
                                            _5802 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_5802 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_5802 + 36] = _4606
                                            mem[_5802 + 68] = 0
                                            mem[_5802 + 100] = this.address
                                            mem[_5802 + 132] = 128
                                            mem[_5802 + 164] = mem[_5802]
                                            idx = 0
                                            while idx < mem[_5802]:
                                                mem[_5802 + idx + 196] = mem[_5802 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_5802] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4606, 0, address(this.address), 128, mem[_5802 + 164 len mem[_5802] + 32]
                                            else:
                                                mem[floor32(mem[_5802]) + _5802 + 196] = mem[floor32(mem[_5802]) + _5802 + -(mem[_5802] % 32) + 228 len mem[_5802] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4606, 0, address(this.address), 128, mem[_5802], mem[_5802 + 196 len floor32(mem[_5802]) + 32]
                                    else:
                                        if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            _5803 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_5803 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_5803 + 36] = 0
                                            mem[_5803 + 68] = _4606
                                            mem[_5803 + 100] = this.address
                                            mem[_5803 + 132] = 128
                                            mem[_5803 + 164] = mem[_5803]
                                            idx = 0
                                            while idx < mem[_5803]:
                                                mem[_5803 + idx + 196] = mem[_5803 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_5803] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4606, address(this.address), 128, mem[_5803 + 164 len mem[_5803] + 32]
                                            else:
                                                mem[floor32(mem[_5803]) + _5803 + 196] = mem[floor32(mem[_5803]) + _5803 + -(mem[_5803] % 32) + 228 len mem[_5803] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4606, address(this.address), 128, mem[_5803], mem[_5803 + 196 len floor32(mem[_5803]) + 32]
                                        else:
                                            _5804 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_5804 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_5804 + 36] = _4606
                                            mem[_5804 + 68] = 0
                                            mem[_5804 + 100] = this.address
                                            mem[_5804 + 132] = 128
                                            mem[_5804 + 164] = mem[_5804]
                                            idx = 0
                                            while idx < mem[_5804]:
                                                mem[_5804 + idx + 196] = mem[_5804 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_5804] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4606, 0, address(this.address), 128, mem[_5804 + 164 len mem[_5804] + 32]
                                            else:
                                                mem[floor32(mem[_5804]) + _5804 + 196] = mem[floor32(mem[_5804]) + _5804 + -(mem[_5804] % 32) + 228 len mem[_5804] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4606, 0, address(this.address), 128, mem[_5804], mem[_5804 + 196 len floor32(mem[_5804]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    s = s + 1
                                    t = 0
                                    u = this.address
                                    continue 
                                require s < ('cd', 68).length
                                require s < ('cd', 36).length
                                require s + 1 < ('cd', 36).length
                                require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                _4708 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= _4708:
                                    _5154 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_5154]
                                    mem[_5154 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_5154]
                                    mem[_5154 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                    mem[_5154 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_5154 + 100] = _4708
                                    mem[_5154 + 132] = 1
                                    mem[_5154 + 196] = this.address
                                    mem[_5154 + 228] = block.timestamp + 300
                                    mem[_5154 + 164] = 160
                                    mem[_5154 + 260] = mem[_5154]
                                    idx = 0
                                    while idx < 32 * mem[_5154]:
                                        mem[_5154 + idx + 292] = mem[_5154 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                    call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4708, 1, 160, address(this.address), block.timestamp + 300, mem[_5154 + 260 len (32 * mem[_5154]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_5154 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _5154 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14161 = mem[_5154 + 96 len 4], Mask(224, 32, _4708) >> 32
                                    require mem[_5154 + 96 len 4], Mask(224, 32, _4708) >> 32 <= 4294967296
                                    require mem[_5154 + 96 len 4], Mask(224, 32, _4708) >> 32 + 32 <= return_data.size
                                    require mem[mem[_5154 + 96 len 4], Mask(224, 32, _4708) >> 32 + _5154 + 96] <= 4294967296 and mem[_5154 + 96 len 4], Mask(224, 32, _4708) >> 32 + (32 * mem[mem[_5154 + 96 len 4], Mask(224, 32, _4708) >> 32 + _5154 + 96]) + 32 <= return_data.size
                                    mem[_5154 + ceil32(return_data.size) + 96] = mem[mem[_5154 + 96 len 4], Mask(224, 32, _4708) >> 32 + _5154 + 96]
                                    _14731 = mem[_14161 + _5154 + 96]
                                    idx = 0
                                    while idx < 32 * _14731:
                                        mem[_5154 + ceil32(return_data.size) + idx + 128] = mem[_14161 + _5154 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14731) + _5154 + ceil32(return_data.size) + 128
                                else:
                                    mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                    mem[mem[64] + 36] = 10000 * _4708
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _4708
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _5800 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_5800]
                                    mem[_5800 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_5800]
                                    mem[_5800 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                    mem[_5800 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_5800 + 100] = _4708
                                    mem[_5800 + 132] = 1
                                    mem[_5800 + 196] = this.address
                                    mem[_5800 + 228] = block.timestamp + 300
                                    mem[_5800 + 164] = 160
                                    mem[_5800 + 260] = mem[_5800]
                                    t = 0
                                    while t < 32 * mem[_5800]:
                                        mem[_5800 + t + 292] = mem[_5800 + t + 32]
                                        t = t + 32
                                        continue 
                                    require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                    call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4708, 1, 160, address(this.address), block.timestamp + 300, mem[_5800 + 260 len (32 * mem[_5800]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_5800 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _5800 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14163 = mem[_5800 + 96 len 4], Mask(224, 32, _4708) >> 32
                                    require mem[_5800 + 96 len 4], Mask(224, 32, _4708) >> 32 <= 4294967296
                                    require mem[_5800 + 96 len 4], Mask(224, 32, _4708) >> 32 + 32 <= return_data.size
                                    require mem[mem[_5800 + 96 len 4], Mask(224, 32, _4708) >> 32 + _5800 + 96] <= 4294967296 and mem[_5800 + 96 len 4], Mask(224, 32, _4708) >> 32 + (32 * mem[mem[_5800 + 96 len 4], Mask(224, 32, _4708) >> 32 + _5800 + 96]) + 32 <= return_data.size
                                    mem[_5800 + ceil32(return_data.size) + 96] = mem[mem[_5800 + 96 len 4], Mask(224, 32, _4708) >> 32 + _5800 + 96]
                                    _14732 = mem[_14163 + _5800 + 96]
                                    idx = 0
                                    while idx < 32 * _14732:
                                        mem[_5800 + ceil32(return_data.size) + idx + 128] = mem[_14163 + _5800 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14732) + _5800 + ceil32(return_data.size) + 128
                            else:
                                if not address(cd[((32 * s) + cd[68] + 36)]):
                                    require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _4607 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    require s < ('cd', 36).length
                                    require 0 < ('cd', 36).length
                                    require s < ('cd', 4).length
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                        revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                    if address(cd[((32 * s) + cd[36] + 36)]) < address(('cd', 36)[0]):
                                        if not address(cd[((32 * s) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                            _5809 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_5809 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_5809 + 36] = 0
                                            mem[_5809 + 68] = _4607
                                            mem[_5809 + 100] = this.address
                                            mem[_5809 + 132] = 128
                                            mem[_5809 + 164] = mem[_5809]
                                            idx = 0
                                            while idx < mem[_5809]:
                                                mem[_5809 + idx + 196] = mem[_5809 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_5809] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4607, address(this.address), 128, mem[_5809 + 164 len mem[_5809] + 32]
                                            else:
                                                mem[floor32(mem[_5809]) + _5809 + 196] = mem[floor32(mem[_5809]) + _5809 + -(mem[_5809] % 32) + 228 len mem[_5809] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4607, address(this.address), 128, mem[_5809], mem[_5809 + 196 len floor32(mem[_5809]) + 32]
                                        else:
                                            _5810 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_5810 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_5810 + 36] = _4607
                                            mem[_5810 + 68] = 0
                                            mem[_5810 + 100] = this.address
                                            mem[_5810 + 132] = 128
                                            mem[_5810 + 164] = mem[_5810]
                                            idx = 0
                                            while idx < mem[_5810]:
                                                mem[_5810 + idx + 196] = mem[_5810 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_5810] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4607, 0, address(this.address), 128, mem[_5810 + 164 len mem[_5810] + 32]
                                            else:
                                                mem[floor32(mem[_5810]) + _5810 + 196] = mem[floor32(mem[_5810]) + _5810 + -(mem[_5810] % 32) + 228 len mem[_5810] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4607, 0, address(this.address), 128, mem[_5810], mem[_5810 + 196 len floor32(mem[_5810]) + 32]
                                    else:
                                        if not address(('cd', 36)[0]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                            _5811 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_5811 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_5811 + 36] = 0
                                            mem[_5811 + 68] = _4607
                                            mem[_5811 + 100] = this.address
                                            mem[_5811 + 132] = 128
                                            mem[_5811 + 164] = mem[_5811]
                                            idx = 0
                                            while idx < mem[_5811]:
                                                mem[_5811 + idx + 196] = mem[_5811 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_5811] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4607, address(this.address), 128, mem[_5811 + 164 len mem[_5811] + 32]
                                            else:
                                                mem[floor32(mem[_5811]) + _5811 + 196] = mem[floor32(mem[_5811]) + _5811 + -(mem[_5811] % 32) + 228 len mem[_5811] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4607, address(this.address), 128, mem[_5811], mem[_5811 + 196 len floor32(mem[_5811]) + 32]
                                        else:
                                            _5812 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_5812 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_5812 + 36] = _4607
                                            mem[_5812 + 68] = 0
                                            mem[_5812 + 100] = this.address
                                            mem[_5812 + 132] = 128
                                            mem[_5812 + 164] = mem[_5812]
                                            idx = 0
                                            while idx < mem[_5812]:
                                                mem[_5812 + idx + 196] = mem[_5812 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_5812] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4607, 0, address(this.address), 128, mem[_5812 + 164 len mem[_5812] + 32]
                                            else:
                                                mem[floor32(mem[_5812]) + _5812 + 196] = mem[floor32(mem[_5812]) + _5812 + -(mem[_5812] % 32) + 228 len mem[_5812] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4607, 0, address(this.address), 128, mem[_5812], mem[_5812 + 196 len floor32(mem[_5812]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    s = s + 1
                                    t = 0
                                    u = this.address
                                    continue 
                                require s < ('cd', 68).length
                                require s < ('cd', 36).length
                                require 0 < ('cd', 36).length
                                require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                _4709 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= _4709:
                                    _5159 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_5159]
                                    mem[_5159 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_5159]
                                    mem[_5159 + 64] = address(('cd', 36)[0])
                                    mem[_5159 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_5159 + 100] = _4709
                                    mem[_5159 + 132] = 1
                                    mem[_5159 + 196] = this.address
                                    mem[_5159 + 228] = block.timestamp + 300
                                    mem[_5159 + 164] = 160
                                    mem[_5159 + 260] = mem[_5159]
                                    idx = 0
                                    while idx < 32 * mem[_5159]:
                                        mem[_5159 + idx + 292] = mem[_5159 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                    call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4709, 1, 160, address(this.address), block.timestamp + 300, mem[_5159 + 260 len (32 * mem[_5159]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_5159 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _5159 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14165 = mem[_5159 + 96 len 4], Mask(224, 32, _4709) >> 32
                                    require mem[_5159 + 96 len 4], Mask(224, 32, _4709) >> 32 <= 4294967296
                                    require mem[_5159 + 96 len 4], Mask(224, 32, _4709) >> 32 + 32 <= return_data.size
                                    require mem[mem[_5159 + 96 len 4], Mask(224, 32, _4709) >> 32 + _5159 + 96] <= 4294967296 and mem[_5159 + 96 len 4], Mask(224, 32, _4709) >> 32 + (32 * mem[mem[_5159 + 96 len 4], Mask(224, 32, _4709) >> 32 + _5159 + 96]) + 32 <= return_data.size
                                    mem[_5159 + ceil32(return_data.size) + 96] = mem[mem[_5159 + 96 len 4], Mask(224, 32, _4709) >> 32 + _5159 + 96]
                                    _14733 = mem[_14165 + _5159 + 96]
                                    idx = 0
                                    while idx < 32 * _14733:
                                        mem[_5159 + ceil32(return_data.size) + idx + 128] = mem[_14165 + _5159 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14733) + _5159 + ceil32(return_data.size) + 128
                                else:
                                    mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                    mem[mem[64] + 36] = 10000 * _4709
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _4709
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _5808 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_5808]
                                    mem[_5808 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_5808]
                                    mem[_5808 + 64] = address(('cd', 36)[0])
                                    mem[_5808 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_5808 + 100] = _4709
                                    mem[_5808 + 132] = 1
                                    mem[_5808 + 196] = this.address
                                    mem[_5808 + 228] = block.timestamp + 300
                                    mem[_5808 + 164] = 160
                                    mem[_5808 + 260] = mem[_5808]
                                    t = 0
                                    while t < 32 * mem[_5808]:
                                        mem[_5808 + t + 292] = mem[_5808 + t + 32]
                                        t = t + 32
                                        continue 
                                    require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                    call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4709, 1, 160, address(this.address), block.timestamp + 300, mem[_5808 + 260 len (32 * mem[_5808]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_5808 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _5808 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14167 = mem[_5808 + 96 len 4], Mask(224, 32, _4709) >> 32
                                    require mem[_5808 + 96 len 4], Mask(224, 32, _4709) >> 32 <= 4294967296
                                    require mem[_5808 + 96 len 4], Mask(224, 32, _4709) >> 32 + 32 <= return_data.size
                                    require mem[mem[_5808 + 96 len 4], Mask(224, 32, _4709) >> 32 + _5808 + 96] <= 4294967296 and mem[_5808 + 96 len 4], Mask(224, 32, _4709) >> 32 + (32 * mem[mem[_5808 + 96 len 4], Mask(224, 32, _4709) >> 32 + _5808 + 96]) + 32 <= return_data.size
                                    mem[_5808 + ceil32(return_data.size) + 96] = mem[mem[_5808 + 96 len 4], Mask(224, 32, _4709) >> 32 + _5808 + 96]
                                    _14734 = mem[_14167 + _5808 + 96]
                                    idx = 0
                                    while idx < 32 * _14734:
                                        mem[_5808 + ceil32(return_data.size) + idx + 128] = mem[_14167 + _5808 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14734) + _5808 + ceil32(return_data.size) + 128
                    else:
                        require s < ('cd', 36).length
                        require s < ('cd', 4).length
                        if not s:
                            mem[mem[64] + 4] = address(cd[((32 * s) + cd[4] + 36)])
                            mem[mem[64] + 36] = cd[100]
                            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                            call address(cd[((32 * s) + cd[36] + 36)]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args address(cd[((32 * s) + cd[4] + 36)]), cd[100]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require s < ('cd', 68).length
                            if not s:
                                if not address(cd[((32 * s) + cd[68] + 36)]):
                                    require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _4957 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    require s < ('cd', 36).length
                                    require s + 1 < ('cd', 36).length
                                    require s < ('cd', 4).length
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                    if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        if not address(cd[((32 * s) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                            _7781 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_7781 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_7781 + 36] = 0
                                            mem[_7781 + 68] = _4957
                                            mem[_7781 + 100] = this.address
                                            mem[_7781 + 132] = 128
                                            mem[_7781 + 164] = mem[_7781]
                                            idx = 0
                                            while idx < mem[_7781]:
                                                mem[_7781 + idx + 196] = mem[_7781 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_7781] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4957, address(this.address), 128, mem[_7781 + 164 len mem[_7781] + 32]
                                            else:
                                                mem[floor32(mem[_7781]) + _7781 + 196] = mem[floor32(mem[_7781]) + _7781 + -(mem[_7781] % 32) + 228 len mem[_7781] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4957, address(this.address), 128, mem[_7781], mem[_7781 + 196 len floor32(mem[_7781]) + 32]
                                        else:
                                            _7782 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_7782 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_7782 + 36] = _4957
                                            mem[_7782 + 68] = 0
                                            mem[_7782 + 100] = this.address
                                            mem[_7782 + 132] = 128
                                            mem[_7782 + 164] = mem[_7782]
                                            idx = 0
                                            while idx < mem[_7782]:
                                                mem[_7782 + idx + 196] = mem[_7782 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_7782] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4957, 0, address(this.address), 128, mem[_7782 + 164 len mem[_7782] + 32]
                                            else:
                                                mem[floor32(mem[_7782]) + _7782 + 196] = mem[floor32(mem[_7782]) + _7782 + -(mem[_7782] % 32) + 228 len mem[_7782] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4957, 0, address(this.address), 128, mem[_7782], mem[_7782 + 196 len floor32(mem[_7782]) + 32]
                                    else:
                                        if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            _7783 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_7783 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_7783 + 36] = 0
                                            mem[_7783 + 68] = _4957
                                            mem[_7783 + 100] = this.address
                                            mem[_7783 + 132] = 128
                                            mem[_7783 + 164] = mem[_7783]
                                            idx = 0
                                            while idx < mem[_7783]:
                                                mem[_7783 + idx + 196] = mem[_7783 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_7783] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4957, address(this.address), 128, mem[_7783 + 164 len mem[_7783] + 32]
                                            else:
                                                mem[floor32(mem[_7783]) + _7783 + 196] = mem[floor32(mem[_7783]) + _7783 + -(mem[_7783] % 32) + 228 len mem[_7783] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4957, address(this.address), 128, mem[_7783], mem[_7783 + 196 len floor32(mem[_7783]) + 32]
                                        else:
                                            _7784 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_7784 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_7784 + 36] = _4957
                                            mem[_7784 + 68] = 0
                                            mem[_7784 + 100] = this.address
                                            mem[_7784 + 132] = 128
                                            mem[_7784 + 164] = mem[_7784]
                                            idx = 0
                                            while idx < mem[_7784]:
                                                mem[_7784 + idx + 196] = mem[_7784 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_7784] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4957, 0, address(this.address), 128, mem[_7784 + 164 len mem[_7784] + 32]
                                            else:
                                                mem[floor32(mem[_7784]) + _7784 + 196] = mem[floor32(mem[_7784]) + _7784 + -(mem[_7784] % 32) + 228 len mem[_7784] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4957, 0, address(this.address), 128, mem[_7784], mem[_7784 + 196 len floor32(mem[_7784]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    s = s + 1
                                    t = 0
                                    u = this.address
                                    continue 
                                require 0 < ('cd', 68).length
                                require s < ('cd', 36).length
                                require s + 1 < ('cd', 36).length
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = address(('cd', 68)[0])
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), address(('cd', 68)[0])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= cd[100]:
                                    _6277 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_6277]
                                    mem[_6277 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_6277]
                                    mem[_6277 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                    mem[_6277 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_6277 + 100] = cd[100]
                                    mem[_6277 + 132] = 1
                                    mem[_6277 + 196] = this.address
                                    mem[_6277 + 228] = block.timestamp + 300
                                    mem[_6277 + 164] = 160
                                    mem[_6277 + 260] = mem[_6277]
                                    idx = 0
                                    while idx < 32 * mem[_6277]:
                                        mem[_6277 + idx + 292] = mem[_6277 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(('cd', 68)[0]))
                                    call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_6277 + 260 len (32 * mem[_6277]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_6277 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _6277 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14193 = mem[_6277 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                                    require mem[_6277 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                                    require mem[_6277 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                                    require mem[mem[_6277 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _6277 + 96] <= 4294967296 and mem[_6277 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_6277 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _6277 + 96]) + 32 <= return_data.size
                                    mem[_6277 + ceil32(return_data.size) + 96] = mem[mem[_6277 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _6277 + 96]
                                    _14747 = mem[_14193 + _6277 + 96]
                                    idx = 0
                                    while idx < 32 * _14747:
                                        mem[_6277 + ceil32(return_data.size) + idx + 128] = mem[_14193 + _6277 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14747) + _6277 + ceil32(return_data.size) + 128
                                else:
                                    mem[mem[64] + 4] = address(('cd', 68)[0])
                                    mem[mem[64] + 36] = 10000 * cd[100]
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(('cd', 68)[0]), 10000 * cd[100]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _7468 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_7468]
                                    mem[_7468 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_7468]
                                    mem[_7468 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                    mem[_7468 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_7468 + 100] = cd[100]
                                    mem[_7468 + 132] = 1
                                    mem[_7468 + 196] = this.address
                                    mem[_7468 + 228] = block.timestamp + 300
                                    mem[_7468 + 164] = 160
                                    mem[_7468 + 260] = mem[_7468]
                                    idx = 0
                                    while idx < 32 * mem[_7468]:
                                        mem[_7468 + idx + 292] = mem[_7468 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(('cd', 68)[0]))
                                    call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_7468 + 260 len (32 * mem[_7468]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_7468 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _7468 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14195 = mem[_7468 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                                    require mem[_7468 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                                    require mem[_7468 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                                    require mem[mem[_7468 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _7468 + 96] <= 4294967296 and mem[_7468 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_7468 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _7468 + 96]) + 32 <= return_data.size
                                    mem[_7468 + ceil32(return_data.size) + 96] = mem[mem[_7468 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _7468 + 96]
                                    _14748 = mem[_14195 + _7468 + 96]
                                    idx = 0
                                    while idx < 32 * _14748:
                                        mem[_7468 + ceil32(return_data.size) + idx + 128] = mem[_14195 + _7468 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14748) + _7468 + ceil32(return_data.size) + 128
                            else:
                                if s != ('cd', 36).length - 1:
                                    if not address(cd[((32 * s) + cd[68] + 36)]):
                                        require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                        _5041 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                        require s < ('cd', 36).length
                                        require s + 1 < ('cd', 36).length
                                        require s < ('cd', 4).length
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                        if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            if not address(cd[((32 * s) + cd[36] + 36)]):
                                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                                _8171 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_8171 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_8171 + 36] = 0
                                                mem[_8171 + 68] = _5041
                                                mem[_8171 + 100] = this.address
                                                mem[_8171 + 132] = 128
                                                mem[_8171 + 164] = mem[_8171]
                                                idx = 0
                                                while idx < mem[_8171]:
                                                    mem[_8171 + idx + 196] = mem[_8171 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_8171] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5041, address(this.address), 128, mem[_8171 + 164 len mem[_8171] + 32]
                                                else:
                                                    mem[floor32(mem[_8171]) + _8171 + 196] = mem[floor32(mem[_8171]) + _8171 + -(mem[_8171] % 32) + 228 len mem[_8171] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5041, address(this.address), 128, mem[_8171], mem[_8171 + 196 len floor32(mem[_8171]) + 32]
                                            else:
                                                _8172 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_8172 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_8172 + 36] = _5041
                                                mem[_8172 + 68] = 0
                                                mem[_8172 + 100] = this.address
                                                mem[_8172 + 132] = 128
                                                mem[_8172 + 164] = mem[_8172]
                                                idx = 0
                                                while idx < mem[_8172]:
                                                    mem[_8172 + idx + 196] = mem[_8172 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_8172] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5041, 0, address(this.address), 128, mem[_8172 + 164 len mem[_8172] + 32]
                                                else:
                                                    mem[floor32(mem[_8172]) + _8172 + 196] = mem[floor32(mem[_8172]) + _8172 + -(mem[_8172] % 32) + 228 len mem[_8172] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5041, 0, address(this.address), 128, mem[_8172], mem[_8172 + 196 len floor32(mem[_8172]) + 32]
                                        else:
                                            if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                                _8173 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_8173 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_8173 + 36] = 0
                                                mem[_8173 + 68] = _5041
                                                mem[_8173 + 100] = this.address
                                                mem[_8173 + 132] = 128
                                                mem[_8173 + 164] = mem[_8173]
                                                idx = 0
                                                while idx < mem[_8173]:
                                                    mem[_8173 + idx + 196] = mem[_8173 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_8173] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5041, address(this.address), 128, mem[_8173 + 164 len mem[_8173] + 32]
                                                else:
                                                    mem[floor32(mem[_8173]) + _8173 + 196] = mem[floor32(mem[_8173]) + _8173 + -(mem[_8173] % 32) + 228 len mem[_8173] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5041, address(this.address), 128, mem[_8173], mem[_8173 + 196 len floor32(mem[_8173]) + 32]
                                            else:
                                                _8174 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_8174 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_8174 + 36] = _5041
                                                mem[_8174 + 68] = 0
                                                mem[_8174 + 100] = this.address
                                                mem[_8174 + 132] = 128
                                                mem[_8174 + 164] = mem[_8174]
                                                idx = 0
                                                while idx < mem[_8174]:
                                                    mem[_8174 + idx + 196] = mem[_8174 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_8174] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5041, 0, address(this.address), 128, mem[_8174 + 164 len mem[_8174] + 32]
                                                else:
                                                    mem[floor32(mem[_8174]) + _8174 + 196] = mem[floor32(mem[_8174]) + _8174 + -(mem[_8174] % 32) + 228 len mem[_8174] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5041, 0, address(this.address), 128, mem[_8174], mem[_8174 + 196 len floor32(mem[_8174]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = s + 1
                                        t = 0
                                        u = this.address
                                        continue 
                                    require s < ('cd', 68).length
                                    require s < ('cd', 36).length
                                    require s + 1 < ('cd', 36).length
                                    require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _5429 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    mem[mem[64] + 4] = this.address
                                    mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                            gas gas_remaining wei
                                           args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] >= _5429:
                                        _6913 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require 0 < mem[_6913]
                                        mem[_6913 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                        require 1 < mem[_6913]
                                        mem[_6913 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                        mem[_6913 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_6913 + 100] = _5429
                                        mem[_6913 + 132] = 1
                                        mem[_6913 + 196] = this.address
                                        mem[_6913 + 228] = block.timestamp + 300
                                        mem[_6913 + 164] = 160
                                        mem[_6913 + 260] = mem[_6913]
                                        idx = 0
                                        while idx < 32 * mem[_6913]:
                                            mem[_6913 + idx + 292] = mem[_6913 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                        call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args _5429, 1, 160, address(this.address), block.timestamp + 300, mem[_6913 + 260 len (32 * mem[_6913]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_6913 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = _6913 + ceil32(return_data.size) + 96
                                        require return_data.size >= 32
                                        _14185 = mem[_6913 + 96 len 4], Mask(224, 32, _5429) >> 32
                                        require mem[_6913 + 96 len 4], Mask(224, 32, _5429) >> 32 <= 4294967296
                                        require mem[_6913 + 96 len 4], Mask(224, 32, _5429) >> 32 + 32 <= return_data.size
                                        require mem[mem[_6913 + 96 len 4], Mask(224, 32, _5429) >> 32 + _6913 + 96] <= 4294967296 and mem[_6913 + 96 len 4], Mask(224, 32, _5429) >> 32 + (32 * mem[mem[_6913 + 96 len 4], Mask(224, 32, _5429) >> 32 + _6913 + 96]) + 32 <= return_data.size
                                        mem[_6913 + ceil32(return_data.size) + 96] = mem[mem[_6913 + 96 len 4], Mask(224, 32, _5429) >> 32 + _6913 + 96]
                                        _14743 = mem[_14185 + _6913 + 96]
                                        idx = 0
                                        while idx < 32 * _14743:
                                            mem[_6913 + ceil32(return_data.size) + idx + 128] = mem[_14185 + _6913 + idx + 128]
                                            idx = idx + 32
                                            continue 
                                        mem[64] = (32 * _14743) + _6913 + ceil32(return_data.size) + 128
                                    else:
                                        mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                        mem[mem[64] + 36] = 10000 * _5429
                                        require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                        call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _5429
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _8170 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require 0 < mem[_8170]
                                        mem[_8170 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                        require 1 < mem[_8170]
                                        mem[_8170 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                        mem[_8170 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_8170 + 100] = _5429
                                        mem[_8170 + 132] = 1
                                        mem[_8170 + 196] = this.address
                                        mem[_8170 + 228] = block.timestamp + 300
                                        mem[_8170 + 164] = 160
                                        mem[_8170 + 260] = mem[_8170]
                                        idx = 0
                                        while idx < 32 * mem[_8170]:
                                            mem[_8170 + idx + 292] = mem[_8170 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                        call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args _5429, 1, 160, address(this.address), block.timestamp + 300, mem[_8170 + 260 len (32 * mem[_8170]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_8170 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = _8170 + ceil32(return_data.size) + 96
                                        require return_data.size >= 32
                                        _14187 = mem[_8170 + 96 len 4], Mask(224, 32, _5429) >> 32
                                        require mem[_8170 + 96 len 4], Mask(224, 32, _5429) >> 32 <= 4294967296
                                        require mem[_8170 + 96 len 4], Mask(224, 32, _5429) >> 32 + 32 <= return_data.size
                                        require mem[mem[_8170 + 96 len 4], Mask(224, 32, _5429) >> 32 + _8170 + 96] <= 4294967296 and mem[_8170 + 96 len 4], Mask(224, 32, _5429) >> 32 + (32 * mem[mem[_8170 + 96 len 4], Mask(224, 32, _5429) >> 32 + _8170 + 96]) + 32 <= return_data.size
                                        mem[_8170 + ceil32(return_data.size) + 96] = mem[mem[_8170 + 96 len 4], Mask(224, 32, _5429) >> 32 + _8170 + 96]
                                        _14744 = mem[_14187 + _8170 + 96]
                                        idx = 0
                                        while idx < 32 * _14744:
                                            mem[_8170 + ceil32(return_data.size) + idx + 128] = mem[_14187 + _8170 + idx + 128]
                                            idx = idx + 32
                                            continue 
                                        mem[64] = (32 * _14744) + _8170 + ceil32(return_data.size) + 128
                                else:
                                    if not address(cd[((32 * s) + cd[68] + 36)]):
                                        require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                        _5042 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                        require s < ('cd', 36).length
                                        require 0 < ('cd', 36).length
                                        require s < ('cd', 4).length
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                            revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                        if address(cd[((32 * s) + cd[36] + 36)]) < address(('cd', 36)[0]):
                                            if not address(cd[((32 * s) + cd[36] + 36)]):
                                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                                _8179 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_8179 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_8179 + 36] = 0
                                                mem[_8179 + 68] = _5042
                                                mem[_8179 + 100] = this.address
                                                mem[_8179 + 132] = 128
                                                mem[_8179 + 164] = mem[_8179]
                                                idx = 0
                                                while idx < mem[_8179]:
                                                    mem[_8179 + idx + 196] = mem[_8179 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_8179] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5042, address(this.address), 128, mem[_8179 + 164 len mem[_8179] + 32]
                                                else:
                                                    mem[floor32(mem[_8179]) + _8179 + 196] = mem[floor32(mem[_8179]) + _8179 + -(mem[_8179] % 32) + 228 len mem[_8179] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5042, address(this.address), 128, mem[_8179], mem[_8179 + 196 len floor32(mem[_8179]) + 32]
                                            else:
                                                _8180 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_8180 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_8180 + 36] = _5042
                                                mem[_8180 + 68] = 0
                                                mem[_8180 + 100] = this.address
                                                mem[_8180 + 132] = 128
                                                mem[_8180 + 164] = mem[_8180]
                                                idx = 0
                                                while idx < mem[_8180]:
                                                    mem[_8180 + idx + 196] = mem[_8180 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_8180] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5042, 0, address(this.address), 128, mem[_8180 + 164 len mem[_8180] + 32]
                                                else:
                                                    mem[floor32(mem[_8180]) + _8180 + 196] = mem[floor32(mem[_8180]) + _8180 + -(mem[_8180] % 32) + 228 len mem[_8180] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5042, 0, address(this.address), 128, mem[_8180], mem[_8180 + 196 len floor32(mem[_8180]) + 32]
                                        else:
                                            if not address(('cd', 36)[0]):
                                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                            if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                                _8181 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_8181 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_8181 + 36] = 0
                                                mem[_8181 + 68] = _5042
                                                mem[_8181 + 100] = this.address
                                                mem[_8181 + 132] = 128
                                                mem[_8181 + 164] = mem[_8181]
                                                idx = 0
                                                while idx < mem[_8181]:
                                                    mem[_8181 + idx + 196] = mem[_8181 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_8181] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5042, address(this.address), 128, mem[_8181 + 164 len mem[_8181] + 32]
                                                else:
                                                    mem[floor32(mem[_8181]) + _8181 + 196] = mem[floor32(mem[_8181]) + _8181 + -(mem[_8181] % 32) + 228 len mem[_8181] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5042, address(this.address), 128, mem[_8181], mem[_8181 + 196 len floor32(mem[_8181]) + 32]
                                            else:
                                                _8182 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_8182 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_8182 + 36] = _5042
                                                mem[_8182 + 68] = 0
                                                mem[_8182 + 100] = this.address
                                                mem[_8182 + 132] = 128
                                                mem[_8182 + 164] = mem[_8182]
                                                idx = 0
                                                while idx < mem[_8182]:
                                                    mem[_8182 + idx + 196] = mem[_8182 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_8182] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5042, 0, address(this.address), 128, mem[_8182 + 164 len mem[_8182] + 32]
                                                else:
                                                    mem[floor32(mem[_8182]) + _8182 + 196] = mem[floor32(mem[_8182]) + _8182 + -(mem[_8182] % 32) + 228 len mem[_8182] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5042, 0, address(this.address), 128, mem[_8182], mem[_8182 + 196 len floor32(mem[_8182]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = s + 1
                                        t = 0
                                        u = this.address
                                        continue 
                                    require s < ('cd', 68).length
                                    require s < ('cd', 36).length
                                    require 0 < ('cd', 36).length
                                    require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _5430 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    mem[mem[64] + 4] = this.address
                                    mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                            gas gas_remaining wei
                                           args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] >= _5430:
                                        _6918 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require 0 < mem[_6918]
                                        mem[_6918 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                        require 1 < mem[_6918]
                                        mem[_6918 + 64] = address(('cd', 36)[0])
                                        mem[_6918 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_6918 + 100] = _5430
                                        mem[_6918 + 132] = 1
                                        mem[_6918 + 196] = this.address
                                        mem[_6918 + 228] = block.timestamp + 300
                                        mem[_6918 + 164] = 160
                                        mem[_6918 + 260] = mem[_6918]
                                        idx = 0
                                        while idx < 32 * mem[_6918]:
                                            mem[_6918 + idx + 292] = mem[_6918 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                        call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args _5430, 1, 160, address(this.address), block.timestamp + 300, mem[_6918 + 260 len (32 * mem[_6918]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_6918 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = _6918 + ceil32(return_data.size) + 96
                                        require return_data.size >= 32
                                        _14189 = mem[_6918 + 96 len 4], Mask(224, 32, _5430) >> 32
                                        require mem[_6918 + 96 len 4], Mask(224, 32, _5430) >> 32 <= 4294967296
                                        require mem[_6918 + 96 len 4], Mask(224, 32, _5430) >> 32 + 32 <= return_data.size
                                        require mem[mem[_6918 + 96 len 4], Mask(224, 32, _5430) >> 32 + _6918 + 96] <= 4294967296 and mem[_6918 + 96 len 4], Mask(224, 32, _5430) >> 32 + (32 * mem[mem[_6918 + 96 len 4], Mask(224, 32, _5430) >> 32 + _6918 + 96]) + 32 <= return_data.size
                                        mem[_6918 + ceil32(return_data.size) + 96] = mem[mem[_6918 + 96 len 4], Mask(224, 32, _5430) >> 32 + _6918 + 96]
                                        _14745 = mem[_14189 + _6918 + 96]
                                        idx = 0
                                        while idx < 32 * _14745:
                                            mem[_6918 + ceil32(return_data.size) + idx + 128] = mem[_14189 + _6918 + idx + 128]
                                            idx = idx + 32
                                            continue 
                                        mem[64] = (32 * _14745) + _6918 + ceil32(return_data.size) + 128
                                    else:
                                        mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                        mem[mem[64] + 36] = 10000 * _5430
                                        require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                        call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _5430
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _8178 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require 0 < mem[_8178]
                                        mem[_8178 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                        require 1 < mem[_8178]
                                        mem[_8178 + 64] = address(('cd', 36)[0])
                                        mem[_8178 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_8178 + 100] = _5430
                                        mem[_8178 + 132] = 1
                                        mem[_8178 + 196] = this.address
                                        mem[_8178 + 228] = block.timestamp + 300
                                        mem[_8178 + 164] = 160
                                        mem[_8178 + 260] = mem[_8178]
                                        idx = 0
                                        while idx < 32 * mem[_8178]:
                                            mem[_8178 + idx + 292] = mem[_8178 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                        call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args _5430, 1, 160, address(this.address), block.timestamp + 300, mem[_8178 + 260 len (32 * mem[_8178]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_8178 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = _8178 + ceil32(return_data.size) + 96
                                        require return_data.size >= 32
                                        _14191 = mem[_8178 + 96 len 4], Mask(224, 32, _5430) >> 32
                                        require mem[_8178 + 96 len 4], Mask(224, 32, _5430) >> 32 <= 4294967296
                                        require mem[_8178 + 96 len 4], Mask(224, 32, _5430) >> 32 + 32 <= return_data.size
                                        require mem[mem[_8178 + 96 len 4], Mask(224, 32, _5430) >> 32 + _8178 + 96] <= 4294967296 and mem[_8178 + 96 len 4], Mask(224, 32, _5430) >> 32 + (32 * mem[mem[_8178 + 96 len 4], Mask(224, 32, _5430) >> 32 + _8178 + 96]) + 32 <= return_data.size
                                        mem[_8178 + ceil32(return_data.size) + 96] = mem[mem[_8178 + 96 len 4], Mask(224, 32, _5430) >> 32 + _8178 + 96]
                                        _14746 = mem[_14191 + _8178 + 96]
                                        idx = 0
                                        while idx < 32 * _14746:
                                            mem[_8178 + ceil32(return_data.size) + idx + 128] = mem[_14191 + _8178 + idx + 128]
                                            idx = idx + 32
                                            continue 
                                        mem[64] = (32 * _14746) + _8178 + ceil32(return_data.size) + 128
                        else:
                            require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            _4551 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                            mem[mem[64] + 4] = address(cd[((32 * s) + cd[4] + 36)])
                            mem[mem[64] + 36] = _4551
                            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                            call address(cd[((32 * s) + cd[36] + 36)]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args address(cd[((32 * s) + cd[4] + 36)]), _4551
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require s < ('cd', 68).length
                            if not s:
                                if not address(cd[((32 * s) + cd[68] + 36)]):
                                    require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _5040 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    require s < ('cd', 36).length
                                    require s + 1 < ('cd', 36).length
                                    require s < ('cd', 4).length
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                    if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        if not address(cd[((32 * s) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                            _8163 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_8163 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_8163 + 36] = 0
                                            mem[_8163 + 68] = _5040
                                            mem[_8163 + 100] = this.address
                                            mem[_8163 + 132] = 128
                                            mem[_8163 + 164] = mem[_8163]
                                            idx = 0
                                            while idx < mem[_8163]:
                                                mem[_8163 + idx + 196] = mem[_8163 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_8163] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _5040, address(this.address), 128, mem[_8163 + 164 len mem[_8163] + 32]
                                            else:
                                                mem[floor32(mem[_8163]) + _8163 + 196] = mem[floor32(mem[_8163]) + _8163 + -(mem[_8163] % 32) + 228 len mem[_8163] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _5040, address(this.address), 128, mem[_8163], mem[_8163 + 196 len floor32(mem[_8163]) + 32]
                                        else:
                                            _8164 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_8164 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_8164 + 36] = _5040
                                            mem[_8164 + 68] = 0
                                            mem[_8164 + 100] = this.address
                                            mem[_8164 + 132] = 128
                                            mem[_8164 + 164] = mem[_8164]
                                            idx = 0
                                            while idx < mem[_8164]:
                                                mem[_8164 + idx + 196] = mem[_8164 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_8164] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _5040, 0, address(this.address), 128, mem[_8164 + 164 len mem[_8164] + 32]
                                            else:
                                                mem[floor32(mem[_8164]) + _8164 + 196] = mem[floor32(mem[_8164]) + _8164 + -(mem[_8164] % 32) + 228 len mem[_8164] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _5040, 0, address(this.address), 128, mem[_8164], mem[_8164 + 196 len floor32(mem[_8164]) + 32]
                                    else:
                                        if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            _8165 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_8165 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_8165 + 36] = 0
                                            mem[_8165 + 68] = _5040
                                            mem[_8165 + 100] = this.address
                                            mem[_8165 + 132] = 128
                                            mem[_8165 + 164] = mem[_8165]
                                            idx = 0
                                            while idx < mem[_8165]:
                                                mem[_8165 + idx + 196] = mem[_8165 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_8165] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _5040, address(this.address), 128, mem[_8165 + 164 len mem[_8165] + 32]
                                            else:
                                                mem[floor32(mem[_8165]) + _8165 + 196] = mem[floor32(mem[_8165]) + _8165 + -(mem[_8165] % 32) + 228 len mem[_8165] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _5040, address(this.address), 128, mem[_8165], mem[_8165 + 196 len floor32(mem[_8165]) + 32]
                                        else:
                                            _8166 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_8166 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_8166 + 36] = _5040
                                            mem[_8166 + 68] = 0
                                            mem[_8166 + 100] = this.address
                                            mem[_8166 + 132] = 128
                                            mem[_8166 + 164] = mem[_8166]
                                            idx = 0
                                            while idx < mem[_8166]:
                                                mem[_8166 + idx + 196] = mem[_8166 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_8166] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _5040, 0, address(this.address), 128, mem[_8166 + 164 len mem[_8166] + 32]
                                            else:
                                                mem[floor32(mem[_8166]) + _8166 + 196] = mem[floor32(mem[_8166]) + _8166 + -(mem[_8166] % 32) + 228 len mem[_8166] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _5040, 0, address(this.address), 128, mem[_8166], mem[_8166 + 196 len floor32(mem[_8166]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    s = s + 1
                                    t = 0
                                    u = this.address
                                    continue 
                                require 0 < ('cd', 68).length
                                require s < ('cd', 36).length
                                require s + 1 < ('cd', 36).length
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = address(('cd', 68)[0])
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), address(('cd', 68)[0])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= cd[100]:
                                    _6531 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_6531]
                                    mem[_6531 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_6531]
                                    mem[_6531 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                    mem[_6531 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_6531 + 100] = cd[100]
                                    mem[_6531 + 132] = 1
                                    mem[_6531 + 196] = this.address
                                    mem[_6531 + 228] = block.timestamp + 300
                                    mem[_6531 + 164] = 160
                                    mem[_6531 + 260] = mem[_6531]
                                    idx = 0
                                    while idx < 32 * mem[_6531]:
                                        mem[_6531 + idx + 292] = mem[_6531 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(('cd', 68)[0]))
                                    call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_6531 + 260 len (32 * mem[_6531]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_6531 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _6531 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14181 = mem[_6531 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                                    require mem[_6531 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                                    require mem[_6531 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                                    require mem[mem[_6531 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _6531 + 96] <= 4294967296 and mem[_6531 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_6531 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _6531 + 96]) + 32 <= return_data.size
                                    mem[_6531 + ceil32(return_data.size) + 96] = mem[mem[_6531 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _6531 + 96]
                                    _14741 = mem[_14181 + _6531 + 96]
                                    idx = 0
                                    while idx < 32 * _14741:
                                        mem[_6531 + ceil32(return_data.size) + idx + 128] = mem[_14181 + _6531 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14741) + _6531 + ceil32(return_data.size) + 128
                                    s = s + 1
                                    t = 1
                                    u = this.address
                                    continue 
                                mem[mem[64] + 4] = address(('cd', 68)[0])
                                mem[mem[64] + 36] = 10000 * cd[100]
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(('cd', 68)[0]), 10000 * cd[100]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _7778 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                require 0 < mem[_7778]
                                mem[_7778 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                require 1 < mem[_7778]
                                mem[_7778 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                mem[_7778 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_7778 + 100] = cd[100]
                                mem[_7778 + 132] = 1
                                mem[_7778 + 196] = this.address
                                mem[_7778 + 228] = block.timestamp + 300
                                mem[_7778 + 164] = 160
                                mem[_7778 + 260] = mem[_7778]
                                idx = 0
                                while idx < 32 * mem[_7778]:
                                    mem[_7778 + idx + 292] = mem[_7778 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                require ext_code.size(address(('cd', 68)[0]))
                                call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_7778 + 260 len (32 * mem[_7778]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_7778 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _7778 + ceil32(return_data.size) + 96
                                require return_data.size >= 32
                                _14183 = mem[_7778 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                                require mem[_7778 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                                require mem[_7778 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                                require mem[mem[_7778 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _7778 + 96] <= 4294967296 and mem[_7778 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_7778 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _7778 + 96]) + 32 <= return_data.size
                                mem[_7778 + ceil32(return_data.size) + 96] = mem[mem[_7778 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _7778 + 96]
                                _14742 = mem[_14183 + _7778 + 96]
                                idx = 0
                                while idx < 32 * _14742:
                                    mem[_7778 + ceil32(return_data.size) + idx + 128] = mem[_14183 + _7778 + idx + 128]
                                    idx = idx + 32
                                    continue 
                                mem[64] = (32 * _14742) + _7778 + ceil32(return_data.size) + 128
                                idx = floor32(_14742) + 1
                                t = 1
                                u = this.address
                                continue 
                            if s != ('cd', 36).length - 1:
                                if not address(cd[((32 * s) + cd[68] + 36)]):
                                    require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _5166 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    require s < ('cd', 36).length
                                    require s + 1 < ('cd', 36).length
                                    require s < ('cd', 4).length
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                    if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        if not address(cd[((32 * s) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                            _8478 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_8478 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_8478 + 36] = 0
                                            mem[_8478 + 68] = _5166
                                            mem[_8478 + 100] = this.address
                                            mem[_8478 + 132] = 128
                                            mem[_8478 + 164] = mem[_8478]
                                            idx = 0
                                            while idx < mem[_8478]:
                                                mem[_8478 + idx + 196] = mem[_8478 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_8478] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _5166, address(this.address), 128, mem[_8478 + 164 len mem[_8478] + 32]
                                            else:
                                                mem[floor32(mem[_8478]) + _8478 + 196] = mem[floor32(mem[_8478]) + _8478 + -(mem[_8478] % 32) + 228 len mem[_8478] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _5166, address(this.address), 128, mem[_8478], mem[_8478 + 196 len floor32(mem[_8478]) + 32]
                                        else:
                                            _8479 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_8479 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_8479 + 36] = _5166
                                            mem[_8479 + 68] = 0
                                            mem[_8479 + 100] = this.address
                                            mem[_8479 + 132] = 128
                                            mem[_8479 + 164] = mem[_8479]
                                            idx = 0
                                            while idx < mem[_8479]:
                                                mem[_8479 + idx + 196] = mem[_8479 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_8479] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _5166, 0, address(this.address), 128, mem[_8479 + 164 len mem[_8479] + 32]
                                            else:
                                                mem[floor32(mem[_8479]) + _8479 + 196] = mem[floor32(mem[_8479]) + _8479 + -(mem[_8479] % 32) + 228 len mem[_8479] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _5166, 0, address(this.address), 128, mem[_8479], mem[_8479 + 196 len floor32(mem[_8479]) + 32]
                                    else:
                                        if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            _8480 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_8480 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_8480 + 36] = 0
                                            mem[_8480 + 68] = _5166
                                            mem[_8480 + 100] = this.address
                                            mem[_8480 + 132] = 128
                                            mem[_8480 + 164] = mem[_8480]
                                            idx = 0
                                            while idx < mem[_8480]:
                                                mem[_8480 + idx + 196] = mem[_8480 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_8480] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _5166, address(this.address), 128, mem[_8480 + 164 len mem[_8480] + 32]
                                            else:
                                                mem[floor32(mem[_8480]) + _8480 + 196] = mem[floor32(mem[_8480]) + _8480 + -(mem[_8480] % 32) + 228 len mem[_8480] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _5166, address(this.address), 128, mem[_8480], mem[_8480 + 196 len floor32(mem[_8480]) + 32]
                                        else:
                                            _8481 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_8481 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_8481 + 36] = _5166
                                            mem[_8481 + 68] = 0
                                            mem[_8481 + 100] = this.address
                                            mem[_8481 + 132] = 128
                                            mem[_8481 + 164] = mem[_8481]
                                            idx = 0
                                            while idx < mem[_8481]:
                                                mem[_8481 + idx + 196] = mem[_8481 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_8481] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _5166, 0, address(this.address), 128, mem[_8481 + 164 len mem[_8481] + 32]
                                            else:
                                                mem[floor32(mem[_8481]) + _8481 + 196] = mem[floor32(mem[_8481]) + _8481 + -(mem[_8481] % 32) + 228 len mem[_8481] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _5166, 0, address(this.address), 128, mem[_8481], mem[_8481 + 196 len floor32(mem[_8481]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    s = s + 1
                                    t = 0
                                    u = this.address
                                    continue 
                                require s < ('cd', 68).length
                                require s < ('cd', 36).length
                                require s + 1 < ('cd', 36).length
                                require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                _5583 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= _5583:
                                    _7217 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_7217]
                                    mem[_7217 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_7217]
                                    mem[_7217 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                    mem[_7217 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_7217 + 100] = _5583
                                    mem[_7217 + 132] = 1
                                    mem[_7217 + 196] = this.address
                                    mem[_7217 + 228] = block.timestamp + 300
                                    mem[_7217 + 164] = 160
                                    mem[_7217 + 260] = mem[_7217]
                                    idx = 0
                                    while idx < 32 * mem[_7217]:
                                        mem[_7217 + idx + 292] = mem[_7217 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                    call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _5583, 1, 160, address(this.address), block.timestamp + 300, mem[_7217 + 260 len (32 * mem[_7217]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_7217 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _7217 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14173 = mem[_7217 + 96 len 4], Mask(224, 32, _5583) >> 32
                                    require mem[_7217 + 96 len 4], Mask(224, 32, _5583) >> 32 <= 4294967296
                                    require mem[_7217 + 96 len 4], Mask(224, 32, _5583) >> 32 + 32 <= return_data.size
                                    require mem[mem[_7217 + 96 len 4], Mask(224, 32, _5583) >> 32 + _7217 + 96] <= 4294967296 and mem[_7217 + 96 len 4], Mask(224, 32, _5583) >> 32 + (32 * mem[mem[_7217 + 96 len 4], Mask(224, 32, _5583) >> 32 + _7217 + 96]) + 32 <= return_data.size
                                    mem[_7217 + ceil32(return_data.size) + 96] = mem[mem[_7217 + 96 len 4], Mask(224, 32, _5583) >> 32 + _7217 + 96]
                                    _14737 = mem[_14173 + _7217 + 96]
                                    idx = 0
                                    while idx < 32 * _14737:
                                        mem[_7217 + ceil32(return_data.size) + idx + 128] = mem[_14173 + _7217 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14737) + _7217 + ceil32(return_data.size) + 128
                                else:
                                    mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                    mem[mem[64] + 36] = 10000 * _5583
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _5583
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _8477 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_8477]
                                    mem[_8477 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_8477]
                                    mem[_8477 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                    mem[_8477 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_8477 + 100] = _5583
                                    mem[_8477 + 132] = 1
                                    mem[_8477 + 196] = this.address
                                    mem[_8477 + 228] = block.timestamp + 300
                                    mem[_8477 + 164] = 160
                                    mem[_8477 + 260] = mem[_8477]
                                    idx = 0
                                    while idx < 32 * mem[_8477]:
                                        mem[_8477 + idx + 292] = mem[_8477 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                    call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _5583, 1, 160, address(this.address), block.timestamp + 300, mem[_8477 + 260 len (32 * mem[_8477]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_8477 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _8477 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14175 = mem[_8477 + 96 len 4], Mask(224, 32, _5583) >> 32
                                    require mem[_8477 + 96 len 4], Mask(224, 32, _5583) >> 32 <= 4294967296
                                    require mem[_8477 + 96 len 4], Mask(224, 32, _5583) >> 32 + 32 <= return_data.size
                                    require mem[mem[_8477 + 96 len 4], Mask(224, 32, _5583) >> 32 + _8477 + 96] <= 4294967296 and mem[_8477 + 96 len 4], Mask(224, 32, _5583) >> 32 + (32 * mem[mem[_8477 + 96 len 4], Mask(224, 32, _5583) >> 32 + _8477 + 96]) + 32 <= return_data.size
                                    mem[_8477 + ceil32(return_data.size) + 96] = mem[mem[_8477 + 96 len 4], Mask(224, 32, _5583) >> 32 + _8477 + 96]
                                    _14738 = mem[_14175 + _8477 + 96]
                                    idx = 0
                                    while idx < 32 * _14738:
                                        mem[_8477 + ceil32(return_data.size) + idx + 128] = mem[_14175 + _8477 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14738) + _8477 + ceil32(return_data.size) + 128
                            else:
                                if not address(cd[((32 * s) + cd[68] + 36)]):
                                    require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _5167 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    require s < ('cd', 36).length
                                    require 0 < ('cd', 36).length
                                    require s < ('cd', 4).length
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                        revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                    if address(cd[((32 * s) + cd[36] + 36)]) < address(('cd', 36)[0]):
                                        if not address(cd[((32 * s) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                            _8486 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_8486 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_8486 + 36] = 0
                                            mem[_8486 + 68] = _5167
                                            mem[_8486 + 100] = this.address
                                            mem[_8486 + 132] = 128
                                            mem[_8486 + 164] = mem[_8486]
                                            idx = 0
                                            while idx < mem[_8486]:
                                                mem[_8486 + idx + 196] = mem[_8486 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_8486] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _5167, address(this.address), 128, mem[_8486 + 164 len mem[_8486] + 32]
                                            else:
                                                mem[floor32(mem[_8486]) + _8486 + 196] = mem[floor32(mem[_8486]) + _8486 + -(mem[_8486] % 32) + 228 len mem[_8486] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _5167, address(this.address), 128, mem[_8486], mem[_8486 + 196 len floor32(mem[_8486]) + 32]
                                        else:
                                            _8487 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_8487 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_8487 + 36] = _5167
                                            mem[_8487 + 68] = 0
                                            mem[_8487 + 100] = this.address
                                            mem[_8487 + 132] = 128
                                            mem[_8487 + 164] = mem[_8487]
                                            idx = 0
                                            while idx < mem[_8487]:
                                                mem[_8487 + idx + 196] = mem[_8487 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_8487] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _5167, 0, address(this.address), 128, mem[_8487 + 164 len mem[_8487] + 32]
                                            else:
                                                mem[floor32(mem[_8487]) + _8487 + 196] = mem[floor32(mem[_8487]) + _8487 + -(mem[_8487] % 32) + 228 len mem[_8487] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _5167, 0, address(this.address), 128, mem[_8487], mem[_8487 + 196 len floor32(mem[_8487]) + 32]
                                    else:
                                        if not address(('cd', 36)[0]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                            _8488 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_8488 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_8488 + 36] = 0
                                            mem[_8488 + 68] = _5167
                                            mem[_8488 + 100] = this.address
                                            mem[_8488 + 132] = 128
                                            mem[_8488 + 164] = mem[_8488]
                                            idx = 0
                                            while idx < mem[_8488]:
                                                mem[_8488 + idx + 196] = mem[_8488 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_8488] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _5167, address(this.address), 128, mem[_8488 + 164 len mem[_8488] + 32]
                                            else:
                                                mem[floor32(mem[_8488]) + _8488 + 196] = mem[floor32(mem[_8488]) + _8488 + -(mem[_8488] % 32) + 228 len mem[_8488] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _5167, address(this.address), 128, mem[_8488], mem[_8488 + 196 len floor32(mem[_8488]) + 32]
                                        else:
                                            _8489 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_8489 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_8489 + 36] = _5167
                                            mem[_8489 + 68] = 0
                                            mem[_8489 + 100] = this.address
                                            mem[_8489 + 132] = 128
                                            mem[_8489 + 164] = mem[_8489]
                                            idx = 0
                                            while idx < mem[_8489]:
                                                mem[_8489 + idx + 196] = mem[_8489 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_8489] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _5167, 0, address(this.address), 128, mem[_8489 + 164 len mem[_8489] + 32]
                                            else:
                                                mem[floor32(mem[_8489]) + _8489 + 196] = mem[floor32(mem[_8489]) + _8489 + -(mem[_8489] % 32) + 228 len mem[_8489] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _5167, 0, address(this.address), 128, mem[_8489], mem[_8489 + 196 len floor32(mem[_8489]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    s = s + 1
                                    t = 0
                                    u = this.address
                                    continue 
                                require s < ('cd', 68).length
                                require s < ('cd', 36).length
                                require 0 < ('cd', 36).length
                                require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                _5584 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= _5584:
                                    _7222 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_7222]
                                    mem[_7222 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_7222]
                                    mem[_7222 + 64] = address(('cd', 36)[0])
                                    mem[_7222 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_7222 + 100] = _5584
                                    mem[_7222 + 132] = 1
                                    mem[_7222 + 196] = this.address
                                    mem[_7222 + 228] = block.timestamp + 300
                                    mem[_7222 + 164] = 160
                                    mem[_7222 + 260] = mem[_7222]
                                    idx = 0
                                    while idx < 32 * mem[_7222]:
                                        mem[_7222 + idx + 292] = mem[_7222 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                    call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _5584, 1, 160, address(this.address), block.timestamp + 300, mem[_7222 + 260 len (32 * mem[_7222]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_7222 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _7222 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14177 = mem[_7222 + 96 len 4], Mask(224, 32, _5584) >> 32
                                    require mem[_7222 + 96 len 4], Mask(224, 32, _5584) >> 32 <= 4294967296
                                    require mem[_7222 + 96 len 4], Mask(224, 32, _5584) >> 32 + 32 <= return_data.size
                                    require mem[mem[_7222 + 96 len 4], Mask(224, 32, _5584) >> 32 + _7222 + 96] <= 4294967296 and mem[_7222 + 96 len 4], Mask(224, 32, _5584) >> 32 + (32 * mem[mem[_7222 + 96 len 4], Mask(224, 32, _5584) >> 32 + _7222 + 96]) + 32 <= return_data.size
                                    mem[_7222 + ceil32(return_data.size) + 96] = mem[mem[_7222 + 96 len 4], Mask(224, 32, _5584) >> 32 + _7222 + 96]
                                    _14739 = mem[_14177 + _7222 + 96]
                                    idx = 0
                                    while idx < 32 * _14739:
                                        mem[_7222 + ceil32(return_data.size) + idx + 128] = mem[_14177 + _7222 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14739) + _7222 + ceil32(return_data.size) + 128
                                else:
                                    mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                    mem[mem[64] + 36] = 10000 * _5584
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _5584
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _8485 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_8485]
                                    mem[_8485 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_8485]
                                    mem[_8485 + 64] = address(('cd', 36)[0])
                                    mem[_8485 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_8485 + 100] = _5584
                                    mem[_8485 + 132] = 1
                                    mem[_8485 + 196] = this.address
                                    mem[_8485 + 228] = block.timestamp + 300
                                    mem[_8485 + 164] = 160
                                    mem[_8485 + 260] = mem[_8485]
                                    idx = 0
                                    while idx < 32 * mem[_8485]:
                                        mem[_8485 + idx + 292] = mem[_8485 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                    call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _5584, 1, 160, address(this.address), block.timestamp + 300, mem[_8485 + 260 len (32 * mem[_8485]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_8485 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _8485 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14179 = mem[_8485 + 96 len 4], Mask(224, 32, _5584) >> 32
                                    require mem[_8485 + 96 len 4], Mask(224, 32, _5584) >> 32 <= 4294967296
                                    require mem[_8485 + 96 len 4], Mask(224, 32, _5584) >> 32 + 32 <= return_data.size
                                    require mem[mem[_8485 + 96 len 4], Mask(224, 32, _5584) >> 32 + _8485 + 96] <= 4294967296 and mem[_8485 + 96 len 4], Mask(224, 32, _5584) >> 32 + (32 * mem[mem[_8485 + 96 len 4], Mask(224, 32, _5584) >> 32 + _8485 + 96]) + 32 <= return_data.size
                                    mem[_8485 + ceil32(return_data.size) + 96] = mem[mem[_8485 + 96 len 4], Mask(224, 32, _5584) >> 32 + _8485 + 96]
                                    _14740 = mem[_14179 + _8485 + 96]
                                    idx = 0
                                    while idx < 32 * _14740:
                                        mem[_8485 + ceil32(return_data.size) + idx + 128] = mem[_14179 + _8485 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14740) + _8485 + ceil32(return_data.size) + 128
                s = s + 1
                t = 1
                u = this.address
                continue 
            if s >= ('cd', 36).length - 1:
                require s + 1 < ('cd', 4).length
                require s < ('cd', 68).length
                if not t:
                    if not s:
                        if not address(cd[((32 * s) + cd[68] + 36)]):
                            require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            _4567 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                            require s < ('cd', 36).length
                            require s + 1 < ('cd', 36).length
                            require s < ('cd', 4).length
                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                            if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                if not address(cd[((32 * s) + cd[36] + 36)]):
                                    revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                    _5433 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_5433 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_5433 + 36] = 0
                                    mem[_5433 + 68] = _4567
                                    mem[_5433 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    mem[_5433 + 132] = 128
                                    mem[_5433 + 164] = mem[_5433]
                                    idx = 0
                                    while idx < mem[_5433]:
                                        mem[_5433 + idx + 196] = mem[_5433 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    if not mem[_5433] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _4567, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5433 + 164 len mem[_5433] + 32]
                                    else:
                                        mem[floor32(mem[_5433]) + _5433 + 196] = mem[floor32(mem[_5433]) + _5433 + -(mem[_5433] % 32) + 228 len mem[_5433] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _4567, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5433], mem[_5433 + 196 len floor32(mem[_5433]) + 32]
                                else:
                                    _5434 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_5434 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_5434 + 36] = _4567
                                    mem[_5434 + 68] = 0
                                    mem[_5434 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    mem[_5434 + 132] = 128
                                    mem[_5434 + 164] = mem[_5434]
                                    idx = 0
                                    while idx < mem[_5434]:
                                        mem[_5434 + idx + 196] = mem[_5434 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    if not mem[_5434] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _4567, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5434 + 164 len mem[_5434] + 32]
                                    else:
                                        mem[floor32(mem[_5434]) + _5434 + 196] = mem[floor32(mem[_5434]) + _5434 + -(mem[_5434] % 32) + 228 len mem[_5434] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _4567, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5434], mem[_5434 + 196 len floor32(mem[_5434]) + 32]
                            else:
                                if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                    revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                    _5435 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_5435 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_5435 + 36] = 0
                                    mem[_5435 + 68] = _4567
                                    mem[_5435 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    mem[_5435 + 132] = 128
                                    mem[_5435 + 164] = mem[_5435]
                                    idx = 0
                                    while idx < mem[_5435]:
                                        mem[_5435 + idx + 196] = mem[_5435 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    if not mem[_5435] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _4567, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5435 + 164 len mem[_5435] + 32]
                                    else:
                                        mem[floor32(mem[_5435]) + _5435 + 196] = mem[floor32(mem[_5435]) + _5435 + -(mem[_5435] % 32) + 228 len mem[_5435] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _4567, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5435], mem[_5435 + 196 len floor32(mem[_5435]) + 32]
                                else:
                                    _5436 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_5436 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_5436 + 36] = _4567
                                    mem[_5436 + 68] = 0
                                    mem[_5436 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    mem[_5436 + 132] = 128
                                    mem[_5436 + 164] = mem[_5436]
                                    idx = 0
                                    while idx < mem[_5436]:
                                        mem[_5436 + idx + 196] = mem[_5436 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    if not mem[_5436] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _4567, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5436 + 164 len mem[_5436] + 32]
                                    else:
                                        mem[floor32(mem[_5436]) + _5436 + 196] = mem[floor32(mem[_5436]) + _5436 + -(mem[_5436] % 32) + 228 len mem[_5436] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _4567, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5436], mem[_5436 + 196 len floor32(mem[_5436]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            s = s + 1
                            t = 0
                            u = address(cd[((32 * s + 1) + cd[4] + 36)])
                            continue 
                        require 0 < ('cd', 68).length
                        require s < ('cd', 36).length
                        require s + 1 < ('cd', 36).length
                        mem[mem[64] + 4] = this.address
                        mem[mem[64] + 36] = address(('cd', 68)[0])
                        require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                        staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                gas gas_remaining wei
                               args address(this.address), address(('cd', 68)[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= cd[100]:
                            _4893 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            require 0 < mem[_4893]
                            mem[_4893 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                            require 1 < mem[_4893]
                            mem[_4893 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                            mem[_4893 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_4893 + 100] = cd[100]
                            mem[_4893 + 132] = 1
                            mem[_4893 + 196] = this.address
                            mem[_4893 + 228] = block.timestamp + 300
                            mem[_4893 + 164] = 160
                            mem[_4893 + 260] = mem[_4893]
                            idx = 0
                            while idx < 32 * mem[_4893]:
                                mem[_4893 + idx + 292] = mem[_4893 + idx + 32]
                                idx = idx + 32
                                continue 
                            require ext_code.size(address(('cd', 68)[0]))
                            call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_4893 + 260 len (32 * mem[_4893]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_4893 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _4893 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _14205 = mem[_4893 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                            require mem[_4893 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                            require mem[_4893 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                            require mem[mem[_4893 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _4893 + 96] <= 4294967296 and mem[_4893 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_4893 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _4893 + 96]) + 32 <= return_data.size
                            mem[_4893 + ceil32(return_data.size) + 96] = mem[mem[_4893 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _4893 + 96]
                            _14753 = mem[_14205 + _4893 + 96]
                            idx = 0
                            while idx < 32 * _14753:
                                mem[_4893 + ceil32(return_data.size) + idx + 128] = mem[_14205 + _4893 + idx + 128]
                                idx = idx + 32
                                continue 
                            mem[64] = (32 * _14753) + _4893 + ceil32(return_data.size) + 128
                        else:
                            mem[mem[64] + 4] = address(('cd', 68)[0])
                            mem[mem[64] + 36] = 10000 * cd[100]
                            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                            call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(('cd', 68)[0]), 10000 * cd[100]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            _5310 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            require 0 < mem[_5310]
                            mem[_5310 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                            require 1 < mem[_5310]
                            mem[_5310 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                            mem[_5310 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_5310 + 100] = cd[100]
                            mem[_5310 + 132] = 1
                            mem[_5310 + 196] = this.address
                            mem[_5310 + 228] = block.timestamp + 300
                            mem[_5310 + 164] = 160
                            mem[_5310 + 260] = mem[_5310]
                            idx = 0
                            while idx < 32 * mem[_5310]:
                                mem[_5310 + idx + 292] = mem[_5310 + idx + 32]
                                idx = idx + 32
                                continue 
                            require ext_code.size(address(('cd', 68)[0]))
                            call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_5310 + 260 len (32 * mem[_5310]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_5310 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _5310 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _14207 = mem[_5310 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                            require mem[_5310 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                            require mem[_5310 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                            require mem[mem[_5310 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _5310 + 96] <= 4294967296 and mem[_5310 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_5310 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _5310 + 96]) + 32 <= return_data.size
                            mem[_5310 + ceil32(return_data.size) + 96] = mem[mem[_5310 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _5310 + 96]
                            _14754 = mem[_14207 + _5310 + 96]
                            idx = 0
                            while idx < 32 * _14754:
                                mem[_5310 + ceil32(return_data.size) + idx + 128] = mem[_14207 + _5310 + idx + 128]
                                idx = idx + 32
                                continue 
                            mem[64] = (32 * _14754) + _5310 + ceil32(return_data.size) + 128
                    else:
                        if s != ('cd', 36).length - 1:
                            if not address(cd[((32 * s) + cd[68] + 36)]):
                                require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                _4584 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                require s < ('cd', 36).length
                                require s + 1 < ('cd', 36).length
                                require s < ('cd', 4).length
                                if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                    revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                    if not address(cd[((32 * s) + cd[36] + 36)]):
                                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                        _5594 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_5594 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_5594 + 36] = 0
                                        mem[_5594 + 68] = _4584
                                        mem[_5594 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                        mem[_5594 + 132] = 128
                                        mem[_5594 + 164] = mem[_5594]
                                        idx = 0
                                        while idx < mem[_5594]:
                                            mem[_5594 + idx + 196] = mem[_5594 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_5594] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4584, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5594 + 164 len mem[_5594] + 32]
                                        else:
                                            mem[floor32(mem[_5594]) + _5594 + 196] = mem[floor32(mem[_5594]) + _5594 + -(mem[_5594] % 32) + 228 len mem[_5594] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4584, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5594], mem[_5594 + 196 len floor32(mem[_5594]) + 32]
                                    else:
                                        _5595 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_5595 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_5595 + 36] = _4584
                                        mem[_5595 + 68] = 0
                                        mem[_5595 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                        mem[_5595 + 132] = 128
                                        mem[_5595 + 164] = mem[_5595]
                                        idx = 0
                                        while idx < mem[_5595]:
                                            mem[_5595 + idx + 196] = mem[_5595 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_5595] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4584, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5595 + 164 len mem[_5595] + 32]
                                        else:
                                            mem[floor32(mem[_5595]) + _5595 + 196] = mem[floor32(mem[_5595]) + _5595 + -(mem[_5595] % 32) + 228 len mem[_5595] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4584, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5595], mem[_5595 + 196 len floor32(mem[_5595]) + 32]
                                else:
                                    if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        _5596 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_5596 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_5596 + 36] = 0
                                        mem[_5596 + 68] = _4584
                                        mem[_5596 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                        mem[_5596 + 132] = 128
                                        mem[_5596 + 164] = mem[_5596]
                                        idx = 0
                                        while idx < mem[_5596]:
                                            mem[_5596 + idx + 196] = mem[_5596 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_5596] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4584, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5596 + 164 len mem[_5596] + 32]
                                        else:
                                            mem[floor32(mem[_5596]) + _5596 + 196] = mem[floor32(mem[_5596]) + _5596 + -(mem[_5596] % 32) + 228 len mem[_5596] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4584, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5596], mem[_5596 + 196 len floor32(mem[_5596]) + 32]
                                    else:
                                        _5597 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_5597 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_5597 + 36] = _4584
                                        mem[_5597 + 68] = 0
                                        mem[_5597 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                        mem[_5597 + 132] = 128
                                        mem[_5597 + 164] = mem[_5597]
                                        idx = 0
                                        while idx < mem[_5597]:
                                            mem[_5597 + idx + 196] = mem[_5597 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_5597] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4584, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5597 + 164 len mem[_5597] + 32]
                                        else:
                                            mem[floor32(mem[_5597]) + _5597 + 196] = mem[floor32(mem[_5597]) + _5597 + -(mem[_5597] % 32) + 228 len mem[_5597] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4584, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5597], mem[_5597 + 196 len floor32(mem[_5597]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                s = s + 1
                                t = 0
                                u = address(cd[((32 * s + 1) + cd[4] + 36)])
                                continue 
                            require s < ('cd', 68).length
                            require s < ('cd', 36).length
                            require s + 1 < ('cd', 36).length
                            require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            _4663 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                            mem[mem[64] + 4] = this.address
                            mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                            staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                    gas gas_remaining wei
                                   args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= _4663:
                                _5043 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                require 0 < mem[_5043]
                                mem[_5043 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                require 1 < mem[_5043]
                                mem[_5043 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                mem[_5043 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_5043 + 100] = _4663
                                mem[_5043 + 132] = 1
                                mem[_5043 + 196] = this.address
                                mem[_5043 + 228] = block.timestamp + 300
                                mem[_5043 + 164] = 160
                                mem[_5043 + 260] = mem[_5043]
                                idx = 0
                                while idx < 32 * mem[_5043]:
                                    mem[_5043 + idx + 292] = mem[_5043 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _4663, 1, 160, address(this.address), block.timestamp + 300, mem[_5043 + 260 len (32 * mem[_5043]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_5043 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _5043 + ceil32(return_data.size) + 96
                                require return_data.size >= 32
                                _14197 = mem[_5043 + 96 len 4], Mask(224, 32, _4663) >> 32
                                require mem[_5043 + 96 len 4], Mask(224, 32, _4663) >> 32 <= 4294967296
                                require mem[_5043 + 96 len 4], Mask(224, 32, _4663) >> 32 + 32 <= return_data.size
                                require mem[mem[_5043 + 96 len 4], Mask(224, 32, _4663) >> 32 + _5043 + 96] <= 4294967296 and mem[_5043 + 96 len 4], Mask(224, 32, _4663) >> 32 + (32 * mem[mem[_5043 + 96 len 4], Mask(224, 32, _4663) >> 32 + _5043 + 96]) + 32 <= return_data.size
                                mem[_5043 + ceil32(return_data.size) + 96] = mem[mem[_5043 + 96 len 4], Mask(224, 32, _4663) >> 32 + _5043 + 96]
                                _14749 = mem[_14197 + _5043 + 96]
                                idx = 0
                                while idx < 32 * _14749:
                                    mem[_5043 + ceil32(return_data.size) + idx + 128] = mem[_14197 + _5043 + idx + 128]
                                    idx = idx + 32
                                    continue 
                                mem[64] = (32 * _14749) + _5043 + ceil32(return_data.size) + 128
                            else:
                                mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                mem[mem[64] + 36] = 10000 * _4663
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _4663
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _5593 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                require 0 < mem[_5593]
                                mem[_5593 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                require 1 < mem[_5593]
                                mem[_5593 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                mem[_5593 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_5593 + 100] = _4663
                                mem[_5593 + 132] = 1
                                mem[_5593 + 196] = this.address
                                mem[_5593 + 228] = block.timestamp + 300
                                mem[_5593 + 164] = 160
                                mem[_5593 + 260] = mem[_5593]
                                idx = 0
                                while idx < 32 * mem[_5593]:
                                    mem[_5593 + idx + 292] = mem[_5593 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _4663, 1, 160, address(this.address), block.timestamp + 300, mem[_5593 + 260 len (32 * mem[_5593]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_5593 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _5593 + ceil32(return_data.size) + 96
                                require return_data.size >= 32
                                _14199 = mem[_5593 + 96 len 4], Mask(224, 32, _4663) >> 32
                                require mem[_5593 + 96 len 4], Mask(224, 32, _4663) >> 32 <= 4294967296
                                require mem[_5593 + 96 len 4], Mask(224, 32, _4663) >> 32 + 32 <= return_data.size
                                require mem[mem[_5593 + 96 len 4], Mask(224, 32, _4663) >> 32 + _5593 + 96] <= 4294967296 and mem[_5593 + 96 len 4], Mask(224, 32, _4663) >> 32 + (32 * mem[mem[_5593 + 96 len 4], Mask(224, 32, _4663) >> 32 + _5593 + 96]) + 32 <= return_data.size
                                mem[_5593 + ceil32(return_data.size) + 96] = mem[mem[_5593 + 96 len 4], Mask(224, 32, _4663) >> 32 + _5593 + 96]
                                _14750 = mem[_14199 + _5593 + 96]
                                idx = 0
                                while idx < 32 * _14750:
                                    mem[_5593 + ceil32(return_data.size) + idx + 128] = mem[_14199 + _5593 + idx + 128]
                                    idx = idx + 32
                                    continue 
                                mem[64] = (32 * _14750) + _5593 + ceil32(return_data.size) + 128
                        else:
                            if not address(cd[((32 * s) + cd[68] + 36)]):
                                require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                _4585 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                require s < ('cd', 36).length
                                require 0 < ('cd', 36).length
                                require s < ('cd', 4).length
                                if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                    revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                if address(cd[((32 * s) + cd[36] + 36)]) < address(('cd', 36)[0]):
                                    if not address(cd[((32 * s) + cd[36] + 36)]):
                                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                        _5602 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_5602 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_5602 + 36] = 0
                                        mem[_5602 + 68] = _4585
                                        mem[_5602 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                        mem[_5602 + 132] = 128
                                        mem[_5602 + 164] = mem[_5602]
                                        idx = 0
                                        while idx < mem[_5602]:
                                            mem[_5602 + idx + 196] = mem[_5602 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_5602] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4585, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5602 + 164 len mem[_5602] + 32]
                                        else:
                                            mem[floor32(mem[_5602]) + _5602 + 196] = mem[floor32(mem[_5602]) + _5602 + -(mem[_5602] % 32) + 228 len mem[_5602] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4585, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5602], mem[_5602 + 196 len floor32(mem[_5602]) + 32]
                                    else:
                                        _5603 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_5603 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_5603 + 36] = _4585
                                        mem[_5603 + 68] = 0
                                        mem[_5603 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                        mem[_5603 + 132] = 128
                                        mem[_5603 + 164] = mem[_5603]
                                        idx = 0
                                        while idx < mem[_5603]:
                                            mem[_5603 + idx + 196] = mem[_5603 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_5603] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4585, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5603 + 164 len mem[_5603] + 32]
                                        else:
                                            mem[floor32(mem[_5603]) + _5603 + 196] = mem[floor32(mem[_5603]) + _5603 + -(mem[_5603] % 32) + 228 len mem[_5603] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4585, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5603], mem[_5603 + 196 len floor32(mem[_5603]) + 32]
                                else:
                                    if not address(('cd', 36)[0]):
                                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                        _5604 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_5604 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_5604 + 36] = 0
                                        mem[_5604 + 68] = _4585
                                        mem[_5604 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                        mem[_5604 + 132] = 128
                                        mem[_5604 + 164] = mem[_5604]
                                        idx = 0
                                        while idx < mem[_5604]:
                                            mem[_5604 + idx + 196] = mem[_5604 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_5604] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4585, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5604 + 164 len mem[_5604] + 32]
                                        else:
                                            mem[floor32(mem[_5604]) + _5604 + 196] = mem[floor32(mem[_5604]) + _5604 + -(mem[_5604] % 32) + 228 len mem[_5604] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4585, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5604], mem[_5604 + 196 len floor32(mem[_5604]) + 32]
                                    else:
                                        _5605 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_5605 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_5605 + 36] = _4585
                                        mem[_5605 + 68] = 0
                                        mem[_5605 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                        mem[_5605 + 132] = 128
                                        mem[_5605 + 164] = mem[_5605]
                                        idx = 0
                                        while idx < mem[_5605]:
                                            mem[_5605 + idx + 196] = mem[_5605 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_5605] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4585, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5605 + 164 len mem[_5605] + 32]
                                        else:
                                            mem[floor32(mem[_5605]) + _5605 + 196] = mem[floor32(mem[_5605]) + _5605 + -(mem[_5605] % 32) + 228 len mem[_5605] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4585, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5605], mem[_5605 + 196 len floor32(mem[_5605]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                s = s + 1
                                t = 0
                                u = address(cd[((32 * s + 1) + cd[4] + 36)])
                                continue 
                            require s < ('cd', 68).length
                            require s < ('cd', 36).length
                            require 0 < ('cd', 36).length
                            require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            _4664 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                            mem[mem[64] + 4] = this.address
                            mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                            staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                    gas gas_remaining wei
                                   args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= _4664:
                                _5048 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                require 0 < mem[_5048]
                                mem[_5048 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                require 1 < mem[_5048]
                                mem[_5048 + 64] = address(('cd', 36)[0])
                                mem[_5048 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_5048 + 100] = _4664
                                mem[_5048 + 132] = 1
                                mem[_5048 + 196] = this.address
                                mem[_5048 + 228] = block.timestamp + 300
                                mem[_5048 + 164] = 160
                                mem[_5048 + 260] = mem[_5048]
                                idx = 0
                                while idx < 32 * mem[_5048]:
                                    mem[_5048 + idx + 292] = mem[_5048 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _4664, 1, 160, address(this.address), block.timestamp + 300, mem[_5048 + 260 len (32 * mem[_5048]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_5048 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _5048 + ceil32(return_data.size) + 96
                                require return_data.size >= 32
                                _14201 = mem[_5048 + 96 len 4], Mask(224, 32, _4664) >> 32
                                require mem[_5048 + 96 len 4], Mask(224, 32, _4664) >> 32 <= 4294967296
                                require mem[_5048 + 96 len 4], Mask(224, 32, _4664) >> 32 + 32 <= return_data.size
                                require mem[mem[_5048 + 96 len 4], Mask(224, 32, _4664) >> 32 + _5048 + 96] <= 4294967296 and mem[_5048 + 96 len 4], Mask(224, 32, _4664) >> 32 + (32 * mem[mem[_5048 + 96 len 4], Mask(224, 32, _4664) >> 32 + _5048 + 96]) + 32 <= return_data.size
                                mem[_5048 + ceil32(return_data.size) + 96] = mem[mem[_5048 + 96 len 4], Mask(224, 32, _4664) >> 32 + _5048 + 96]
                                _14751 = mem[_14201 + _5048 + 96]
                                idx = 0
                                while idx < 32 * _14751:
                                    mem[_5048 + ceil32(return_data.size) + idx + 128] = mem[_14201 + _5048 + idx + 128]
                                    idx = idx + 32
                                    continue 
                                mem[64] = (32 * _14751) + _5048 + ceil32(return_data.size) + 128
                            else:
                                mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                mem[mem[64] + 36] = 10000 * _4664
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _4664
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _5601 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                require 0 < mem[_5601]
                                mem[_5601 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                require 1 < mem[_5601]
                                mem[_5601 + 64] = address(('cd', 36)[0])
                                mem[_5601 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_5601 + 100] = _4664
                                mem[_5601 + 132] = 1
                                mem[_5601 + 196] = this.address
                                mem[_5601 + 228] = block.timestamp + 300
                                mem[_5601 + 164] = 160
                                mem[_5601 + 260] = mem[_5601]
                                idx = 0
                                while idx < 32 * mem[_5601]:
                                    mem[_5601 + idx + 292] = mem[_5601 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _4664, 1, 160, address(this.address), block.timestamp + 300, mem[_5601 + 260 len (32 * mem[_5601]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_5601 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _5601 + ceil32(return_data.size) + 96
                                require return_data.size >= 32
                                _14203 = mem[_5601 + 96 len 4], Mask(224, 32, _4664) >> 32
                                require mem[_5601 + 96 len 4], Mask(224, 32, _4664) >> 32 <= 4294967296
                                require mem[_5601 + 96 len 4], Mask(224, 32, _4664) >> 32 + 32 <= return_data.size
                                require mem[mem[_5601 + 96 len 4], Mask(224, 32, _4664) >> 32 + _5601 + 96] <= 4294967296 and mem[_5601 + 96 len 4], Mask(224, 32, _4664) >> 32 + (32 * mem[mem[_5601 + 96 len 4], Mask(224, 32, _4664) >> 32 + _5601 + 96]) + 32 <= return_data.size
                                mem[_5601 + ceil32(return_data.size) + 96] = mem[mem[_5601 + 96 len 4], Mask(224, 32, _4664) >> 32 + _5601 + 96]
                                _14752 = mem[_14203 + _5601 + 96]
                                idx = 0
                                while idx < 32 * _14752:
                                    mem[_5601 + ceil32(return_data.size) + idx + 128] = mem[_14203 + _5601 + idx + 128]
                                    idx = idx + 32
                                    continue 
                                mem[64] = (32 * _14752) + _5601 + ceil32(return_data.size) + 128
                else:
                    if address(cd[((32 * s) + cd[68] + 36)]):
                        require s < ('cd', 68).length
                        if not s:
                            if not address(cd[((32 * s) + cd[68] + 36)]):
                                require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                _4667 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                require s < ('cd', 36).length
                                require s + 1 < ('cd', 36).length
                                require s < ('cd', 4).length
                                if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                    revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                    if not address(cd[((32 * s) + cd[36] + 36)]):
                                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                        _6300 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_6300 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_6300 + 36] = 0
                                        mem[_6300 + 68] = _4667
                                        mem[_6300 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                        mem[_6300 + 132] = 128
                                        mem[_6300 + 164] = mem[_6300]
                                        idx = 0
                                        while idx < mem[_6300]:
                                            mem[_6300 + idx + 196] = mem[_6300 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_6300] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4667, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6300 + 164 len mem[_6300] + 32]
                                        else:
                                            mem[floor32(mem[_6300]) + _6300 + 196] = mem[floor32(mem[_6300]) + _6300 + -(mem[_6300] % 32) + 228 len mem[_6300] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4667, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6300], mem[_6300 + 196 len floor32(mem[_6300]) + 32]
                                    else:
                                        _6301 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_6301 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_6301 + 36] = _4667
                                        mem[_6301 + 68] = 0
                                        mem[_6301 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                        mem[_6301 + 132] = 128
                                        mem[_6301 + 164] = mem[_6301]
                                        idx = 0
                                        while idx < mem[_6301]:
                                            mem[_6301 + idx + 196] = mem[_6301 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_6301] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4667, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6301 + 164 len mem[_6301] + 32]
                                        else:
                                            mem[floor32(mem[_6301]) + _6301 + 196] = mem[floor32(mem[_6301]) + _6301 + -(mem[_6301] % 32) + 228 len mem[_6301] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4667, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6301], mem[_6301 + 196 len floor32(mem[_6301]) + 32]
                                else:
                                    if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        _6302 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_6302 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_6302 + 36] = 0
                                        mem[_6302 + 68] = _4667
                                        mem[_6302 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                        mem[_6302 + 132] = 128
                                        mem[_6302 + 164] = mem[_6302]
                                        idx = 0
                                        while idx < mem[_6302]:
                                            mem[_6302 + idx + 196] = mem[_6302 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_6302] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4667, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6302 + 164 len mem[_6302] + 32]
                                        else:
                                            mem[floor32(mem[_6302]) + _6302 + 196] = mem[floor32(mem[_6302]) + _6302 + -(mem[_6302] % 32) + 228 len mem[_6302] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4667, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6302], mem[_6302 + 196 len floor32(mem[_6302]) + 32]
                                    else:
                                        _6303 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_6303 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_6303 + 36] = _4667
                                        mem[_6303 + 68] = 0
                                        mem[_6303 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                        mem[_6303 + 132] = 128
                                        mem[_6303 + 164] = mem[_6303]
                                        idx = 0
                                        while idx < mem[_6303]:
                                            mem[_6303 + idx + 196] = mem[_6303 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_6303] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4667, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6303 + 164 len mem[_6303] + 32]
                                        else:
                                            mem[floor32(mem[_6303]) + _6303 + 196] = mem[floor32(mem[_6303]) + _6303 + -(mem[_6303] % 32) + 228 len mem[_6303] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4667, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6303], mem[_6303 + 196 len floor32(mem[_6303]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                s = s + 1
                                t = 0
                                u = address(cd[((32 * s + 1) + cd[4] + 36)])
                                continue 
                            require 0 < ('cd', 68).length
                            require s < ('cd', 36).length
                            require s + 1 < ('cd', 36).length
                            mem[mem[64] + 4] = this.address
                            mem[mem[64] + 36] = address(('cd', 68)[0])
                            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                            staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                    gas gas_remaining wei
                                   args address(this.address), address(('cd', 68)[0])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= cd[100]:
                                _5313 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                require 0 < mem[_5313]
                                mem[_5313 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                require 1 < mem[_5313]
                                mem[_5313 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                mem[_5313 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_5313 + 100] = cd[100]
                                mem[_5313 + 132] = 1
                                mem[_5313 + 196] = this.address
                                mem[_5313 + 228] = block.timestamp + 300
                                mem[_5313 + 164] = 160
                                mem[_5313 + 260] = mem[_5313]
                                idx = 0
                                while idx < 32 * mem[_5313]:
                                    mem[_5313 + idx + 292] = mem[_5313 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                require ext_code.size(address(('cd', 68)[0]))
                                call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_5313 + 260 len (32 * mem[_5313]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_5313 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _5313 + ceil32(return_data.size) + 96
                                require return_data.size >= 32
                                _14217 = mem[_5313 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                                require mem[_5313 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                                require mem[_5313 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                                require mem[mem[_5313 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _5313 + 96] <= 4294967296 and mem[_5313 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_5313 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _5313 + 96]) + 32 <= return_data.size
                                mem[_5313 + ceil32(return_data.size) + 96] = mem[mem[_5313 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _5313 + 96]
                                _14759 = mem[_14217 + _5313 + 96]
                                idx = 0
                                while idx < 32 * _14759:
                                    mem[_5313 + ceil32(return_data.size) + idx + 128] = mem[_14217 + _5313 + idx + 128]
                                    idx = idx + 32
                                    continue 
                                mem[64] = (32 * _14759) + _5313 + ceil32(return_data.size) + 128
                            else:
                                mem[mem[64] + 4] = address(('cd', 68)[0])
                                mem[mem[64] + 36] = 10000 * cd[100]
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(('cd', 68)[0]), 10000 * cd[100]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _6093 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                require 0 < mem[_6093]
                                mem[_6093 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                require 1 < mem[_6093]
                                mem[_6093 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                mem[_6093 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_6093 + 100] = cd[100]
                                mem[_6093 + 132] = 1
                                mem[_6093 + 196] = this.address
                                mem[_6093 + 228] = block.timestamp + 300
                                mem[_6093 + 164] = 160
                                mem[_6093 + 260] = mem[_6093]
                                idx = 0
                                while idx < 32 * mem[_6093]:
                                    mem[_6093 + idx + 292] = mem[_6093 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                require ext_code.size(address(('cd', 68)[0]))
                                call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_6093 + 260 len (32 * mem[_6093]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_6093 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _6093 + ceil32(return_data.size) + 96
                                require return_data.size >= 32
                                _14219 = mem[_6093 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                                require mem[_6093 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                                require mem[_6093 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                                require mem[mem[_6093 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _6093 + 96] <= 4294967296 and mem[_6093 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_6093 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _6093 + 96]) + 32 <= return_data.size
                                mem[_6093 + ceil32(return_data.size) + 96] = mem[mem[_6093 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _6093 + 96]
                                _14760 = mem[_14219 + _6093 + 96]
                                idx = 0
                                while idx < 32 * _14760:
                                    mem[_6093 + ceil32(return_data.size) + idx + 128] = mem[_14219 + _6093 + idx + 128]
                                    idx = idx + 32
                                    continue 
                                mem[64] = (32 * _14760) + _6093 + ceil32(return_data.size) + 128
                        else:
                            if s != ('cd', 36).length - 1:
                                if not address(cd[((32 * s) + cd[68] + 36)]):
                                    require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _4715 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    require s < ('cd', 36).length
                                    require s + 1 < ('cd', 36).length
                                    require s < ('cd', 4).length
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                    if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        if not address(cd[((32 * s) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                            _6575 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_6575 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_6575 + 36] = 0
                                            mem[_6575 + 68] = _4715
                                            mem[_6575 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                            mem[_6575 + 132] = 128
                                            mem[_6575 + 164] = mem[_6575]
                                            t = 0
                                            while t < mem[_6575]:
                                                mem[_6575 + t + 196] = mem[_6575 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_6575] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4715, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6575 + 164 len mem[_6575] + 32]
                                            else:
                                                mem[floor32(mem[_6575]) + _6575 + 196] = mem[floor32(mem[_6575]) + _6575 + -(mem[_6575] % 32) + 228 len mem[_6575] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4715, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6575], mem[_6575 + 196 len floor32(mem[_6575]) + 32]
                                        else:
                                            _6576 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_6576 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_6576 + 36] = _4715
                                            mem[_6576 + 68] = 0
                                            mem[_6576 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                            mem[_6576 + 132] = 128
                                            mem[_6576 + 164] = mem[_6576]
                                            t = 0
                                            while t < mem[_6576]:
                                                mem[_6576 + t + 196] = mem[_6576 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_6576] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4715, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6576 + 164 len mem[_6576] + 32]
                                            else:
                                                mem[floor32(mem[_6576]) + _6576 + 196] = mem[floor32(mem[_6576]) + _6576 + -(mem[_6576] % 32) + 228 len mem[_6576] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4715, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6576], mem[_6576 + 196 len floor32(mem[_6576]) + 32]
                                    else:
                                        if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            _6577 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_6577 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_6577 + 36] = 0
                                            mem[_6577 + 68] = _4715
                                            mem[_6577 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                            mem[_6577 + 132] = 128
                                            mem[_6577 + 164] = mem[_6577]
                                            t = 0
                                            while t < mem[_6577]:
                                                mem[_6577 + t + 196] = mem[_6577 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_6577] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4715, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6577 + 164 len mem[_6577] + 32]
                                            else:
                                                mem[floor32(mem[_6577]) + _6577 + 196] = mem[floor32(mem[_6577]) + _6577 + -(mem[_6577] % 32) + 228 len mem[_6577] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4715, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6577], mem[_6577 + 196 len floor32(mem[_6577]) + 32]
                                        else:
                                            _6578 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_6578 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_6578 + 36] = _4715
                                            mem[_6578 + 68] = 0
                                            mem[_6578 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                            mem[_6578 + 132] = 128
                                            mem[_6578 + 164] = mem[_6578]
                                            t = 0
                                            while t < mem[_6578]:
                                                mem[_6578 + t + 196] = mem[_6578 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_6578] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4715, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6578 + 164 len mem[_6578] + 32]
                                            else:
                                                mem[floor32(mem[_6578]) + _6578 + 196] = mem[floor32(mem[_6578]) + _6578 + -(mem[_6578] % 32) + 228 len mem[_6578] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4715, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6578], mem[_6578 + 196 len floor32(mem[_6578]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    s = s + 1
                                    t = 0
                                    u = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    continue 
                                require s < ('cd', 68).length
                                require s < ('cd', 36).length
                                require s + 1 < ('cd', 36).length
                                require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                _4894 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= _4894:
                                    _5621 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_5621]
                                    mem[_5621 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_5621]
                                    mem[_5621 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                    mem[_5621 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_5621 + 100] = _4894
                                    mem[_5621 + 132] = 1
                                    mem[_5621 + 196] = this.address
                                    mem[_5621 + 228] = block.timestamp + 300
                                    mem[_5621 + 164] = 160
                                    mem[_5621 + 260] = mem[_5621]
                                    idx = 0
                                    while idx < 32 * mem[_5621]:
                                        mem[_5621 + idx + 292] = mem[_5621 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                    call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4894, 1, 160, address(this.address), block.timestamp + 300, mem[_5621 + 260 len (32 * mem[_5621]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_5621 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _5621 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14209 = mem[_5621 + 96 len 4], Mask(224, 32, _4894) >> 32
                                    require mem[_5621 + 96 len 4], Mask(224, 32, _4894) >> 32 <= 4294967296
                                    require mem[_5621 + 96 len 4], Mask(224, 32, _4894) >> 32 + 32 <= return_data.size
                                    require mem[mem[_5621 + 96 len 4], Mask(224, 32, _4894) >> 32 + _5621 + 96] <= 4294967296 and mem[_5621 + 96 len 4], Mask(224, 32, _4894) >> 32 + (32 * mem[mem[_5621 + 96 len 4], Mask(224, 32, _4894) >> 32 + _5621 + 96]) + 32 <= return_data.size
                                    mem[_5621 + ceil32(return_data.size) + 96] = mem[mem[_5621 + 96 len 4], Mask(224, 32, _4894) >> 32 + _5621 + 96]
                                    _14755 = mem[_14209 + _5621 + 96]
                                    idx = 0
                                    while idx < 32 * _14755:
                                        mem[_5621 + ceil32(return_data.size) + idx + 128] = mem[_14209 + _5621 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14755) + _5621 + ceil32(return_data.size) + 128
                                else:
                                    mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                    mem[mem[64] + 36] = 10000 * _4894
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _4894
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _6574 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_6574]
                                    mem[_6574 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_6574]
                                    mem[_6574 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                    mem[_6574 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_6574 + 100] = _4894
                                    mem[_6574 + 132] = 1
                                    mem[_6574 + 196] = this.address
                                    mem[_6574 + 228] = block.timestamp + 300
                                    mem[_6574 + 164] = 160
                                    mem[_6574 + 260] = mem[_6574]
                                    idx = 0
                                    while idx < 32 * mem[_6574]:
                                        mem[_6574 + idx + 292] = mem[_6574 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                    call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4894, 1, 160, address(this.address), block.timestamp + 300, mem[_6574 + 260 len (32 * mem[_6574]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_6574 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _6574 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14211 = mem[_6574 + 96 len 4], Mask(224, 32, _4894) >> 32
                                    require mem[_6574 + 96 len 4], Mask(224, 32, _4894) >> 32 <= 4294967296
                                    require mem[_6574 + 96 len 4], Mask(224, 32, _4894) >> 32 + 32 <= return_data.size
                                    require mem[mem[_6574 + 96 len 4], Mask(224, 32, _4894) >> 32 + _6574 + 96] <= 4294967296 and mem[_6574 + 96 len 4], Mask(224, 32, _4894) >> 32 + (32 * mem[mem[_6574 + 96 len 4], Mask(224, 32, _4894) >> 32 + _6574 + 96]) + 32 <= return_data.size
                                    mem[_6574 + ceil32(return_data.size) + 96] = mem[mem[_6574 + 96 len 4], Mask(224, 32, _4894) >> 32 + _6574 + 96]
                                    _14756 = mem[_14211 + _6574 + 96]
                                    idx = 0
                                    while idx < 32 * _14756:
                                        mem[_6574 + ceil32(return_data.size) + idx + 128] = mem[_14211 + _6574 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14756) + _6574 + ceil32(return_data.size) + 128
                            else:
                                if not address(cd[((32 * s) + cd[68] + 36)]):
                                    require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _4716 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    require s < ('cd', 36).length
                                    require 0 < ('cd', 36).length
                                    require s < ('cd', 4).length
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                        revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                    if address(cd[((32 * s) + cd[36] + 36)]) < address(('cd', 36)[0]):
                                        if not address(cd[((32 * s) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                            _6583 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_6583 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_6583 + 36] = 0
                                            mem[_6583 + 68] = _4716
                                            mem[_6583 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                            mem[_6583 + 132] = 128
                                            mem[_6583 + 164] = mem[_6583]
                                            t = 0
                                            while t < mem[_6583]:
                                                mem[_6583 + t + 196] = mem[_6583 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_6583] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4716, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6583 + 164 len mem[_6583] + 32]
                                            else:
                                                mem[floor32(mem[_6583]) + _6583 + 196] = mem[floor32(mem[_6583]) + _6583 + -(mem[_6583] % 32) + 228 len mem[_6583] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4716, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6583], mem[_6583 + 196 len floor32(mem[_6583]) + 32]
                                        else:
                                            _6584 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_6584 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_6584 + 36] = _4716
                                            mem[_6584 + 68] = 0
                                            mem[_6584 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                            mem[_6584 + 132] = 128
                                            mem[_6584 + 164] = mem[_6584]
                                            t = 0
                                            while t < mem[_6584]:
                                                mem[_6584 + t + 196] = mem[_6584 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_6584] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4716, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6584 + 164 len mem[_6584] + 32]
                                            else:
                                                mem[floor32(mem[_6584]) + _6584 + 196] = mem[floor32(mem[_6584]) + _6584 + -(mem[_6584] % 32) + 228 len mem[_6584] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4716, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6584], mem[_6584 + 196 len floor32(mem[_6584]) + 32]
                                    else:
                                        if not address(('cd', 36)[0]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                            _6585 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_6585 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_6585 + 36] = 0
                                            mem[_6585 + 68] = _4716
                                            mem[_6585 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                            mem[_6585 + 132] = 128
                                            mem[_6585 + 164] = mem[_6585]
                                            t = 0
                                            while t < mem[_6585]:
                                                mem[_6585 + t + 196] = mem[_6585 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_6585] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4716, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6585 + 164 len mem[_6585] + 32]
                                            else:
                                                mem[floor32(mem[_6585]) + _6585 + 196] = mem[floor32(mem[_6585]) + _6585 + -(mem[_6585] % 32) + 228 len mem[_6585] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4716, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6585], mem[_6585 + 196 len floor32(mem[_6585]) + 32]
                                        else:
                                            _6586 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_6586 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_6586 + 36] = _4716
                                            mem[_6586 + 68] = 0
                                            mem[_6586 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                            mem[_6586 + 132] = 128
                                            mem[_6586 + 164] = mem[_6586]
                                            t = 0
                                            while t < mem[_6586]:
                                                mem[_6586 + t + 196] = mem[_6586 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_6586] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4716, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6586 + 164 len mem[_6586] + 32]
                                            else:
                                                mem[floor32(mem[_6586]) + _6586 + 196] = mem[floor32(mem[_6586]) + _6586 + -(mem[_6586] % 32) + 228 len mem[_6586] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4716, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6586], mem[_6586 + 196 len floor32(mem[_6586]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    s = s + 1
                                    t = 0
                                    u = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    continue 
                                require s < ('cd', 68).length
                                require s < ('cd', 36).length
                                require 0 < ('cd', 36).length
                                require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                _4895 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= _4895:
                                    _5626 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_5626]
                                    mem[_5626 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_5626]
                                    mem[_5626 + 64] = address(('cd', 36)[0])
                                    mem[_5626 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_5626 + 100] = _4895
                                    mem[_5626 + 132] = 1
                                    mem[_5626 + 196] = this.address
                                    mem[_5626 + 228] = block.timestamp + 300
                                    mem[_5626 + 164] = 160
                                    mem[_5626 + 260] = mem[_5626]
                                    idx = 0
                                    while idx < 32 * mem[_5626]:
                                        mem[_5626 + idx + 292] = mem[_5626 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                    call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4895, 1, 160, address(this.address), block.timestamp + 300, mem[_5626 + 260 len (32 * mem[_5626]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_5626 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _5626 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14213 = mem[_5626 + 96 len 4], Mask(224, 32, _4895) >> 32
                                    require mem[_5626 + 96 len 4], Mask(224, 32, _4895) >> 32 <= 4294967296
                                    require mem[_5626 + 96 len 4], Mask(224, 32, _4895) >> 32 + 32 <= return_data.size
                                    require mem[mem[_5626 + 96 len 4], Mask(224, 32, _4895) >> 32 + _5626 + 96] <= 4294967296 and mem[_5626 + 96 len 4], Mask(224, 32, _4895) >> 32 + (32 * mem[mem[_5626 + 96 len 4], Mask(224, 32, _4895) >> 32 + _5626 + 96]) + 32 <= return_data.size
                                    mem[_5626 + ceil32(return_data.size) + 96] = mem[mem[_5626 + 96 len 4], Mask(224, 32, _4895) >> 32 + _5626 + 96]
                                    _14757 = mem[_14213 + _5626 + 96]
                                    idx = 0
                                    while idx < 32 * _14757:
                                        mem[_5626 + ceil32(return_data.size) + idx + 128] = mem[_14213 + _5626 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14757) + _5626 + ceil32(return_data.size) + 128
                                else:
                                    mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                    mem[mem[64] + 36] = 10000 * _4895
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _4895
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _6582 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_6582]
                                    mem[_6582 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_6582]
                                    mem[_6582 + 64] = address(('cd', 36)[0])
                                    mem[_6582 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_6582 + 100] = _4895
                                    mem[_6582 + 132] = 1
                                    mem[_6582 + 196] = this.address
                                    mem[_6582 + 228] = block.timestamp + 300
                                    mem[_6582 + 164] = 160
                                    mem[_6582 + 260] = mem[_6582]
                                    idx = 0
                                    while idx < 32 * mem[_6582]:
                                        mem[_6582 + idx + 292] = mem[_6582 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                    call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4895, 1, 160, address(this.address), block.timestamp + 300, mem[_6582 + 260 len (32 * mem[_6582]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_6582 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _6582 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14215 = mem[_6582 + 96 len 4], Mask(224, 32, _4895) >> 32
                                    require mem[_6582 + 96 len 4], Mask(224, 32, _4895) >> 32 <= 4294967296
                                    require mem[_6582 + 96 len 4], Mask(224, 32, _4895) >> 32 + 32 <= return_data.size
                                    require mem[mem[_6582 + 96 len 4], Mask(224, 32, _4895) >> 32 + _6582 + 96] <= 4294967296 and mem[_6582 + 96 len 4], Mask(224, 32, _4895) >> 32 + (32 * mem[mem[_6582 + 96 len 4], Mask(224, 32, _4895) >> 32 + _6582 + 96]) + 32 <= return_data.size
                                    mem[_6582 + ceil32(return_data.size) + 96] = mem[mem[_6582 + 96 len 4], Mask(224, 32, _4895) >> 32 + _6582 + 96]
                                    _14758 = mem[_14215 + _6582 + 96]
                                    idx = 0
                                    while idx < 32 * _14758:
                                        mem[_6582 + ceil32(return_data.size) + idx + 128] = mem[_14215 + _6582 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14758) + _6582 + ceil32(return_data.size) + 128
                    else:
                        require s < ('cd', 36).length
                        require s < ('cd', 4).length
                        if not s:
                            mem[mem[64] + 4] = address(cd[((32 * s) + cd[4] + 36)])
                            mem[mem[64] + 36] = cd[100]
                            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                            call address(cd[((32 * s) + cd[36] + 36)]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args address(cd[((32 * s) + cd[4] + 36)]), cd[100]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require s < ('cd', 68).length
                            if not s:
                                if not address(cd[((32 * s) + cd[68] + 36)]):
                                    require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _5317 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    require s < ('cd', 36).length
                                    require s + 1 < ('cd', 36).length
                                    require s < ('cd', 4).length
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                    if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        if not address(cd[((32 * s) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                            _8825 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_8825 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_8825 + 36] = 0
                                            mem[_8825 + 68] = _5317
                                            mem[_8825 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                            mem[_8825 + 132] = 128
                                            mem[_8825 + 164] = mem[_8825]
                                            idx = 0
                                            while idx < mem[_8825]:
                                                mem[_8825 + idx + 196] = mem[_8825 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_8825] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _5317, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_8825 + 164 len mem[_8825] + 32]
                                            else:
                                                mem[floor32(mem[_8825]) + _8825 + 196] = mem[floor32(mem[_8825]) + _8825 + -(mem[_8825] % 32) + 228 len mem[_8825] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _5317, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_8825], mem[_8825 + 196 len floor32(mem[_8825]) + 32]
                                        else:
                                            _8826 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_8826 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_8826 + 36] = _5317
                                            mem[_8826 + 68] = 0
                                            mem[_8826 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                            mem[_8826 + 132] = 128
                                            mem[_8826 + 164] = mem[_8826]
                                            idx = 0
                                            while idx < mem[_8826]:
                                                mem[_8826 + idx + 196] = mem[_8826 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_8826] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _5317, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_8826 + 164 len mem[_8826] + 32]
                                            else:
                                                mem[floor32(mem[_8826]) + _8826 + 196] = mem[floor32(mem[_8826]) + _8826 + -(mem[_8826] % 32) + 228 len mem[_8826] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _5317, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_8826], mem[_8826 + 196 len floor32(mem[_8826]) + 32]
                                    else:
                                        if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            _8827 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_8827 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_8827 + 36] = 0
                                            mem[_8827 + 68] = _5317
                                            mem[_8827 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                            mem[_8827 + 132] = 128
                                            mem[_8827 + 164] = mem[_8827]
                                            idx = 0
                                            while idx < mem[_8827]:
                                                mem[_8827 + idx + 196] = mem[_8827 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_8827] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _5317, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_8827 + 164 len mem[_8827] + 32]
                                            else:
                                                mem[floor32(mem[_8827]) + _8827 + 196] = mem[floor32(mem[_8827]) + _8827 + -(mem[_8827] % 32) + 228 len mem[_8827] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _5317, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_8827], mem[_8827 + 196 len floor32(mem[_8827]) + 32]
                                        else:
                                            _8828 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_8828 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_8828 + 36] = _5317
                                            mem[_8828 + 68] = 0
                                            mem[_8828 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                            mem[_8828 + 132] = 128
                                            mem[_8828 + 164] = mem[_8828]
                                            idx = 0
                                            while idx < mem[_8828]:
                                                mem[_8828 + idx + 196] = mem[_8828 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_8828] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _5317, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_8828 + 164 len mem[_8828] + 32]
                                            else:
                                                mem[floor32(mem[_8828]) + _8828 + 196] = mem[floor32(mem[_8828]) + _8828 + -(mem[_8828] % 32) + 228 len mem[_8828] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _5317, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_8828], mem[_8828 + 196 len floor32(mem[_8828]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    s = s + 1
                                    t = 0
                                    u = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    continue 
                                require 0 < ('cd', 68).length
                                require s < ('cd', 36).length
                                require s + 1 < ('cd', 36).length
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = address(('cd', 68)[0])
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), address(('cd', 68)[0])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= cd[100]:
                                    _7262 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_7262]
                                    mem[_7262 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_7262]
                                    mem[_7262 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                    mem[_7262 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_7262 + 100] = cd[100]
                                    mem[_7262 + 132] = 1
                                    mem[_7262 + 196] = this.address
                                    mem[_7262 + 228] = block.timestamp + 300
                                    mem[_7262 + 164] = 160
                                    mem[_7262 + 260] = mem[_7262]
                                    idx = 0
                                    while idx < 32 * mem[_7262]:
                                        mem[_7262 + idx + 292] = mem[_7262 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(('cd', 68)[0]))
                                    call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_7262 + 260 len (32 * mem[_7262]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_7262 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _7262 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14241 = mem[_7262 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                                    require mem[_7262 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                                    require mem[_7262 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                                    require mem[mem[_7262 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _7262 + 96] <= 4294967296 and mem[_7262 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_7262 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _7262 + 96]) + 32 <= return_data.size
                                    mem[_7262 + ceil32(return_data.size) + 96] = mem[mem[_7262 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _7262 + 96]
                                    _14771 = mem[_14241 + _7262 + 96]
                                    idx = 0
                                    while idx < 32 * _14771:
                                        mem[_7262 + ceil32(return_data.size) + idx + 128] = mem[_14241 + _7262 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14771) + _7262 + ceil32(return_data.size) + 128
                                else:
                                    mem[mem[64] + 4] = address(('cd', 68)[0])
                                    mem[mem[64] + 36] = 10000 * cd[100]
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(('cd', 68)[0]), 10000 * cd[100]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _8549 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_8549]
                                    mem[_8549 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_8549]
                                    mem[_8549 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                    mem[_8549 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_8549 + 100] = cd[100]
                                    mem[_8549 + 132] = 1
                                    mem[_8549 + 196] = this.address
                                    mem[_8549 + 228] = block.timestamp + 300
                                    mem[_8549 + 164] = 160
                                    mem[_8549 + 260] = mem[_8549]
                                    idx = 0
                                    while idx < 32 * mem[_8549]:
                                        mem[_8549 + idx + 292] = mem[_8549 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(('cd', 68)[0]))
                                    call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_8549 + 260 len (32 * mem[_8549]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_8549 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _8549 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14243 = mem[_8549 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                                    require mem[_8549 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                                    require mem[_8549 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                                    require mem[mem[_8549 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _8549 + 96] <= 4294967296 and mem[_8549 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_8549 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _8549 + 96]) + 32 <= return_data.size
                                    mem[_8549 + ceil32(return_data.size) + 96] = mem[mem[_8549 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _8549 + 96]
                                    _14772 = mem[_14243 + _8549 + 96]
                                    idx = 0
                                    while idx < 32 * _14772:
                                        mem[_8549 + ceil32(return_data.size) + idx + 128] = mem[_14243 + _8549 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14772) + _8549 + ceil32(return_data.size) + 128
                            else:
                                if s != ('cd', 36).length - 1:
                                    if not address(cd[((32 * s) + cd[68] + 36)]):
                                        require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                        _5449 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                        require s < ('cd', 36).length
                                        require s + 1 < ('cd', 36).length
                                        require s < ('cd', 4).length
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                        if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            if not address(cd[((32 * s) + cd[36] + 36)]):
                                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                                _9131 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_9131 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_9131 + 36] = 0
                                                mem[_9131 + 68] = _5449
                                                mem[_9131 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                                mem[_9131 + 132] = 128
                                                mem[_9131 + 164] = mem[_9131]
                                                idx = 0
                                                while idx < mem[_9131]:
                                                    mem[_9131 + idx + 196] = mem[_9131 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_9131] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5449, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9131 + 164 len mem[_9131] + 32]
                                                else:
                                                    mem[floor32(mem[_9131]) + _9131 + 196] = mem[floor32(mem[_9131]) + _9131 + -(mem[_9131] % 32) + 228 len mem[_9131] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5449, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9131], mem[_9131 + 196 len floor32(mem[_9131]) + 32]
                                            else:
                                                _9132 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_9132 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_9132 + 36] = _5449
                                                mem[_9132 + 68] = 0
                                                mem[_9132 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                                mem[_9132 + 132] = 128
                                                mem[_9132 + 164] = mem[_9132]
                                                idx = 0
                                                while idx < mem[_9132]:
                                                    mem[_9132 + idx + 196] = mem[_9132 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_9132] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5449, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9132 + 164 len mem[_9132] + 32]
                                                else:
                                                    mem[floor32(mem[_9132]) + _9132 + 196] = mem[floor32(mem[_9132]) + _9132 + -(mem[_9132] % 32) + 228 len mem[_9132] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5449, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9132], mem[_9132 + 196 len floor32(mem[_9132]) + 32]
                                        else:
                                            if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                                _9133 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_9133 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_9133 + 36] = 0
                                                mem[_9133 + 68] = _5449
                                                mem[_9133 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                                mem[_9133 + 132] = 128
                                                mem[_9133 + 164] = mem[_9133]
                                                idx = 0
                                                while idx < mem[_9133]:
                                                    mem[_9133 + idx + 196] = mem[_9133 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_9133] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5449, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9133 + 164 len mem[_9133] + 32]
                                                else:
                                                    mem[floor32(mem[_9133]) + _9133 + 196] = mem[floor32(mem[_9133]) + _9133 + -(mem[_9133] % 32) + 228 len mem[_9133] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5449, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9133], mem[_9133 + 196 len floor32(mem[_9133]) + 32]
                                            else:
                                                _9134 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_9134 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_9134 + 36] = _5449
                                                mem[_9134 + 68] = 0
                                                mem[_9134 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                                mem[_9134 + 132] = 128
                                                mem[_9134 + 164] = mem[_9134]
                                                idx = 0
                                                while idx < mem[_9134]:
                                                    mem[_9134 + idx + 196] = mem[_9134 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_9134] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5449, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9134 + 164 len mem[_9134] + 32]
                                                else:
                                                    mem[floor32(mem[_9134]) + _9134 + 196] = mem[floor32(mem[_9134]) + _9134 + -(mem[_9134] % 32) + 228 len mem[_9134] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5449, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9134], mem[_9134 + 196 len floor32(mem[_9134]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = s + 1
                                        t = 0
                                        u = address(cd[((32 * s + 1) + cd[4] + 36)])
                                        continue 
                                    require s < ('cd', 68).length
                                    require s < ('cd', 36).length
                                    require s + 1 < ('cd', 36).length
                                    require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _6098 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    mem[mem[64] + 4] = this.address
                                    mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                            gas gas_remaining wei
                                           args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] >= _6098:
                                        _7829 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require 0 < mem[_7829]
                                        mem[_7829 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                        require 1 < mem[_7829]
                                        mem[_7829 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                        mem[_7829 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_7829 + 100] = _6098
                                        mem[_7829 + 132] = 1
                                        mem[_7829 + 196] = this.address
                                        mem[_7829 + 228] = block.timestamp + 300
                                        mem[_7829 + 164] = 160
                                        mem[_7829 + 260] = mem[_7829]
                                        idx = 0
                                        while idx < 32 * mem[_7829]:
                                            mem[_7829 + idx + 292] = mem[_7829 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                        call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args _6098, 1, 160, address(this.address), block.timestamp + 300, mem[_7829 + 260 len (32 * mem[_7829]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_7829 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = _7829 + ceil32(return_data.size) + 96
                                        require return_data.size >= 32
                                        _14233 = mem[_7829 + 96 len 4], Mask(224, 32, _6098) >> 32
                                        require mem[_7829 + 96 len 4], Mask(224, 32, _6098) >> 32 <= 4294967296
                                        require mem[_7829 + 96 len 4], Mask(224, 32, _6098) >> 32 + 32 <= return_data.size
                                        require mem[mem[_7829 + 96 len 4], Mask(224, 32, _6098) >> 32 + _7829 + 96] <= 4294967296 and mem[_7829 + 96 len 4], Mask(224, 32, _6098) >> 32 + (32 * mem[mem[_7829 + 96 len 4], Mask(224, 32, _6098) >> 32 + _7829 + 96]) + 32 <= return_data.size
                                        mem[_7829 + ceil32(return_data.size) + 96] = mem[mem[_7829 + 96 len 4], Mask(224, 32, _6098) >> 32 + _7829 + 96]
                                        _14767 = mem[_14233 + _7829 + 96]
                                        idx = 0
                                        while idx < 32 * _14767:
                                            mem[_7829 + ceil32(return_data.size) + idx + 128] = mem[_14233 + _7829 + idx + 128]
                                            idx = idx + 32
                                            continue 
                                        mem[64] = (32 * _14767) + _7829 + ceil32(return_data.size) + 128
                                        idx = floor32(_14767) + 1
                                        t = 1
                                        u = address(cd[((32 * floor32(_14767) + 1) + cd[4] + 36)])
                                        continue 
                                    mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                    mem[mem[64] + 36] = 10000 * _6098
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _6098
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _9130 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_9130]
                                    mem[_9130 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_9130]
                                    mem[_9130 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                    mem[_9130 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_9130 + 100] = _6098
                                    mem[_9130 + 132] = 1
                                    mem[_9130 + 196] = this.address
                                    mem[_9130 + 228] = block.timestamp + 300
                                    mem[_9130 + 164] = 160
                                    mem[_9130 + 260] = mem[_9130]
                                    idx = 0
                                    while idx < 32 * mem[_9130]:
                                        mem[_9130 + idx + 292] = mem[_9130 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                    call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _6098, 1, 160, address(this.address), block.timestamp + 300, mem[_9130 + 260 len (32 * mem[_9130]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_9130 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _9130 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14235 = mem[_9130 + 96 len 4], Mask(224, 32, _6098) >> 32
                                    require mem[_9130 + 96 len 4], Mask(224, 32, _6098) >> 32 <= 4294967296
                                    require mem[_9130 + 96 len 4], Mask(224, 32, _6098) >> 32 + 32 <= return_data.size
                                    require mem[mem[_9130 + 96 len 4], Mask(224, 32, _6098) >> 32 + _9130 + 96] <= 4294967296 and mem[_9130 + 96 len 4], Mask(224, 32, _6098) >> 32 + (32 * mem[mem[_9130 + 96 len 4], Mask(224, 32, _6098) >> 32 + _9130 + 96]) + 32 <= return_data.size
                                    mem[_9130 + ceil32(return_data.size) + 96] = mem[mem[_9130 + 96 len 4], Mask(224, 32, _6098) >> 32 + _9130 + 96]
                                    _14768 = mem[_14235 + _9130 + 96]
                                    idx = 0
                                    while idx < 32 * _14768:
                                        mem[_9130 + ceil32(return_data.size) + idx + 128] = mem[_14235 + _9130 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14768) + _9130 + ceil32(return_data.size) + 128
                                else:
                                    if not address(cd[((32 * s) + cd[68] + 36)]):
                                        require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                        _5450 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                        require s < ('cd', 36).length
                                        require 0 < ('cd', 36).length
                                        require s < ('cd', 4).length
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                            revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                        if address(cd[((32 * s) + cd[36] + 36)]) < address(('cd', 36)[0]):
                                            if not address(cd[((32 * s) + cd[36] + 36)]):
                                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                                _9139 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_9139 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_9139 + 36] = 0
                                                mem[_9139 + 68] = _5450
                                                mem[_9139 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                                mem[_9139 + 132] = 128
                                                mem[_9139 + 164] = mem[_9139]
                                                idx = 0
                                                while idx < mem[_9139]:
                                                    mem[_9139 + idx + 196] = mem[_9139 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_9139] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5450, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9139 + 164 len mem[_9139] + 32]
                                                else:
                                                    mem[floor32(mem[_9139]) + _9139 + 196] = mem[floor32(mem[_9139]) + _9139 + -(mem[_9139] % 32) + 228 len mem[_9139] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5450, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9139], mem[_9139 + 196 len floor32(mem[_9139]) + 32]
                                            else:
                                                _9140 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_9140 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_9140 + 36] = _5450
                                                mem[_9140 + 68] = 0
                                                mem[_9140 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                                mem[_9140 + 132] = 128
                                                mem[_9140 + 164] = mem[_9140]
                                                idx = 0
                                                while idx < mem[_9140]:
                                                    mem[_9140 + idx + 196] = mem[_9140 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_9140] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5450, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9140 + 164 len mem[_9140] + 32]
                                                else:
                                                    mem[floor32(mem[_9140]) + _9140 + 196] = mem[floor32(mem[_9140]) + _9140 + -(mem[_9140] % 32) + 228 len mem[_9140] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5450, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9140], mem[_9140 + 196 len floor32(mem[_9140]) + 32]
                                        else:
                                            if not address(('cd', 36)[0]):
                                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                            if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                                _9141 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_9141 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_9141 + 36] = 0
                                                mem[_9141 + 68] = _5450
                                                mem[_9141 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                                mem[_9141 + 132] = 128
                                                mem[_9141 + 164] = mem[_9141]
                                                idx = 0
                                                while idx < mem[_9141]:
                                                    mem[_9141 + idx + 196] = mem[_9141 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_9141] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5450, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9141 + 164 len mem[_9141] + 32]
                                                else:
                                                    mem[floor32(mem[_9141]) + _9141 + 196] = mem[floor32(mem[_9141]) + _9141 + -(mem[_9141] % 32) + 228 len mem[_9141] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5450, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9141], mem[_9141 + 196 len floor32(mem[_9141]) + 32]
                                            else:
                                                _9142 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_9142 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_9142 + 36] = _5450
                                                mem[_9142 + 68] = 0
                                                mem[_9142 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                                mem[_9142 + 132] = 128
                                                mem[_9142 + 164] = mem[_9142]
                                                idx = 0
                                                while idx < mem[_9142]:
                                                    mem[_9142 + idx + 196] = mem[_9142 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_9142] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5450, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9142 + 164 len mem[_9142] + 32]
                                                else:
                                                    mem[floor32(mem[_9142]) + _9142 + 196] = mem[floor32(mem[_9142]) + _9142 + -(mem[_9142] % 32) + 228 len mem[_9142] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5450, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9142], mem[_9142 + 196 len floor32(mem[_9142]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = s + 1
                                        t = 0
                                        u = address(cd[((32 * s + 1) + cd[4] + 36)])
                                        continue 
                                    require s < ('cd', 68).length
                                    require s < ('cd', 36).length
                                    require 0 < ('cd', 36).length
                                    require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _6099 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    mem[mem[64] + 4] = this.address
                                    mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                            gas gas_remaining wei
                                           args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] >= _6099:
                                        _7834 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require 0 < mem[_7834]
                                        mem[_7834 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                        require 1 < mem[_7834]
                                        mem[_7834 + 64] = address(('cd', 36)[0])
                                        mem[_7834 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_7834 + 100] = _6099
                                        mem[_7834 + 132] = 1
                                        mem[_7834 + 196] = this.address
                                        mem[_7834 + 228] = block.timestamp + 300
                                        mem[_7834 + 164] = 160
                                        mem[_7834 + 260] = mem[_7834]
                                        idx = 0
                                        while idx < 32 * mem[_7834]:
                                            mem[_7834 + idx + 292] = mem[_7834 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                        call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args _6099, 1, 160, address(this.address), block.timestamp + 300, mem[_7834 + 260 len (32 * mem[_7834]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_7834 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = _7834 + ceil32(return_data.size) + 96
                                        require return_data.size >= 32
                                        _14237 = mem[_7834 + 96 len 4], Mask(224, 32, _6099) >> 32
                                        require mem[_7834 + 96 len 4], Mask(224, 32, _6099) >> 32 <= 4294967296
                                        require mem[_7834 + 96 len 4], Mask(224, 32, _6099) >> 32 + 32 <= return_data.size
                                        require mem[mem[_7834 + 96 len 4], Mask(224, 32, _6099) >> 32 + _7834 + 96] <= 4294967296 and mem[_7834 + 96 len 4], Mask(224, 32, _6099) >> 32 + (32 * mem[mem[_7834 + 96 len 4], Mask(224, 32, _6099) >> 32 + _7834 + 96]) + 32 <= return_data.size
                                        mem[_7834 + ceil32(return_data.size) + 96] = mem[mem[_7834 + 96 len 4], Mask(224, 32, _6099) >> 32 + _7834 + 96]
                                        _14769 = mem[_14237 + _7834 + 96]
                                        idx = 0
                                        while idx < 32 * _14769:
                                            mem[_7834 + ceil32(return_data.size) + idx + 128] = mem[_14237 + _7834 + idx + 128]
                                            idx = idx + 32
                                            continue 
                                        mem[64] = (32 * _14769) + _7834 + ceil32(return_data.size) + 128
                                        idx = floor32(_14769) + 1
                                        t = 1
                                        u = address(cd[((32 * floor32(_14769) + 1) + cd[4] + 36)])
                                        continue 
                                    mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                    mem[mem[64] + 36] = 10000 * _6099
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _6099
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _9138 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_9138]
                                    mem[_9138 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_9138]
                                    mem[_9138 + 64] = address(('cd', 36)[0])
                                    mem[_9138 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_9138 + 100] = _6099
                                    mem[_9138 + 132] = 1
                                    mem[_9138 + 196] = this.address
                                    mem[_9138 + 228] = block.timestamp + 300
                                    mem[_9138 + 164] = 160
                                    mem[_9138 + 260] = mem[_9138]
                                    idx = 0
                                    while idx < 32 * mem[_9138]:
                                        mem[_9138 + idx + 292] = mem[_9138 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                    call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _6099, 1, 160, address(this.address), block.timestamp + 300, mem[_9138 + 260 len (32 * mem[_9138]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_9138 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _9138 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14239 = mem[_9138 + 96 len 4], Mask(224, 32, _6099) >> 32
                                    require mem[_9138 + 96 len 4], Mask(224, 32, _6099) >> 32 <= 4294967296
                                    require mem[_9138 + 96 len 4], Mask(224, 32, _6099) >> 32 + 32 <= return_data.size
                                    require mem[mem[_9138 + 96 len 4], Mask(224, 32, _6099) >> 32 + _9138 + 96] <= 4294967296 and mem[_9138 + 96 len 4], Mask(224, 32, _6099) >> 32 + (32 * mem[mem[_9138 + 96 len 4], Mask(224, 32, _6099) >> 32 + _9138 + 96]) + 32 <= return_data.size
                                    mem[_9138 + ceil32(return_data.size) + 96] = mem[mem[_9138 + 96 len 4], Mask(224, 32, _6099) >> 32 + _9138 + 96]
                                    _14770 = mem[_14239 + _9138 + 96]
                                    idx = 0
                                    while idx < 32 * _14770:
                                        mem[_9138 + ceil32(return_data.size) + idx + 128] = mem[_14239 + _9138 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14770) + _9138 + ceil32(return_data.size) + 128
                        else:
                            require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            _4609 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                            mem[mem[64] + 4] = address(cd[((32 * s) + cd[4] + 36)])
                            mem[mem[64] + 36] = _4609
                            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                            call address(cd[((32 * s) + cd[36] + 36)]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args address(cd[((32 * s) + cd[4] + 36)]), _4609
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require s < ('cd', 68).length
                            if not s:
                                if not address(cd[((32 * s) + cd[68] + 36)]):
                                    require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _5448 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    require s < ('cd', 36).length
                                    require s + 1 < ('cd', 36).length
                                    require s < ('cd', 4).length
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                    if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        if not address(cd[((32 * s) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                            _9123 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_9123 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_9123 + 36] = 0
                                            mem[_9123 + 68] = _5448
                                            mem[_9123 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                            mem[_9123 + 132] = 128
                                            mem[_9123 + 164] = mem[_9123]
                                            idx = 0
                                            while idx < mem[_9123]:
                                                mem[_9123 + idx + 196] = mem[_9123 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_9123] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _5448, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9123 + 164 len mem[_9123] + 32]
                                            else:
                                                mem[floor32(mem[_9123]) + _9123 + 196] = mem[floor32(mem[_9123]) + _9123 + -(mem[_9123] % 32) + 228 len mem[_9123] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _5448, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9123], mem[_9123 + 196 len floor32(mem[_9123]) + 32]
                                        else:
                                            _9124 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_9124 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_9124 + 36] = _5448
                                            mem[_9124 + 68] = 0
                                            mem[_9124 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                            mem[_9124 + 132] = 128
                                            mem[_9124 + 164] = mem[_9124]
                                            idx = 0
                                            while idx < mem[_9124]:
                                                mem[_9124 + idx + 196] = mem[_9124 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_9124] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _5448, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9124 + 164 len mem[_9124] + 32]
                                            else:
                                                mem[floor32(mem[_9124]) + _9124 + 196] = mem[floor32(mem[_9124]) + _9124 + -(mem[_9124] % 32) + 228 len mem[_9124] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _5448, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9124], mem[_9124 + 196 len floor32(mem[_9124]) + 32]
                                    else:
                                        if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            _9125 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_9125 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_9125 + 36] = 0
                                            mem[_9125 + 68] = _5448
                                            mem[_9125 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                            mem[_9125 + 132] = 128
                                            mem[_9125 + 164] = mem[_9125]
                                            idx = 0
                                            while idx < mem[_9125]:
                                                mem[_9125 + idx + 196] = mem[_9125 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_9125] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _5448, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9125 + 164 len mem[_9125] + 32]
                                            else:
                                                mem[floor32(mem[_9125]) + _9125 + 196] = mem[floor32(mem[_9125]) + _9125 + -(mem[_9125] % 32) + 228 len mem[_9125] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _5448, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9125], mem[_9125 + 196 len floor32(mem[_9125]) + 32]
                                        else:
                                            _9126 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_9126 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_9126 + 36] = _5448
                                            mem[_9126 + 68] = 0
                                            mem[_9126 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                            mem[_9126 + 132] = 128
                                            mem[_9126 + 164] = mem[_9126]
                                            idx = 0
                                            while idx < mem[_9126]:
                                                mem[_9126 + idx + 196] = mem[_9126 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_9126] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _5448, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9126 + 164 len mem[_9126] + 32]
                                            else:
                                                mem[floor32(mem[_9126]) + _9126 + 196] = mem[floor32(mem[_9126]) + _9126 + -(mem[_9126] % 32) + 228 len mem[_9126] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _5448, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9126], mem[_9126 + 196 len floor32(mem[_9126]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    s = s + 1
                                    t = 0
                                    u = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    continue 
                                require 0 < ('cd', 68).length
                                require s < ('cd', 36).length
                                require s + 1 < ('cd', 36).length
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = address(('cd', 68)[0])
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), address(('cd', 68)[0])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= cd[100]:
                                    _7495 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_7495]
                                    mem[_7495 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_7495]
                                    mem[_7495 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                    mem[_7495 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_7495 + 100] = cd[100]
                                    mem[_7495 + 132] = 1
                                    mem[_7495 + 196] = this.address
                                    mem[_7495 + 228] = block.timestamp + 300
                                    mem[_7495 + 164] = 160
                                    mem[_7495 + 260] = mem[_7495]
                                    idx = 0
                                    while idx < 32 * mem[_7495]:
                                        mem[_7495 + idx + 292] = mem[_7495 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(('cd', 68)[0]))
                                    call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_7495 + 260 len (32 * mem[_7495]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_7495 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _7495 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14229 = mem[_7495 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                                    require mem[_7495 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                                    require mem[_7495 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                                    require mem[mem[_7495 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _7495 + 96] <= 4294967296 and mem[_7495 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_7495 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _7495 + 96]) + 32 <= return_data.size
                                    mem[_7495 + ceil32(return_data.size) + 96] = mem[mem[_7495 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _7495 + 96]
                                    _14765 = mem[_14229 + _7495 + 96]
                                    idx = 0
                                    while idx < 32 * _14765:
                                        mem[_7495 + ceil32(return_data.size) + idx + 128] = mem[_14229 + _7495 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14765) + _7495 + ceil32(return_data.size) + 128
                                else:
                                    mem[mem[64] + 4] = address(('cd', 68)[0])
                                    mem[mem[64] + 36] = 10000 * cd[100]
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(('cd', 68)[0]), 10000 * cd[100]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _8822 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_8822]
                                    mem[_8822 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_8822]
                                    mem[_8822 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                    mem[_8822 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_8822 + 100] = cd[100]
                                    mem[_8822 + 132] = 1
                                    mem[_8822 + 196] = this.address
                                    mem[_8822 + 228] = block.timestamp + 300
                                    mem[_8822 + 164] = 160
                                    mem[_8822 + 260] = mem[_8822]
                                    idx = 0
                                    while idx < 32 * mem[_8822]:
                                        mem[_8822 + idx + 292] = mem[_8822 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(('cd', 68)[0]))
                                    call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_8822 + 260 len (32 * mem[_8822]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_8822 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _8822 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14231 = mem[_8822 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                                    require mem[_8822 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                                    require mem[_8822 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                                    require mem[mem[_8822 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _8822 + 96] <= 4294967296 and mem[_8822 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_8822 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _8822 + 96]) + 32 <= return_data.size
                                    mem[_8822 + ceil32(return_data.size) + 96] = mem[mem[_8822 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _8822 + 96]
                                    _14766 = mem[_14231 + _8822 + 96]
                                    idx = 0
                                    while idx < 32 * _14766:
                                        mem[_8822 + ceil32(return_data.size) + idx + 128] = mem[_14231 + _8822 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14766) + _8822 + ceil32(return_data.size) + 128
                            else:
                                if s != ('cd', 36).length - 1:
                                    if not address(cd[((32 * s) + cd[68] + 36)]):
                                        require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                        _5633 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                        require s < ('cd', 36).length
                                        require s + 1 < ('cd', 36).length
                                        require s < ('cd', 4).length
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                        if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            if not address(cd[((32 * s) + cd[36] + 36)]):
                                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                                _9479 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_9479 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_9479 + 36] = 0
                                                mem[_9479 + 68] = _5633
                                                mem[_9479 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                                mem[_9479 + 132] = 128
                                                mem[_9479 + 164] = mem[_9479]
                                                idx = 0
                                                while idx < mem[_9479]:
                                                    mem[_9479 + idx + 196] = mem[_9479 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_9479] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5633, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9479 + 164 len mem[_9479] + 32]
                                                else:
                                                    mem[floor32(mem[_9479]) + _9479 + 196] = mem[floor32(mem[_9479]) + _9479 + -(mem[_9479] % 32) + 228 len mem[_9479] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5633, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9479], mem[_9479 + 196 len floor32(mem[_9479]) + 32]
                                            else:
                                                _9480 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_9480 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_9480 + 36] = _5633
                                                mem[_9480 + 68] = 0
                                                mem[_9480 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                                mem[_9480 + 132] = 128
                                                mem[_9480 + 164] = mem[_9480]
                                                idx = 0
                                                while idx < mem[_9480]:
                                                    mem[_9480 + idx + 196] = mem[_9480 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_9480] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5633, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9480 + 164 len mem[_9480] + 32]
                                                else:
                                                    mem[floor32(mem[_9480]) + _9480 + 196] = mem[floor32(mem[_9480]) + _9480 + -(mem[_9480] % 32) + 228 len mem[_9480] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5633, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9480], mem[_9480 + 196 len floor32(mem[_9480]) + 32]
                                        else:
                                            if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                                _9481 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_9481 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_9481 + 36] = 0
                                                mem[_9481 + 68] = _5633
                                                mem[_9481 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                                mem[_9481 + 132] = 128
                                                mem[_9481 + 164] = mem[_9481]
                                                idx = 0
                                                while idx < mem[_9481]:
                                                    mem[_9481 + idx + 196] = mem[_9481 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_9481] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5633, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9481 + 164 len mem[_9481] + 32]
                                                else:
                                                    mem[floor32(mem[_9481]) + _9481 + 196] = mem[floor32(mem[_9481]) + _9481 + -(mem[_9481] % 32) + 228 len mem[_9481] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5633, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9481], mem[_9481 + 196 len floor32(mem[_9481]) + 32]
                                            else:
                                                _9482 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_9482 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_9482 + 36] = _5633
                                                mem[_9482 + 68] = 0
                                                mem[_9482 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                                mem[_9482 + 132] = 128
                                                mem[_9482 + 164] = mem[_9482]
                                                idx = 0
                                                while idx < mem[_9482]:
                                                    mem[_9482 + idx + 196] = mem[_9482 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_9482] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5633, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9482 + 164 len mem[_9482] + 32]
                                                else:
                                                    mem[floor32(mem[_9482]) + _9482 + 196] = mem[floor32(mem[_9482]) + _9482 + -(mem[_9482] % 32) + 228 len mem[_9482] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5633, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9482], mem[_9482 + 196 len floor32(mem[_9482]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = s + 1
                                        t = 0
                                        u = address(cd[((32 * s + 1) + cd[4] + 36)])
                                        continue 
                                    require s < ('cd', 68).length
                                    require s < ('cd', 36).length
                                    require s + 1 < ('cd', 36).length
                                    require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _6304 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    mem[mem[64] + 4] = this.address
                                    mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                            gas gas_remaining wei
                                           args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] >= _6304:
                                        _8216 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require 0 < mem[_8216]
                                        mem[_8216 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                        require 1 < mem[_8216]
                                        mem[_8216 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                        mem[_8216 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_8216 + 100] = _6304
                                        mem[_8216 + 132] = 1
                                        mem[_8216 + 196] = this.address
                                        mem[_8216 + 228] = block.timestamp + 300
                                        mem[_8216 + 164] = 160
                                        mem[_8216 + 260] = mem[_8216]
                                        idx = 0
                                        while idx < 32 * mem[_8216]:
                                            mem[_8216 + idx + 292] = mem[_8216 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                        call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args _6304, 1, 160, address(this.address), block.timestamp + 300, mem[_8216 + 260 len (32 * mem[_8216]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_8216 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = _8216 + ceil32(return_data.size) + 96
                                        require return_data.size >= 32
                                        _14221 = mem[_8216 + 96 len 4], Mask(224, 32, _6304) >> 32
                                        require mem[_8216 + 96 len 4], Mask(224, 32, _6304) >> 32 <= 4294967296
                                        require mem[_8216 + 96 len 4], Mask(224, 32, _6304) >> 32 + 32 <= return_data.size
                                        require mem[mem[_8216 + 96 len 4], Mask(224, 32, _6304) >> 32 + _8216 + 96] <= 4294967296 and mem[_8216 + 96 len 4], Mask(224, 32, _6304) >> 32 + (32 * mem[mem[_8216 + 96 len 4], Mask(224, 32, _6304) >> 32 + _8216 + 96]) + 32 <= return_data.size
                                        mem[_8216 + ceil32(return_data.size) + 96] = mem[mem[_8216 + 96 len 4], Mask(224, 32, _6304) >> 32 + _8216 + 96]
                                        _14761 = mem[_14221 + _8216 + 96]
                                        idx = 0
                                        while idx < 32 * _14761:
                                            mem[_8216 + ceil32(return_data.size) + idx + 128] = mem[_14221 + _8216 + idx + 128]
                                            idx = idx + 32
                                            continue 
                                        mem[64] = (32 * _14761) + _8216 + ceil32(return_data.size) + 128
                                    else:
                                        mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                        mem[mem[64] + 36] = 10000 * _6304
                                        require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                        call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _6304
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _9478 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require 0 < mem[_9478]
                                        mem[_9478 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                        require 1 < mem[_9478]
                                        mem[_9478 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                        mem[_9478 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_9478 + 100] = _6304
                                        mem[_9478 + 132] = 1
                                        mem[_9478 + 196] = this.address
                                        mem[_9478 + 228] = block.timestamp + 300
                                        mem[_9478 + 164] = 160
                                        mem[_9478 + 260] = mem[_9478]
                                        idx = 0
                                        while idx < 32 * mem[_9478]:
                                            mem[_9478 + idx + 292] = mem[_9478 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                        call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args _6304, 1, 160, address(this.address), block.timestamp + 300, mem[_9478 + 260 len (32 * mem[_9478]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_9478 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = _9478 + ceil32(return_data.size) + 96
                                        require return_data.size >= 32
                                        _14223 = mem[_9478 + 96 len 4], Mask(224, 32, _6304) >> 32
                                        require mem[_9478 + 96 len 4], Mask(224, 32, _6304) >> 32 <= 4294967296
                                        require mem[_9478 + 96 len 4], Mask(224, 32, _6304) >> 32 + 32 <= return_data.size
                                        require mem[mem[_9478 + 96 len 4], Mask(224, 32, _6304) >> 32 + _9478 + 96] <= 4294967296 and mem[_9478 + 96 len 4], Mask(224, 32, _6304) >> 32 + (32 * mem[mem[_9478 + 96 len 4], Mask(224, 32, _6304) >> 32 + _9478 + 96]) + 32 <= return_data.size
                                        mem[_9478 + ceil32(return_data.size) + 96] = mem[mem[_9478 + 96 len 4], Mask(224, 32, _6304) >> 32 + _9478 + 96]
                                        _14762 = mem[_14223 + _9478 + 96]
                                        idx = 0
                                        while idx < 32 * _14762:
                                            mem[_9478 + ceil32(return_data.size) + idx + 128] = mem[_14223 + _9478 + idx + 128]
                                            idx = idx + 32
                                            continue 
                                        mem[64] = (32 * _14762) + _9478 + ceil32(return_data.size) + 128
                                else:
                                    if not address(cd[((32 * s) + cd[68] + 36)]):
                                        require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                        _5634 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                        require s < ('cd', 36).length
                                        require 0 < ('cd', 36).length
                                        require s < ('cd', 4).length
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                            revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                        if address(cd[((32 * s) + cd[36] + 36)]) < address(('cd', 36)[0]):
                                            if not address(cd[((32 * s) + cd[36] + 36)]):
                                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                                _9487 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_9487 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_9487 + 36] = 0
                                                mem[_9487 + 68] = _5634
                                                mem[_9487 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                                mem[_9487 + 132] = 128
                                                mem[_9487 + 164] = mem[_9487]
                                                idx = 0
                                                while idx < mem[_9487]:
                                                    mem[_9487 + idx + 196] = mem[_9487 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_9487] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5634, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9487 + 164 len mem[_9487] + 32]
                                                else:
                                                    mem[floor32(mem[_9487]) + _9487 + 196] = mem[floor32(mem[_9487]) + _9487 + -(mem[_9487] % 32) + 228 len mem[_9487] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5634, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9487], mem[_9487 + 196 len floor32(mem[_9487]) + 32]
                                            else:
                                                _9488 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_9488 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_9488 + 36] = _5634
                                                mem[_9488 + 68] = 0
                                                mem[_9488 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                                mem[_9488 + 132] = 128
                                                mem[_9488 + 164] = mem[_9488]
                                                idx = 0
                                                while idx < mem[_9488]:
                                                    mem[_9488 + idx + 196] = mem[_9488 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_9488] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5634, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9488 + 164 len mem[_9488] + 32]
                                                else:
                                                    mem[floor32(mem[_9488]) + _9488 + 196] = mem[floor32(mem[_9488]) + _9488 + -(mem[_9488] % 32) + 228 len mem[_9488] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5634, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9488], mem[_9488 + 196 len floor32(mem[_9488]) + 32]
                                        else:
                                            if not address(('cd', 36)[0]):
                                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                            if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                                _9489 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_9489 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_9489 + 36] = 0
                                                mem[_9489 + 68] = _5634
                                                mem[_9489 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                                mem[_9489 + 132] = 128
                                                mem[_9489 + 164] = mem[_9489]
                                                idx = 0
                                                while idx < mem[_9489]:
                                                    mem[_9489 + idx + 196] = mem[_9489 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_9489] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5634, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9489 + 164 len mem[_9489] + 32]
                                                else:
                                                    mem[floor32(mem[_9489]) + _9489 + 196] = mem[floor32(mem[_9489]) + _9489 + -(mem[_9489] % 32) + 228 len mem[_9489] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5634, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9489], mem[_9489 + 196 len floor32(mem[_9489]) + 32]
                                            else:
                                                _9490 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_9490 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_9490 + 36] = _5634
                                                mem[_9490 + 68] = 0
                                                mem[_9490 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                                mem[_9490 + 132] = 128
                                                mem[_9490 + 164] = mem[_9490]
                                                idx = 0
                                                while idx < mem[_9490]:
                                                    mem[_9490 + idx + 196] = mem[_9490 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_9490] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5634, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9490 + 164 len mem[_9490] + 32]
                                                else:
                                                    mem[floor32(mem[_9490]) + _9490 + 196] = mem[floor32(mem[_9490]) + _9490 + -(mem[_9490] % 32) + 228 len mem[_9490] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5634, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9490], mem[_9490 + 196 len floor32(mem[_9490]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = s + 1
                                        t = 0
                                        u = address(cd[((32 * s + 1) + cd[4] + 36)])
                                        continue 
                                    require s < ('cd', 68).length
                                    require s < ('cd', 36).length
                                    require 0 < ('cd', 36).length
                                    require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _6305 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    mem[mem[64] + 4] = this.address
                                    mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                            gas gas_remaining wei
                                           args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] >= _6305:
                                        _8221 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require 0 < mem[_8221]
                                        mem[_8221 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                        require 1 < mem[_8221]
                                        mem[_8221 + 64] = address(('cd', 36)[0])
                                        mem[_8221 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_8221 + 100] = _6305
                                        mem[_8221 + 132] = 1
                                        mem[_8221 + 196] = this.address
                                        mem[_8221 + 228] = block.timestamp + 300
                                        mem[_8221 + 164] = 160
                                        mem[_8221 + 260] = mem[_8221]
                                        idx = 0
                                        while idx < 32 * mem[_8221]:
                                            mem[_8221 + idx + 292] = mem[_8221 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                        call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args _6305, 1, 160, address(this.address), block.timestamp + 300, mem[_8221 + 260 len (32 * mem[_8221]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_8221 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = _8221 + ceil32(return_data.size) + 96
                                        require return_data.size >= 32
                                        _14225 = mem[_8221 + 96 len 4], Mask(224, 32, _6305) >> 32
                                        require mem[_8221 + 96 len 4], Mask(224, 32, _6305) >> 32 <= 4294967296
                                        require mem[_8221 + 96 len 4], Mask(224, 32, _6305) >> 32 + 32 <= return_data.size
                                        require mem[mem[_8221 + 96 len 4], Mask(224, 32, _6305) >> 32 + _8221 + 96] <= 4294967296 and mem[_8221 + 96 len 4], Mask(224, 32, _6305) >> 32 + (32 * mem[mem[_8221 + 96 len 4], Mask(224, 32, _6305) >> 32 + _8221 + 96]) + 32 <= return_data.size
                                        mem[_8221 + ceil32(return_data.size) + 96] = mem[mem[_8221 + 96 len 4], Mask(224, 32, _6305) >> 32 + _8221 + 96]
                                        _14763 = mem[_14225 + _8221 + 96]
                                        idx = 0
                                        while idx < 32 * _14763:
                                            mem[_8221 + ceil32(return_data.size) + idx + 128] = mem[_14225 + _8221 + idx + 128]
                                            idx = idx + 32
                                            continue 
                                        mem[64] = (32 * _14763) + _8221 + ceil32(return_data.size) + 128
                                    else:
                                        mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                        mem[mem[64] + 36] = 10000 * _6305
                                        require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                        call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _6305
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _9486 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require 0 < mem[_9486]
                                        mem[_9486 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                        require 1 < mem[_9486]
                                        mem[_9486 + 64] = address(('cd', 36)[0])
                                        mem[_9486 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_9486 + 100] = _6305
                                        mem[_9486 + 132] = 1
                                        mem[_9486 + 196] = this.address
                                        mem[_9486 + 228] = block.timestamp + 300
                                        mem[_9486 + 164] = 160
                                        mem[_9486 + 260] = mem[_9486]
                                        idx = 0
                                        while idx < 32 * mem[_9486]:
                                            mem[_9486 + idx + 292] = mem[_9486 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                        call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args _6305, 1, 160, address(this.address), block.timestamp + 300, mem[_9486 + 260 len (32 * mem[_9486]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_9486 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = _9486 + ceil32(return_data.size) + 96
                                        require return_data.size >= 32
                                        _14227 = mem[_9486 + 96 len 4], Mask(224, 32, _6305) >> 32
                                        require mem[_9486 + 96 len 4], Mask(224, 32, _6305) >> 32 <= 4294967296
                                        require mem[_9486 + 96 len 4], Mask(224, 32, _6305) >> 32 + 32 <= return_data.size
                                        require mem[mem[_9486 + 96 len 4], Mask(224, 32, _6305) >> 32 + _9486 + 96] <= 4294967296 and mem[_9486 + 96 len 4], Mask(224, 32, _6305) >> 32 + (32 * mem[mem[_9486 + 96 len 4], Mask(224, 32, _6305) >> 32 + _9486 + 96]) + 32 <= return_data.size
                                        mem[_9486 + ceil32(return_data.size) + 96] = mem[mem[_9486 + 96 len 4], Mask(224, 32, _6305) >> 32 + _9486 + 96]
                                        _14764 = mem[_14227 + _9486 + 96]
                                        idx = 0
                                        while idx < 32 * _14764:
                                            mem[_9486 + ceil32(return_data.size) + idx + 128] = mem[_14227 + _9486 + idx + 128]
                                            idx = idx + 32
                                            continue 
                                        mem[64] = (32 * _14764) + _9486 + ceil32(return_data.size) + 128
                s = s + 1
                t = 1
                u = address(cd[((32 * s + 1) + cd[4] + 36)])
                continue 
            require s + 1 < ('cd', 68).length
            if address(cd[((32 * s + 1) + cd[68] + 36)]):
                require s < ('cd', 68).length
                if not t:
                    if not s:
                        if not address(cd[((32 * s) + cd[68] + 36)]):
                            require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            _4637 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                            require s < ('cd', 36).length
                            require s + 1 < ('cd', 36).length
                            require s < ('cd', 4).length
                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                            if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                if not address(cd[((32 * s) + cd[36] + 36)]):
                                    revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                    _6117 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_6117 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_6117 + 36] = 0
                                    mem[_6117 + 68] = _4637
                                    mem[_6117 + 100] = this.address
                                    mem[_6117 + 132] = 128
                                    mem[_6117 + 164] = mem[_6117]
                                    idx = 0
                                    while idx < mem[_6117]:
                                        mem[_6117 + idx + 196] = mem[_6117 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    if not mem[_6117] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _4637, address(this.address), 128, mem[_6117 + 164 len mem[_6117] + 32]
                                    else:
                                        mem[floor32(mem[_6117]) + _6117 + 196] = mem[floor32(mem[_6117]) + _6117 + -(mem[_6117] % 32) + 228 len mem[_6117] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _4637, address(this.address), 128, mem[_6117], mem[_6117 + 196 len floor32(mem[_6117]) + 32]
                                else:
                                    _6118 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_6118 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_6118 + 36] = _4637
                                    mem[_6118 + 68] = 0
                                    mem[_6118 + 100] = this.address
                                    mem[_6118 + 132] = 128
                                    mem[_6118 + 164] = mem[_6118]
                                    idx = 0
                                    while idx < mem[_6118]:
                                        mem[_6118 + idx + 196] = mem[_6118 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    if not mem[_6118] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _4637, 0, address(this.address), 128, mem[_6118 + 164 len mem[_6118] + 32]
                                    else:
                                        mem[floor32(mem[_6118]) + _6118 + 196] = mem[floor32(mem[_6118]) + _6118 + -(mem[_6118] % 32) + 228 len mem[_6118] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _4637, 0, address(this.address), 128, mem[_6118], mem[_6118 + 196 len floor32(mem[_6118]) + 32]
                            else:
                                if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                    revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                    _6119 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_6119 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_6119 + 36] = 0
                                    mem[_6119 + 68] = _4637
                                    mem[_6119 + 100] = this.address
                                    mem[_6119 + 132] = 128
                                    mem[_6119 + 164] = mem[_6119]
                                    idx = 0
                                    while idx < mem[_6119]:
                                        mem[_6119 + idx + 196] = mem[_6119 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    if not mem[_6119] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _4637, address(this.address), 128, mem[_6119 + 164 len mem[_6119] + 32]
                                    else:
                                        mem[floor32(mem[_6119]) + _6119 + 196] = mem[floor32(mem[_6119]) + _6119 + -(mem[_6119] % 32) + 228 len mem[_6119] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _4637, address(this.address), 128, mem[_6119], mem[_6119 + 196 len floor32(mem[_6119]) + 32]
                                else:
                                    _6120 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_6120 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_6120 + 36] = _4637
                                    mem[_6120 + 68] = 0
                                    mem[_6120 + 100] = this.address
                                    mem[_6120 + 132] = 128
                                    mem[_6120 + 164] = mem[_6120]
                                    idx = 0
                                    while idx < mem[_6120]:
                                        mem[_6120 + idx + 196] = mem[_6120 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    if not mem[_6120] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _4637, 0, address(this.address), 128, mem[_6120 + 164 len mem[_6120] + 32]
                                    else:
                                        mem[floor32(mem[_6120]) + _6120 + 196] = mem[floor32(mem[_6120]) + _6120 + -(mem[_6120] % 32) + 228 len mem[_6120] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _4637, 0, address(this.address), 128, mem[_6120], mem[_6120 + 196 len floor32(mem[_6120]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            s = s + 1
                            t = 0
                            u = this.address
                            continue 
                        require 0 < ('cd', 68).length
                        require s < ('cd', 36).length
                        require s + 1 < ('cd', 36).length
                        mem[mem[64] + 4] = this.address
                        mem[mem[64] + 36] = address(('cd', 68)[0])
                        require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                        staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                gas gas_remaining wei
                               args address(this.address), address(('cd', 68)[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= cd[100]:
                            _5194 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            require 0 < mem[_5194]
                            mem[_5194 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                            require 1 < mem[_5194]
                            mem[_5194 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                            mem[_5194 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_5194 + 100] = cd[100]
                            mem[_5194 + 132] = 1
                            mem[_5194 + 196] = this.address
                            mem[_5194 + 228] = block.timestamp + 300
                            mem[_5194 + 164] = 160
                            mem[_5194 + 260] = mem[_5194]
                            idx = 0
                            while idx < 32 * mem[_5194]:
                                mem[_5194 + idx + 292] = mem[_5194 + idx + 32]
                                idx = idx + 32
                                continue 
                            require ext_code.size(address(('cd', 68)[0]))
                            call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_5194 + 260 len (32 * mem[_5194]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_5194 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _5194 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _14301 = mem[_5194 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                            require mem[_5194 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                            require mem[_5194 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                            require mem[mem[_5194 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _5194 + 96] <= 4294967296 and mem[_5194 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_5194 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _5194 + 96]) + 32 <= return_data.size
                            mem[_5194 + ceil32(return_data.size) + 96] = mem[mem[_5194 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _5194 + 96]
                            _14801 = mem[_14301 + _5194 + 96]
                            idx = 0
                            while idx < 32 * _14801:
                                mem[_5194 + ceil32(return_data.size) + idx + 128] = mem[_14301 + _5194 + idx + 128]
                                idx = idx + 32
                                continue 
                            mem[64] = (32 * _14801) + _5194 + ceil32(return_data.size) + 128
                        else:
                            mem[mem[64] + 4] = address(('cd', 68)[0])
                            mem[mem[64] + 36] = 10000 * cd[100]
                            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                            call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(('cd', 68)[0]), 10000 * cd[100]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            _5887 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            require 0 < mem[_5887]
                            mem[_5887 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                            require 1 < mem[_5887]
                            mem[_5887 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                            mem[_5887 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_5887 + 100] = cd[100]
                            mem[_5887 + 132] = 1
                            mem[_5887 + 196] = this.address
                            mem[_5887 + 228] = block.timestamp + 300
                            mem[_5887 + 164] = 160
                            mem[_5887 + 260] = mem[_5887]
                            t = 0
                            while t < 32 * mem[_5887]:
                                mem[_5887 + t + 292] = mem[_5887 + t + 32]
                                t = t + 32
                                continue 
                            require ext_code.size(address(('cd', 68)[0]))
                            call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_5887 + 260 len (32 * mem[_5887]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_5887 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _5887 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _14303 = mem[_5887 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                            require mem[_5887 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                            require mem[_5887 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                            require mem[mem[_5887 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _5887 + 96] <= 4294967296 and mem[_5887 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_5887 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _5887 + 96]) + 32 <= return_data.size
                            mem[_5887 + ceil32(return_data.size) + 96] = mem[mem[_5887 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _5887 + 96]
                            _14802 = mem[_14303 + _5887 + 96]
                            idx = 0
                            while idx < 32 * _14802:
                                mem[_5887 + ceil32(return_data.size) + idx + 128] = mem[_14303 + _5887 + idx + 128]
                                idx = idx + 32
                                continue 
                            mem[64] = (32 * _14802) + _5887 + ceil32(return_data.size) + 128
                    else:
                        if s != ('cd', 36).length - 1:
                            if not address(cd[((32 * s) + cd[68] + 36)]):
                                require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                _4673 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                require s < ('cd', 36).length
                                require s + 1 < ('cd', 36).length
                                require s < ('cd', 4).length
                                if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                    revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                    if not address(cd[((32 * s) + cd[36] + 36)]):
                                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                        _6335 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_6335 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_6335 + 36] = 0
                                        mem[_6335 + 68] = _4673
                                        mem[_6335 + 100] = this.address
                                        mem[_6335 + 132] = 128
                                        mem[_6335 + 164] = mem[_6335]
                                        idx = 0
                                        while idx < mem[_6335]:
                                            mem[_6335 + idx + 196] = mem[_6335 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_6335] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4673, address(this.address), 128, mem[_6335 + 164 len mem[_6335] + 32]
                                        else:
                                            mem[floor32(mem[_6335]) + _6335 + 196] = mem[floor32(mem[_6335]) + _6335 + -(mem[_6335] % 32) + 228 len mem[_6335] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4673, address(this.address), 128, mem[_6335], mem[_6335 + 196 len floor32(mem[_6335]) + 32]
                                    else:
                                        _6336 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_6336 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_6336 + 36] = _4673
                                        mem[_6336 + 68] = 0
                                        mem[_6336 + 100] = this.address
                                        mem[_6336 + 132] = 128
                                        mem[_6336 + 164] = mem[_6336]
                                        idx = 0
                                        while idx < mem[_6336]:
                                            mem[_6336 + idx + 196] = mem[_6336 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_6336] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4673, 0, address(this.address), 128, mem[_6336 + 164 len mem[_6336] + 32]
                                        else:
                                            mem[floor32(mem[_6336]) + _6336 + 196] = mem[floor32(mem[_6336]) + _6336 + -(mem[_6336] % 32) + 228 len mem[_6336] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4673, 0, address(this.address), 128, mem[_6336], mem[_6336 + 196 len floor32(mem[_6336]) + 32]
                                else:
                                    if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        _6337 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_6337 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_6337 + 36] = 0
                                        mem[_6337 + 68] = _4673
                                        mem[_6337 + 100] = this.address
                                        mem[_6337 + 132] = 128
                                        mem[_6337 + 164] = mem[_6337]
                                        idx = 0
                                        while idx < mem[_6337]:
                                            mem[_6337 + idx + 196] = mem[_6337 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_6337] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4673, address(this.address), 128, mem[_6337 + 164 len mem[_6337] + 32]
                                        else:
                                            mem[floor32(mem[_6337]) + _6337 + 196] = mem[floor32(mem[_6337]) + _6337 + -(mem[_6337] % 32) + 228 len mem[_6337] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4673, address(this.address), 128, mem[_6337], mem[_6337 + 196 len floor32(mem[_6337]) + 32]
                                    else:
                                        _6338 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_6338 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_6338 + 36] = _4673
                                        mem[_6338 + 68] = 0
                                        mem[_6338 + 100] = this.address
                                        mem[_6338 + 132] = 128
                                        mem[_6338 + 164] = mem[_6338]
                                        idx = 0
                                        while idx < mem[_6338]:
                                            mem[_6338 + idx + 196] = mem[_6338 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_6338] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4673, 0, address(this.address), 128, mem[_6338 + 164 len mem[_6338] + 32]
                                        else:
                                            mem[floor32(mem[_6338]) + _6338 + 196] = mem[floor32(mem[_6338]) + _6338 + -(mem[_6338] % 32) + 228 len mem[_6338] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4673, 0, address(this.address), 128, mem[_6338], mem[_6338 + 196 len floor32(mem[_6338]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                s = s + 1
                                t = 0
                                u = this.address
                                continue 
                            require s < ('cd', 68).length
                            require s < ('cd', 36).length
                            require s + 1 < ('cd', 36).length
                            require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            _4832 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                            mem[mem[64] + 4] = this.address
                            mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                            staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                    gas gas_remaining wei
                                   args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= _4832:
                                _5465 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                require 0 < mem[_5465]
                                mem[_5465 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                require 1 < mem[_5465]
                                mem[_5465 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                mem[_5465 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_5465 + 100] = _4832
                                mem[_5465 + 132] = 1
                                mem[_5465 + 196] = this.address
                                mem[_5465 + 228] = block.timestamp + 300
                                mem[_5465 + 164] = 160
                                mem[_5465 + 260] = mem[_5465]
                                idx = 0
                                while idx < 32 * mem[_5465]:
                                    mem[_5465 + idx + 292] = mem[_5465 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _4832, 1, 160, address(this.address), block.timestamp + 300, mem[_5465 + 260 len (32 * mem[_5465]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_5465 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _5465 + ceil32(return_data.size) + 96
                                require return_data.size >= 32
                                _14293 = mem[_5465 + 96 len 4], Mask(224, 32, _4832) >> 32
                                require mem[_5465 + 96 len 4], Mask(224, 32, _4832) >> 32 <= 4294967296
                                require mem[_5465 + 96 len 4], Mask(224, 32, _4832) >> 32 + 32 <= return_data.size
                                require mem[mem[_5465 + 96 len 4], Mask(224, 32, _4832) >> 32 + _5465 + 96] <= 4294967296 and mem[_5465 + 96 len 4], Mask(224, 32, _4832) >> 32 + (32 * mem[mem[_5465 + 96 len 4], Mask(224, 32, _4832) >> 32 + _5465 + 96]) + 32 <= return_data.size
                                mem[_5465 + ceil32(return_data.size) + 96] = mem[mem[_5465 + 96 len 4], Mask(224, 32, _4832) >> 32 + _5465 + 96]
                                _14797 = mem[_14293 + _5465 + 96]
                                idx = 0
                                while idx < 32 * _14797:
                                    mem[_5465 + ceil32(return_data.size) + idx + 128] = mem[_14293 + _5465 + idx + 128]
                                    idx = idx + 32
                                    continue 
                                mem[64] = (32 * _14797) + _5465 + ceil32(return_data.size) + 128
                            else:
                                mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                mem[mem[64] + 36] = 10000 * _4832
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _4832
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _6334 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                require 0 < mem[_6334]
                                mem[_6334 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                require 1 < mem[_6334]
                                mem[_6334 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                mem[_6334 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_6334 + 100] = _4832
                                mem[_6334 + 132] = 1
                                mem[_6334 + 196] = this.address
                                mem[_6334 + 228] = block.timestamp + 300
                                mem[_6334 + 164] = 160
                                mem[_6334 + 260] = mem[_6334]
                                idx = 0
                                while idx < 32 * mem[_6334]:
                                    mem[_6334 + idx + 292] = mem[_6334 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _4832, 1, 160, address(this.address), block.timestamp + 300, mem[_6334 + 260 len (32 * mem[_6334]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_6334 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _6334 + ceil32(return_data.size) + 96
                                require return_data.size >= 32
                                _14295 = mem[_6334 + 96 len 4], Mask(224, 32, _4832) >> 32
                                require mem[_6334 + 96 len 4], Mask(224, 32, _4832) >> 32 <= 4294967296
                                require mem[_6334 + 96 len 4], Mask(224, 32, _4832) >> 32 + 32 <= return_data.size
                                require mem[mem[_6334 + 96 len 4], Mask(224, 32, _4832) >> 32 + _6334 + 96] <= 4294967296 and mem[_6334 + 96 len 4], Mask(224, 32, _4832) >> 32 + (32 * mem[mem[_6334 + 96 len 4], Mask(224, 32, _4832) >> 32 + _6334 + 96]) + 32 <= return_data.size
                                mem[_6334 + ceil32(return_data.size) + 96] = mem[mem[_6334 + 96 len 4], Mask(224, 32, _4832) >> 32 + _6334 + 96]
                                _14798 = mem[_14295 + _6334 + 96]
                                idx = 0
                                while idx < 32 * _14798:
                                    mem[_6334 + ceil32(return_data.size) + idx + 128] = mem[_14295 + _6334 + idx + 128]
                                    idx = idx + 32
                                    continue 
                                mem[64] = (32 * _14798) + _6334 + ceil32(return_data.size) + 128
                        else:
                            if not address(cd[((32 * s) + cd[68] + 36)]):
                                require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                _4674 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                require s < ('cd', 36).length
                                require 0 < ('cd', 36).length
                                require s < ('cd', 4).length
                                if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                    revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                if address(cd[((32 * s) + cd[36] + 36)]) < address(('cd', 36)[0]):
                                    if not address(cd[((32 * s) + cd[36] + 36)]):
                                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                        _6343 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_6343 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_6343 + 36] = 0
                                        mem[_6343 + 68] = _4674
                                        mem[_6343 + 100] = this.address
                                        mem[_6343 + 132] = 128
                                        mem[_6343 + 164] = mem[_6343]
                                        idx = 0
                                        while idx < mem[_6343]:
                                            mem[_6343 + idx + 196] = mem[_6343 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_6343] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4674, address(this.address), 128, mem[_6343 + 164 len mem[_6343] + 32]
                                        else:
                                            mem[floor32(mem[_6343]) + _6343 + 196] = mem[floor32(mem[_6343]) + _6343 + -(mem[_6343] % 32) + 228 len mem[_6343] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4674, address(this.address), 128, mem[_6343], mem[_6343 + 196 len floor32(mem[_6343]) + 32]
                                    else:
                                        _6344 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_6344 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_6344 + 36] = _4674
                                        mem[_6344 + 68] = 0
                                        mem[_6344 + 100] = this.address
                                        mem[_6344 + 132] = 128
                                        mem[_6344 + 164] = mem[_6344]
                                        idx = 0
                                        while idx < mem[_6344]:
                                            mem[_6344 + idx + 196] = mem[_6344 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_6344] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4674, 0, address(this.address), 128, mem[_6344 + 164 len mem[_6344] + 32]
                                        else:
                                            mem[floor32(mem[_6344]) + _6344 + 196] = mem[floor32(mem[_6344]) + _6344 + -(mem[_6344] % 32) + 228 len mem[_6344] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4674, 0, address(this.address), 128, mem[_6344], mem[_6344 + 196 len floor32(mem[_6344]) + 32]
                                else:
                                    if not address(('cd', 36)[0]):
                                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                        _6345 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_6345 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_6345 + 36] = 0
                                        mem[_6345 + 68] = _4674
                                        mem[_6345 + 100] = this.address
                                        mem[_6345 + 132] = 128
                                        mem[_6345 + 164] = mem[_6345]
                                        idx = 0
                                        while idx < mem[_6345]:
                                            mem[_6345 + idx + 196] = mem[_6345 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_6345] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4674, address(this.address), 128, mem[_6345 + 164 len mem[_6345] + 32]
                                        else:
                                            mem[floor32(mem[_6345]) + _6345 + 196] = mem[floor32(mem[_6345]) + _6345 + -(mem[_6345] % 32) + 228 len mem[_6345] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4674, address(this.address), 128, mem[_6345], mem[_6345 + 196 len floor32(mem[_6345]) + 32]
                                    else:
                                        _6346 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_6346 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_6346 + 36] = _4674
                                        mem[_6346 + 68] = 0
                                        mem[_6346 + 100] = this.address
                                        mem[_6346 + 132] = 128
                                        mem[_6346 + 164] = mem[_6346]
                                        idx = 0
                                        while idx < mem[_6346]:
                                            mem[_6346 + idx + 196] = mem[_6346 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_6346] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4674, 0, address(this.address), 128, mem[_6346 + 164 len mem[_6346] + 32]
                                        else:
                                            mem[floor32(mem[_6346]) + _6346 + 196] = mem[floor32(mem[_6346]) + _6346 + -(mem[_6346] % 32) + 228 len mem[_6346] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4674, 0, address(this.address), 128, mem[_6346], mem[_6346 + 196 len floor32(mem[_6346]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                s = s + 1
                                t = 0
                                u = this.address
                                continue 
                            require s < ('cd', 68).length
                            require s < ('cd', 36).length
                            require 0 < ('cd', 36).length
                            require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            _4833 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                            mem[mem[64] + 4] = this.address
                            mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                            staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                    gas gas_remaining wei
                                   args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= _4833:
                                _5470 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                require 0 < mem[_5470]
                                mem[_5470 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                require 1 < mem[_5470]
                                mem[_5470 + 64] = address(('cd', 36)[0])
                                mem[_5470 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_5470 + 100] = _4833
                                mem[_5470 + 132] = 1
                                mem[_5470 + 196] = this.address
                                mem[_5470 + 228] = block.timestamp + 300
                                mem[_5470 + 164] = 160
                                mem[_5470 + 260] = mem[_5470]
                                idx = 0
                                while idx < 32 * mem[_5470]:
                                    mem[_5470 + idx + 292] = mem[_5470 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _4833, 1, 160, address(this.address), block.timestamp + 300, mem[_5470 + 260 len (32 * mem[_5470]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_5470 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _5470 + ceil32(return_data.size) + 96
                                require return_data.size >= 32
                                _14297 = mem[_5470 + 96 len 4], Mask(224, 32, _4833) >> 32
                                require mem[_5470 + 96 len 4], Mask(224, 32, _4833) >> 32 <= 4294967296
                                require mem[_5470 + 96 len 4], Mask(224, 32, _4833) >> 32 + 32 <= return_data.size
                                require mem[mem[_5470 + 96 len 4], Mask(224, 32, _4833) >> 32 + _5470 + 96] <= 4294967296 and mem[_5470 + 96 len 4], Mask(224, 32, _4833) >> 32 + (32 * mem[mem[_5470 + 96 len 4], Mask(224, 32, _4833) >> 32 + _5470 + 96]) + 32 <= return_data.size
                                mem[_5470 + ceil32(return_data.size) + 96] = mem[mem[_5470 + 96 len 4], Mask(224, 32, _4833) >> 32 + _5470 + 96]
                                _14799 = mem[_14297 + _5470 + 96]
                                idx = 0
                                while idx < 32 * _14799:
                                    mem[_5470 + ceil32(return_data.size) + idx + 128] = mem[_14297 + _5470 + idx + 128]
                                    idx = idx + 32
                                    continue 
                                mem[64] = (32 * _14799) + _5470 + ceil32(return_data.size) + 128
                            else:
                                mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                mem[mem[64] + 36] = 10000 * _4833
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _4833
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _6342 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                require 0 < mem[_6342]
                                mem[_6342 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                require 1 < mem[_6342]
                                mem[_6342 + 64] = address(('cd', 36)[0])
                                mem[_6342 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_6342 + 100] = _4833
                                mem[_6342 + 132] = 1
                                mem[_6342 + 196] = this.address
                                mem[_6342 + 228] = block.timestamp + 300
                                mem[_6342 + 164] = 160
                                mem[_6342 + 260] = mem[_6342]
                                idx = 0
                                while idx < 32 * mem[_6342]:
                                    mem[_6342 + idx + 292] = mem[_6342 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _4833, 1, 160, address(this.address), block.timestamp + 300, mem[_6342 + 260 len (32 * mem[_6342]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_6342 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _6342 + ceil32(return_data.size) + 96
                                require return_data.size >= 32
                                _14299 = mem[_6342 + 96 len 4], Mask(224, 32, _4833) >> 32
                                require mem[_6342 + 96 len 4], Mask(224, 32, _4833) >> 32 <= 4294967296
                                require mem[_6342 + 96 len 4], Mask(224, 32, _4833) >> 32 + 32 <= return_data.size
                                require mem[mem[_6342 + 96 len 4], Mask(224, 32, _4833) >> 32 + _6342 + 96] <= 4294967296 and mem[_6342 + 96 len 4], Mask(224, 32, _4833) >> 32 + (32 * mem[mem[_6342 + 96 len 4], Mask(224, 32, _4833) >> 32 + _6342 + 96]) + 32 <= return_data.size
                                mem[_6342 + ceil32(return_data.size) + 96] = mem[mem[_6342 + 96 len 4], Mask(224, 32, _4833) >> 32 + _6342 + 96]
                                _14800 = mem[_14299 + _6342 + 96]
                                idx = 0
                                while idx < 32 * _14800:
                                    mem[_6342 + ceil32(return_data.size) + idx + 128] = mem[_14299 + _6342 + idx + 128]
                                    idx = idx + 32
                                    continue 
                                mem[64] = (32 * _14800) + _6342 + ceil32(return_data.size) + 128
                else:
                    if address(cd[((32 * s) + cd[68] + 36)]):
                        require s < ('cd', 68).length
                        if not s:
                            if not address(cd[((32 * s) + cd[68] + 36)]):
                                require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                _4836 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                require s < ('cd', 36).length
                                require s + 1 < ('cd', 36).length
                                require s < ('cd', 4).length
                                if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                    revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                    if not address(cd[((32 * s) + cd[36] + 36)]):
                                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                        _7313 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_7313 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_7313 + 36] = 0
                                        mem[_7313 + 68] = _4836
                                        mem[_7313 + 100] = this.address
                                        mem[_7313 + 132] = 128
                                        mem[_7313 + 164] = mem[_7313]
                                        idx = 0
                                        while idx < mem[_7313]:
                                            mem[_7313 + idx + 196] = mem[_7313 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_7313] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4836, address(this.address), 128, mem[_7313 + 164 len mem[_7313] + 32]
                                        else:
                                            mem[floor32(mem[_7313]) + _7313 + 196] = mem[floor32(mem[_7313]) + _7313 + -(mem[_7313] % 32) + 228 len mem[_7313] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4836, address(this.address), 128, mem[_7313], mem[_7313 + 196 len floor32(mem[_7313]) + 32]
                                    else:
                                        _7314 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_7314 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_7314 + 36] = _4836
                                        mem[_7314 + 68] = 0
                                        mem[_7314 + 100] = this.address
                                        mem[_7314 + 132] = 128
                                        mem[_7314 + 164] = mem[_7314]
                                        idx = 0
                                        while idx < mem[_7314]:
                                            mem[_7314 + idx + 196] = mem[_7314 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_7314] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4836, 0, address(this.address), 128, mem[_7314 + 164 len mem[_7314] + 32]
                                        else:
                                            mem[floor32(mem[_7314]) + _7314 + 196] = mem[floor32(mem[_7314]) + _7314 + -(mem[_7314] % 32) + 228 len mem[_7314] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4836, 0, address(this.address), 128, mem[_7314], mem[_7314 + 196 len floor32(mem[_7314]) + 32]
                                else:
                                    if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        _7315 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_7315 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_7315 + 36] = 0
                                        mem[_7315 + 68] = _4836
                                        mem[_7315 + 100] = this.address
                                        mem[_7315 + 132] = 128
                                        mem[_7315 + 164] = mem[_7315]
                                        idx = 0
                                        while idx < mem[_7315]:
                                            mem[_7315 + idx + 196] = mem[_7315 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_7315] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4836, address(this.address), 128, mem[_7315 + 164 len mem[_7315] + 32]
                                        else:
                                            mem[floor32(mem[_7315]) + _7315 + 196] = mem[floor32(mem[_7315]) + _7315 + -(mem[_7315] % 32) + 228 len mem[_7315] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4836, address(this.address), 128, mem[_7315], mem[_7315 + 196 len floor32(mem[_7315]) + 32]
                                    else:
                                        _7316 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_7316 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_7316 + 36] = _4836
                                        mem[_7316 + 68] = 0
                                        mem[_7316 + 100] = this.address
                                        mem[_7316 + 132] = 128
                                        mem[_7316 + 164] = mem[_7316]
                                        idx = 0
                                        while idx < mem[_7316]:
                                            mem[_7316 + idx + 196] = mem[_7316 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_7316] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4836, 0, address(this.address), 128, mem[_7316 + 164 len mem[_7316] + 32]
                                        else:
                                            mem[floor32(mem[_7316]) + _7316 + 196] = mem[floor32(mem[_7316]) + _7316 + -(mem[_7316] % 32) + 228 len mem[_7316] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4836, 0, address(this.address), 128, mem[_7316], mem[_7316 + 196 len floor32(mem[_7316]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                s = s + 1
                                t = 0
                                u = this.address
                                continue 
                            require 0 < ('cd', 68).length
                            require s < ('cd', 36).length
                            require s + 1 < ('cd', 36).length
                            mem[mem[64] + 4] = this.address
                            mem[mem[64] + 36] = address(('cd', 68)[0])
                            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                            staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                    gas gas_remaining wei
                                   args address(this.address), address(('cd', 68)[0])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= cd[100]:
                                _5890 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                require 0 < mem[_5890]
                                mem[_5890 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                require 1 < mem[_5890]
                                mem[_5890 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                mem[_5890 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_5890 + 100] = cd[100]
                                mem[_5890 + 132] = 1
                                mem[_5890 + 196] = this.address
                                mem[_5890 + 228] = block.timestamp + 300
                                mem[_5890 + 164] = 160
                                mem[_5890 + 260] = mem[_5890]
                                t = 0
                                while t < 32 * mem[_5890]:
                                    mem[_5890 + t + 292] = mem[_5890 + t + 32]
                                    t = t + 32
                                    continue 
                                require ext_code.size(address(('cd', 68)[0]))
                                call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_5890 + 260 len (32 * mem[_5890]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_5890 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _5890 + ceil32(return_data.size) + 96
                                require return_data.size >= 32
                                _14313 = mem[_5890 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                                require mem[_5890 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                                require mem[_5890 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                                require mem[mem[_5890 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _5890 + 96] <= 4294967296 and mem[_5890 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_5890 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _5890 + 96]) + 32 <= return_data.size
                                mem[_5890 + ceil32(return_data.size) + 96] = mem[mem[_5890 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _5890 + 96]
                                _14807 = mem[_14313 + _5890 + 96]
                                idx = 0
                                while idx < 32 * _14807:
                                    mem[_5890 + ceil32(return_data.size) + idx + 128] = mem[_14313 + _5890 + idx + 128]
                                    idx = idx + 32
                                    continue 
                                mem[64] = (32 * _14807) + _5890 + ceil32(return_data.size) + 128
                            else:
                                mem[mem[64] + 4] = address(('cd', 68)[0])
                                mem[mem[64] + 36] = 10000 * cd[100]
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(('cd', 68)[0]), 10000 * cd[100]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _7027 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                require 0 < mem[_7027]
                                mem[_7027 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                require 1 < mem[_7027]
                                mem[_7027 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                mem[_7027 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_7027 + 100] = cd[100]
                                mem[_7027 + 132] = 1
                                mem[_7027 + 196] = this.address
                                mem[_7027 + 228] = block.timestamp + 300
                                mem[_7027 + 164] = 160
                                mem[_7027 + 260] = mem[_7027]
                                idx = 0
                                while idx < 32 * mem[_7027]:
                                    mem[_7027 + idx + 292] = mem[_7027 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                require ext_code.size(address(('cd', 68)[0]))
                                call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_7027 + 260 len (32 * mem[_7027]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_7027 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _7027 + ceil32(return_data.size) + 96
                                require return_data.size >= 32
                                _14315 = mem[_7027 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                                require mem[_7027 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                                require mem[_7027 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                                require mem[mem[_7027 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _7027 + 96] <= 4294967296 and mem[_7027 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_7027 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _7027 + 96]) + 32 <= return_data.size
                                mem[_7027 + ceil32(return_data.size) + 96] = mem[mem[_7027 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _7027 + 96]
                                _14808 = mem[_14315 + _7027 + 96]
                                idx = 0
                                while idx < 32 * _14808:
                                    mem[_7027 + ceil32(return_data.size) + idx + 128] = mem[_14315 + _7027 + idx + 128]
                                    idx = idx + 32
                                    continue 
                                mem[64] = (32 * _14808) + _7027 + ceil32(return_data.size) + 128
                        else:
                            if s != ('cd', 36).length - 1:
                                if not address(cd[((32 * s) + cd[68] + 36)]):
                                    require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _4908 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    require s < ('cd', 36).length
                                    require s + 1 < ('cd', 36).length
                                    require s < ('cd', 4).length
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                    if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        if not address(cd[((32 * s) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                            _7572 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_7572 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_7572 + 36] = 0
                                            mem[_7572 + 68] = _4908
                                            mem[_7572 + 100] = this.address
                                            mem[_7572 + 132] = 128
                                            mem[_7572 + 164] = mem[_7572]
                                            idx = 0
                                            while idx < mem[_7572]:
                                                mem[_7572 + idx + 196] = mem[_7572 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_7572] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4908, address(this.address), 128, mem[_7572 + 164 len mem[_7572] + 32]
                                            else:
                                                mem[floor32(mem[_7572]) + _7572 + 196] = mem[floor32(mem[_7572]) + _7572 + -(mem[_7572] % 32) + 228 len mem[_7572] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4908, address(this.address), 128, mem[_7572], mem[_7572 + 196 len floor32(mem[_7572]) + 32]
                                        else:
                                            _7573 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_7573 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_7573 + 36] = _4908
                                            mem[_7573 + 68] = 0
                                            mem[_7573 + 100] = this.address
                                            mem[_7573 + 132] = 128
                                            mem[_7573 + 164] = mem[_7573]
                                            idx = 0
                                            while idx < mem[_7573]:
                                                mem[_7573 + idx + 196] = mem[_7573 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_7573] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4908, 0, address(this.address), 128, mem[_7573 + 164 len mem[_7573] + 32]
                                            else:
                                                mem[floor32(mem[_7573]) + _7573 + 196] = mem[floor32(mem[_7573]) + _7573 + -(mem[_7573] % 32) + 228 len mem[_7573] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4908, 0, address(this.address), 128, mem[_7573], mem[_7573 + 196 len floor32(mem[_7573]) + 32]
                                    else:
                                        if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            _7574 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_7574 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_7574 + 36] = 0
                                            mem[_7574 + 68] = _4908
                                            mem[_7574 + 100] = this.address
                                            mem[_7574 + 132] = 128
                                            mem[_7574 + 164] = mem[_7574]
                                            idx = 0
                                            while idx < mem[_7574]:
                                                mem[_7574 + idx + 196] = mem[_7574 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_7574] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4908, address(this.address), 128, mem[_7574 + 164 len mem[_7574] + 32]
                                            else:
                                                mem[floor32(mem[_7574]) + _7574 + 196] = mem[floor32(mem[_7574]) + _7574 + -(mem[_7574] % 32) + 228 len mem[_7574] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4908, address(this.address), 128, mem[_7574], mem[_7574 + 196 len floor32(mem[_7574]) + 32]
                                        else:
                                            _7575 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_7575 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_7575 + 36] = _4908
                                            mem[_7575 + 68] = 0
                                            mem[_7575 + 100] = this.address
                                            mem[_7575 + 132] = 128
                                            mem[_7575 + 164] = mem[_7575]
                                            idx = 0
                                            while idx < mem[_7575]:
                                                mem[_7575 + idx + 196] = mem[_7575 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_7575] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4908, 0, address(this.address), 128, mem[_7575 + 164 len mem[_7575] + 32]
                                            else:
                                                mem[floor32(mem[_7575]) + _7575 + 196] = mem[floor32(mem[_7575]) + _7575 + -(mem[_7575] % 32) + 228 len mem[_7575] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4908, 0, address(this.address), 128, mem[_7575], mem[_7575 + 196 len floor32(mem[_7575]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    s = s + 1
                                    t = 0
                                    u = this.address
                                    continue 
                                require s < ('cd', 68).length
                                require s < ('cd', 36).length
                                require s + 1 < ('cd', 36).length
                                require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                _5195 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= _5195:
                                    _6362 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_6362]
                                    mem[_6362 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_6362]
                                    mem[_6362 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                    mem[_6362 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_6362 + 100] = _5195
                                    mem[_6362 + 132] = 1
                                    mem[_6362 + 196] = this.address
                                    mem[_6362 + 228] = block.timestamp + 300
                                    mem[_6362 + 164] = 160
                                    mem[_6362 + 260] = mem[_6362]
                                    idx = 0
                                    while idx < 32 * mem[_6362]:
                                        mem[_6362 + idx + 292] = mem[_6362 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                    call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _5195, 1, 160, address(this.address), block.timestamp + 300, mem[_6362 + 260 len (32 * mem[_6362]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_6362 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _6362 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14305 = mem[_6362 + 96 len 4], Mask(224, 32, _5195) >> 32
                                    require mem[_6362 + 96 len 4], Mask(224, 32, _5195) >> 32 <= 4294967296
                                    require mem[_6362 + 96 len 4], Mask(224, 32, _5195) >> 32 + 32 <= return_data.size
                                    require mem[mem[_6362 + 96 len 4], Mask(224, 32, _5195) >> 32 + _6362 + 96] <= 4294967296 and mem[_6362 + 96 len 4], Mask(224, 32, _5195) >> 32 + (32 * mem[mem[_6362 + 96 len 4], Mask(224, 32, _5195) >> 32 + _6362 + 96]) + 32 <= return_data.size
                                    mem[_6362 + ceil32(return_data.size) + 96] = mem[mem[_6362 + 96 len 4], Mask(224, 32, _5195) >> 32 + _6362 + 96]
                                    _14803 = mem[_14305 + _6362 + 96]
                                    idx = 0
                                    while idx < 32 * _14803:
                                        mem[_6362 + ceil32(return_data.size) + idx + 128] = mem[_14305 + _6362 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14803) + _6362 + ceil32(return_data.size) + 128
                                else:
                                    mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                    mem[mem[64] + 36] = 10000 * _5195
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _5195
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _7571 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_7571]
                                    mem[_7571 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_7571]
                                    mem[_7571 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                    mem[_7571 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_7571 + 100] = _5195
                                    mem[_7571 + 132] = 1
                                    mem[_7571 + 196] = this.address
                                    mem[_7571 + 228] = block.timestamp + 300
                                    mem[_7571 + 164] = 160
                                    mem[_7571 + 260] = mem[_7571]
                                    idx = 0
                                    while idx < 32 * mem[_7571]:
                                        mem[_7571 + idx + 292] = mem[_7571 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                    call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _5195, 1, 160, address(this.address), block.timestamp + 300, mem[_7571 + 260 len (32 * mem[_7571]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_7571 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _7571 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14307 = mem[_7571 + 96 len 4], Mask(224, 32, _5195) >> 32
                                    require mem[_7571 + 96 len 4], Mask(224, 32, _5195) >> 32 <= 4294967296
                                    require mem[_7571 + 96 len 4], Mask(224, 32, _5195) >> 32 + 32 <= return_data.size
                                    require mem[mem[_7571 + 96 len 4], Mask(224, 32, _5195) >> 32 + _7571 + 96] <= 4294967296 and mem[_7571 + 96 len 4], Mask(224, 32, _5195) >> 32 + (32 * mem[mem[_7571 + 96 len 4], Mask(224, 32, _5195) >> 32 + _7571 + 96]) + 32 <= return_data.size
                                    mem[_7571 + ceil32(return_data.size) + 96] = mem[mem[_7571 + 96 len 4], Mask(224, 32, _5195) >> 32 + _7571 + 96]
                                    _14804 = mem[_14307 + _7571 + 96]
                                    idx = 0
                                    while idx < 32 * _14804:
                                        mem[_7571 + ceil32(return_data.size) + idx + 128] = mem[_14307 + _7571 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14804) + _7571 + ceil32(return_data.size) + 128
                            else:
                                if not address(cd[((32 * s) + cd[68] + 36)]):
                                    require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _4909 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    require s < ('cd', 36).length
                                    require 0 < ('cd', 36).length
                                    require s < ('cd', 4).length
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                        revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                    if address(cd[((32 * s) + cd[36] + 36)]) < address(('cd', 36)[0]):
                                        if not address(cd[((32 * s) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                            _7580 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_7580 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_7580 + 36] = 0
                                            mem[_7580 + 68] = _4909
                                            mem[_7580 + 100] = this.address
                                            mem[_7580 + 132] = 128
                                            mem[_7580 + 164] = mem[_7580]
                                            idx = 0
                                            while idx < mem[_7580]:
                                                mem[_7580 + idx + 196] = mem[_7580 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_7580] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4909, address(this.address), 128, mem[_7580 + 164 len mem[_7580] + 32]
                                            else:
                                                mem[floor32(mem[_7580]) + _7580 + 196] = mem[floor32(mem[_7580]) + _7580 + -(mem[_7580] % 32) + 228 len mem[_7580] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4909, address(this.address), 128, mem[_7580], mem[_7580 + 196 len floor32(mem[_7580]) + 32]
                                        else:
                                            _7581 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_7581 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_7581 + 36] = _4909
                                            mem[_7581 + 68] = 0
                                            mem[_7581 + 100] = this.address
                                            mem[_7581 + 132] = 128
                                            mem[_7581 + 164] = mem[_7581]
                                            idx = 0
                                            while idx < mem[_7581]:
                                                mem[_7581 + idx + 196] = mem[_7581 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_7581] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4909, 0, address(this.address), 128, mem[_7581 + 164 len mem[_7581] + 32]
                                            else:
                                                mem[floor32(mem[_7581]) + _7581 + 196] = mem[floor32(mem[_7581]) + _7581 + -(mem[_7581] % 32) + 228 len mem[_7581] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4909, 0, address(this.address), 128, mem[_7581], mem[_7581 + 196 len floor32(mem[_7581]) + 32]
                                    else:
                                        if not address(('cd', 36)[0]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                            _7582 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_7582 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_7582 + 36] = 0
                                            mem[_7582 + 68] = _4909
                                            mem[_7582 + 100] = this.address
                                            mem[_7582 + 132] = 128
                                            mem[_7582 + 164] = mem[_7582]
                                            idx = 0
                                            while idx < mem[_7582]:
                                                mem[_7582 + idx + 196] = mem[_7582 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_7582] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4909, address(this.address), 128, mem[_7582 + 164 len mem[_7582] + 32]
                                            else:
                                                mem[floor32(mem[_7582]) + _7582 + 196] = mem[floor32(mem[_7582]) + _7582 + -(mem[_7582] % 32) + 228 len mem[_7582] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4909, address(this.address), 128, mem[_7582], mem[_7582 + 196 len floor32(mem[_7582]) + 32]
                                        else:
                                            _7583 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_7583 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_7583 + 36] = _4909
                                            mem[_7583 + 68] = 0
                                            mem[_7583 + 100] = this.address
                                            mem[_7583 + 132] = 128
                                            mem[_7583 + 164] = mem[_7583]
                                            idx = 0
                                            while idx < mem[_7583]:
                                                mem[_7583 + idx + 196] = mem[_7583 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_7583] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4909, 0, address(this.address), 128, mem[_7583 + 164 len mem[_7583] + 32]
                                            else:
                                                mem[floor32(mem[_7583]) + _7583 + 196] = mem[floor32(mem[_7583]) + _7583 + -(mem[_7583] % 32) + 228 len mem[_7583] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4909, 0, address(this.address), 128, mem[_7583], mem[_7583 + 196 len floor32(mem[_7583]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    s = s + 1
                                    t = 0
                                    u = this.address
                                    continue 
                                require s < ('cd', 68).length
                                require s < ('cd', 36).length
                                require 0 < ('cd', 36).length
                                require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                _5196 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= _5196:
                                    _6367 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_6367]
                                    mem[_6367 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_6367]
                                    mem[_6367 + 64] = address(('cd', 36)[0])
                                    mem[_6367 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_6367 + 100] = _5196
                                    mem[_6367 + 132] = 1
                                    mem[_6367 + 196] = this.address
                                    mem[_6367 + 228] = block.timestamp + 300
                                    mem[_6367 + 164] = 160
                                    mem[_6367 + 260] = mem[_6367]
                                    idx = 0
                                    while idx < 32 * mem[_6367]:
                                        mem[_6367 + idx + 292] = mem[_6367 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                    call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _5196, 1, 160, address(this.address), block.timestamp + 300, mem[_6367 + 260 len (32 * mem[_6367]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_6367 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _6367 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14309 = mem[_6367 + 96 len 4], Mask(224, 32, _5196) >> 32
                                    require mem[_6367 + 96 len 4], Mask(224, 32, _5196) >> 32 <= 4294967296
                                    require mem[_6367 + 96 len 4], Mask(224, 32, _5196) >> 32 + 32 <= return_data.size
                                    require mem[mem[_6367 + 96 len 4], Mask(224, 32, _5196) >> 32 + _6367 + 96] <= 4294967296 and mem[_6367 + 96 len 4], Mask(224, 32, _5196) >> 32 + (32 * mem[mem[_6367 + 96 len 4], Mask(224, 32, _5196) >> 32 + _6367 + 96]) + 32 <= return_data.size
                                    mem[_6367 + ceil32(return_data.size) + 96] = mem[mem[_6367 + 96 len 4], Mask(224, 32, _5196) >> 32 + _6367 + 96]
                                    _14805 = mem[_14309 + _6367 + 96]
                                    idx = 0
                                    while idx < 32 * _14805:
                                        mem[_6367 + ceil32(return_data.size) + idx + 128] = mem[_14309 + _6367 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14805) + _6367 + ceil32(return_data.size) + 128
                                else:
                                    mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                    mem[mem[64] + 36] = 10000 * _5196
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _5196
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _7579 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_7579]
                                    mem[_7579 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_7579]
                                    mem[_7579 + 64] = address(('cd', 36)[0])
                                    mem[_7579 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_7579 + 100] = _5196
                                    mem[_7579 + 132] = 1
                                    mem[_7579 + 196] = this.address
                                    mem[_7579 + 228] = block.timestamp + 300
                                    mem[_7579 + 164] = 160
                                    mem[_7579 + 260] = mem[_7579]
                                    idx = 0
                                    while idx < 32 * mem[_7579]:
                                        mem[_7579 + idx + 292] = mem[_7579 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                    call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _5196, 1, 160, address(this.address), block.timestamp + 300, mem[_7579 + 260 len (32 * mem[_7579]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_7579 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _7579 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14311 = mem[_7579 + 96 len 4], Mask(224, 32, _5196) >> 32
                                    require mem[_7579 + 96 len 4], Mask(224, 32, _5196) >> 32 <= 4294967296
                                    require mem[_7579 + 96 len 4], Mask(224, 32, _5196) >> 32 + 32 <= return_data.size
                                    require mem[mem[_7579 + 96 len 4], Mask(224, 32, _5196) >> 32 + _7579 + 96] <= 4294967296 and mem[_7579 + 96 len 4], Mask(224, 32, _5196) >> 32 + (32 * mem[mem[_7579 + 96 len 4], Mask(224, 32, _5196) >> 32 + _7579 + 96]) + 32 <= return_data.size
                                    mem[_7579 + ceil32(return_data.size) + 96] = mem[mem[_7579 + 96 len 4], Mask(224, 32, _5196) >> 32 + _7579 + 96]
                                    _14806 = mem[_14311 + _7579 + 96]
                                    idx = 0
                                    while idx < 32 * _14806:
                                        mem[_7579 + ceil32(return_data.size) + idx + 128] = mem[_14311 + _7579 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14806) + _7579 + ceil32(return_data.size) + 128
                    else:
                        require s < ('cd', 36).length
                        require s < ('cd', 4).length
                        if not s:
                            mem[mem[64] + 4] = address(cd[((32 * s) + cd[4] + 36)])
                            mem[mem[64] + 36] = cd[100]
                            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                            call address(cd[((32 * s) + cd[36] + 36)]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args address(cd[((32 * s) + cd[4] + 36)]), cd[100]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require s < ('cd', 68).length
                            if not s:
                                if not address(cd[((32 * s) + cd[68] + 36)]):
                                    require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _5894 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    require s < ('cd', 36).length
                                    require s + 1 < ('cd', 36).length
                                    require s < ('cd', 4).length
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                    if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        if not address(cd[((32 * s) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                            _9874 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_9874 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_9874 + 36] = 0
                                            mem[_9874 + 68] = _5894
                                            mem[_9874 + 100] = this.address
                                            mem[_9874 + 132] = 128
                                            mem[_9874 + 164] = mem[_9874]
                                            idx = 0
                                            while idx < mem[_9874]:
                                                mem[_9874 + idx + 196] = mem[_9874 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_9874] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _5894, address(this.address), 128, mem[_9874 + 164 len mem[_9874] + 32]
                                            else:
                                                mem[floor32(mem[_9874]) + _9874 + 196] = mem[floor32(mem[_9874]) + _9874 + -(mem[_9874] % 32) + 228 len mem[_9874] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _5894, address(this.address), 128, mem[_9874], mem[_9874 + 196 len floor32(mem[_9874]) + 32]
                                        else:
                                            _9875 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_9875 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_9875 + 36] = _5894
                                            mem[_9875 + 68] = 0
                                            mem[_9875 + 100] = this.address
                                            mem[_9875 + 132] = 128
                                            mem[_9875 + 164] = mem[_9875]
                                            idx = 0
                                            while idx < mem[_9875]:
                                                mem[_9875 + idx + 196] = mem[_9875 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_9875] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _5894, 0, address(this.address), 128, mem[_9875 + 164 len mem[_9875] + 32]
                                            else:
                                                mem[floor32(mem[_9875]) + _9875 + 196] = mem[floor32(mem[_9875]) + _9875 + -(mem[_9875] % 32) + 228 len mem[_9875] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _5894, 0, address(this.address), 128, mem[_9875], mem[_9875 + 196 len floor32(mem[_9875]) + 32]
                                    else:
                                        if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            _9876 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_9876 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_9876 + 36] = 0
                                            mem[_9876 + 68] = _5894
                                            mem[_9876 + 100] = this.address
                                            mem[_9876 + 132] = 128
                                            mem[_9876 + 164] = mem[_9876]
                                            idx = 0
                                            while idx < mem[_9876]:
                                                mem[_9876 + idx + 196] = mem[_9876 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_9876] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _5894, address(this.address), 128, mem[_9876 + 164 len mem[_9876] + 32]
                                            else:
                                                mem[floor32(mem[_9876]) + _9876 + 196] = mem[floor32(mem[_9876]) + _9876 + -(mem[_9876] % 32) + 228 len mem[_9876] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _5894, address(this.address), 128, mem[_9876], mem[_9876 + 196 len floor32(mem[_9876]) + 32]
                                        else:
                                            _9877 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_9877 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_9877 + 36] = _5894
                                            mem[_9877 + 68] = 0
                                            mem[_9877 + 100] = this.address
                                            mem[_9877 + 132] = 128
                                            mem[_9877 + 164] = mem[_9877]
                                            idx = 0
                                            while idx < mem[_9877]:
                                                mem[_9877 + idx + 196] = mem[_9877 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_9877] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _5894, 0, address(this.address), 128, mem[_9877 + 164 len mem[_9877] + 32]
                                            else:
                                                mem[floor32(mem[_9877]) + _9877 + 196] = mem[floor32(mem[_9877]) + _9877 + -(mem[_9877] % 32) + 228 len mem[_9877] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _5894, 0, address(this.address), 128, mem[_9877], mem[_9877 + 196 len floor32(mem[_9877]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    s = s + 1
                                    t = 0
                                    u = this.address
                                    continue 
                                require 0 < ('cd', 68).length
                                require s < ('cd', 36).length
                                require s + 1 < ('cd', 36).length
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = address(('cd', 68)[0])
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), address(('cd', 68)[0])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= cd[100]:
                                    _8310 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_8310]
                                    mem[_8310 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_8310]
                                    mem[_8310 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                    mem[_8310 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_8310 + 100] = cd[100]
                                    mem[_8310 + 132] = 1
                                    mem[_8310 + 196] = this.address
                                    mem[_8310 + 228] = block.timestamp + 300
                                    mem[_8310 + 164] = 160
                                    mem[_8310 + 260] = mem[_8310]
                                    idx = 0
                                    while idx < 32 * mem[_8310]:
                                        mem[_8310 + idx + 292] = mem[_8310 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(('cd', 68)[0]))
                                    call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_8310 + 260 len (32 * mem[_8310]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_8310 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _8310 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14337 = mem[_8310 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                                    require mem[_8310 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                                    require mem[_8310 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                                    require mem[mem[_8310 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _8310 + 96] <= 4294967296 and mem[_8310 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_8310 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _8310 + 96]) + 32 <= return_data.size
                                    mem[_8310 + ceil32(return_data.size) + 96] = mem[mem[_8310 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _8310 + 96]
                                    _14819 = mem[_14337 + _8310 + 96]
                                    idx = 0
                                    while idx < 32 * _14819:
                                        mem[_8310 + ceil32(return_data.size) + idx + 128] = mem[_14337 + _8310 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14819) + _8310 + ceil32(return_data.size) + 128
                                else:
                                    mem[mem[64] + 4] = address(('cd', 68)[0])
                                    mem[mem[64] + 36] = 10000 * cd[100]
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(('cd', 68)[0]), 10000 * cd[100]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _9583 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_9583]
                                    mem[_9583 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_9583]
                                    mem[_9583 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                    mem[_9583 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_9583 + 100] = cd[100]
                                    mem[_9583 + 132] = 1
                                    mem[_9583 + 196] = this.address
                                    mem[_9583 + 228] = block.timestamp + 300
                                    mem[_9583 + 164] = 160
                                    mem[_9583 + 260] = mem[_9583]
                                    idx = 0
                                    while idx < 32 * mem[_9583]:
                                        mem[_9583 + idx + 292] = mem[_9583 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(('cd', 68)[0]))
                                    call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_9583 + 260 len (32 * mem[_9583]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_9583 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _9583 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14339 = mem[_9583 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                                    require mem[_9583 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                                    require mem[_9583 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                                    require mem[mem[_9583 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _9583 + 96] <= 4294967296 and mem[_9583 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_9583 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _9583 + 96]) + 32 <= return_data.size
                                    mem[_9583 + ceil32(return_data.size) + 96] = mem[mem[_9583 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _9583 + 96]
                                    _14820 = mem[_14339 + _9583 + 96]
                                    idx = 0
                                    while idx < 32 * _14820:
                                        mem[_9583 + ceil32(return_data.size) + idx + 128] = mem[_14339 + _9583 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14820) + _9583 + ceil32(return_data.size) + 128
                            else:
                                if s != ('cd', 36).length - 1:
                                    if not address(cd[((32 * s) + cd[68] + 36)]):
                                        require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                        _6133 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                        require s < ('cd', 36).length
                                        require s + 1 < ('cd', 36).length
                                        require s < ('cd', 4).length
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                        if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            if not address(cd[((32 * s) + cd[36] + 36)]):
                                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                                _10100 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_10100 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_10100 + 36] = 0
                                                mem[_10100 + 68] = _6133
                                                mem[_10100 + 100] = this.address
                                                mem[_10100 + 132] = 128
                                                mem[_10100 + 164] = mem[_10100]
                                                idx = 0
                                                while idx < mem[_10100]:
                                                    mem[_10100 + idx + 196] = mem[_10100 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_10100] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _6133, address(this.address), 128, mem[_10100 + 164 len mem[_10100] + 32]
                                                else:
                                                    mem[floor32(mem[_10100]) + _10100 + 196] = mem[floor32(mem[_10100]) + _10100 + -(mem[_10100] % 32) + 228 len mem[_10100] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _6133, address(this.address), 128, mem[_10100], mem[_10100 + 196 len floor32(mem[_10100]) + 32]
                                            else:
                                                _10101 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_10101 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_10101 + 36] = _6133
                                                mem[_10101 + 68] = 0
                                                mem[_10101 + 100] = this.address
                                                mem[_10101 + 132] = 128
                                                mem[_10101 + 164] = mem[_10101]
                                                idx = 0
                                                while idx < mem[_10101]:
                                                    mem[_10101 + idx + 196] = mem[_10101 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_10101] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _6133, 0, address(this.address), 128, mem[_10101 + 164 len mem[_10101] + 32]
                                                else:
                                                    mem[floor32(mem[_10101]) + _10101 + 196] = mem[floor32(mem[_10101]) + _10101 + -(mem[_10101] % 32) + 228 len mem[_10101] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _6133, 0, address(this.address), 128, mem[_10101], mem[_10101 + 196 len floor32(mem[_10101]) + 32]
                                        else:
                                            if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                                _10102 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_10102 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_10102 + 36] = 0
                                                mem[_10102 + 68] = _6133
                                                mem[_10102 + 100] = this.address
                                                mem[_10102 + 132] = 128
                                                mem[_10102 + 164] = mem[_10102]
                                                idx = 0
                                                while idx < mem[_10102]:
                                                    mem[_10102 + idx + 196] = mem[_10102 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_10102] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _6133, address(this.address), 128, mem[_10102 + 164 len mem[_10102] + 32]
                                                else:
                                                    mem[floor32(mem[_10102]) + _10102 + 196] = mem[floor32(mem[_10102]) + _10102 + -(mem[_10102] % 32) + 228 len mem[_10102] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _6133, address(this.address), 128, mem[_10102], mem[_10102 + 196 len floor32(mem[_10102]) + 32]
                                            else:
                                                _10103 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_10103 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_10103 + 36] = _6133
                                                mem[_10103 + 68] = 0
                                                mem[_10103 + 100] = this.address
                                                mem[_10103 + 132] = 128
                                                mem[_10103 + 164] = mem[_10103]
                                                idx = 0
                                                while idx < mem[_10103]:
                                                    mem[_10103 + idx + 196] = mem[_10103 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_10103] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _6133, 0, address(this.address), 128, mem[_10103 + 164 len mem[_10103] + 32]
                                                else:
                                                    mem[floor32(mem[_10103]) + _10103 + 196] = mem[floor32(mem[_10103]) + _10103 + -(mem[_10103] % 32) + 228 len mem[_10103] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _6133, 0, address(this.address), 128, mem[_10103], mem[_10103 + 196 len floor32(mem[_10103]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = s + 1
                                        t = 0
                                        u = this.address
                                        continue 
                                    require s < ('cd', 68).length
                                    require s < ('cd', 36).length
                                    require s + 1 < ('cd', 36).length
                                    require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _7032 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    mem[mem[64] + 4] = this.address
                                    mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                            gas gas_remaining wei
                                           args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] >= _7032:
                                        _8909 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require 0 < mem[_8909]
                                        mem[_8909 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                        require 1 < mem[_8909]
                                        mem[_8909 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                        mem[_8909 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_8909 + 100] = _7032
                                        mem[_8909 + 132] = 1
                                        mem[_8909 + 196] = this.address
                                        mem[_8909 + 228] = block.timestamp + 300
                                        mem[_8909 + 164] = 160
                                        mem[_8909 + 260] = mem[_8909]
                                        idx = 0
                                        while idx < 32 * mem[_8909]:
                                            mem[_8909 + idx + 292] = mem[_8909 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                        call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args _7032, 1, 160, address(this.address), block.timestamp + 300, mem[_8909 + 260 len (32 * mem[_8909]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_8909 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = _8909 + ceil32(return_data.size) + 96
                                        require return_data.size >= 32
                                        _14329 = mem[_8909 + 96 len 4], Mask(224, 32, _7032) >> 32
                                        require mem[_8909 + 96 len 4], Mask(224, 32, _7032) >> 32 <= 4294967296
                                        require mem[_8909 + 96 len 4], Mask(224, 32, _7032) >> 32 + 32 <= return_data.size
                                        require mem[mem[_8909 + 96 len 4], Mask(224, 32, _7032) >> 32 + _8909 + 96] <= 4294967296 and mem[_8909 + 96 len 4], Mask(224, 32, _7032) >> 32 + (32 * mem[mem[_8909 + 96 len 4], Mask(224, 32, _7032) >> 32 + _8909 + 96]) + 32 <= return_data.size
                                        mem[_8909 + ceil32(return_data.size) + 96] = mem[mem[_8909 + 96 len 4], Mask(224, 32, _7032) >> 32 + _8909 + 96]
                                        _14815 = mem[_14329 + _8909 + 96]
                                        idx = 0
                                        while idx < 32 * _14815:
                                            mem[_8909 + ceil32(return_data.size) + idx + 128] = mem[_14329 + _8909 + idx + 128]
                                            idx = idx + 32
                                            continue 
                                        mem[64] = (32 * _14815) + _8909 + ceil32(return_data.size) + 128
                                    else:
                                        mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                        mem[mem[64] + 36] = 10000 * _7032
                                        require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                        call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _7032
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _10099 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require 0 < mem[_10099]
                                        mem[_10099 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                        require 1 < mem[_10099]
                                        mem[_10099 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                        mem[_10099 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_10099 + 100] = _7032
                                        mem[_10099 + 132] = 1
                                        mem[_10099 + 196] = this.address
                                        mem[_10099 + 228] = block.timestamp + 300
                                        mem[_10099 + 164] = 160
                                        mem[_10099 + 260] = mem[_10099]
                                        idx = 0
                                        while idx < 32 * mem[_10099]:
                                            mem[_10099 + idx + 292] = mem[_10099 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                        call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args _7032, 1, 160, address(this.address), block.timestamp + 300, mem[_10099 + 260 len (32 * mem[_10099]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_10099 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = _10099 + ceil32(return_data.size) + 96
                                        require return_data.size >= 32
                                        _14331 = mem[_10099 + 96 len 4], Mask(224, 32, _7032) >> 32
                                        require mem[_10099 + 96 len 4], Mask(224, 32, _7032) >> 32 <= 4294967296
                                        require mem[_10099 + 96 len 4], Mask(224, 32, _7032) >> 32 + 32 <= return_data.size
                                        require mem[mem[_10099 + 96 len 4], Mask(224, 32, _7032) >> 32 + _10099 + 96] <= 4294967296 and mem[_10099 + 96 len 4], Mask(224, 32, _7032) >> 32 + (32 * mem[mem[_10099 + 96 len 4], Mask(224, 32, _7032) >> 32 + _10099 + 96]) + 32 <= return_data.size
                                        mem[_10099 + ceil32(return_data.size) + 96] = mem[mem[_10099 + 96 len 4], Mask(224, 32, _7032) >> 32 + _10099 + 96]
                                        _14816 = mem[_14331 + _10099 + 96]
                                        idx = 0
                                        while idx < 32 * _14816:
                                            mem[_10099 + ceil32(return_data.size) + idx + 128] = mem[_14331 + _10099 + idx + 128]
                                            idx = idx + 32
                                            continue 
                                        mem[64] = (32 * _14816) + _10099 + ceil32(return_data.size) + 128
                                else:
                                    if not address(cd[((32 * s) + cd[68] + 36)]):
                                        require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                        _6134 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                        require s < ('cd', 36).length
                                        require 0 < ('cd', 36).length
                                        require s < ('cd', 4).length
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                            revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                        if address(cd[((32 * s) + cd[36] + 36)]) < address(('cd', 36)[0]):
                                            if not address(cd[((32 * s) + cd[36] + 36)]):
                                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                                _10108 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_10108 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_10108 + 36] = 0
                                                mem[_10108 + 68] = _6134
                                                mem[_10108 + 100] = this.address
                                                mem[_10108 + 132] = 128
                                                mem[_10108 + 164] = mem[_10108]
                                                idx = 0
                                                while idx < mem[_10108]:
                                                    mem[_10108 + idx + 196] = mem[_10108 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_10108] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _6134, address(this.address), 128, mem[_10108 + 164 len mem[_10108] + 32]
                                                else:
                                                    mem[floor32(mem[_10108]) + _10108 + 196] = mem[floor32(mem[_10108]) + _10108 + -(mem[_10108] % 32) + 228 len mem[_10108] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _6134, address(this.address), 128, mem[_10108], mem[_10108 + 196 len floor32(mem[_10108]) + 32]
                                            else:
                                                _10109 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_10109 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_10109 + 36] = _6134
                                                mem[_10109 + 68] = 0
                                                mem[_10109 + 100] = this.address
                                                mem[_10109 + 132] = 128
                                                mem[_10109 + 164] = mem[_10109]
                                                idx = 0
                                                while idx < mem[_10109]:
                                                    mem[_10109 + idx + 196] = mem[_10109 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_10109] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _6134, 0, address(this.address), 128, mem[_10109 + 164 len mem[_10109] + 32]
                                                else:
                                                    mem[floor32(mem[_10109]) + _10109 + 196] = mem[floor32(mem[_10109]) + _10109 + -(mem[_10109] % 32) + 228 len mem[_10109] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _6134, 0, address(this.address), 128, mem[_10109], mem[_10109 + 196 len floor32(mem[_10109]) + 32]
                                        else:
                                            if not address(('cd', 36)[0]):
                                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                            if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                                _10110 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_10110 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_10110 + 36] = 0
                                                mem[_10110 + 68] = _6134
                                                mem[_10110 + 100] = this.address
                                                mem[_10110 + 132] = 128
                                                mem[_10110 + 164] = mem[_10110]
                                                idx = 0
                                                while idx < mem[_10110]:
                                                    mem[_10110 + idx + 196] = mem[_10110 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_10110] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _6134, address(this.address), 128, mem[_10110 + 164 len mem[_10110] + 32]
                                                else:
                                                    mem[floor32(mem[_10110]) + _10110 + 196] = mem[floor32(mem[_10110]) + _10110 + -(mem[_10110] % 32) + 228 len mem[_10110] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _6134, address(this.address), 128, mem[_10110], mem[_10110 + 196 len floor32(mem[_10110]) + 32]
                                            else:
                                                _10111 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_10111 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_10111 + 36] = _6134
                                                mem[_10111 + 68] = 0
                                                mem[_10111 + 100] = this.address
                                                mem[_10111 + 132] = 128
                                                mem[_10111 + 164] = mem[_10111]
                                                idx = 0
                                                while idx < mem[_10111]:
                                                    mem[_10111 + idx + 196] = mem[_10111 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_10111] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _6134, 0, address(this.address), 128, mem[_10111 + 164 len mem[_10111] + 32]
                                                else:
                                                    mem[floor32(mem[_10111]) + _10111 + 196] = mem[floor32(mem[_10111]) + _10111 + -(mem[_10111] % 32) + 228 len mem[_10111] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _6134, 0, address(this.address), 128, mem[_10111], mem[_10111 + 196 len floor32(mem[_10111]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = s + 1
                                        t = 0
                                        u = this.address
                                        continue 
                                    require s < ('cd', 68).length
                                    require s < ('cd', 36).length
                                    require 0 < ('cd', 36).length
                                    require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _7033 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    mem[mem[64] + 4] = this.address
                                    mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                            gas gas_remaining wei
                                           args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] >= _7033:
                                        _8914 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require 0 < mem[_8914]
                                        mem[_8914 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                        require 1 < mem[_8914]
                                        mem[_8914 + 64] = address(('cd', 36)[0])
                                        mem[_8914 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_8914 + 100] = _7033
                                        mem[_8914 + 132] = 1
                                        mem[_8914 + 196] = this.address
                                        mem[_8914 + 228] = block.timestamp + 300
                                        mem[_8914 + 164] = 160
                                        mem[_8914 + 260] = mem[_8914]
                                        idx = 0
                                        while idx < 32 * mem[_8914]:
                                            mem[_8914 + idx + 292] = mem[_8914 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                        call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args _7033, 1, 160, address(this.address), block.timestamp + 300, mem[_8914 + 260 len (32 * mem[_8914]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_8914 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = _8914 + ceil32(return_data.size) + 96
                                        require return_data.size >= 32
                                        _14333 = mem[_8914 + 96 len 4], Mask(224, 32, _7033) >> 32
                                        require mem[_8914 + 96 len 4], Mask(224, 32, _7033) >> 32 <= 4294967296
                                        require mem[_8914 + 96 len 4], Mask(224, 32, _7033) >> 32 + 32 <= return_data.size
                                        require mem[mem[_8914 + 96 len 4], Mask(224, 32, _7033) >> 32 + _8914 + 96] <= 4294967296 and mem[_8914 + 96 len 4], Mask(224, 32, _7033) >> 32 + (32 * mem[mem[_8914 + 96 len 4], Mask(224, 32, _7033) >> 32 + _8914 + 96]) + 32 <= return_data.size
                                        mem[_8914 + ceil32(return_data.size) + 96] = mem[mem[_8914 + 96 len 4], Mask(224, 32, _7033) >> 32 + _8914 + 96]
                                        _14817 = mem[_14333 + _8914 + 96]
                                        idx = 0
                                        while idx < 32 * _14817:
                                            mem[_8914 + ceil32(return_data.size) + idx + 128] = mem[_14333 + _8914 + idx + 128]
                                            idx = idx + 32
                                            continue 
                                        mem[64] = (32 * _14817) + _8914 + ceil32(return_data.size) + 128
                                    else:
                                        mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                        mem[mem[64] + 36] = 10000 * _7033
                                        require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                        call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _7033
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _10107 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require 0 < mem[_10107]
                                        mem[_10107 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                        require 1 < mem[_10107]
                                        mem[_10107 + 64] = address(('cd', 36)[0])
                                        mem[_10107 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_10107 + 100] = _7033
                                        mem[_10107 + 132] = 1
                                        mem[_10107 + 196] = this.address
                                        mem[_10107 + 228] = block.timestamp + 300
                                        mem[_10107 + 164] = 160
                                        mem[_10107 + 260] = mem[_10107]
                                        idx = 0
                                        while idx < 32 * mem[_10107]:
                                            mem[_10107 + idx + 292] = mem[_10107 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                        call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args _7033, 1, 160, address(this.address), block.timestamp + 300, mem[_10107 + 260 len (32 * mem[_10107]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_10107 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = _10107 + ceil32(return_data.size) + 96
                                        require return_data.size >= 32
                                        _14335 = mem[_10107 + 96 len 4], Mask(224, 32, _7033) >> 32
                                        require mem[_10107 + 96 len 4], Mask(224, 32, _7033) >> 32 <= 4294967296
                                        require mem[_10107 + 96 len 4], Mask(224, 32, _7033) >> 32 + 32 <= return_data.size
                                        require mem[mem[_10107 + 96 len 4], Mask(224, 32, _7033) >> 32 + _10107 + 96] <= 4294967296 and mem[_10107 + 96 len 4], Mask(224, 32, _7033) >> 32 + (32 * mem[mem[_10107 + 96 len 4], Mask(224, 32, _7033) >> 32 + _10107 + 96]) + 32 <= return_data.size
                                        mem[_10107 + ceil32(return_data.size) + 96] = mem[mem[_10107 + 96 len 4], Mask(224, 32, _7033) >> 32 + _10107 + 96]
                                        _14818 = mem[_14335 + _10107 + 96]
                                        idx = 0
                                        while idx < 32 * _14818:
                                            mem[_10107 + ceil32(return_data.size) + idx + 128] = mem[_14335 + _10107 + idx + 128]
                                            idx = idx + 32
                                            continue 
                                        mem[64] = (32 * _14818) + _10107 + ceil32(return_data.size) + 128
                        else:
                            require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            _4723 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                            mem[mem[64] + 4] = address(cd[((32 * s) + cd[4] + 36)])
                            mem[mem[64] + 36] = _4723
                            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                            call address(cd[((32 * s) + cd[36] + 36)]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args address(cd[((32 * s) + cd[4] + 36)]), _4723
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require s < ('cd', 68).length
                            if not s:
                                if not address(cd[((32 * s) + cd[68] + 36)]):
                                    require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _6132 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    require s < ('cd', 36).length
                                    require s + 1 < ('cd', 36).length
                                    require s < ('cd', 4).length
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                    if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        if not address(cd[((32 * s) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                            _10092 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_10092 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_10092 + 36] = 0
                                            mem[_10092 + 68] = _6132
                                            mem[_10092 + 100] = this.address
                                            mem[_10092 + 132] = 128
                                            mem[_10092 + 164] = mem[_10092]
                                            idx = 0
                                            while idx < mem[_10092]:
                                                mem[_10092 + idx + 196] = mem[_10092 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_10092] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _6132, address(this.address), 128, mem[_10092 + 164 len mem[_10092] + 32]
                                            else:
                                                mem[floor32(mem[_10092]) + _10092 + 196] = mem[floor32(mem[_10092]) + _10092 + -(mem[_10092] % 32) + 228 len mem[_10092] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _6132, address(this.address), 128, mem[_10092], mem[_10092 + 196 len floor32(mem[_10092]) + 32]
                                        else:
                                            _10093 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_10093 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_10093 + 36] = _6132
                                            mem[_10093 + 68] = 0
                                            mem[_10093 + 100] = this.address
                                            mem[_10093 + 132] = 128
                                            mem[_10093 + 164] = mem[_10093]
                                            idx = 0
                                            while idx < mem[_10093]:
                                                mem[_10093 + idx + 196] = mem[_10093 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_10093] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _6132, 0, address(this.address), 128, mem[_10093 + 164 len mem[_10093] + 32]
                                            else:
                                                mem[floor32(mem[_10093]) + _10093 + 196] = mem[floor32(mem[_10093]) + _10093 + -(mem[_10093] % 32) + 228 len mem[_10093] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _6132, 0, address(this.address), 128, mem[_10093], mem[_10093 + 196 len floor32(mem[_10093]) + 32]
                                    else:
                                        if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            _10094 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_10094 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_10094 + 36] = 0
                                            mem[_10094 + 68] = _6132
                                            mem[_10094 + 100] = this.address
                                            mem[_10094 + 132] = 128
                                            mem[_10094 + 164] = mem[_10094]
                                            idx = 0
                                            while idx < mem[_10094]:
                                                mem[_10094 + idx + 196] = mem[_10094 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_10094] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _6132, address(this.address), 128, mem[_10094 + 164 len mem[_10094] + 32]
                                            else:
                                                mem[floor32(mem[_10094]) + _10094 + 196] = mem[floor32(mem[_10094]) + _10094 + -(mem[_10094] % 32) + 228 len mem[_10094] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _6132, address(this.address), 128, mem[_10094], mem[_10094 + 196 len floor32(mem[_10094]) + 32]
                                        else:
                                            _10095 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_10095 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_10095 + 36] = _6132
                                            mem[_10095 + 68] = 0
                                            mem[_10095 + 100] = this.address
                                            mem[_10095 + 132] = 128
                                            mem[_10095 + 164] = mem[_10095]
                                            idx = 0
                                            while idx < mem[_10095]:
                                                mem[_10095 + idx + 196] = mem[_10095 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_10095] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _6132, 0, address(this.address), 128, mem[_10095 + 164 len mem[_10095] + 32]
                                            else:
                                                mem[floor32(mem[_10095]) + _10095 + 196] = mem[floor32(mem[_10095]) + _10095 + -(mem[_10095] % 32) + 228 len mem[_10095] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _6132, 0, address(this.address), 128, mem[_10095], mem[_10095 + 196 len floor32(mem[_10095]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    s = s + 1
                                    t = 0
                                    u = this.address
                                    continue 
                                require 0 < ('cd', 68).length
                                require s < ('cd', 36).length
                                require s + 1 < ('cd', 36).length
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = address(('cd', 68)[0])
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), address(('cd', 68)[0])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= cd[100]:
                                    _8607 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_8607]
                                    mem[_8607 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_8607]
                                    mem[_8607 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                    mem[_8607 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_8607 + 100] = cd[100]
                                    mem[_8607 + 132] = 1
                                    mem[_8607 + 196] = this.address
                                    mem[_8607 + 228] = block.timestamp + 300
                                    mem[_8607 + 164] = 160
                                    mem[_8607 + 260] = mem[_8607]
                                    idx = 0
                                    while idx < 32 * mem[_8607]:
                                        mem[_8607 + idx + 292] = mem[_8607 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(('cd', 68)[0]))
                                    call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_8607 + 260 len (32 * mem[_8607]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_8607 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _8607 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14325 = mem[_8607 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                                    require mem[_8607 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                                    require mem[_8607 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                                    require mem[mem[_8607 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _8607 + 96] <= 4294967296 and mem[_8607 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_8607 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _8607 + 96]) + 32 <= return_data.size
                                    mem[_8607 + ceil32(return_data.size) + 96] = mem[mem[_8607 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _8607 + 96]
                                    _14813 = mem[_14325 + _8607 + 96]
                                    idx = 0
                                    while idx < 32 * _14813:
                                        mem[_8607 + ceil32(return_data.size) + idx + 128] = mem[_14325 + _8607 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14813) + _8607 + ceil32(return_data.size) + 128
                                else:
                                    mem[mem[64] + 4] = address(('cd', 68)[0])
                                    mem[mem[64] + 36] = 10000 * cd[100]
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(('cd', 68)[0]), 10000 * cd[100]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _9871 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_9871]
                                    mem[_9871 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_9871]
                                    mem[_9871 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                    mem[_9871 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_9871 + 100] = cd[100]
                                    mem[_9871 + 132] = 1
                                    mem[_9871 + 196] = this.address
                                    mem[_9871 + 228] = block.timestamp + 300
                                    mem[_9871 + 164] = 160
                                    mem[_9871 + 260] = mem[_9871]
                                    idx = 0
                                    while idx < 32 * mem[_9871]:
                                        mem[_9871 + idx + 292] = mem[_9871 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(('cd', 68)[0]))
                                    call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_9871 + 260 len (32 * mem[_9871]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_9871 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _9871 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14327 = mem[_9871 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                                    require mem[_9871 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                                    require mem[_9871 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                                    require mem[mem[_9871 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _9871 + 96] <= 4294967296 and mem[_9871 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_9871 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _9871 + 96]) + 32 <= return_data.size
                                    mem[_9871 + ceil32(return_data.size) + 96] = mem[mem[_9871 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _9871 + 96]
                                    _14814 = mem[_14327 + _9871 + 96]
                                    idx = 0
                                    while idx < 32 * _14814:
                                        mem[_9871 + ceil32(return_data.size) + idx + 128] = mem[_14327 + _9871 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14814) + _9871 + ceil32(return_data.size) + 128
                            else:
                                if s != ('cd', 36).length - 1:
                                    if not address(cd[((32 * s) + cd[68] + 36)]):
                                        require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                        _6374 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                        require s < ('cd', 36).length
                                        require s + 1 < ('cd', 36).length
                                        require s < ('cd', 4).length
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                        if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            if not address(cd[((32 * s) + cd[36] + 36)]):
                                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                                _10366 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_10366 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_10366 + 36] = 0
                                                mem[_10366 + 68] = _6374
                                                mem[_10366 + 100] = this.address
                                                mem[_10366 + 132] = 128
                                                mem[_10366 + 164] = mem[_10366]
                                                idx = 0
                                                while idx < mem[_10366]:
                                                    mem[_10366 + idx + 196] = mem[_10366 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_10366] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _6374, address(this.address), 128, mem[_10366 + 164 len mem[_10366] + 32]
                                                else:
                                                    mem[floor32(mem[_10366]) + _10366 + 196] = mem[floor32(mem[_10366]) + _10366 + -(mem[_10366] % 32) + 228 len mem[_10366] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _6374, address(this.address), 128, mem[_10366], mem[_10366 + 196 len floor32(mem[_10366]) + 32]
                                            else:
                                                _10367 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_10367 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_10367 + 36] = _6374
                                                mem[_10367 + 68] = 0
                                                mem[_10367 + 100] = this.address
                                                mem[_10367 + 132] = 128
                                                mem[_10367 + 164] = mem[_10367]
                                                idx = 0
                                                while idx < mem[_10367]:
                                                    mem[_10367 + idx + 196] = mem[_10367 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_10367] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _6374, 0, address(this.address), 128, mem[_10367 + 164 len mem[_10367] + 32]
                                                else:
                                                    mem[floor32(mem[_10367]) + _10367 + 196] = mem[floor32(mem[_10367]) + _10367 + -(mem[_10367] % 32) + 228 len mem[_10367] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _6374, 0, address(this.address), 128, mem[_10367], mem[_10367 + 196 len floor32(mem[_10367]) + 32]
                                        else:
                                            if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                                _10368 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_10368 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_10368 + 36] = 0
                                                mem[_10368 + 68] = _6374
                                                mem[_10368 + 100] = this.address
                                                mem[_10368 + 132] = 128
                                                mem[_10368 + 164] = mem[_10368]
                                                idx = 0
                                                while idx < mem[_10368]:
                                                    mem[_10368 + idx + 196] = mem[_10368 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_10368] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _6374, address(this.address), 128, mem[_10368 + 164 len mem[_10368] + 32]
                                                else:
                                                    mem[floor32(mem[_10368]) + _10368 + 196] = mem[floor32(mem[_10368]) + _10368 + -(mem[_10368] % 32) + 228 len mem[_10368] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _6374, address(this.address), 128, mem[_10368], mem[_10368 + 196 len floor32(mem[_10368]) + 32]
                                            else:
                                                _10369 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_10369 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_10369 + 36] = _6374
                                                mem[_10369 + 68] = 0
                                                mem[_10369 + 100] = this.address
                                                mem[_10369 + 132] = 128
                                                mem[_10369 + 164] = mem[_10369]
                                                idx = 0
                                                while idx < mem[_10369]:
                                                    mem[_10369 + idx + 196] = mem[_10369 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_10369] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _6374, 0, address(this.address), 128, mem[_10369 + 164 len mem[_10369] + 32]
                                                else:
                                                    mem[floor32(mem[_10369]) + _10369 + 196] = mem[floor32(mem[_10369]) + _10369 + -(mem[_10369] % 32) + 228 len mem[_10369] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _6374, 0, address(this.address), 128, mem[_10369], mem[_10369 + 196 len floor32(mem[_10369]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = s + 1
                                        t = 0
                                        u = this.address
                                        continue 
                                    require s < ('cd', 68).length
                                    require s < ('cd', 36).length
                                    require s + 1 < ('cd', 36).length
                                    require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _7317 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    mem[mem[64] + 4] = this.address
                                    mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                            gas gas_remaining wei
                                           args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] >= _7317:
                                        _9232 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require 0 < mem[_9232]
                                        mem[_9232 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                        require 1 < mem[_9232]
                                        mem[_9232 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                        mem[_9232 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_9232 + 100] = _7317
                                        mem[_9232 + 132] = 1
                                        mem[_9232 + 196] = this.address
                                        mem[_9232 + 228] = block.timestamp + 300
                                        mem[_9232 + 164] = 160
                                        mem[_9232 + 260] = mem[_9232]
                                        idx = 0
                                        while idx < 32 * mem[_9232]:
                                            mem[_9232 + idx + 292] = mem[_9232 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                        call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args _7317, 1, 160, address(this.address), block.timestamp + 300, mem[_9232 + 260 len (32 * mem[_9232]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_9232 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = _9232 + ceil32(return_data.size) + 96
                                        require return_data.size >= 32
                                        _14317 = mem[_9232 + 96 len 4], Mask(224, 32, _7317) >> 32
                                        require mem[_9232 + 96 len 4], Mask(224, 32, _7317) >> 32 <= 4294967296
                                        require mem[_9232 + 96 len 4], Mask(224, 32, _7317) >> 32 + 32 <= return_data.size
                                        require mem[mem[_9232 + 96 len 4], Mask(224, 32, _7317) >> 32 + _9232 + 96] <= 4294967296 and mem[_9232 + 96 len 4], Mask(224, 32, _7317) >> 32 + (32 * mem[mem[_9232 + 96 len 4], Mask(224, 32, _7317) >> 32 + _9232 + 96]) + 32 <= return_data.size
                                        mem[_9232 + ceil32(return_data.size) + 96] = mem[mem[_9232 + 96 len 4], Mask(224, 32, _7317) >> 32 + _9232 + 96]
                                        _14809 = mem[_14317 + _9232 + 96]
                                        idx = 0
                                        while idx < 32 * _14809:
                                            mem[_9232 + ceil32(return_data.size) + idx + 128] = mem[_14317 + _9232 + idx + 128]
                                            idx = idx + 32
                                            continue 
                                        mem[64] = (32 * _14809) + _9232 + ceil32(return_data.size) + 128
                                    else:
                                        mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                        mem[mem[64] + 36] = 10000 * _7317
                                        require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                        call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _7317
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _10365 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require 0 < mem[_10365]
                                        mem[_10365 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                        require 1 < mem[_10365]
                                        mem[_10365 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                        mem[_10365 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_10365 + 100] = _7317
                                        mem[_10365 + 132] = 1
                                        mem[_10365 + 196] = this.address
                                        mem[_10365 + 228] = block.timestamp + 300
                                        mem[_10365 + 164] = 160
                                        mem[_10365 + 260] = mem[_10365]
                                        idx = 0
                                        while idx < 32 * mem[_10365]:
                                            mem[_10365 + idx + 292] = mem[_10365 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                        call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args _7317, 1, 160, address(this.address), block.timestamp + 300, mem[_10365 + 260 len (32 * mem[_10365]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_10365 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = _10365 + ceil32(return_data.size) + 96
                                        require return_data.size >= 32
                                        _14319 = mem[_10365 + 96 len 4], Mask(224, 32, _7317) >> 32
                                        require mem[_10365 + 96 len 4], Mask(224, 32, _7317) >> 32 <= 4294967296
                                        require mem[_10365 + 96 len 4], Mask(224, 32, _7317) >> 32 + 32 <= return_data.size
                                        require mem[mem[_10365 + 96 len 4], Mask(224, 32, _7317) >> 32 + _10365 + 96] <= 4294967296 and mem[_10365 + 96 len 4], Mask(224, 32, _7317) >> 32 + (32 * mem[mem[_10365 + 96 len 4], Mask(224, 32, _7317) >> 32 + _10365 + 96]) + 32 <= return_data.size
                                        mem[_10365 + ceil32(return_data.size) + 96] = mem[mem[_10365 + 96 len 4], Mask(224, 32, _7317) >> 32 + _10365 + 96]
                                        _14810 = mem[_14319 + _10365 + 96]
                                        idx = 0
                                        while idx < 32 * _14810:
                                            mem[_10365 + ceil32(return_data.size) + idx + 128] = mem[_14319 + _10365 + idx + 128]
                                            idx = idx + 32
                                            continue 
                                        mem[64] = (32 * _14810) + _10365 + ceil32(return_data.size) + 128
                                else:
                                    if not address(cd[((32 * s) + cd[68] + 36)]):
                                        require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                        _6375 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                        require s < ('cd', 36).length
                                        require 0 < ('cd', 36).length
                                        require s < ('cd', 4).length
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                            revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                        if address(cd[((32 * s) + cd[36] + 36)]) < address(('cd', 36)[0]):
                                            if not address(cd[((32 * s) + cd[36] + 36)]):
                                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                                _10374 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_10374 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_10374 + 36] = 0
                                                mem[_10374 + 68] = _6375
                                                mem[_10374 + 100] = this.address
                                                mem[_10374 + 132] = 128
                                                mem[_10374 + 164] = mem[_10374]
                                                idx = 0
                                                while idx < mem[_10374]:
                                                    mem[_10374 + idx + 196] = mem[_10374 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_10374] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _6375, address(this.address), 128, mem[_10374 + 164 len mem[_10374] + 32]
                                                else:
                                                    mem[floor32(mem[_10374]) + _10374 + 196] = mem[floor32(mem[_10374]) + _10374 + -(mem[_10374] % 32) + 228 len mem[_10374] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _6375, address(this.address), 128, mem[_10374], mem[_10374 + 196 len floor32(mem[_10374]) + 32]
                                            else:
                                                _10375 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_10375 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_10375 + 36] = _6375
                                                mem[_10375 + 68] = 0
                                                mem[_10375 + 100] = this.address
                                                mem[_10375 + 132] = 128
                                                mem[_10375 + 164] = mem[_10375]
                                                idx = 0
                                                while idx < mem[_10375]:
                                                    mem[_10375 + idx + 196] = mem[_10375 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_10375] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _6375, 0, address(this.address), 128, mem[_10375 + 164 len mem[_10375] + 32]
                                                else:
                                                    mem[floor32(mem[_10375]) + _10375 + 196] = mem[floor32(mem[_10375]) + _10375 + -(mem[_10375] % 32) + 228 len mem[_10375] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _6375, 0, address(this.address), 128, mem[_10375], mem[_10375 + 196 len floor32(mem[_10375]) + 32]
                                        else:
                                            if not address(('cd', 36)[0]):
                                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                            if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                                _10376 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_10376 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_10376 + 36] = 0
                                                mem[_10376 + 68] = _6375
                                                mem[_10376 + 100] = this.address
                                                mem[_10376 + 132] = 128
                                                mem[_10376 + 164] = mem[_10376]
                                                idx = 0
                                                while idx < mem[_10376]:
                                                    mem[_10376 + idx + 196] = mem[_10376 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_10376] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _6375, address(this.address), 128, mem[_10376 + 164 len mem[_10376] + 32]
                                                else:
                                                    mem[floor32(mem[_10376]) + _10376 + 196] = mem[floor32(mem[_10376]) + _10376 + -(mem[_10376] % 32) + 228 len mem[_10376] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _6375, address(this.address), 128, mem[_10376], mem[_10376 + 196 len floor32(mem[_10376]) + 32]
                                            else:
                                                _10377 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_10377 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_10377 + 36] = _6375
                                                mem[_10377 + 68] = 0
                                                mem[_10377 + 100] = this.address
                                                mem[_10377 + 132] = 128
                                                mem[_10377 + 164] = mem[_10377]
                                                idx = 0
                                                while idx < mem[_10377]:
                                                    mem[_10377 + idx + 196] = mem[_10377 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_10377] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _6375, 0, address(this.address), 128, mem[_10377 + 164 len mem[_10377] + 32]
                                                else:
                                                    mem[floor32(mem[_10377]) + _10377 + 196] = mem[floor32(mem[_10377]) + _10377 + -(mem[_10377] % 32) + 228 len mem[_10377] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _6375, 0, address(this.address), 128, mem[_10377], mem[_10377 + 196 len floor32(mem[_10377]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = s + 1
                                        t = 0
                                        u = this.address
                                        continue 
                                    require s < ('cd', 68).length
                                    require s < ('cd', 36).length
                                    require 0 < ('cd', 36).length
                                    require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _7318 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    mem[mem[64] + 4] = this.address
                                    mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                            gas gas_remaining wei
                                           args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] >= _7318:
                                        _9237 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require 0 < mem[_9237]
                                        mem[_9237 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                        require 1 < mem[_9237]
                                        mem[_9237 + 64] = address(('cd', 36)[0])
                                        mem[_9237 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_9237 + 100] = _7318
                                        mem[_9237 + 132] = 1
                                        mem[_9237 + 196] = this.address
                                        mem[_9237 + 228] = block.timestamp + 300
                                        mem[_9237 + 164] = 160
                                        mem[_9237 + 260] = mem[_9237]
                                        idx = 0
                                        while idx < 32 * mem[_9237]:
                                            mem[_9237 + idx + 292] = mem[_9237 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                        call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args _7318, 1, 160, address(this.address), block.timestamp + 300, mem[_9237 + 260 len (32 * mem[_9237]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_9237 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = _9237 + ceil32(return_data.size) + 96
                                        require return_data.size >= 32
                                        _14321 = mem[_9237 + 96 len 4], Mask(224, 32, _7318) >> 32
                                        require mem[_9237 + 96 len 4], Mask(224, 32, _7318) >> 32 <= 4294967296
                                        require mem[_9237 + 96 len 4], Mask(224, 32, _7318) >> 32 + 32 <= return_data.size
                                        require mem[mem[_9237 + 96 len 4], Mask(224, 32, _7318) >> 32 + _9237 + 96] <= 4294967296 and mem[_9237 + 96 len 4], Mask(224, 32, _7318) >> 32 + (32 * mem[mem[_9237 + 96 len 4], Mask(224, 32, _7318) >> 32 + _9237 + 96]) + 32 <= return_data.size
                                        mem[_9237 + ceil32(return_data.size) + 96] = mem[mem[_9237 + 96 len 4], Mask(224, 32, _7318) >> 32 + _9237 + 96]
                                        _14811 = mem[_14321 + _9237 + 96]
                                        idx = 0
                                        while idx < 32 * _14811:
                                            mem[_9237 + ceil32(return_data.size) + idx + 128] = mem[_14321 + _9237 + idx + 128]
                                            idx = idx + 32
                                            continue 
                                        mem[64] = (32 * _14811) + _9237 + ceil32(return_data.size) + 128
                                    else:
                                        mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                        mem[mem[64] + 36] = 10000 * _7318
                                        require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                        call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _7318
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _10373 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require 0 < mem[_10373]
                                        mem[_10373 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                        require 1 < mem[_10373]
                                        mem[_10373 + 64] = address(('cd', 36)[0])
                                        mem[_10373 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_10373 + 100] = _7318
                                        mem[_10373 + 132] = 1
                                        mem[_10373 + 196] = this.address
                                        mem[_10373 + 228] = block.timestamp + 300
                                        mem[_10373 + 164] = 160
                                        mem[_10373 + 260] = mem[_10373]
                                        idx = 0
                                        while idx < 32 * mem[_10373]:
                                            mem[_10373 + idx + 292] = mem[_10373 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                        call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args _7318, 1, 160, address(this.address), block.timestamp + 300, mem[_10373 + 260 len (32 * mem[_10373]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_10373 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = _10373 + ceil32(return_data.size) + 96
                                        require return_data.size >= 32
                                        _14323 = mem[_10373 + 96 len 4], Mask(224, 32, _7318) >> 32
                                        require mem[_10373 + 96 len 4], Mask(224, 32, _7318) >> 32 <= 4294967296
                                        require mem[_10373 + 96 len 4], Mask(224, 32, _7318) >> 32 + 32 <= return_data.size
                                        require mem[mem[_10373 + 96 len 4], Mask(224, 32, _7318) >> 32 + _10373 + 96] <= 4294967296 and mem[_10373 + 96 len 4], Mask(224, 32, _7318) >> 32 + (32 * mem[mem[_10373 + 96 len 4], Mask(224, 32, _7318) >> 32 + _10373 + 96]) + 32 <= return_data.size
                                        mem[_10373 + ceil32(return_data.size) + 96] = mem[mem[_10373 + 96 len 4], Mask(224, 32, _7318) >> 32 + _10373 + 96]
                                        _14812 = mem[_14323 + _10373 + 96]
                                        idx = 0
                                        while idx < 32 * _14812:
                                            mem[_10373 + ceil32(return_data.size) + idx + 128] = mem[_14323 + _10373 + idx + 128]
                                            idx = idx + 32
                                            continue 
                                        mem[64] = (32 * _14812) + _10373 + ceil32(return_data.size) + 128
                s = s + 1
                t = 1
                u = this.address
                continue 
            require s + 1 < ('cd', 4).length
            require s < ('cd', 68).length
            if not t:
                if not s:
                    if not address(cd[((32 * s) + cd[68] + 36)]):
                        require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                        _4672 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                        require s < ('cd', 36).length
                        require s + 1 < ('cd', 36).length
                        require s < ('cd', 4).length
                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                            revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                        if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                            if not address(cd[((32 * s) + cd[36] + 36)]):
                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                _6313 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_6313 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_6313 + 36] = 0
                                mem[_6313 + 68] = _4672
                                mem[_6313 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                mem[_6313 + 132] = 128
                                mem[_6313 + 164] = mem[_6313]
                                idx = 0
                                while idx < mem[_6313]:
                                    mem[_6313 + idx + 196] = mem[_6313 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                if not mem[_6313] % 32:
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _4672, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6313 + 164 len mem[_6313] + 32]
                                else:
                                    mem[floor32(mem[_6313]) + _6313 + 196] = mem[floor32(mem[_6313]) + _6313 + -(mem[_6313] % 32) + 228 len mem[_6313] % 32]
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _4672, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6313], mem[_6313 + 196 len floor32(mem[_6313]) + 32]
                            else:
                                _6314 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_6314 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_6314 + 36] = _4672
                                mem[_6314 + 68] = 0
                                mem[_6314 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                mem[_6314 + 132] = 128
                                mem[_6314 + 164] = mem[_6314]
                                idx = 0
                                while idx < mem[_6314]:
                                    mem[_6314 + idx + 196] = mem[_6314 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                if not mem[_6314] % 32:
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _4672, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6314 + 164 len mem[_6314] + 32]
                                else:
                                    mem[floor32(mem[_6314]) + _6314 + 196] = mem[floor32(mem[_6314]) + _6314 + -(mem[_6314] % 32) + 228 len mem[_6314] % 32]
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _4672, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6314], mem[_6314 + 196 len floor32(mem[_6314]) + 32]
                        else:
                            if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                _6315 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_6315 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_6315 + 36] = 0
                                mem[_6315 + 68] = _4672
                                mem[_6315 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                mem[_6315 + 132] = 128
                                mem[_6315 + 164] = mem[_6315]
                                idx = 0
                                while idx < mem[_6315]:
                                    mem[_6315 + idx + 196] = mem[_6315 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                if not mem[_6315] % 32:
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _4672, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6315 + 164 len mem[_6315] + 32]
                                else:
                                    mem[floor32(mem[_6315]) + _6315 + 196] = mem[floor32(mem[_6315]) + _6315 + -(mem[_6315] % 32) + 228 len mem[_6315] % 32]
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _4672, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6315], mem[_6315 + 196 len floor32(mem[_6315]) + 32]
                            else:
                                _6316 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_6316 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_6316 + 36] = _4672
                                mem[_6316 + 68] = 0
                                mem[_6316 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                mem[_6316 + 132] = 128
                                mem[_6316 + 164] = mem[_6316]
                                idx = 0
                                while idx < mem[_6316]:
                                    mem[_6316 + idx + 196] = mem[_6316 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                if not mem[_6316] % 32:
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _4672, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6316 + 164 len mem[_6316] + 32]
                                else:
                                    mem[floor32(mem[_6316]) + _6316 + 196] = mem[floor32(mem[_6316]) + _6316 + -(mem[_6316] % 32) + 228 len mem[_6316] % 32]
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _4672, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6316], mem[_6316 + 196 len floor32(mem[_6316]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        s = s + 1
                        t = 0
                        u = address(cd[((32 * s + 1) + cd[4] + 36)])
                        continue 
                    require 0 < ('cd', 68).length
                    require s < ('cd', 36).length
                    require s + 1 < ('cd', 36).length
                    mem[mem[64] + 4] = this.address
                    mem[mem[64] + 36] = address(('cd', 68)[0])
                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                    staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                            gas gas_remaining wei
                           args address(this.address), address(('cd', 68)[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= cd[100]:
                        _5320 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        require 0 < mem[_5320]
                        mem[_5320 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                        require 1 < mem[_5320]
                        mem[_5320 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                        mem[_5320 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_5320 + 100] = cd[100]
                        mem[_5320 + 132] = 1
                        mem[_5320 + 196] = this.address
                        mem[_5320 + 228] = block.timestamp + 300
                        mem[_5320 + 164] = 160
                        mem[_5320 + 260] = mem[_5320]
                        idx = 0
                        while idx < 32 * mem[_5320]:
                            mem[_5320 + idx + 292] = mem[_5320 + idx + 32]
                            idx = idx + 32
                            continue 
                        require ext_code.size(address(('cd', 68)[0]))
                        call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_5320 + 260 len (32 * mem[_5320]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_5320 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _5320 + ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        _14253 = mem[_5320 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                        require mem[_5320 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                        require mem[_5320 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                        require mem[mem[_5320 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _5320 + 96] <= 4294967296 and mem[_5320 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_5320 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _5320 + 96]) + 32 <= return_data.size
                        mem[_5320 + ceil32(return_data.size) + 96] = mem[mem[_5320 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _5320 + 96]
                        _14777 = mem[_14253 + _5320 + 96]
                        idx = 0
                        while idx < 32 * _14777:
                            mem[_5320 + ceil32(return_data.size) + idx + 128] = mem[_14253 + _5320 + idx + 128]
                            idx = idx + 32
                            continue 
                        mem[64] = (32 * _14777) + _5320 + ceil32(return_data.size) + 128
                    else:
                        mem[mem[64] + 4] = address(('cd', 68)[0])
                        mem[mem[64] + 36] = 10000 * cd[100]
                        require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                        call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(('cd', 68)[0]), 10000 * cd[100]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        _6107 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        require 0 < mem[_6107]
                        mem[_6107 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                        require 1 < mem[_6107]
                        mem[_6107 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                        mem[_6107 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_6107 + 100] = cd[100]
                        mem[_6107 + 132] = 1
                        mem[_6107 + 196] = this.address
                        mem[_6107 + 228] = block.timestamp + 300
                        mem[_6107 + 164] = 160
                        mem[_6107 + 260] = mem[_6107]
                        idx = 0
                        while idx < 32 * mem[_6107]:
                            mem[_6107 + idx + 292] = mem[_6107 + idx + 32]
                            idx = idx + 32
                            continue 
                        require ext_code.size(address(('cd', 68)[0]))
                        call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_6107 + 260 len (32 * mem[_6107]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_6107 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _6107 + ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        _14255 = mem[_6107 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                        require mem[_6107 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                        require mem[_6107 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                        require mem[mem[_6107 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _6107 + 96] <= 4294967296 and mem[_6107 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_6107 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _6107 + 96]) + 32 <= return_data.size
                        mem[_6107 + ceil32(return_data.size) + 96] = mem[mem[_6107 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _6107 + 96]
                        _14778 = mem[_14255 + _6107 + 96]
                        idx = 0
                        while idx < 32 * _14778:
                            mem[_6107 + ceil32(return_data.size) + idx + 128] = mem[_14255 + _6107 + idx + 128]
                            idx = idx + 32
                            continue 
                        mem[64] = (32 * _14778) + _6107 + ceil32(return_data.size) + 128
                else:
                    if s != ('cd', 36).length - 1:
                        if not address(cd[((32 * s) + cd[68] + 36)]):
                            require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            _4718 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                            require s < ('cd', 36).length
                            require s + 1 < ('cd', 36).length
                            require s < ('cd', 4).length
                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                            if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                if not address(cd[((32 * s) + cd[36] + 36)]):
                                    revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                    _6614 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_6614 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_6614 + 36] = 0
                                    mem[_6614 + 68] = _4718
                                    mem[_6614 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    mem[_6614 + 132] = 128
                                    mem[_6614 + 164] = mem[_6614]
                                    t = 0
                                    while t < mem[_6614]:
                                        mem[_6614 + t + 196] = mem[_6614 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_6614] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _4718, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6614 + 164 len mem[_6614] + 32]
                                    else:
                                        mem[floor32(mem[_6614]) + _6614 + 196] = mem[floor32(mem[_6614]) + _6614 + -(mem[_6614] % 32) + 228 len mem[_6614] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _4718, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6614], mem[_6614 + 196 len floor32(mem[_6614]) + 32]
                                else:
                                    _6615 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_6615 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_6615 + 36] = _4718
                                    mem[_6615 + 68] = 0
                                    mem[_6615 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    mem[_6615 + 132] = 128
                                    mem[_6615 + 164] = mem[_6615]
                                    t = 0
                                    while t < mem[_6615]:
                                        mem[_6615 + t + 196] = mem[_6615 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_6615] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _4718, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6615 + 164 len mem[_6615] + 32]
                                    else:
                                        mem[floor32(mem[_6615]) + _6615 + 196] = mem[floor32(mem[_6615]) + _6615 + -(mem[_6615] % 32) + 228 len mem[_6615] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _4718, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6615], mem[_6615 + 196 len floor32(mem[_6615]) + 32]
                            else:
                                if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                    revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                    _6616 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_6616 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_6616 + 36] = 0
                                    mem[_6616 + 68] = _4718
                                    mem[_6616 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    mem[_6616 + 132] = 128
                                    mem[_6616 + 164] = mem[_6616]
                                    t = 0
                                    while t < mem[_6616]:
                                        mem[_6616 + t + 196] = mem[_6616 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_6616] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _4718, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6616 + 164 len mem[_6616] + 32]
                                    else:
                                        mem[floor32(mem[_6616]) + _6616 + 196] = mem[floor32(mem[_6616]) + _6616 + -(mem[_6616] % 32) + 228 len mem[_6616] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _4718, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6616], mem[_6616 + 196 len floor32(mem[_6616]) + 32]
                                else:
                                    _6617 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_6617 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_6617 + 36] = _4718
                                    mem[_6617 + 68] = 0
                                    mem[_6617 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    mem[_6617 + 132] = 128
                                    mem[_6617 + 164] = mem[_6617]
                                    t = 0
                                    while t < mem[_6617]:
                                        mem[_6617 + t + 196] = mem[_6617 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_6617] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _4718, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6617 + 164 len mem[_6617] + 32]
                                    else:
                                        mem[floor32(mem[_6617]) + _6617 + 196] = mem[floor32(mem[_6617]) + _6617 + -(mem[_6617] % 32) + 228 len mem[_6617] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _4718, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6617], mem[_6617 + 196 len floor32(mem[_6617]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            s = s + 1
                            t = 0
                            u = address(cd[((32 * s + 1) + cd[4] + 36)])
                            continue 
                        require s < ('cd', 68).length
                        require s < ('cd', 36).length
                        require s + 1 < ('cd', 36).length
                        require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                        _4896 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                        mem[mem[64] + 4] = this.address
                        mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                        require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                        staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                gas gas_remaining wei
                               args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= _4896:
                            _5635 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            require 0 < mem[_5635]
                            mem[_5635 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                            require 1 < mem[_5635]
                            mem[_5635 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                            mem[_5635 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_5635 + 100] = _4896
                            mem[_5635 + 132] = 1
                            mem[_5635 + 196] = this.address
                            mem[_5635 + 228] = block.timestamp + 300
                            mem[_5635 + 164] = 160
                            mem[_5635 + 260] = mem[_5635]
                            idx = 0
                            while idx < 32 * mem[_5635]:
                                mem[_5635 + idx + 292] = mem[_5635 + idx + 32]
                                idx = idx + 32
                                continue 
                            require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                            call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _4896, 1, 160, address(this.address), block.timestamp + 300, mem[_5635 + 260 len (32 * mem[_5635]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_5635 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _5635 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _14245 = mem[_5635 + 96 len 4], Mask(224, 32, _4896) >> 32
                            require mem[_5635 + 96 len 4], Mask(224, 32, _4896) >> 32 <= 4294967296
                            require mem[_5635 + 96 len 4], Mask(224, 32, _4896) >> 32 + 32 <= return_data.size
                            require mem[mem[_5635 + 96 len 4], Mask(224, 32, _4896) >> 32 + _5635 + 96] <= 4294967296 and mem[_5635 + 96 len 4], Mask(224, 32, _4896) >> 32 + (32 * mem[mem[_5635 + 96 len 4], Mask(224, 32, _4896) >> 32 + _5635 + 96]) + 32 <= return_data.size
                            mem[_5635 + ceil32(return_data.size) + 96] = mem[mem[_5635 + 96 len 4], Mask(224, 32, _4896) >> 32 + _5635 + 96]
                            _14773 = mem[_14245 + _5635 + 96]
                            idx = 0
                            while idx < 32 * _14773:
                                mem[_5635 + ceil32(return_data.size) + idx + 128] = mem[_14245 + _5635 + idx + 128]
                                idx = idx + 32
                                continue 
                            mem[64] = (32 * _14773) + _5635 + ceil32(return_data.size) + 128
                        else:
                            mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                            mem[mem[64] + 36] = 10000 * _4896
                            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                            call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _4896
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            _6613 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            require 0 < mem[_6613]
                            mem[_6613 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                            require 1 < mem[_6613]
                            mem[_6613 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                            mem[_6613 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_6613 + 100] = _4896
                            mem[_6613 + 132] = 1
                            mem[_6613 + 196] = this.address
                            mem[_6613 + 228] = block.timestamp + 300
                            mem[_6613 + 164] = 160
                            mem[_6613 + 260] = mem[_6613]
                            idx = 0
                            while idx < 32 * mem[_6613]:
                                mem[_6613 + idx + 292] = mem[_6613 + idx + 32]
                                idx = idx + 32
                                continue 
                            require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                            call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _4896, 1, 160, address(this.address), block.timestamp + 300, mem[_6613 + 260 len (32 * mem[_6613]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_6613 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _6613 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _14247 = mem[_6613 + 96 len 4], Mask(224, 32, _4896) >> 32
                            require mem[_6613 + 96 len 4], Mask(224, 32, _4896) >> 32 <= 4294967296
                            require mem[_6613 + 96 len 4], Mask(224, 32, _4896) >> 32 + 32 <= return_data.size
                            require mem[mem[_6613 + 96 len 4], Mask(224, 32, _4896) >> 32 + _6613 + 96] <= 4294967296 and mem[_6613 + 96 len 4], Mask(224, 32, _4896) >> 32 + (32 * mem[mem[_6613 + 96 len 4], Mask(224, 32, _4896) >> 32 + _6613 + 96]) + 32 <= return_data.size
                            mem[_6613 + ceil32(return_data.size) + 96] = mem[mem[_6613 + 96 len 4], Mask(224, 32, _4896) >> 32 + _6613 + 96]
                            _14774 = mem[_14247 + _6613 + 96]
                            idx = 0
                            while idx < 32 * _14774:
                                mem[_6613 + ceil32(return_data.size) + idx + 128] = mem[_14247 + _6613 + idx + 128]
                                idx = idx + 32
                                continue 
                            mem[64] = (32 * _14774) + _6613 + ceil32(return_data.size) + 128
                    else:
                        if not address(cd[((32 * s) + cd[68] + 36)]):
                            require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            _4719 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                            require s < ('cd', 36).length
                            require 0 < ('cd', 36).length
                            require s < ('cd', 4).length
                            if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                            if address(cd[((32 * s) + cd[36] + 36)]) < address(('cd', 36)[0]):
                                if not address(cd[((32 * s) + cd[36] + 36)]):
                                    revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                    _6622 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_6622 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_6622 + 36] = 0
                                    mem[_6622 + 68] = _4719
                                    mem[_6622 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    mem[_6622 + 132] = 128
                                    mem[_6622 + 164] = mem[_6622]
                                    t = 0
                                    while t < mem[_6622]:
                                        mem[_6622 + t + 196] = mem[_6622 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_6622] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _4719, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6622 + 164 len mem[_6622] + 32]
                                    else:
                                        mem[floor32(mem[_6622]) + _6622 + 196] = mem[floor32(mem[_6622]) + _6622 + -(mem[_6622] % 32) + 228 len mem[_6622] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _4719, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6622], mem[_6622 + 196 len floor32(mem[_6622]) + 32]
                                else:
                                    _6623 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_6623 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_6623 + 36] = _4719
                                    mem[_6623 + 68] = 0
                                    mem[_6623 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    mem[_6623 + 132] = 128
                                    mem[_6623 + 164] = mem[_6623]
                                    t = 0
                                    while t < mem[_6623]:
                                        mem[_6623 + t + 196] = mem[_6623 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_6623] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _4719, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6623 + 164 len mem[_6623] + 32]
                                    else:
                                        mem[floor32(mem[_6623]) + _6623 + 196] = mem[floor32(mem[_6623]) + _6623 + -(mem[_6623] % 32) + 228 len mem[_6623] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _4719, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6623], mem[_6623 + 196 len floor32(mem[_6623]) + 32]
                            else:
                                if not address(('cd', 36)[0]):
                                    revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                    _6624 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_6624 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_6624 + 36] = 0
                                    mem[_6624 + 68] = _4719
                                    mem[_6624 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    mem[_6624 + 132] = 128
                                    mem[_6624 + 164] = mem[_6624]
                                    t = 0
                                    while t < mem[_6624]:
                                        mem[_6624 + t + 196] = mem[_6624 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_6624] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _4719, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6624 + 164 len mem[_6624] + 32]
                                    else:
                                        mem[floor32(mem[_6624]) + _6624 + 196] = mem[floor32(mem[_6624]) + _6624 + -(mem[_6624] % 32) + 228 len mem[_6624] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _4719, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6624], mem[_6624 + 196 len floor32(mem[_6624]) + 32]
                                else:
                                    _6625 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_6625 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_6625 + 36] = _4719
                                    mem[_6625 + 68] = 0
                                    mem[_6625 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    mem[_6625 + 132] = 128
                                    mem[_6625 + 164] = mem[_6625]
                                    t = 0
                                    while t < mem[_6625]:
                                        mem[_6625 + t + 196] = mem[_6625 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_6625] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _4719, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6625 + 164 len mem[_6625] + 32]
                                    else:
                                        mem[floor32(mem[_6625]) + _6625 + 196] = mem[floor32(mem[_6625]) + _6625 + -(mem[_6625] % 32) + 228 len mem[_6625] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _4719, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6625], mem[_6625 + 196 len floor32(mem[_6625]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            s = s + 1
                            t = 0
                            u = address(cd[((32 * s + 1) + cd[4] + 36)])
                            continue 
                        require s < ('cd', 68).length
                        require s < ('cd', 36).length
                        require 0 < ('cd', 36).length
                        require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                        _4897 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                        mem[mem[64] + 4] = this.address
                        mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                        require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                        staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                gas gas_remaining wei
                               args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= _4897:
                            _5640 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            require 0 < mem[_5640]
                            mem[_5640 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                            require 1 < mem[_5640]
                            mem[_5640 + 64] = address(('cd', 36)[0])
                            mem[_5640 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_5640 + 100] = _4897
                            mem[_5640 + 132] = 1
                            mem[_5640 + 196] = this.address
                            mem[_5640 + 228] = block.timestamp + 300
                            mem[_5640 + 164] = 160
                            mem[_5640 + 260] = mem[_5640]
                            idx = 0
                            while idx < 32 * mem[_5640]:
                                mem[_5640 + idx + 292] = mem[_5640 + idx + 32]
                                idx = idx + 32
                                continue 
                            require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                            call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _4897, 1, 160, address(this.address), block.timestamp + 300, mem[_5640 + 260 len (32 * mem[_5640]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_5640 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _5640 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _14249 = mem[_5640 + 96 len 4], Mask(224, 32, _4897) >> 32
                            require mem[_5640 + 96 len 4], Mask(224, 32, _4897) >> 32 <= 4294967296
                            require mem[_5640 + 96 len 4], Mask(224, 32, _4897) >> 32 + 32 <= return_data.size
                            require mem[mem[_5640 + 96 len 4], Mask(224, 32, _4897) >> 32 + _5640 + 96] <= 4294967296 and mem[_5640 + 96 len 4], Mask(224, 32, _4897) >> 32 + (32 * mem[mem[_5640 + 96 len 4], Mask(224, 32, _4897) >> 32 + _5640 + 96]) + 32 <= return_data.size
                            mem[_5640 + ceil32(return_data.size) + 96] = mem[mem[_5640 + 96 len 4], Mask(224, 32, _4897) >> 32 + _5640 + 96]
                            _14775 = mem[_14249 + _5640 + 96]
                            idx = 0
                            while idx < 32 * _14775:
                                mem[_5640 + ceil32(return_data.size) + idx + 128] = mem[_14249 + _5640 + idx + 128]
                                idx = idx + 32
                                continue 
                            mem[64] = (32 * _14775) + _5640 + ceil32(return_data.size) + 128
                        else:
                            mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                            mem[mem[64] + 36] = 10000 * _4897
                            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                            call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _4897
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            _6621 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            require 0 < mem[_6621]
                            mem[_6621 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                            require 1 < mem[_6621]
                            mem[_6621 + 64] = address(('cd', 36)[0])
                            mem[_6621 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_6621 + 100] = _4897
                            mem[_6621 + 132] = 1
                            mem[_6621 + 196] = this.address
                            mem[_6621 + 228] = block.timestamp + 300
                            mem[_6621 + 164] = 160
                            mem[_6621 + 260] = mem[_6621]
                            idx = 0
                            while idx < 32 * mem[_6621]:
                                mem[_6621 + idx + 292] = mem[_6621 + idx + 32]
                                idx = idx + 32
                                continue 
                            require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                            call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _4897, 1, 160, address(this.address), block.timestamp + 300, mem[_6621 + 260 len (32 * mem[_6621]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_6621 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _6621 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _14251 = mem[_6621 + 96 len 4], Mask(224, 32, _4897) >> 32
                            require mem[_6621 + 96 len 4], Mask(224, 32, _4897) >> 32 <= 4294967296
                            require mem[_6621 + 96 len 4], Mask(224, 32, _4897) >> 32 + 32 <= return_data.size
                            require mem[mem[_6621 + 96 len 4], Mask(224, 32, _4897) >> 32 + _6621 + 96] <= 4294967296 and mem[_6621 + 96 len 4], Mask(224, 32, _4897) >> 32 + (32 * mem[mem[_6621 + 96 len 4], Mask(224, 32, _4897) >> 32 + _6621 + 96]) + 32 <= return_data.size
                            mem[_6621 + ceil32(return_data.size) + 96] = mem[mem[_6621 + 96 len 4], Mask(224, 32, _4897) >> 32 + _6621 + 96]
                            _14776 = mem[_14251 + _6621 + 96]
                            idx = 0
                            while idx < 32 * _14776:
                                mem[_6621 + ceil32(return_data.size) + idx + 128] = mem[_14251 + _6621 + idx + 128]
                                idx = idx + 32
                                continue 
                            mem[64] = (32 * _14776) + _6621 + ceil32(return_data.size) + 128
                s = s + 1
                t = 1
                u = address(cd[((32 * s + 1) + cd[4] + 36)])
                continue 
            if address(cd[((32 * s) + cd[68] + 36)]):
                require s < ('cd', 68).length
                if not s:
                    if not address(cd[((32 * s) + cd[68] + 36)]):
                        require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                        _4900 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                        require s < ('cd', 36).length
                        require s + 1 < ('cd', 36).length
                        require s < ('cd', 4).length
                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                            revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                        if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                            if not address(cd[((32 * s) + cd[36] + 36)]):
                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                _7527 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_7527 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_7527 + 36] = 0
                                mem[_7527 + 68] = _4900
                                mem[_7527 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                mem[_7527 + 132] = 128
                                mem[_7527 + 164] = mem[_7527]
                                idx = 0
                                while idx < mem[_7527]:
                                    mem[_7527 + idx + 196] = mem[_7527 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                if not mem[_7527] % 32:
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _4900, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_7527 + 164 len mem[_7527] + 32]
                                else:
                                    mem[floor32(mem[_7527]) + _7527 + 196] = mem[floor32(mem[_7527]) + _7527 + -(mem[_7527] % 32) + 228 len mem[_7527] % 32]
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _4900, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_7527], mem[_7527 + 196 len floor32(mem[_7527]) + 32]
                            else:
                                _7528 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_7528 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_7528 + 36] = _4900
                                mem[_7528 + 68] = 0
                                mem[_7528 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                mem[_7528 + 132] = 128
                                mem[_7528 + 164] = mem[_7528]
                                idx = 0
                                while idx < mem[_7528]:
                                    mem[_7528 + idx + 196] = mem[_7528 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                if not mem[_7528] % 32:
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _4900, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_7528 + 164 len mem[_7528] + 32]
                                else:
                                    mem[floor32(mem[_7528]) + _7528 + 196] = mem[floor32(mem[_7528]) + _7528 + -(mem[_7528] % 32) + 228 len mem[_7528] % 32]
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _4900, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_7528], mem[_7528 + 196 len floor32(mem[_7528]) + 32]
                        else:
                            if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                _7529 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_7529 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_7529 + 36] = 0
                                mem[_7529 + 68] = _4900
                                mem[_7529 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                mem[_7529 + 132] = 128
                                mem[_7529 + 164] = mem[_7529]
                                idx = 0
                                while idx < mem[_7529]:
                                    mem[_7529 + idx + 196] = mem[_7529 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                if not mem[_7529] % 32:
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _4900, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_7529 + 164 len mem[_7529] + 32]
                                else:
                                    mem[floor32(mem[_7529]) + _7529 + 196] = mem[floor32(mem[_7529]) + _7529 + -(mem[_7529] % 32) + 228 len mem[_7529] % 32]
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _4900, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_7529], mem[_7529 + 196 len floor32(mem[_7529]) + 32]
                            else:
                                _7530 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_7530 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_7530 + 36] = _4900
                                mem[_7530 + 68] = 0
                                mem[_7530 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                mem[_7530 + 132] = 128
                                mem[_7530 + 164] = mem[_7530]
                                idx = 0
                                while idx < mem[_7530]:
                                    mem[_7530 + idx + 196] = mem[_7530 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                if not mem[_7530] % 32:
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _4900, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_7530 + 164 len mem[_7530] + 32]
                                else:
                                    mem[floor32(mem[_7530]) + _7530 + 196] = mem[floor32(mem[_7530]) + _7530 + -(mem[_7530] % 32) + 228 len mem[_7530] % 32]
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _4900, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_7530], mem[_7530 + 196 len floor32(mem[_7530]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        s = s + 1
                        t = 0
                        u = address(cd[((32 * s + 1) + cd[4] + 36)])
                        continue 
                    require 0 < ('cd', 68).length
                    require s < ('cd', 36).length
                    require s + 1 < ('cd', 36).length
                    mem[mem[64] + 4] = this.address
                    mem[mem[64] + 36] = address(('cd', 68)[0])
                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                    staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                            gas gas_remaining wei
                           args address(this.address), address(('cd', 68)[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= cd[100]:
                        _6110 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        require 0 < mem[_6110]
                        mem[_6110 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                        require 1 < mem[_6110]
                        mem[_6110 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                        mem[_6110 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_6110 + 100] = cd[100]
                        mem[_6110 + 132] = 1
                        mem[_6110 + 196] = this.address
                        mem[_6110 + 228] = block.timestamp + 300
                        mem[_6110 + 164] = 160
                        mem[_6110 + 260] = mem[_6110]
                        idx = 0
                        while idx < 32 * mem[_6110]:
                            mem[_6110 + idx + 292] = mem[_6110 + idx + 32]
                            idx = idx + 32
                            continue 
                        require ext_code.size(address(('cd', 68)[0]))
                        call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_6110 + 260 len (32 * mem[_6110]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_6110 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _6110 + ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        _14265 = mem[_6110 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                        require mem[_6110 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                        require mem[_6110 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                        require mem[mem[_6110 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _6110 + 96] <= 4294967296 and mem[_6110 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_6110 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _6110 + 96]) + 32 <= return_data.size
                        mem[_6110 + ceil32(return_data.size) + 96] = mem[mem[_6110 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _6110 + 96]
                        _14783 = mem[_14265 + _6110 + 96]
                        idx = 0
                        while idx < 32 * _14783:
                            mem[_6110 + ceil32(return_data.size) + idx + 128] = mem[_14265 + _6110 + idx + 128]
                            idx = idx + 32
                            continue 
                        mem[64] = (32 * _14783) + _6110 + ceil32(return_data.size) + 128
                    else:
                        mem[mem[64] + 4] = address(('cd', 68)[0])
                        mem[mem[64] + 36] = 10000 * cd[100]
                        require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                        call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(('cd', 68)[0]), 10000 * cd[100]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        _7284 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        require 0 < mem[_7284]
                        mem[_7284 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                        require 1 < mem[_7284]
                        mem[_7284 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                        mem[_7284 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_7284 + 100] = cd[100]
                        mem[_7284 + 132] = 1
                        mem[_7284 + 196] = this.address
                        mem[_7284 + 228] = block.timestamp + 300
                        mem[_7284 + 164] = 160
                        mem[_7284 + 260] = mem[_7284]
                        idx = 0
                        while idx < 32 * mem[_7284]:
                            mem[_7284 + idx + 292] = mem[_7284 + idx + 32]
                            idx = idx + 32
                            continue 
                        require ext_code.size(address(('cd', 68)[0]))
                        call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_7284 + 260 len (32 * mem[_7284]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_7284 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _7284 + ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        _14267 = mem[_7284 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                        require mem[_7284 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                        require mem[_7284 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                        require mem[mem[_7284 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _7284 + 96] <= 4294967296 and mem[_7284 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_7284 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _7284 + 96]) + 32 <= return_data.size
                        mem[_7284 + ceil32(return_data.size) + 96] = mem[mem[_7284 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _7284 + 96]
                        _14784 = mem[_14267 + _7284 + 96]
                        idx = 0
                        while idx < 32 * _14784:
                            mem[_7284 + ceil32(return_data.size) + idx + 128] = mem[_14267 + _7284 + idx + 128]
                            idx = idx + 32
                            continue 
                        mem[64] = (32 * _14784) + _7284 + ceil32(return_data.size) + 128
                    s = s + 1
                    t = 1
                    u = address(cd[((32 * s + 1) + cd[4] + 36)])
                    continue 
                if s != ('cd', 36).length - 1:
                    if not address(cd[((32 * s) + cd[68] + 36)]):
                        require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                        _4977 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                        require s < ('cd', 36).length
                        require s + 1 < ('cd', 36).length
                        require s < ('cd', 4).length
                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                            revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                        if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                            if not address(cd[((32 * s) + cd[36] + 36)]):
                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                _7875 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_7875 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_7875 + 36] = 0
                                mem[_7875 + 68] = _4977
                                mem[_7875 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                mem[_7875 + 132] = 128
                                mem[_7875 + 164] = mem[_7875]
                                idx = 0
                                while idx < mem[_7875]:
                                    mem[_7875 + idx + 196] = mem[_7875 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                if not mem[_7875] % 32:
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _4977, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_7875 + 164 len mem[_7875] + 32]
                                else:
                                    mem[floor32(mem[_7875]) + _7875 + 196] = mem[floor32(mem[_7875]) + _7875 + -(mem[_7875] % 32) + 228 len mem[_7875] % 32]
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _4977, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_7875], mem[_7875 + 196 len floor32(mem[_7875]) + 32]
                            else:
                                _7876 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_7876 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_7876 + 36] = _4977
                                mem[_7876 + 68] = 0
                                mem[_7876 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                mem[_7876 + 132] = 128
                                mem[_7876 + 164] = mem[_7876]
                                idx = 0
                                while idx < mem[_7876]:
                                    mem[_7876 + idx + 196] = mem[_7876 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                if not mem[_7876] % 32:
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _4977, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_7876 + 164 len mem[_7876] + 32]
                                else:
                                    mem[floor32(mem[_7876]) + _7876 + 196] = mem[floor32(mem[_7876]) + _7876 + -(mem[_7876] % 32) + 228 len mem[_7876] % 32]
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _4977, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_7876], mem[_7876 + 196 len floor32(mem[_7876]) + 32]
                        else:
                            if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                _7877 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_7877 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_7877 + 36] = 0
                                mem[_7877 + 68] = _4977
                                mem[_7877 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                mem[_7877 + 132] = 128
                                mem[_7877 + 164] = mem[_7877]
                                idx = 0
                                while idx < mem[_7877]:
                                    mem[_7877 + idx + 196] = mem[_7877 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                if not mem[_7877] % 32:
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _4977, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_7877 + 164 len mem[_7877] + 32]
                                else:
                                    mem[floor32(mem[_7877]) + _7877 + 196] = mem[floor32(mem[_7877]) + _7877 + -(mem[_7877] % 32) + 228 len mem[_7877] % 32]
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _4977, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_7877], mem[_7877 + 196 len floor32(mem[_7877]) + 32]
                            else:
                                _7878 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_7878 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_7878 + 36] = _4977
                                mem[_7878 + 68] = 0
                                mem[_7878 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                mem[_7878 + 132] = 128
                                mem[_7878 + 164] = mem[_7878]
                                idx = 0
                                while idx < mem[_7878]:
                                    mem[_7878 + idx + 196] = mem[_7878 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                if not mem[_7878] % 32:
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _4977, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_7878 + 164 len mem[_7878] + 32]
                                else:
                                    mem[floor32(mem[_7878]) + _7878 + 196] = mem[floor32(mem[_7878]) + _7878 + -(mem[_7878] % 32) + 228 len mem[_7878] % 32]
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _4977, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_7878], mem[_7878 + 196 len floor32(mem[_7878]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        s = s + 1
                        t = 0
                        u = address(cd[((32 * s + 1) + cd[4] + 36)])
                        continue 
                    require s < ('cd', 68).length
                    require s < ('cd', 36).length
                    require s + 1 < ('cd', 36).length
                    require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                    _5321 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                    mem[mem[64] + 4] = this.address
                    mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                    staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                            gas gas_remaining wei
                           args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= _5321:
                        _6641 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        require 0 < mem[_6641]
                        mem[_6641 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                        require 1 < mem[_6641]
                        mem[_6641 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                        mem[_6641 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_6641 + 100] = _5321
                        mem[_6641 + 132] = 1
                        mem[_6641 + 196] = this.address
                        mem[_6641 + 228] = block.timestamp + 300
                        mem[_6641 + 164] = 160
                        mem[_6641 + 260] = mem[_6641]
                        idx = 0
                        while idx < 32 * mem[_6641]:
                            mem[_6641 + idx + 292] = mem[_6641 + idx + 32]
                            idx = idx + 32
                            continue 
                        require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                        call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args _5321, 1, 160, address(this.address), block.timestamp + 300, mem[_6641 + 260 len (32 * mem[_6641]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_6641 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _6641 + ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        _14257 = mem[_6641 + 96 len 4], Mask(224, 32, _5321) >> 32
                        require mem[_6641 + 96 len 4], Mask(224, 32, _5321) >> 32 <= 4294967296
                        require mem[_6641 + 96 len 4], Mask(224, 32, _5321) >> 32 + 32 <= return_data.size
                        require mem[mem[_6641 + 96 len 4], Mask(224, 32, _5321) >> 32 + _6641 + 96] <= 4294967296 and mem[_6641 + 96 len 4], Mask(224, 32, _5321) >> 32 + (32 * mem[mem[_6641 + 96 len 4], Mask(224, 32, _5321) >> 32 + _6641 + 96]) + 32 <= return_data.size
                        mem[_6641 + ceil32(return_data.size) + 96] = mem[mem[_6641 + 96 len 4], Mask(224, 32, _5321) >> 32 + _6641 + 96]
                        _14779 = mem[_14257 + _6641 + 96]
                        idx = 0
                        while idx < 32 * _14779:
                            mem[_6641 + ceil32(return_data.size) + idx + 128] = mem[_14257 + _6641 + idx + 128]
                            idx = idx + 32
                            continue 
                        mem[64] = (32 * _14779) + _6641 + ceil32(return_data.size) + 128
                        s = s + 1
                        t = 1
                        u = address(cd[((32 * s + 1) + cd[4] + 36)])
                        continue 
                    mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                    mem[mem[64] + 36] = 10000 * _5321
                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                    call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _5321
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    _7874 = mem[64]
                    mem[mem[64]] = 2
                    mem[64] = mem[64] + 96
                    require 0 < mem[_7874]
                    mem[_7874 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                    require 1 < mem[_7874]
                    mem[_7874 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                    mem[_7874 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_7874 + 100] = _5321
                    mem[_7874 + 132] = 1
                    mem[_7874 + 196] = this.address
                    mem[_7874 + 228] = block.timestamp + 300
                    mem[_7874 + 164] = 160
                    mem[_7874 + 260] = mem[_7874]
                    idx = 0
                    while idx < 32 * mem[_7874]:
                        mem[_7874 + idx + 292] = mem[_7874 + idx + 32]
                        idx = idx + 32
                        continue 
                    require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                    call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                         gas gas_remaining wei
                        args _5321, 1, 160, address(this.address), block.timestamp + 300, mem[_7874 + 260 len (32 * mem[_7874]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_7874 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _7874 + ceil32(return_data.size) + 96
                    require return_data.size >= 32
                    _14259 = mem[_7874 + 96 len 4], Mask(224, 32, _5321) >> 32
                    require mem[_7874 + 96 len 4], Mask(224, 32, _5321) >> 32 <= 4294967296
                    require mem[_7874 + 96 len 4], Mask(224, 32, _5321) >> 32 + 32 <= return_data.size
                    require mem[mem[_7874 + 96 len 4], Mask(224, 32, _5321) >> 32 + _7874 + 96] <= 4294967296 and mem[_7874 + 96 len 4], Mask(224, 32, _5321) >> 32 + (32 * mem[mem[_7874 + 96 len 4], Mask(224, 32, _5321) >> 32 + _7874 + 96]) + 32 <= return_data.size
                    mem[_7874 + ceil32(return_data.size) + 96] = mem[mem[_7874 + 96 len 4], Mask(224, 32, _5321) >> 32 + _7874 + 96]
                    _14780 = mem[_14259 + _7874 + 96]
                    idx = 0
                    while idx < 32 * _14780:
                        mem[_7874 + ceil32(return_data.size) + idx + 128] = mem[_14259 + _7874 + idx + 128]
                        idx = idx + 32
                        continue 
                    mem[64] = (32 * _14780) + _7874 + ceil32(return_data.size) + 128
                    idx = floor32(_14780) + 1
                    t = 1
                    u = address(cd[((32 * floor32(_14780) + 1) + cd[4] + 36)])
                    continue 
                if not address(cd[((32 * s) + cd[68] + 36)]):
                    require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                    _4978 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                    require s < ('cd', 36).length
                    require 0 < ('cd', 36).length
                    require s < ('cd', 4).length
                    if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                        revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                    if address(cd[((32 * s) + cd[36] + 36)]) < address(('cd', 36)[0]):
                        if not address(cd[((32 * s) + cd[36] + 36)]):
                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                            _7883 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_7883 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_7883 + 36] = 0
                            mem[_7883 + 68] = _4978
                            mem[_7883 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                            mem[_7883 + 132] = 128
                            mem[_7883 + 164] = mem[_7883]
                            idx = 0
                            while idx < mem[_7883]:
                                mem[_7883 + idx + 196] = mem[_7883 + idx + 32]
                                idx = idx + 32
                                continue 
                            if not mem[_7883] % 32:
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _4978, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_7883 + 164 len mem[_7883] + 32]
                            else:
                                mem[floor32(mem[_7883]) + _7883 + 196] = mem[floor32(mem[_7883]) + _7883 + -(mem[_7883] % 32) + 228 len mem[_7883] % 32]
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _4978, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_7883], mem[_7883 + 196 len floor32(mem[_7883]) + 32]
                        else:
                            _7884 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_7884 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_7884 + 36] = _4978
                            mem[_7884 + 68] = 0
                            mem[_7884 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                            mem[_7884 + 132] = 128
                            mem[_7884 + 164] = mem[_7884]
                            idx = 0
                            while idx < mem[_7884]:
                                mem[_7884 + idx + 196] = mem[_7884 + idx + 32]
                                idx = idx + 32
                                continue 
                            if not mem[_7884] % 32:
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _4978, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_7884 + 164 len mem[_7884] + 32]
                            else:
                                mem[floor32(mem[_7884]) + _7884 + 196] = mem[floor32(mem[_7884]) + _7884 + -(mem[_7884] % 32) + 228 len mem[_7884] % 32]
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _4978, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_7884], mem[_7884 + 196 len floor32(mem[_7884]) + 32]
                    else:
                        if not address(('cd', 36)[0]):
                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                        if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                            _7885 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_7885 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_7885 + 36] = 0
                            mem[_7885 + 68] = _4978
                            mem[_7885 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                            mem[_7885 + 132] = 128
                            mem[_7885 + 164] = mem[_7885]
                            idx = 0
                            while idx < mem[_7885]:
                                mem[_7885 + idx + 196] = mem[_7885 + idx + 32]
                                idx = idx + 32
                                continue 
                            if not mem[_7885] % 32:
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _4978, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_7885 + 164 len mem[_7885] + 32]
                            else:
                                mem[floor32(mem[_7885]) + _7885 + 196] = mem[floor32(mem[_7885]) + _7885 + -(mem[_7885] % 32) + 228 len mem[_7885] % 32]
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _4978, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_7885], mem[_7885 + 196 len floor32(mem[_7885]) + 32]
                        else:
                            _7886 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_7886 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_7886 + 36] = _4978
                            mem[_7886 + 68] = 0
                            mem[_7886 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                            mem[_7886 + 132] = 128
                            mem[_7886 + 164] = mem[_7886]
                            idx = 0
                            while idx < mem[_7886]:
                                mem[_7886 + idx + 196] = mem[_7886 + idx + 32]
                                idx = idx + 32
                                continue 
                            if not mem[_7886] % 32:
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _4978, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_7886 + 164 len mem[_7886] + 32]
                            else:
                                mem[floor32(mem[_7886]) + _7886 + 196] = mem[floor32(mem[_7886]) + _7886 + -(mem[_7886] % 32) + 228 len mem[_7886] % 32]
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _4978, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_7886], mem[_7886 + 196 len floor32(mem[_7886]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    s = s + 1
                    t = 0
                    u = address(cd[((32 * s + 1) + cd[4] + 36)])
                    continue 
                require s < ('cd', 68).length
                require s < ('cd', 36).length
                require 0 < ('cd', 36).length
                require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                _5322 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                mem[mem[64] + 4] = this.address
                mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                        gas gas_remaining wei
                       args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] >= _5322:
                    _6646 = mem[64]
                    mem[mem[64]] = 2
                    mem[64] = mem[64] + 96
                    require 0 < mem[_6646]
                    mem[_6646 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                    require 1 < mem[_6646]
                    mem[_6646 + 64] = address(('cd', 36)[0])
                    mem[_6646 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_6646 + 100] = _5322
                    mem[_6646 + 132] = 1
                    mem[_6646 + 196] = this.address
                    mem[_6646 + 228] = block.timestamp + 300
                    mem[_6646 + 164] = 160
                    mem[_6646 + 260] = mem[_6646]
                    idx = 0
                    while idx < 32 * mem[_6646]:
                        mem[_6646 + idx + 292] = mem[_6646 + idx + 32]
                        idx = idx + 32
                        continue 
                    require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                    call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                         gas gas_remaining wei
                        args _5322, 1, 160, address(this.address), block.timestamp + 300, mem[_6646 + 260 len (32 * mem[_6646]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_6646 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _6646 + ceil32(return_data.size) + 96
                    require return_data.size >= 32
                    _14261 = mem[_6646 + 96 len 4], Mask(224, 32, _5322) >> 32
                    require mem[_6646 + 96 len 4], Mask(224, 32, _5322) >> 32 <= 4294967296
                    require mem[_6646 + 96 len 4], Mask(224, 32, _5322) >> 32 + 32 <= return_data.size
                    require mem[mem[_6646 + 96 len 4], Mask(224, 32, _5322) >> 32 + _6646 + 96] <= 4294967296 and mem[_6646 + 96 len 4], Mask(224, 32, _5322) >> 32 + (32 * mem[mem[_6646 + 96 len 4], Mask(224, 32, _5322) >> 32 + _6646 + 96]) + 32 <= return_data.size
                    mem[_6646 + ceil32(return_data.size) + 96] = mem[mem[_6646 + 96 len 4], Mask(224, 32, _5322) >> 32 + _6646 + 96]
                    _14781 = mem[_14261 + _6646 + 96]
                    idx = 0
                    while idx < 32 * _14781:
                        mem[_6646 + ceil32(return_data.size) + idx + 128] = mem[_14261 + _6646 + idx + 128]
                        idx = idx + 32
                        continue 
                    mem[64] = (32 * _14781) + _6646 + ceil32(return_data.size) + 128
                    s = s + 1
                    t = 1
                    u = address(cd[((32 * s + 1) + cd[4] + 36)])
                    continue 
                mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                mem[mem[64] + 36] = 10000 * _5322
                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _5322
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                _7882 = mem[64]
                mem[mem[64]] = 2
                mem[64] = mem[64] + 96
                require 0 < mem[_7882]
                mem[_7882 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                require 1 < mem[_7882]
                mem[_7882 + 64] = address(('cd', 36)[0])
                mem[_7882 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                mem[_7882 + 100] = _5322
                mem[_7882 + 132] = 1
                mem[_7882 + 196] = this.address
                mem[_7882 + 228] = block.timestamp + 300
                mem[_7882 + 164] = 160
                mem[_7882 + 260] = mem[_7882]
                idx = 0
                while idx < 32 * mem[_7882]:
                    mem[_7882 + idx + 292] = mem[_7882 + idx + 32]
                    idx = idx + 32
                    continue 
                require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                     gas gas_remaining wei
                    args _5322, 1, 160, address(this.address), block.timestamp + 300, mem[_7882 + 260 len (32 * mem[_7882]) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[_7882 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = _7882 + ceil32(return_data.size) + 96
                require return_data.size >= 32
                _14263 = mem[_7882 + 96 len 4], Mask(224, 32, _5322) >> 32
                require mem[_7882 + 96 len 4], Mask(224, 32, _5322) >> 32 <= 4294967296
                require mem[_7882 + 96 len 4], Mask(224, 32, _5322) >> 32 + 32 <= return_data.size
                require mem[mem[_7882 + 96 len 4], Mask(224, 32, _5322) >> 32 + _7882 + 96] <= 4294967296 and mem[_7882 + 96 len 4], Mask(224, 32, _5322) >> 32 + (32 * mem[mem[_7882 + 96 len 4], Mask(224, 32, _5322) >> 32 + _7882 + 96]) + 32 <= return_data.size
                mem[_7882 + ceil32(return_data.size) + 96] = mem[mem[_7882 + 96 len 4], Mask(224, 32, _5322) >> 32 + _7882 + 96]
                _14782 = mem[_14263 + _7882 + 96]
                idx = 0
                while idx < 32 * _14782:
                    mem[_7882 + ceil32(return_data.size) + idx + 128] = mem[_14263 + _7882 + idx + 128]
                    idx = idx + 32
                    continue 
                mem[64] = (32 * _14782) + _7882 + ceil32(return_data.size) + 128
                idx = floor32(_14782) + 1
                t = 1
                u = address(cd[((32 * floor32(_14782) + 1) + cd[4] + 36)])
                continue 
            require s < ('cd', 36).length
            require s < ('cd', 4).length
            if not s:
                mem[mem[64] + 4] = address(cd[((32 * s) + cd[4] + 36)])
                mem[mem[64] + 36] = cd[100]
                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                call address(cd[((32 * s) + cd[36] + 36)]).0xa9059cbb with:
                     gas gas_remaining wei
                    args address(cd[((32 * s) + cd[4] + 36)]), cd[100]
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require s < ('cd', 68).length
                if not s:
                    if not address(cd[((32 * s) + cd[68] + 36)]):
                        require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                        _6114 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                        require s < ('cd', 36).length
                        require s + 1 < ('cd', 36).length
                        require s < ('cd', 4).length
                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                            revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                        if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                            if not address(cd[((32 * s) + cd[36] + 36)]):
                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                _10078 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_10078 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_10078 + 36] = 0
                                mem[_10078 + 68] = _6114
                                mem[_10078 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                mem[_10078 + 132] = 128
                                mem[_10078 + 164] = mem[_10078]
                                idx = 0
                                while idx < mem[_10078]:
                                    mem[_10078 + idx + 196] = mem[_10078 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                if not mem[_10078] % 32:
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _6114, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10078 + 164 len mem[_10078] + 32]
                                else:
                                    mem[floor32(mem[_10078]) + _10078 + 196] = mem[floor32(mem[_10078]) + _10078 + -(mem[_10078] % 32) + 228 len mem[_10078] % 32]
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _6114, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10078], mem[_10078 + 196 len floor32(mem[_10078]) + 32]
                            else:
                                _10079 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_10079 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_10079 + 36] = _6114
                                mem[_10079 + 68] = 0
                                mem[_10079 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                mem[_10079 + 132] = 128
                                mem[_10079 + 164] = mem[_10079]
                                idx = 0
                                while idx < mem[_10079]:
                                    mem[_10079 + idx + 196] = mem[_10079 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                if not mem[_10079] % 32:
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _6114, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10079 + 164 len mem[_10079] + 32]
                                else:
                                    mem[floor32(mem[_10079]) + _10079 + 196] = mem[floor32(mem[_10079]) + _10079 + -(mem[_10079] % 32) + 228 len mem[_10079] % 32]
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _6114, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10079], mem[_10079 + 196 len floor32(mem[_10079]) + 32]
                        else:
                            if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                _10080 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_10080 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_10080 + 36] = 0
                                mem[_10080 + 68] = _6114
                                mem[_10080 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                mem[_10080 + 132] = 128
                                mem[_10080 + 164] = mem[_10080]
                                idx = 0
                                while idx < mem[_10080]:
                                    mem[_10080 + idx + 196] = mem[_10080 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                if not mem[_10080] % 32:
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _6114, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10080 + 164 len mem[_10080] + 32]
                                else:
                                    mem[floor32(mem[_10080]) + _10080 + 196] = mem[floor32(mem[_10080]) + _10080 + -(mem[_10080] % 32) + 228 len mem[_10080] % 32]
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _6114, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10080], mem[_10080 + 196 len floor32(mem[_10080]) + 32]
                            else:
                                _10081 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_10081 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_10081 + 36] = _6114
                                mem[_10081 + 68] = 0
                                mem[_10081 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                mem[_10081 + 132] = 128
                                mem[_10081 + 164] = mem[_10081]
                                idx = 0
                                while idx < mem[_10081]:
                                    mem[_10081 + idx + 196] = mem[_10081 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                if not mem[_10081] % 32:
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _6114, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10081 + 164 len mem[_10081] + 32]
                                else:
                                    mem[floor32(mem[_10081]) + _10081 + 196] = mem[floor32(mem[_10081]) + _10081 + -(mem[_10081] % 32) + 228 len mem[_10081] % 32]
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _6114, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10081], mem[_10081 + 196 len floor32(mem[_10081]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        s = s + 1
                        t = 0
                        u = address(cd[((32 * s + 1) + cd[4] + 36)])
                        continue 
                    require 0 < ('cd', 68).length
                    require s < ('cd', 36).length
                    require s + 1 < ('cd', 36).length
                    mem[mem[64] + 4] = this.address
                    mem[mem[64] + 36] = address(('cd', 68)[0])
                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                    staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                            gas gas_remaining wei
                           args address(this.address), address(('cd', 68)[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= cd[100]:
                        _8580 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        require 0 < mem[_8580]
                        mem[_8580 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                        require 1 < mem[_8580]
                        mem[_8580 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                        mem[_8580 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_8580 + 100] = cd[100]
                        mem[_8580 + 132] = 1
                        mem[_8580 + 196] = this.address
                        mem[_8580 + 228] = block.timestamp + 300
                        mem[_8580 + 164] = 160
                        mem[_8580 + 260] = mem[_8580]
                        idx = 0
                        while idx < 32 * mem[_8580]:
                            mem[_8580 + idx + 292] = mem[_8580 + idx + 32]
                            idx = idx + 32
                            continue 
                        require ext_code.size(address(('cd', 68)[0]))
                        call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_8580 + 260 len (32 * mem[_8580]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_8580 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _8580 + ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        _14289 = mem[_8580 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                        require mem[_8580 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                        require mem[_8580 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                        require mem[mem[_8580 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _8580 + 96] <= 4294967296 and mem[_8580 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_8580 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _8580 + 96]) + 32 <= return_data.size
                        mem[_8580 + ceil32(return_data.size) + 96] = mem[mem[_8580 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _8580 + 96]
                        _14795 = mem[_14289 + _8580 + 96]
                        idx = 0
                        while idx < 32 * _14795:
                            mem[_8580 + ceil32(return_data.size) + idx + 128] = mem[_14289 + _8580 + idx + 128]
                            idx = idx + 32
                            continue 
                        mem[64] = (32 * _14795) + _8580 + ceil32(return_data.size) + 128
                    else:
                        mem[mem[64] + 4] = address(('cd', 68)[0])
                        mem[mem[64] + 36] = 10000 * cd[100]
                        require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                        call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(('cd', 68)[0]), 10000 * cd[100]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        _9857 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        require 0 < mem[_9857]
                        mem[_9857 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                        require 1 < mem[_9857]
                        mem[_9857 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                        mem[_9857 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_9857 + 100] = cd[100]
                        mem[_9857 + 132] = 1
                        mem[_9857 + 196] = this.address
                        mem[_9857 + 228] = block.timestamp + 300
                        mem[_9857 + 164] = 160
                        mem[_9857 + 260] = mem[_9857]
                        idx = 0
                        while idx < 32 * mem[_9857]:
                            mem[_9857 + idx + 292] = mem[_9857 + idx + 32]
                            idx = idx + 32
                            continue 
                        require ext_code.size(address(('cd', 68)[0]))
                        call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_9857 + 260 len (32 * mem[_9857]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_9857 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _9857 + ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        _14291 = mem[_9857 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                        require mem[_9857 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                        require mem[_9857 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                        require mem[mem[_9857 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _9857 + 96] <= 4294967296 and mem[_9857 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_9857 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _9857 + 96]) + 32 <= return_data.size
                        mem[_9857 + ceil32(return_data.size) + 96] = mem[mem[_9857 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _9857 + 96]
                        _14796 = mem[_14291 + _9857 + 96]
                        idx = 0
                        while idx < 32 * _14796:
                            mem[_9857 + ceil32(return_data.size) + idx + 128] = mem[_14291 + _9857 + idx + 128]
                            idx = idx + 32
                            continue 
                        mem[64] = (32 * _14796) + _9857 + ceil32(return_data.size) + 128
                else:
                    if s != ('cd', 36).length - 1:
                        if not address(cd[((32 * s) + cd[68] + 36)]):
                            require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            _6329 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                            require s < ('cd', 36).length
                            require s + 1 < ('cd', 36).length
                            require s < ('cd', 4).length
                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                            if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                if not address(cd[((32 * s) + cd[36] + 36)]):
                                    revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                    _10330 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_10330 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_10330 + 36] = 0
                                    mem[_10330 + 68] = _6329
                                    mem[_10330 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    mem[_10330 + 132] = 128
                                    mem[_10330 + 164] = mem[_10330]
                                    idx = 0
                                    while idx < mem[_10330]:
                                        mem[_10330 + idx + 196] = mem[_10330 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    if not mem[_10330] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _6329, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10330 + 164 len mem[_10330] + 32]
                                    else:
                                        mem[floor32(mem[_10330]) + _10330 + 196] = mem[floor32(mem[_10330]) + _10330 + -(mem[_10330] % 32) + 228 len mem[_10330] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _6329, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10330], mem[_10330 + 196 len floor32(mem[_10330]) + 32]
                                else:
                                    _10331 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_10331 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_10331 + 36] = _6329
                                    mem[_10331 + 68] = 0
                                    mem[_10331 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    mem[_10331 + 132] = 128
                                    mem[_10331 + 164] = mem[_10331]
                                    idx = 0
                                    while idx < mem[_10331]:
                                        mem[_10331 + idx + 196] = mem[_10331 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    if not mem[_10331] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _6329, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10331 + 164 len mem[_10331] + 32]
                                    else:
                                        mem[floor32(mem[_10331]) + _10331 + 196] = mem[floor32(mem[_10331]) + _10331 + -(mem[_10331] % 32) + 228 len mem[_10331] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _6329, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10331], mem[_10331 + 196 len floor32(mem[_10331]) + 32]
                            else:
                                if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                    revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                    _10332 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_10332 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_10332 + 36] = 0
                                    mem[_10332 + 68] = _6329
                                    mem[_10332 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    mem[_10332 + 132] = 128
                                    mem[_10332 + 164] = mem[_10332]
                                    idx = 0
                                    while idx < mem[_10332]:
                                        mem[_10332 + idx + 196] = mem[_10332 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    if not mem[_10332] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _6329, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10332 + 164 len mem[_10332] + 32]
                                    else:
                                        mem[floor32(mem[_10332]) + _10332 + 196] = mem[floor32(mem[_10332]) + _10332 + -(mem[_10332] % 32) + 228 len mem[_10332] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _6329, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10332], mem[_10332 + 196 len floor32(mem[_10332]) + 32]
                                else:
                                    _10333 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_10333 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_10333 + 36] = _6329
                                    mem[_10333 + 68] = 0
                                    mem[_10333 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    mem[_10333 + 132] = 128
                                    mem[_10333 + 164] = mem[_10333]
                                    idx = 0
                                    while idx < mem[_10333]:
                                        mem[_10333 + idx + 196] = mem[_10333 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    if not mem[_10333] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _6329, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10333 + 164 len mem[_10333] + 32]
                                    else:
                                        mem[floor32(mem[_10333]) + _10333 + 196] = mem[floor32(mem[_10333]) + _10333 + -(mem[_10333] % 32) + 228 len mem[_10333] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _6329, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10333], mem[_10333 + 196 len floor32(mem[_10333]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            s = s + 1
                            t = 0
                            u = address(cd[((32 * s + 1) + cd[4] + 36)])
                            continue 
                        require s < ('cd', 68).length
                        require s < ('cd', 36).length
                        require s + 1 < ('cd', 36).length
                        require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                        _7289 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                        mem[mem[64] + 4] = this.address
                        mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                        require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                        staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                gas gas_remaining wei
                               args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= _7289:
                            _9202 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            require 0 < mem[_9202]
                            mem[_9202 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                            require 1 < mem[_9202]
                            mem[_9202 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                            mem[_9202 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_9202 + 100] = _7289
                            mem[_9202 + 132] = 1
                            mem[_9202 + 196] = this.address
                            mem[_9202 + 228] = block.timestamp + 300
                            mem[_9202 + 164] = 160
                            mem[_9202 + 260] = mem[_9202]
                            idx = 0
                            while idx < 32 * mem[_9202]:
                                mem[_9202 + idx + 292] = mem[_9202 + idx + 32]
                                idx = idx + 32
                                continue 
                            require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                            call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _7289, 1, 160, address(this.address), block.timestamp + 300, mem[_9202 + 260 len (32 * mem[_9202]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_9202 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _9202 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _14281 = mem[_9202 + 96 len 4], Mask(224, 32, _7289) >> 32
                            require mem[_9202 + 96 len 4], Mask(224, 32, _7289) >> 32 <= 4294967296
                            require mem[_9202 + 96 len 4], Mask(224, 32, _7289) >> 32 + 32 <= return_data.size
                            require mem[mem[_9202 + 96 len 4], Mask(224, 32, _7289) >> 32 + _9202 + 96] <= 4294967296 and mem[_9202 + 96 len 4], Mask(224, 32, _7289) >> 32 + (32 * mem[mem[_9202 + 96 len 4], Mask(224, 32, _7289) >> 32 + _9202 + 96]) + 32 <= return_data.size
                            mem[_9202 + ceil32(return_data.size) + 96] = mem[mem[_9202 + 96 len 4], Mask(224, 32, _7289) >> 32 + _9202 + 96]
                            _14791 = mem[_14281 + _9202 + 96]
                            idx = 0
                            while idx < 32 * _14791:
                                mem[_9202 + ceil32(return_data.size) + idx + 128] = mem[_14281 + _9202 + idx + 128]
                                idx = idx + 32
                                continue 
                            mem[64] = (32 * _14791) + _9202 + ceil32(return_data.size) + 128
                        else:
                            mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                            mem[mem[64] + 36] = 10000 * _7289
                            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                            call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _7289
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            _10329 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            require 0 < mem[_10329]
                            mem[_10329 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                            require 1 < mem[_10329]
                            mem[_10329 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                            mem[_10329 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_10329 + 100] = _7289
                            mem[_10329 + 132] = 1
                            mem[_10329 + 196] = this.address
                            mem[_10329 + 228] = block.timestamp + 300
                            mem[_10329 + 164] = 160
                            mem[_10329 + 260] = mem[_10329]
                            idx = 0
                            while idx < 32 * mem[_10329]:
                                mem[_10329 + idx + 292] = mem[_10329 + idx + 32]
                                idx = idx + 32
                                continue 
                            require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                            call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _7289, 1, 160, address(this.address), block.timestamp + 300, mem[_10329 + 260 len (32 * mem[_10329]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_10329 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _10329 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _14283 = mem[_10329 + 96 len 4], Mask(224, 32, _7289) >> 32
                            require mem[_10329 + 96 len 4], Mask(224, 32, _7289) >> 32 <= 4294967296
                            require mem[_10329 + 96 len 4], Mask(224, 32, _7289) >> 32 + 32 <= return_data.size
                            require mem[mem[_10329 + 96 len 4], Mask(224, 32, _7289) >> 32 + _10329 + 96] <= 4294967296 and mem[_10329 + 96 len 4], Mask(224, 32, _7289) >> 32 + (32 * mem[mem[_10329 + 96 len 4], Mask(224, 32, _7289) >> 32 + _10329 + 96]) + 32 <= return_data.size
                            mem[_10329 + ceil32(return_data.size) + 96] = mem[mem[_10329 + 96 len 4], Mask(224, 32, _7289) >> 32 + _10329 + 96]
                            _14792 = mem[_14283 + _10329 + 96]
                            idx = 0
                            while idx < 32 * _14792:
                                mem[_10329 + ceil32(return_data.size) + idx + 128] = mem[_14283 + _10329 + idx + 128]
                                idx = idx + 32
                                continue 
                            mem[64] = (32 * _14792) + _10329 + ceil32(return_data.size) + 128
                    else:
                        if not address(cd[((32 * s) + cd[68] + 36)]):
                            require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            _6330 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                            require s < ('cd', 36).length
                            require 0 < ('cd', 36).length
                            require s < ('cd', 4).length
                            if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                            if address(cd[((32 * s) + cd[36] + 36)]) < address(('cd', 36)[0]):
                                if not address(cd[((32 * s) + cd[36] + 36)]):
                                    revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                    _10338 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_10338 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_10338 + 36] = 0
                                    mem[_10338 + 68] = _6330
                                    mem[_10338 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    mem[_10338 + 132] = 128
                                    mem[_10338 + 164] = mem[_10338]
                                    idx = 0
                                    while idx < mem[_10338]:
                                        mem[_10338 + idx + 196] = mem[_10338 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    if not mem[_10338] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _6330, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10338 + 164 len mem[_10338] + 32]
                                    else:
                                        mem[floor32(mem[_10338]) + _10338 + 196] = mem[floor32(mem[_10338]) + _10338 + -(mem[_10338] % 32) + 228 len mem[_10338] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _6330, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10338], mem[_10338 + 196 len floor32(mem[_10338]) + 32]
                                else:
                                    _10339 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_10339 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_10339 + 36] = _6330
                                    mem[_10339 + 68] = 0
                                    mem[_10339 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    mem[_10339 + 132] = 128
                                    mem[_10339 + 164] = mem[_10339]
                                    idx = 0
                                    while idx < mem[_10339]:
                                        mem[_10339 + idx + 196] = mem[_10339 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    if not mem[_10339] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _6330, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10339 + 164 len mem[_10339] + 32]
                                    else:
                                        mem[floor32(mem[_10339]) + _10339 + 196] = mem[floor32(mem[_10339]) + _10339 + -(mem[_10339] % 32) + 228 len mem[_10339] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _6330, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10339], mem[_10339 + 196 len floor32(mem[_10339]) + 32]
                            else:
                                if not address(('cd', 36)[0]):
                                    revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                    _10340 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_10340 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_10340 + 36] = 0
                                    mem[_10340 + 68] = _6330
                                    mem[_10340 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    mem[_10340 + 132] = 128
                                    mem[_10340 + 164] = mem[_10340]
                                    idx = 0
                                    while idx < mem[_10340]:
                                        mem[_10340 + idx + 196] = mem[_10340 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    if not mem[_10340] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _6330, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10340 + 164 len mem[_10340] + 32]
                                    else:
                                        mem[floor32(mem[_10340]) + _10340 + 196] = mem[floor32(mem[_10340]) + _10340 + -(mem[_10340] % 32) + 228 len mem[_10340] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _6330, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10340], mem[_10340 + 196 len floor32(mem[_10340]) + 32]
                                else:
                                    _10341 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_10341 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_10341 + 36] = _6330
                                    mem[_10341 + 68] = 0
                                    mem[_10341 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    mem[_10341 + 132] = 128
                                    mem[_10341 + 164] = mem[_10341]
                                    idx = 0
                                    while idx < mem[_10341]:
                                        mem[_10341 + idx + 196] = mem[_10341 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    if not mem[_10341] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _6330, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10341 + 164 len mem[_10341] + 32]
                                    else:
                                        mem[floor32(mem[_10341]) + _10341 + 196] = mem[floor32(mem[_10341]) + _10341 + -(mem[_10341] % 32) + 228 len mem[_10341] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _6330, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10341], mem[_10341 + 196 len floor32(mem[_10341]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            s = s + 1
                            t = 0
                            u = address(cd[((32 * s + 1) + cd[4] + 36)])
                            continue 
                        require s < ('cd', 68).length
                        require s < ('cd', 36).length
                        require 0 < ('cd', 36).length
                        require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                        _7290 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                        mem[mem[64] + 4] = this.address
                        mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                        require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                        staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                gas gas_remaining wei
                               args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= _7290:
                            _9207 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            require 0 < mem[_9207]
                            mem[_9207 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                            require 1 < mem[_9207]
                            mem[_9207 + 64] = address(('cd', 36)[0])
                            mem[_9207 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_9207 + 100] = _7290
                            mem[_9207 + 132] = 1
                            mem[_9207 + 196] = this.address
                            mem[_9207 + 228] = block.timestamp + 300
                            mem[_9207 + 164] = 160
                            mem[_9207 + 260] = mem[_9207]
                            idx = 0
                            while idx < 32 * mem[_9207]:
                                mem[_9207 + idx + 292] = mem[_9207 + idx + 32]
                                idx = idx + 32
                                continue 
                            require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                            call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _7290, 1, 160, address(this.address), block.timestamp + 300, mem[_9207 + 260 len (32 * mem[_9207]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_9207 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _9207 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _14285 = mem[_9207 + 96 len 4], Mask(224, 32, _7290) >> 32
                            require mem[_9207 + 96 len 4], Mask(224, 32, _7290) >> 32 <= 4294967296
                            require mem[_9207 + 96 len 4], Mask(224, 32, _7290) >> 32 + 32 <= return_data.size
                            require mem[mem[_9207 + 96 len 4], Mask(224, 32, _7290) >> 32 + _9207 + 96] <= 4294967296 and mem[_9207 + 96 len 4], Mask(224, 32, _7290) >> 32 + (32 * mem[mem[_9207 + 96 len 4], Mask(224, 32, _7290) >> 32 + _9207 + 96]) + 32 <= return_data.size
                            mem[_9207 + ceil32(return_data.size) + 96] = mem[mem[_9207 + 96 len 4], Mask(224, 32, _7290) >> 32 + _9207 + 96]
                            _14793 = mem[_14285 + _9207 + 96]
                            idx = 0
                            while idx < 32 * _14793:
                                mem[_9207 + ceil32(return_data.size) + idx + 128] = mem[_14285 + _9207 + idx + 128]
                                idx = idx + 32
                                continue 
                            mem[64] = (32 * _14793) + _9207 + ceil32(return_data.size) + 128
                        else:
                            mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                            mem[mem[64] + 36] = 10000 * _7290
                            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                            call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _7290
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            _10337 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            require 0 < mem[_10337]
                            mem[_10337 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                            require 1 < mem[_10337]
                            mem[_10337 + 64] = address(('cd', 36)[0])
                            mem[_10337 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_10337 + 100] = _7290
                            mem[_10337 + 132] = 1
                            mem[_10337 + 196] = this.address
                            mem[_10337 + 228] = block.timestamp + 300
                            mem[_10337 + 164] = 160
                            mem[_10337 + 260] = mem[_10337]
                            idx = 0
                            while idx < 32 * mem[_10337]:
                                mem[_10337 + idx + 292] = mem[_10337 + idx + 32]
                                idx = idx + 32
                                continue 
                            require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                            call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _7290, 1, 160, address(this.address), block.timestamp + 300, mem[_10337 + 260 len (32 * mem[_10337]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_10337 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _10337 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _14287 = mem[_10337 + 96 len 4], Mask(224, 32, _7290) >> 32
                            require mem[_10337 + 96 len 4], Mask(224, 32, _7290) >> 32 <= 4294967296
                            require mem[_10337 + 96 len 4], Mask(224, 32, _7290) >> 32 + 32 <= return_data.size
                            require mem[mem[_10337 + 96 len 4], Mask(224, 32, _7290) >> 32 + _10337 + 96] <= 4294967296 and mem[_10337 + 96 len 4], Mask(224, 32, _7290) >> 32 + (32 * mem[mem[_10337 + 96 len 4], Mask(224, 32, _7290) >> 32 + _10337 + 96]) + 32 <= return_data.size
                            mem[_10337 + ceil32(return_data.size) + 96] = mem[mem[_10337 + 96 len 4], Mask(224, 32, _7290) >> 32 + _10337 + 96]
                            _14794 = mem[_14287 + _10337 + 96]
                            idx = 0
                            while idx < 32 * _14794:
                                mem[_10337 + ceil32(return_data.size) + idx + 128] = mem[_14287 + _10337 + idx + 128]
                                idx = idx + 32
                                continue 
                            mem[64] = (32 * _14794) + _10337 + ceil32(return_data.size) + 128
                s = s + 1
                t = 1
                u = address(cd[((32 * s + 1) + cd[4] + 36)])
                continue 
            require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
            _4764 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
            mem[mem[64] + 4] = address(cd[((32 * s) + cd[4] + 36)])
            mem[mem[64] + 36] = _4764
            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
            call address(cd[((32 * s) + cd[36] + 36)]).0xa9059cbb with:
                 gas gas_remaining wei
                args address(cd[((32 * s) + cd[4] + 36)]), _4764
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require s < ('cd', 68).length
            if not s:
                if not address(cd[((32 * s) + cd[68] + 36)]):
                    require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                    _6328 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                    require s < ('cd', 36).length
                    require s + 1 < ('cd', 36).length
                    require s < ('cd', 4).length
                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                        revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                    if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                        if not address(cd[((32 * s) + cd[36] + 36)]):
                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                            _10322 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_10322 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_10322 + 36] = 0
                            mem[_10322 + 68] = _6328
                            mem[_10322 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                            mem[_10322 + 132] = 128
                            mem[_10322 + 164] = mem[_10322]
                            idx = 0
                            while idx < mem[_10322]:
                                mem[_10322 + idx + 196] = mem[_10322 + idx + 32]
                                idx = idx + 32
                                continue 
                            if not mem[_10322] % 32:
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _6328, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10322 + 164 len mem[_10322] + 32]
                            else:
                                mem[floor32(mem[_10322]) + _10322 + 196] = mem[floor32(mem[_10322]) + _10322 + -(mem[_10322] % 32) + 228 len mem[_10322] % 32]
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _6328, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10322], mem[_10322 + 196 len floor32(mem[_10322]) + 32]
                        else:
                            _10323 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_10323 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_10323 + 36] = _6328
                            mem[_10323 + 68] = 0
                            mem[_10323 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                            mem[_10323 + 132] = 128
                            mem[_10323 + 164] = mem[_10323]
                            idx = 0
                            while idx < mem[_10323]:
                                mem[_10323 + idx + 196] = mem[_10323 + idx + 32]
                                idx = idx + 32
                                continue 
                            if not mem[_10323] % 32:
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _6328, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10323 + 164 len mem[_10323] + 32]
                            else:
                                mem[floor32(mem[_10323]) + _10323 + 196] = mem[floor32(mem[_10323]) + _10323 + -(mem[_10323] % 32) + 228 len mem[_10323] % 32]
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _6328, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10323], mem[_10323 + 196 len floor32(mem[_10323]) + 32]
                    else:
                        if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                            _10324 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_10324 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_10324 + 36] = 0
                            mem[_10324 + 68] = _6328
                            mem[_10324 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                            mem[_10324 + 132] = 128
                            mem[_10324 + 164] = mem[_10324]
                            idx = 0
                            while idx < mem[_10324]:
                                mem[_10324 + idx + 196] = mem[_10324 + idx + 32]
                                idx = idx + 32
                                continue 
                            if not mem[_10324] % 32:
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _6328, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10324 + 164 len mem[_10324] + 32]
                            else:
                                mem[floor32(mem[_10324]) + _10324 + 196] = mem[floor32(mem[_10324]) + _10324 + -(mem[_10324] % 32) + 228 len mem[_10324] % 32]
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _6328, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10324], mem[_10324 + 196 len floor32(mem[_10324]) + 32]
                        else:
                            _10325 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_10325 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_10325 + 36] = _6328
                            mem[_10325 + 68] = 0
                            mem[_10325 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                            mem[_10325 + 132] = 128
                            mem[_10325 + 164] = mem[_10325]
                            idx = 0
                            while idx < mem[_10325]:
                                mem[_10325 + idx + 196] = mem[_10325 + idx + 32]
                                idx = idx + 32
                                continue 
                            if not mem[_10325] % 32:
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _6328, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10325 + 164 len mem[_10325] + 32]
                            else:
                                mem[floor32(mem[_10325]) + _10325 + 196] = mem[floor32(mem[_10325]) + _10325 + -(mem[_10325] % 32) + 228 len mem[_10325] % 32]
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _6328, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10325], mem[_10325 + 196 len floor32(mem[_10325]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    s = s + 1
                    t = 0
                    u = address(cd[((32 * s + 1) + cd[4] + 36)])
                    continue 
                require 0 < ('cd', 68).length
                require s < ('cd', 36).length
                require s + 1 < ('cd', 36).length
                mem[mem[64] + 4] = this.address
                mem[mem[64] + 36] = address(('cd', 68)[0])
                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                        gas gas_remaining wei
                       args address(this.address), address(('cd', 68)[0])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] >= cd[100]:
                    _8855 = mem[64]
                    mem[mem[64]] = 2
                    mem[64] = mem[64] + 96
                    require 0 < mem[_8855]
                    mem[_8855 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                    require 1 < mem[_8855]
                    mem[_8855 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                    mem[_8855 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_8855 + 100] = cd[100]
                    mem[_8855 + 132] = 1
                    mem[_8855 + 196] = this.address
                    mem[_8855 + 228] = block.timestamp + 300
                    mem[_8855 + 164] = 160
                    mem[_8855 + 260] = mem[_8855]
                    idx = 0
                    while idx < 32 * mem[_8855]:
                        mem[_8855 + idx + 292] = mem[_8855 + idx + 32]
                        idx = idx + 32
                        continue 
                    require ext_code.size(address(('cd', 68)[0]))
                    call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                         gas gas_remaining wei
                        args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_8855 + 260 len (32 * mem[_8855]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_8855 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _8855 + ceil32(return_data.size) + 96
                    require return_data.size >= 32
                    _14277 = mem[_8855 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                    require mem[_8855 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                    require mem[_8855 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                    require mem[mem[_8855 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _8855 + 96] <= 4294967296 and mem[_8855 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_8855 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _8855 + 96]) + 32 <= return_data.size
                    mem[_8855 + ceil32(return_data.size) + 96] = mem[mem[_8855 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _8855 + 96]
                    _14789 = mem[_14277 + _8855 + 96]
                    idx = 0
                    while idx < 32 * _14789:
                        mem[_8855 + ceil32(return_data.size) + idx + 128] = mem[_14277 + _8855 + idx + 128]
                        idx = idx + 32
                        continue 
                    mem[64] = (32 * _14789) + _8855 + ceil32(return_data.size) + 128
                else:
                    mem[mem[64] + 4] = address(('cd', 68)[0])
                    mem[mem[64] + 36] = 10000 * cd[100]
                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                    call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(('cd', 68)[0]), 10000 * cd[100]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    _10075 = mem[64]
                    mem[mem[64]] = 2
                    mem[64] = mem[64] + 96
                    require 0 < mem[_10075]
                    mem[_10075 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                    require 1 < mem[_10075]
                    mem[_10075 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                    mem[_10075 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_10075 + 100] = cd[100]
                    mem[_10075 + 132] = 1
                    mem[_10075 + 196] = this.address
                    mem[_10075 + 228] = block.timestamp + 300
                    mem[_10075 + 164] = 160
                    mem[_10075 + 260] = mem[_10075]
                    idx = 0
                    while idx < 32 * mem[_10075]:
                        mem[_10075 + idx + 292] = mem[_10075 + idx + 32]
                        idx = idx + 32
                        continue 
                    require ext_code.size(address(('cd', 68)[0]))
                    call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                         gas gas_remaining wei
                        args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_10075 + 260 len (32 * mem[_10075]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_10075 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _10075 + ceil32(return_data.size) + 96
                    require return_data.size >= 32
                    _14279 = mem[_10075 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                    require mem[_10075 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                    require mem[_10075 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                    require mem[mem[_10075 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _10075 + 96] <= 4294967296 and mem[_10075 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_10075 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _10075 + 96]) + 32 <= return_data.size
                    mem[_10075 + ceil32(return_data.size) + 96] = mem[mem[_10075 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _10075 + 96]
                    _14790 = mem[_14279 + _10075 + 96]
                    idx = 0
                    while idx < 32 * _14790:
                        mem[_10075 + ceil32(return_data.size) + idx + 128] = mem[_14279 + _10075 + idx + 128]
                        idx = idx + 32
                        continue 
                    mem[64] = (32 * _14790) + _10075 + ceil32(return_data.size) + 128
                s = s + 1
                t = 1
                u = address(cd[((32 * s + 1) + cd[4] + 36)])
                continue 
            if s != ('cd', 36).length - 1:
                if not address(cd[((32 * s) + cd[68] + 36)]):
                    require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                    _6653 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                    require s < ('cd', 36).length
                    require s + 1 < ('cd', 36).length
                    require s < ('cd', 4).length
                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                        revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                    if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                        if not address(cd[((32 * s) + cd[36] + 36)]):
                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                            _10648 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_10648 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_10648 + 36] = 0
                            mem[_10648 + 68] = _6653
                            mem[_10648 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                            mem[_10648 + 132] = 128
                            mem[_10648 + 164] = mem[_10648]
                            idx = 0
                            while idx < mem[_10648]:
                                mem[_10648 + idx + 196] = mem[_10648 + idx + 32]
                                idx = idx + 32
                                continue 
                            if not mem[_10648] % 32:
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _6653, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10648 + 164 len mem[_10648] + 32]
                            else:
                                mem[floor32(mem[_10648]) + _10648 + 196] = mem[floor32(mem[_10648]) + _10648 + -(mem[_10648] % 32) + 228 len mem[_10648] % 32]
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _6653, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10648], mem[_10648 + 196 len floor32(mem[_10648]) + 32]
                        else:
                            _10649 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_10649 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_10649 + 36] = _6653
                            mem[_10649 + 68] = 0
                            mem[_10649 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                            mem[_10649 + 132] = 128
                            mem[_10649 + 164] = mem[_10649]
                            idx = 0
                            while idx < mem[_10649]:
                                mem[_10649 + idx + 196] = mem[_10649 + idx + 32]
                                idx = idx + 32
                                continue 
                            if not mem[_10649] % 32:
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _6653, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10649 + 164 len mem[_10649] + 32]
                            else:
                                mem[floor32(mem[_10649]) + _10649 + 196] = mem[floor32(mem[_10649]) + _10649 + -(mem[_10649] % 32) + 228 len mem[_10649] % 32]
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _6653, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10649], mem[_10649 + 196 len floor32(mem[_10649]) + 32]
                    else:
                        if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                            _10650 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_10650 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_10650 + 36] = 0
                            mem[_10650 + 68] = _6653
                            mem[_10650 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                            mem[_10650 + 132] = 128
                            mem[_10650 + 164] = mem[_10650]
                            idx = 0
                            while idx < mem[_10650]:
                                mem[_10650 + idx + 196] = mem[_10650 + idx + 32]
                                idx = idx + 32
                                continue 
                            if not mem[_10650] % 32:
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _6653, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10650 + 164 len mem[_10650] + 32]
                            else:
                                mem[floor32(mem[_10650]) + _10650 + 196] = mem[floor32(mem[_10650]) + _10650 + -(mem[_10650] % 32) + 228 len mem[_10650] % 32]
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _6653, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10650], mem[_10650 + 196 len floor32(mem[_10650]) + 32]
                        else:
                            _10651 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_10651 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_10651 + 36] = _6653
                            mem[_10651 + 68] = 0
                            mem[_10651 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                            mem[_10651 + 132] = 128
                            mem[_10651 + 164] = mem[_10651]
                            idx = 0
                            while idx < mem[_10651]:
                                mem[_10651 + idx + 196] = mem[_10651 + idx + 32]
                                idx = idx + 32
                                continue 
                            if not mem[_10651] % 32:
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _6653, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10651 + 164 len mem[_10651] + 32]
                            else:
                                mem[floor32(mem[_10651]) + _10651 + 196] = mem[floor32(mem[_10651]) + _10651 + -(mem[_10651] % 32) + 228 len mem[_10651] % 32]
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _6653, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10651], mem[_10651 + 196 len floor32(mem[_10651]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    s = s + 1
                    t = 0
                    u = address(cd[((32 * s + 1) + cd[4] + 36)])
                    continue 
                require s < ('cd', 68).length
                require s < ('cd', 36).length
                require s + 1 < ('cd', 36).length
                require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                _7531 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                mem[mem[64] + 4] = this.address
                mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                        gas gas_remaining wei
                       args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] >= _7531:
                    _9549 = mem[64]
                    mem[mem[64]] = 2
                    mem[64] = mem[64] + 96
                    require 0 < mem[_9549]
                    mem[_9549 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                    require 1 < mem[_9549]
                    mem[_9549 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                    mem[_9549 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_9549 + 100] = _7531
                    mem[_9549 + 132] = 1
                    mem[_9549 + 196] = this.address
                    mem[_9549 + 228] = block.timestamp + 300
                    mem[_9549 + 164] = 160
                    mem[_9549 + 260] = mem[_9549]
                    idx = 0
                    while idx < 32 * mem[_9549]:
                        mem[_9549 + idx + 292] = mem[_9549 + idx + 32]
                        idx = idx + 32
                        continue 
                    require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                    call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                         gas gas_remaining wei
                        args _7531, 1, 160, address(this.address), block.timestamp + 300, mem[_9549 + 260 len (32 * mem[_9549]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_9549 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _9549 + ceil32(return_data.size) + 96
                    require return_data.size >= 32
                    _14269 = mem[_9549 + 96 len 4], Mask(224, 32, _7531) >> 32
                    require mem[_9549 + 96 len 4], Mask(224, 32, _7531) >> 32 <= 4294967296
                    require mem[_9549 + 96 len 4], Mask(224, 32, _7531) >> 32 + 32 <= return_data.size
                    require mem[mem[_9549 + 96 len 4], Mask(224, 32, _7531) >> 32 + _9549 + 96] <= 4294967296 and mem[_9549 + 96 len 4], Mask(224, 32, _7531) >> 32 + (32 * mem[mem[_9549 + 96 len 4], Mask(224, 32, _7531) >> 32 + _9549 + 96]) + 32 <= return_data.size
                    mem[_9549 + ceil32(return_data.size) + 96] = mem[mem[_9549 + 96 len 4], Mask(224, 32, _7531) >> 32 + _9549 + 96]
                    _14785 = mem[_14269 + _9549 + 96]
                    idx = 0
                    while idx < 32 * _14785:
                        mem[_9549 + ceil32(return_data.size) + idx + 128] = mem[_14269 + _9549 + idx + 128]
                        idx = idx + 32
                        continue 
                    mem[64] = (32 * _14785) + _9549 + ceil32(return_data.size) + 128
                    s = s + 1
                    t = 1
                    u = address(cd[((32 * s + 1) + cd[4] + 36)])
                    continue 
                mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                mem[mem[64] + 36] = 10000 * _7531
                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _7531
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                _10647 = mem[64]
                mem[mem[64]] = 2
                mem[64] = mem[64] + 96
                require 0 < mem[_10647]
                mem[_10647 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                require 1 < mem[_10647]
                mem[_10647 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                mem[_10647 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                mem[_10647 + 100] = _7531
                mem[_10647 + 132] = 1
                mem[_10647 + 196] = this.address
                mem[_10647 + 228] = block.timestamp + 300
                mem[_10647 + 164] = 160
                mem[_10647 + 260] = mem[_10647]
                _11575 = mem[_10647]
                idx = 0
                while idx < 32 * mem[_10647]:
                    mem[_10647 + idx + 292] = mem[_10647 + idx + 32]
                    idx = idx + 32
                    continue 
                require ext_code.size(address(cd[((Mask(251, 0, mem[_10647]) * 32) + cd[68] + 36)]))
                call address(cd[((Mask(251, 0, mem[_10647]) * 32) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                     gas gas_remaining wei
                    args _7531, 1, 160, address(this.address), block.timestamp + 300, mem[_10647 + 260 len (32 * mem[_10647]) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[_10647 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = _10647 + ceil32(return_data.size) + 96
                require return_data.size >= 32
                _14271 = mem[_10647 + 96 len 4], Mask(224, 32, _7531) >> 32
                require mem[_10647 + 96 len 4], Mask(224, 32, _7531) >> 32 <= 4294967296
                require mem[_10647 + 96 len 4], Mask(224, 32, _7531) >> 32 + 32 <= return_data.size
                require mem[mem[_10647 + 96 len 4], Mask(224, 32, _7531) >> 32 + _10647 + 96] <= 4294967296 and mem[_10647 + 96 len 4], Mask(224, 32, _7531) >> 32 + (32 * mem[mem[_10647 + 96 len 4], Mask(224, 32, _7531) >> 32 + _10647 + 96]) + 32 <= return_data.size
                mem[_10647 + ceil32(return_data.size) + 96] = mem[mem[_10647 + 96 len 4], Mask(224, 32, _7531) >> 32 + _10647 + 96]
                _14786 = mem[_14271 + _10647 + 96]
                idx = 0
                while idx < 32 * _14786:
                    mem[_10647 + ceil32(return_data.size) + idx + 128] = mem[_14271 + _10647 + idx + 128]
                    idx = idx + 32
                    continue 
                mem[64] = (32 * _14786) + _10647 + ceil32(return_data.size) + 128
                idx = floor32(_11575) + 1
                t = 1
                u = address(cd[((32 * floor32(_11575) + 1) + cd[4] + 36)])
                continue 
            if not address(cd[((32 * s) + cd[68] + 36)]):
                require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                _6654 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                require s < ('cd', 36).length
                require 0 < ('cd', 36).length
                require s < ('cd', 4).length
                if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                    revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                if address(cd[((32 * s) + cd[36] + 36)]) < address(('cd', 36)[0]):
                    if not address(cd[((32 * s) + cd[36] + 36)]):
                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                        _10656 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_10656 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_10656 + 36] = 0
                        mem[_10656 + 68] = _6654
                        mem[_10656 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                        mem[_10656 + 132] = 128
                        mem[_10656 + 164] = mem[_10656]
                        idx = 0
                        while idx < mem[_10656]:
                            mem[_10656 + idx + 196] = mem[_10656 + idx + 32]
                            idx = idx + 32
                            continue 
                        if not mem[_10656] % 32:
                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _6654, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10656 + 164 len mem[_10656] + 32]
                        else:
                            mem[floor32(mem[_10656]) + _10656 + 196] = mem[floor32(mem[_10656]) + _10656 + -(mem[_10656] % 32) + 228 len mem[_10656] % 32]
                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _6654, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10656], mem[_10656 + 196 len floor32(mem[_10656]) + 32]
                    else:
                        _10657 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_10657 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_10657 + 36] = _6654
                        mem[_10657 + 68] = 0
                        mem[_10657 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                        mem[_10657 + 132] = 128
                        mem[_10657 + 164] = mem[_10657]
                        idx = 0
                        while idx < mem[_10657]:
                            mem[_10657 + idx + 196] = mem[_10657 + idx + 32]
                            idx = idx + 32
                            continue 
                        if not mem[_10657] % 32:
                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _6654, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10657 + 164 len mem[_10657] + 32]
                        else:
                            mem[floor32(mem[_10657]) + _10657 + 196] = mem[floor32(mem[_10657]) + _10657 + -(mem[_10657] % 32) + 228 len mem[_10657] % 32]
                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _6654, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10657], mem[_10657 + 196 len floor32(mem[_10657]) + 32]
                else:
                    if not address(('cd', 36)[0]):
                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                    if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                        _10658 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_10658 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_10658 + 36] = 0
                        mem[_10658 + 68] = _6654
                        mem[_10658 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                        mem[_10658 + 132] = 128
                        mem[_10658 + 164] = mem[_10658]
                        idx = 0
                        while idx < mem[_10658]:
                            mem[_10658 + idx + 196] = mem[_10658 + idx + 32]
                            idx = idx + 32
                            continue 
                        if not mem[_10658] % 32:
                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _6654, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10658 + 164 len mem[_10658] + 32]
                        else:
                            mem[floor32(mem[_10658]) + _10658 + 196] = mem[floor32(mem[_10658]) + _10658 + -(mem[_10658] % 32) + 228 len mem[_10658] % 32]
                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _6654, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10658], mem[_10658 + 196 len floor32(mem[_10658]) + 32]
                    else:
                        _10659 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_10659 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_10659 + 36] = _6654
                        mem[_10659 + 68] = 0
                        mem[_10659 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                        mem[_10659 + 132] = 128
                        mem[_10659 + 164] = mem[_10659]
                        idx = 0
                        while idx < mem[_10659]:
                            mem[_10659 + idx + 196] = mem[_10659 + idx + 32]
                            idx = idx + 32
                            continue 
                        if not mem[_10659] % 32:
                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _6654, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10659 + 164 len mem[_10659] + 32]
                        else:
                            mem[floor32(mem[_10659]) + _10659 + 196] = mem[floor32(mem[_10659]) + _10659 + -(mem[_10659] % 32) + 228 len mem[_10659] % 32]
                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _6654, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10659], mem[_10659 + 196 len floor32(mem[_10659]) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                s = s + 1
                t = 0
                u = address(cd[((32 * s + 1) + cd[4] + 36)])
                continue 
            require s < ('cd', 68).length
            require s < ('cd', 36).length
            require 0 < ('cd', 36).length
            require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
            _7532 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
            mem[mem[64] + 4] = this.address
            mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
            staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                    gas gas_remaining wei
                   args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] >= _7532:
                _9554 = mem[64]
                mem[mem[64]] = 2
                mem[64] = mem[64] + 96
                require 0 < mem[_9554]
                mem[_9554 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                require 1 < mem[_9554]
                mem[_9554 + 64] = address(('cd', 36)[0])
                mem[_9554 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                mem[_9554 + 100] = _7532
                mem[_9554 + 132] = 1
                mem[_9554 + 196] = this.address
                mem[_9554 + 228] = block.timestamp + 300
                mem[_9554 + 164] = 160
                mem[_9554 + 260] = mem[_9554]
                idx = 0
                while idx < 32 * mem[_9554]:
                    mem[_9554 + idx + 292] = mem[_9554 + idx + 32]
                    idx = idx + 32
                    continue 
                require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                     gas gas_remaining wei
                    args _7532, 1, 160, address(this.address), block.timestamp + 300, mem[_9554 + 260 len (32 * mem[_9554]) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[_9554 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = _9554 + ceil32(return_data.size) + 96
                require return_data.size >= 32
                _14273 = mem[_9554 + 96 len 4], Mask(224, 32, _7532) >> 32
                require mem[_9554 + 96 len 4], Mask(224, 32, _7532) >> 32 <= 4294967296
                require mem[_9554 + 96 len 4], Mask(224, 32, _7532) >> 32 + 32 <= return_data.size
                require mem[mem[_9554 + 96 len 4], Mask(224, 32, _7532) >> 32 + _9554 + 96] <= 4294967296 and mem[_9554 + 96 len 4], Mask(224, 32, _7532) >> 32 + (32 * mem[mem[_9554 + 96 len 4], Mask(224, 32, _7532) >> 32 + _9554 + 96]) + 32 <= return_data.size
                mem[_9554 + ceil32(return_data.size) + 96] = mem[mem[_9554 + 96 len 4], Mask(224, 32, _7532) >> 32 + _9554 + 96]
                _14787 = mem[_14273 + _9554 + 96]
                idx = 0
                while idx < 32 * _14787:
                    mem[_9554 + ceil32(return_data.size) + idx + 128] = mem[_14273 + _9554 + idx + 128]
                    idx = idx + 32
                    continue 
                mem[64] = (32 * _14787) + _9554 + ceil32(return_data.size) + 128
                s = s + 1
                t = 1
                u = address(cd[((32 * s + 1) + cd[4] + 36)])
                continue 
            mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
            mem[mem[64] + 36] = 10000 * _7532
            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
            call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _7532
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            _10655 = mem[64]
            mem[mem[64]] = 2
            mem[64] = mem[64] + 96
            require 0 < mem[_10655]
            mem[_10655 + 32] = address(cd[((32 * s) + cd[36] + 36)])
            require 1 < mem[_10655]
            mem[_10655 + 64] = address(('cd', 36)[0])
            mem[_10655 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
            mem[_10655 + 100] = _7532
            mem[_10655 + 132] = 1
            mem[_10655 + 196] = this.address
            mem[_10655 + 228] = block.timestamp + 300
            mem[_10655 + 164] = 160
            mem[_10655 + 260] = mem[_10655]
            _11587 = mem[_10655]
            idx = 0
            while idx < 32 * mem[_10655]:
                mem[_10655 + idx + 292] = mem[_10655 + idx + 32]
                idx = idx + 32
                continue 
            require ext_code.size(address(cd[((Mask(251, 0, mem[_10655]) * 32) + cd[68] + 36)]))
            call address(cd[((Mask(251, 0, mem[_10655]) * 32) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                 gas gas_remaining wei
                args _7532, 1, 160, address(this.address), block.timestamp + 300, mem[_10655 + 260 len (32 * mem[_10655]) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[_10655 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = _10655 + ceil32(return_data.size) + 96
            require return_data.size >= 32
            _14275 = mem[_10655 + 96 len 4], Mask(224, 32, _7532) >> 32
            require mem[_10655 + 96 len 4], Mask(224, 32, _7532) >> 32 <= 4294967296
            require mem[_10655 + 96 len 4], Mask(224, 32, _7532) >> 32 + 32 <= return_data.size
            require mem[mem[_10655 + 96 len 4], Mask(224, 32, _7532) >> 32 + _10655 + 96] <= 4294967296 and mem[_10655 + 96 len 4], Mask(224, 32, _7532) >> 32 + (32 * mem[mem[_10655 + 96 len 4], Mask(224, 32, _7532) >> 32 + _10655 + 96]) + 32 <= return_data.size
            mem[_10655 + ceil32(return_data.size) + 96] = mem[mem[_10655 + 96 len 4], Mask(224, 32, _7532) >> 32 + _10655 + 96]
            _14788 = mem[_14275 + _10655 + 96]
            idx = 0
            while idx < 32 * _14788:
                mem[_10655 + ceil32(return_data.size) + idx + 128] = mem[_14275 + _10655 + idx + 128]
                idx = idx + 32
                continue 
            mem[64] = (32 * _14788) + _10655 + ceil32(return_data.size) + 128
            idx = floor32(_11587) + 1
            t = 1
            u = address(cd[((32 * floor32(_11587) + 1) + cd[4] + 36)])
            continue 
    else:
        mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192 len 32 * ('cd', 36).length] = call.data[calldata.size len 32 * ('cd', 36).length]
        idx = 0
        while idx < ('cd', 36).length:
            require idx < ('cd', 4).length
            require idx < ('cd', 36).length
            if not idx:
                _2097 = mem[(32 * idx) + (32 * ('cd', 4).length) + 160]
                require idx + 1 < ('cd', 36).length
                _2110 = mem[(32 * idx + 1) + (32 * ('cd', 4).length) + 160]
                require ext_code.size(mem[(32 * idx) + 140 len 20])
                staticcall mem[(32 * idx) + 140 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 192 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                if cd[100] <= 0:
                    revert with 0, 
                                32,
                                43,
                                0x59556e697377617056324c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 303 len 21]
                if mem[(32 * idx) + (32 * ('cd', 4).length) + 172 len 20] < mem[(32 * idx + 1) + (32 * ('cd', 4).length) + 172 len 20]:
                    if address(_2097) == address(_2097):
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                        if 997 * cd[100] / 997 != cd[100]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[32]):
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[100]) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[100])
                            require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[100])
                        else:
                            require Mask(112, 0, ext_call.return_data[32])
                            if 997 * cd[100] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * cd[100]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[100]) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[100])
                            require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * cd[100] * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[100])
                    else:
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                        if 997 * cd[100] / 997 != cd[100]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[100]) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[100])
                            require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[100])
                        else:
                            require Mask(112, 0, ext_call.return_data[0])
                            if 997 * cd[100] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * cd[100]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[100]) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[100])
                            require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * cd[100] * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[100])
                else:
                    if address(_2097) == address(_2110):
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                        if 997 * cd[100] / 997 != cd[100]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[32]):
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[100]) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[100])
                            require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[100])
                        else:
                            require Mask(112, 0, ext_call.return_data[32])
                            if 997 * cd[100] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * cd[100]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[100]) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[100])
                            require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * cd[100] * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * cd[100])
                    else:
                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                            revert with 0, 
                                        32,
                                        40,
                                        0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                        mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                        if 997 * cd[100] / 997 != cd[100]:
                            revert with 0, 'ds-math-mul-overflow'
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[100]) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[100])
                            require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[100])
                        else:
                            require Mask(112, 0, ext_call.return_data[0])
                            if 997 * cd[100] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * cd[100]:
                                revert with 0, 'ds-math-mul-overflow'
                            if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-mul-overflow'
                            if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[100]) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 'ds-math-add-overflow'
                            require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[100])
                            require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * cd[100] * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * cd[100])
            else:
                if idx == ('cd', 36).length - 1:
                    _2108 = mem[(32 * idx) + (32 * ('cd', 4).length) + 160]
                    require 0 < ('cd', 36).length
                    require idx - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                    _2124 = mem[(32 * idx - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                    require ext_code.size(mem[(32 * idx) + 140 len 20])
                    staticcall mem[(32 * idx) + 140 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 192 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    if _2124 <= 0:
                        revert with 0, 
                                    32,
                                    43,
                                    0x59556e697377617056324c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                    mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 303 len 21]
                    if mem[(32 * idx) + (32 * ('cd', 4).length) + 172 len 20] < mem[(32 * ('cd', 4).length) + 172 len 20]:
                        if address(_2108) == address(_2108):
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if 997 * _2124 / 997 != _2124:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2124) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2124)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2124)
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * _2124 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * _2124:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2124) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2124)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * _2124 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2124)
                        else:
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if 997 * _2124 / 997 != _2124:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2124) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2124)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2124)
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if 997 * _2124 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * _2124:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2124) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2124)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * _2124 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2124)
                    else:
                        if address(_2108) == mem[(32 * ('cd', 4).length) + 172 len 20]:
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if 997 * _2124 / 997 != _2124:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2124) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2124)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2124)
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * _2124 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * _2124:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2124) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2124)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * _2124 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2124)
                        else:
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if 997 * _2124 / 997 != _2124:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2124) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2124)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2124)
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if 997 * _2124 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * _2124:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2124) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2124)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * _2124 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2124)
                else:
                    _2106 = mem[(32 * idx) + (32 * ('cd', 4).length) + 160]
                    require idx + 1 < ('cd', 36).length
                    _2117 = mem[(32 * idx + 1) + (32 * ('cd', 4).length) + 160]
                    require idx - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                    _2123 = mem[(32 * idx - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                    require ext_code.size(mem[(32 * idx) + 140 len 20])
                    staticcall mem[(32 * idx) + 140 len 20].getReserves() with:
                            gas gas_remaining wei
                    mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 192 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    if _2123 <= 0:
                        revert with 0, 
                                    32,
                                    43,
                                    0x59556e697377617056324c6962726172793a20494e53554646494349454e545f494e5055545f414d4f554e,
                                    mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 303 len 21]
                    if mem[(32 * idx) + (32 * ('cd', 4).length) + 172 len 20] < mem[(32 * idx + 1) + (32 * ('cd', 4).length) + 172 len 20]:
                        if address(_2106) == address(_2106):
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if 997 * _2123 / 997 != _2123:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2123) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2123)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2123)
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * _2123 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * _2123:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2123) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2123)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * _2123 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2123)
                        else:
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if 997 * _2123 / 997 != _2123:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2123) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2123)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2123)
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if 997 * _2123 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * _2123:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2123) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2123)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * _2123 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2123)
                    else:
                        if address(_2106) == address(_2117):
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if 997 * _2123 / 997 != _2123:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[32]):
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2123) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2123)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2123)
                            else:
                                require Mask(112, 0, ext_call.return_data[32])
                                if 997 * _2123 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 997 * _2123:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) / 1000 != Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2123) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2123)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * _2123 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * _2123)
                        else:
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 
                                            32,
                                            40,
                                            0x53556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                            mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 300 len 24]
                            if 997 * _2123 / 997 != _2123:
                                revert with 0, 'ds-math-mul-overflow'
                            if not Mask(112, 0, ext_call.return_data[0]):
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2123) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2123)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 0 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2123)
                            else:
                                require Mask(112, 0, ext_call.return_data[0])
                                if 997 * _2123 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 997 * _2123:
                                    revert with 0, 'ds-math-mul-overflow'
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) / 1000 != Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-mul-overflow'
                                if (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2123) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 'ds-math-add-overflow'
                                require (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2123)
                                require idx < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                mem[(32 * idx) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192] = 997 * _2123 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * _2123)
            idx = idx + 1
            continue 
        require 0 < ('cd', 36).length
        mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 196] = this.address
        require ext_code.size(address(('cd', 36)[0]))
        staticcall address(('cd', 36)[0]).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[(32 * ('cd', 4).length) + (64 * ('cd', 36).length) + 192] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require 0 < ('cd', 68).length
        s = 0
        t = not address(('cd', 68)[0])
        u = 0
        while s < ('cd', 36).length:
            if s == ('cd', 36).length - 1:
                require s < ('cd', 68).length
                if not t:
                    if not s:
                        if not address(cd[((32 * s) + cd[68] + 36)]):
                            require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            _4540 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                            require s < ('cd', 36).length
                            require s + 1 < ('cd', 36).length
                            require s < ('cd', 4).length
                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                            if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                if not address(cd[((32 * s) + cd[36] + 36)]):
                                    revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                    _5075 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_5075 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_5075 + 36] = 0
                                    mem[_5075 + 68] = _4540
                                    mem[_5075 + 100] = this.address
                                    mem[_5075 + 132] = 128
                                    mem[_5075 + 164] = mem[_5075]
                                    idx = 0
                                    while idx < mem[_5075]:
                                        mem[_5075 + idx + 196] = mem[_5075 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    if not mem[_5075] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _4540, address(this.address), 128, mem[_5075 + 164 len mem[_5075] + 32]
                                    else:
                                        mem[floor32(mem[_5075]) + _5075 + 196] = mem[floor32(mem[_5075]) + _5075 + -(mem[_5075] % 32) + 228 len mem[_5075] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _4540, address(this.address), 128, mem[_5075], mem[_5075 + 196 len floor32(mem[_5075]) + 32]
                                else:
                                    _5076 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_5076 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_5076 + 36] = _4540
                                    mem[_5076 + 68] = 0
                                    mem[_5076 + 100] = this.address
                                    mem[_5076 + 132] = 128
                                    mem[_5076 + 164] = mem[_5076]
                                    idx = 0
                                    while idx < mem[_5076]:
                                        mem[_5076 + idx + 196] = mem[_5076 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    if not mem[_5076] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _4540, 0, address(this.address), 128, mem[_5076 + 164 len mem[_5076] + 32]
                                    else:
                                        mem[floor32(mem[_5076]) + _5076 + 196] = mem[floor32(mem[_5076]) + _5076 + -(mem[_5076] % 32) + 228 len mem[_5076] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _4540, 0, address(this.address), 128, mem[_5076], mem[_5076 + 196 len floor32(mem[_5076]) + 32]
                            else:
                                if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                    revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                    _5077 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_5077 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_5077 + 36] = 0
                                    mem[_5077 + 68] = _4540
                                    mem[_5077 + 100] = this.address
                                    mem[_5077 + 132] = 128
                                    mem[_5077 + 164] = mem[_5077]
                                    idx = 0
                                    while idx < mem[_5077]:
                                        mem[_5077 + idx + 196] = mem[_5077 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    if not mem[_5077] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _4540, address(this.address), 128, mem[_5077 + 164 len mem[_5077] + 32]
                                    else:
                                        mem[floor32(mem[_5077]) + _5077 + 196] = mem[floor32(mem[_5077]) + _5077 + -(mem[_5077] % 32) + 228 len mem[_5077] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _4540, address(this.address), 128, mem[_5077], mem[_5077 + 196 len floor32(mem[_5077]) + 32]
                                else:
                                    _5078 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_5078 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_5078 + 36] = _4540
                                    mem[_5078 + 68] = 0
                                    mem[_5078 + 100] = this.address
                                    mem[_5078 + 132] = 128
                                    mem[_5078 + 164] = mem[_5078]
                                    idx = 0
                                    while idx < mem[_5078]:
                                        mem[_5078 + idx + 196] = mem[_5078 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    if not mem[_5078] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _4540, 0, address(this.address), 128, mem[_5078 + 164 len mem[_5078] + 32]
                                    else:
                                        mem[floor32(mem[_5078]) + _5078 + 196] = mem[floor32(mem[_5078]) + _5078 + -(mem[_5078] % 32) + 228 len mem[_5078] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _4540, 0, address(this.address), 128, mem[_5078], mem[_5078 + 196 len floor32(mem[_5078]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            s = s + 1
                            t = 0
                            u = this.address
                            continue 
                        require 0 < ('cd', 68).length
                        require s < ('cd', 36).length
                        require s + 1 < ('cd', 36).length
                        mem[mem[64] + 4] = this.address
                        mem[mem[64] + 36] = address(('cd', 68)[0])
                        require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                        staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                gas gas_remaining wei
                               args address(this.address), address(('cd', 68)[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= cd[100]:
                            _4728 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            require 0 < mem[_4728]
                            mem[_4728 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                            require 1 < mem[_4728]
                            mem[_4728 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                            mem[_4728 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_4728 + 100] = cd[100]
                            mem[_4728 + 132] = 1
                            mem[_4728 + 196] = this.address
                            mem[_4728 + 228] = block.timestamp + 300
                            mem[_4728 + 164] = 160
                            mem[_4728 + 260] = mem[_4728]
                            idx = 0
                            while idx < 32 * mem[_4728]:
                                mem[_4728 + idx + 292] = mem[_4728 + idx + 32]
                                idx = idx + 32
                                continue 
                            require ext_code.size(address(('cd', 68)[0]))
                            call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_4728 + 260 len (32 * mem[_4728]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_4728 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _4728 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _14349 = mem[_4728 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                            require mem[_4728 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                            require mem[_4728 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                            require mem[mem[_4728 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _4728 + 96] <= 4294967296 and mem[_4728 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_4728 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _4728 + 96]) + 32 <= return_data.size
                            mem[_4728 + ceil32(return_data.size) + 96] = mem[mem[_4728 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _4728 + 96]
                            _14825 = mem[_14349 + _4728 + 96]
                            idx = 0
                            while idx < 32 * _14825:
                                mem[_4728 + ceil32(return_data.size) + idx + 128] = mem[_14349 + _4728 + idx + 128]
                                idx = idx + 32
                                continue 
                            mem[64] = (32 * _14825) + _4728 + ceil32(return_data.size) + 128
                        else:
                            mem[mem[64] + 4] = address(('cd', 68)[0])
                            mem[mem[64] + 36] = 10000 * cd[100]
                            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                            call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(('cd', 68)[0]), 10000 * cd[100]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            _4990 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            require 0 < mem[_4990]
                            mem[_4990 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                            require 1 < mem[_4990]
                            mem[_4990 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                            mem[_4990 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_4990 + 100] = cd[100]
                            mem[_4990 + 132] = 1
                            mem[_4990 + 196] = this.address
                            mem[_4990 + 228] = block.timestamp + 300
                            mem[_4990 + 164] = 160
                            mem[_4990 + 260] = mem[_4990]
                            idx = 0
                            while idx < 32 * mem[_4990]:
                                mem[_4990 + idx + 292] = mem[_4990 + idx + 32]
                                idx = idx + 32
                                continue 
                            require ext_code.size(address(('cd', 68)[0]))
                            call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_4990 + 260 len (32 * mem[_4990]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_4990 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _4990 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _14351 = mem[_4990 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                            require mem[_4990 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                            require mem[_4990 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                            require mem[mem[_4990 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _4990 + 96] <= 4294967296 and mem[_4990 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_4990 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _4990 + 96]) + 32 <= return_data.size
                            mem[_4990 + ceil32(return_data.size) + 96] = mem[mem[_4990 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _4990 + 96]
                            _14826 = mem[_14351 + _4990 + 96]
                            idx = 0
                            while idx < 32 * _14826:
                                mem[_4990 + ceil32(return_data.size) + idx + 128] = mem[_14351 + _4990 + idx + 128]
                                idx = idx + 32
                                continue 
                            mem[64] = (32 * _14826) + _4990 + ceil32(return_data.size) + 128
                    else:
                        if s != ('cd', 36).length - 1:
                            if not address(cd[((32 * s) + cd[68] + 36)]):
                                require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                _4546 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                require s < ('cd', 36).length
                                require s + 1 < ('cd', 36).length
                                require s < ('cd', 4).length
                                if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                    revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                    if not address(cd[((32 * s) + cd[36] + 36)]):
                                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                        _5201 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_5201 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_5201 + 36] = 0
                                        mem[_5201 + 68] = _4546
                                        mem[_5201 + 100] = this.address
                                        mem[_5201 + 132] = 128
                                        mem[_5201 + 164] = mem[_5201]
                                        idx = 0
                                        while idx < mem[_5201]:
                                            mem[_5201 + idx + 196] = mem[_5201 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_5201] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4546, address(this.address), 128, mem[_5201 + 164 len mem[_5201] + 32]
                                        else:
                                            mem[floor32(mem[_5201]) + _5201 + 196] = mem[floor32(mem[_5201]) + _5201 + -(mem[_5201] % 32) + 228 len mem[_5201] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4546, address(this.address), 128, mem[_5201], mem[_5201 + 196 len floor32(mem[_5201]) + 32]
                                    else:
                                        _5202 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_5202 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_5202 + 36] = _4546
                                        mem[_5202 + 68] = 0
                                        mem[_5202 + 100] = this.address
                                        mem[_5202 + 132] = 128
                                        mem[_5202 + 164] = mem[_5202]
                                        idx = 0
                                        while idx < mem[_5202]:
                                            mem[_5202 + idx + 196] = mem[_5202 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_5202] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4546, 0, address(this.address), 128, mem[_5202 + 164 len mem[_5202] + 32]
                                        else:
                                            mem[floor32(mem[_5202]) + _5202 + 196] = mem[floor32(mem[_5202]) + _5202 + -(mem[_5202] % 32) + 228 len mem[_5202] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4546, 0, address(this.address), 128, mem[_5202], mem[_5202 + 196 len floor32(mem[_5202]) + 32]
                                else:
                                    if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        _5203 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_5203 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_5203 + 36] = 0
                                        mem[_5203 + 68] = _4546
                                        mem[_5203 + 100] = this.address
                                        mem[_5203 + 132] = 128
                                        mem[_5203 + 164] = mem[_5203]
                                        idx = 0
                                        while idx < mem[_5203]:
                                            mem[_5203 + idx + 196] = mem[_5203 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_5203] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4546, address(this.address), 128, mem[_5203 + 164 len mem[_5203] + 32]
                                        else:
                                            mem[floor32(mem[_5203]) + _5203 + 196] = mem[floor32(mem[_5203]) + _5203 + -(mem[_5203] % 32) + 228 len mem[_5203] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4546, address(this.address), 128, mem[_5203], mem[_5203 + 196 len floor32(mem[_5203]) + 32]
                                    else:
                                        _5204 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_5204 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_5204 + 36] = _4546
                                        mem[_5204 + 68] = 0
                                        mem[_5204 + 100] = this.address
                                        mem[_5204 + 132] = 128
                                        mem[_5204 + 164] = mem[_5204]
                                        idx = 0
                                        while idx < mem[_5204]:
                                            mem[_5204 + idx + 196] = mem[_5204 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_5204] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4546, 0, address(this.address), 128, mem[_5204 + 164 len mem[_5204] + 32]
                                        else:
                                            mem[floor32(mem[_5204]) + _5204 + 196] = mem[floor32(mem[_5204]) + _5204 + -(mem[_5204] % 32) + 228 len mem[_5204] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4546, 0, address(this.address), 128, mem[_5204], mem[_5204 + 196 len floor32(mem[_5204]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                s = s + 1
                                t = 0
                                u = this.address
                                continue 
                            require s < ('cd', 68).length
                            require s < ('cd', 36).length
                            require s + 1 < ('cd', 36).length
                            require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            _4589 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                            mem[mem[64] + 4] = this.address
                            mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                            staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                    gas gas_remaining wei
                                   args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= _4589:
                                _4839 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                require 0 < mem[_4839]
                                mem[_4839 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                require 1 < mem[_4839]
                                mem[_4839 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                mem[_4839 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_4839 + 100] = _4589
                                mem[_4839 + 132] = 1
                                mem[_4839 + 196] = this.address
                                mem[_4839 + 228] = block.timestamp + 300
                                mem[_4839 + 164] = 160
                                mem[_4839 + 260] = mem[_4839]
                                idx = 0
                                while idx < 32 * mem[_4839]:
                                    mem[_4839 + idx + 292] = mem[_4839 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _4589, 1, 160, address(this.address), block.timestamp + 300, mem[_4839 + 260 len (32 * mem[_4839]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_4839 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _4839 + ceil32(return_data.size) + 96
                                require return_data.size >= 32
                                _14341 = mem[_4839 + 96 len 4], Mask(224, 32, _4589) >> 32
                                require mem[_4839 + 96 len 4], Mask(224, 32, _4589) >> 32 <= 4294967296
                                require mem[_4839 + 96 len 4], Mask(224, 32, _4589) >> 32 + 32 <= return_data.size
                                require mem[mem[_4839 + 96 len 4], Mask(224, 32, _4589) >> 32 + _4839 + 96] <= 4294967296 and mem[_4839 + 96 len 4], Mask(224, 32, _4589) >> 32 + (32 * mem[mem[_4839 + 96 len 4], Mask(224, 32, _4589) >> 32 + _4839 + 96]) + 32 <= return_data.size
                                mem[_4839 + ceil32(return_data.size) + 96] = mem[mem[_4839 + 96 len 4], Mask(224, 32, _4589) >> 32 + _4839 + 96]
                                _14821 = mem[_14341 + _4839 + 96]
                                idx = 0
                                while idx < 32 * _14821:
                                    mem[_4839 + ceil32(return_data.size) + idx + 128] = mem[_14341 + _4839 + idx + 128]
                                    idx = idx + 32
                                    continue 
                                mem[64] = (32 * _14821) + _4839 + ceil32(return_data.size) + 128
                            else:
                                mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                mem[mem[64] + 36] = 10000 * _4589
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _4589
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _5200 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                require 0 < mem[_5200]
                                mem[_5200 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                require 1 < mem[_5200]
                                mem[_5200 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                mem[_5200 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_5200 + 100] = _4589
                                mem[_5200 + 132] = 1
                                mem[_5200 + 196] = this.address
                                mem[_5200 + 228] = block.timestamp + 300
                                mem[_5200 + 164] = 160
                                mem[_5200 + 260] = mem[_5200]
                                idx = 0
                                while idx < 32 * mem[_5200]:
                                    mem[_5200 + idx + 292] = mem[_5200 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _4589, 1, 160, address(this.address), block.timestamp + 300, mem[_5200 + 260 len (32 * mem[_5200]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_5200 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _5200 + ceil32(return_data.size) + 96
                                require return_data.size >= 32
                                _14343 = mem[_5200 + 96 len 4], Mask(224, 32, _4589) >> 32
                                require mem[_5200 + 96 len 4], Mask(224, 32, _4589) >> 32 <= 4294967296
                                require mem[_5200 + 96 len 4], Mask(224, 32, _4589) >> 32 + 32 <= return_data.size
                                require mem[mem[_5200 + 96 len 4], Mask(224, 32, _4589) >> 32 + _5200 + 96] <= 4294967296 and mem[_5200 + 96 len 4], Mask(224, 32, _4589) >> 32 + (32 * mem[mem[_5200 + 96 len 4], Mask(224, 32, _4589) >> 32 + _5200 + 96]) + 32 <= return_data.size
                                mem[_5200 + ceil32(return_data.size) + 96] = mem[mem[_5200 + 96 len 4], Mask(224, 32, _4589) >> 32 + _5200 + 96]
                                _14822 = mem[_14343 + _5200 + 96]
                                idx = 0
                                while idx < 32 * _14822:
                                    mem[_5200 + ceil32(return_data.size) + idx + 128] = mem[_14343 + _5200 + idx + 128]
                                    idx = idx + 32
                                    continue 
                                mem[64] = (32 * _14822) + _5200 + ceil32(return_data.size) + 128
                        else:
                            if not address(cd[((32 * s) + cd[68] + 36)]):
                                require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                _4547 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                require s < ('cd', 36).length
                                require 0 < ('cd', 36).length
                                require s < ('cd', 4).length
                                if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                    revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                if address(cd[((32 * s) + cd[36] + 36)]) < address(('cd', 36)[0]):
                                    if not address(cd[((32 * s) + cd[36] + 36)]):
                                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                        _5209 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_5209 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_5209 + 36] = 0
                                        mem[_5209 + 68] = _4547
                                        mem[_5209 + 100] = this.address
                                        mem[_5209 + 132] = 128
                                        mem[_5209 + 164] = mem[_5209]
                                        idx = 0
                                        while idx < mem[_5209]:
                                            mem[_5209 + idx + 196] = mem[_5209 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_5209] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4547, address(this.address), 128, mem[_5209 + 164 len mem[_5209] + 32]
                                        else:
                                            mem[floor32(mem[_5209]) + _5209 + 196] = mem[floor32(mem[_5209]) + _5209 + -(mem[_5209] % 32) + 228 len mem[_5209] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4547, address(this.address), 128, mem[_5209], mem[_5209 + 196 len floor32(mem[_5209]) + 32]
                                    else:
                                        _5210 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_5210 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_5210 + 36] = _4547
                                        mem[_5210 + 68] = 0
                                        mem[_5210 + 100] = this.address
                                        mem[_5210 + 132] = 128
                                        mem[_5210 + 164] = mem[_5210]
                                        idx = 0
                                        while idx < mem[_5210]:
                                            mem[_5210 + idx + 196] = mem[_5210 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_5210] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4547, 0, address(this.address), 128, mem[_5210 + 164 len mem[_5210] + 32]
                                        else:
                                            mem[floor32(mem[_5210]) + _5210 + 196] = mem[floor32(mem[_5210]) + _5210 + -(mem[_5210] % 32) + 228 len mem[_5210] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4547, 0, address(this.address), 128, mem[_5210], mem[_5210 + 196 len floor32(mem[_5210]) + 32]
                                else:
                                    if not address(('cd', 36)[0]):
                                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                        _5211 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_5211 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_5211 + 36] = 0
                                        mem[_5211 + 68] = _4547
                                        mem[_5211 + 100] = this.address
                                        mem[_5211 + 132] = 128
                                        mem[_5211 + 164] = mem[_5211]
                                        idx = 0
                                        while idx < mem[_5211]:
                                            mem[_5211 + idx + 196] = mem[_5211 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_5211] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4547, address(this.address), 128, mem[_5211 + 164 len mem[_5211] + 32]
                                        else:
                                            mem[floor32(mem[_5211]) + _5211 + 196] = mem[floor32(mem[_5211]) + _5211 + -(mem[_5211] % 32) + 228 len mem[_5211] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4547, address(this.address), 128, mem[_5211], mem[_5211 + 196 len floor32(mem[_5211]) + 32]
                                    else:
                                        _5212 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_5212 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_5212 + 36] = _4547
                                        mem[_5212 + 68] = 0
                                        mem[_5212 + 100] = this.address
                                        mem[_5212 + 132] = 128
                                        mem[_5212 + 164] = mem[_5212]
                                        idx = 0
                                        while idx < mem[_5212]:
                                            mem[_5212 + idx + 196] = mem[_5212 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_5212] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4547, 0, address(this.address), 128, mem[_5212 + 164 len mem[_5212] + 32]
                                        else:
                                            mem[floor32(mem[_5212]) + _5212 + 196] = mem[floor32(mem[_5212]) + _5212 + -(mem[_5212] % 32) + 228 len mem[_5212] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4547, 0, address(this.address), 128, mem[_5212], mem[_5212 + 196 len floor32(mem[_5212]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                s = s + 1
                                t = 0
                                u = this.address
                                continue 
                            require s < ('cd', 68).length
                            require s < ('cd', 36).length
                            require 0 < ('cd', 36).length
                            require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            _4590 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                            mem[mem[64] + 4] = this.address
                            mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                            staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                    gas gas_remaining wei
                                   args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= _4590:
                                _4844 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                require 0 < mem[_4844]
                                mem[_4844 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                require 1 < mem[_4844]
                                mem[_4844 + 64] = address(('cd', 36)[0])
                                mem[_4844 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_4844 + 100] = _4590
                                mem[_4844 + 132] = 1
                                mem[_4844 + 196] = this.address
                                mem[_4844 + 228] = block.timestamp + 300
                                mem[_4844 + 164] = 160
                                mem[_4844 + 260] = mem[_4844]
                                idx = 0
                                while idx < 32 * mem[_4844]:
                                    mem[_4844 + idx + 292] = mem[_4844 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _4590, 1, 160, address(this.address), block.timestamp + 300, mem[_4844 + 260 len (32 * mem[_4844]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_4844 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _4844 + ceil32(return_data.size) + 96
                                require return_data.size >= 32
                                _14345 = mem[_4844 + 96 len 4], Mask(224, 32, _4590) >> 32
                                require mem[_4844 + 96 len 4], Mask(224, 32, _4590) >> 32 <= 4294967296
                                require mem[_4844 + 96 len 4], Mask(224, 32, _4590) >> 32 + 32 <= return_data.size
                                require mem[mem[_4844 + 96 len 4], Mask(224, 32, _4590) >> 32 + _4844 + 96] <= 4294967296 and mem[_4844 + 96 len 4], Mask(224, 32, _4590) >> 32 + (32 * mem[mem[_4844 + 96 len 4], Mask(224, 32, _4590) >> 32 + _4844 + 96]) + 32 <= return_data.size
                                mem[_4844 + ceil32(return_data.size) + 96] = mem[mem[_4844 + 96 len 4], Mask(224, 32, _4590) >> 32 + _4844 + 96]
                                _14823 = mem[_14345 + _4844 + 96]
                                idx = 0
                                while idx < 32 * _14823:
                                    mem[_4844 + ceil32(return_data.size) + idx + 128] = mem[_14345 + _4844 + idx + 128]
                                    idx = idx + 32
                                    continue 
                                mem[64] = (32 * _14823) + _4844 + ceil32(return_data.size) + 128
                            else:
                                mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                mem[mem[64] + 36] = 10000 * _4590
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _4590
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _5208 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                require 0 < mem[_5208]
                                mem[_5208 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                require 1 < mem[_5208]
                                mem[_5208 + 64] = address(('cd', 36)[0])
                                mem[_5208 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_5208 + 100] = _4590
                                mem[_5208 + 132] = 1
                                mem[_5208 + 196] = this.address
                                mem[_5208 + 228] = block.timestamp + 300
                                mem[_5208 + 164] = 160
                                mem[_5208 + 260] = mem[_5208]
                                idx = 0
                                while idx < 32 * mem[_5208]:
                                    mem[_5208 + idx + 292] = mem[_5208 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _4590, 1, 160, address(this.address), block.timestamp + 300, mem[_5208 + 260 len (32 * mem[_5208]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_5208 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _5208 + ceil32(return_data.size) + 96
                                require return_data.size >= 32
                                _14347 = mem[_5208 + 96 len 4], Mask(224, 32, _4590) >> 32
                                require mem[_5208 + 96 len 4], Mask(224, 32, _4590) >> 32 <= 4294967296
                                require mem[_5208 + 96 len 4], Mask(224, 32, _4590) >> 32 + 32 <= return_data.size
                                require mem[mem[_5208 + 96 len 4], Mask(224, 32, _4590) >> 32 + _5208 + 96] <= 4294967296 and mem[_5208 + 96 len 4], Mask(224, 32, _4590) >> 32 + (32 * mem[mem[_5208 + 96 len 4], Mask(224, 32, _4590) >> 32 + _5208 + 96]) + 32 <= return_data.size
                                mem[_5208 + ceil32(return_data.size) + 96] = mem[mem[_5208 + 96 len 4], Mask(224, 32, _4590) >> 32 + _5208 + 96]
                                _14824 = mem[_14347 + _5208 + 96]
                                idx = 0
                                while idx < 32 * _14824:
                                    mem[_5208 + ceil32(return_data.size) + idx + 128] = mem[_14347 + _5208 + idx + 128]
                                    idx = idx + 32
                                    continue 
                                mem[64] = (32 * _14824) + _5208 + ceil32(return_data.size) + 128
                else:
                    if address(cd[((32 * s) + cd[68] + 36)]):
                        require s < ('cd', 68).length
                        if not s:
                            if not address(cd[((32 * s) + cd[68] + 36)]):
                                require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                _4593 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                require s < ('cd', 36).length
                                require s + 1 < ('cd', 36).length
                                require s < ('cd', 4).length
                                if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                    revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                    if not address(cd[((32 * s) + cd[36] + 36)]):
                                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                        _5684 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_5684 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_5684 + 36] = 0
                                        mem[_5684 + 68] = _4593
                                        mem[_5684 + 100] = this.address
                                        mem[_5684 + 132] = 128
                                        mem[_5684 + 164] = mem[_5684]
                                        idx = 0
                                        while idx < mem[_5684]:
                                            mem[_5684 + idx + 196] = mem[_5684 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_5684] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4593, address(this.address), 128, mem[_5684 + 164 len mem[_5684] + 32]
                                        else:
                                            mem[floor32(mem[_5684]) + _5684 + 196] = mem[floor32(mem[_5684]) + _5684 + -(mem[_5684] % 32) + 228 len mem[_5684] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4593, address(this.address), 128, mem[_5684], mem[_5684 + 196 len floor32(mem[_5684]) + 32]
                                    else:
                                        _5685 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_5685 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_5685 + 36] = _4593
                                        mem[_5685 + 68] = 0
                                        mem[_5685 + 100] = this.address
                                        mem[_5685 + 132] = 128
                                        mem[_5685 + 164] = mem[_5685]
                                        idx = 0
                                        while idx < mem[_5685]:
                                            mem[_5685 + idx + 196] = mem[_5685 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_5685] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4593, 0, address(this.address), 128, mem[_5685 + 164 len mem[_5685] + 32]
                                        else:
                                            mem[floor32(mem[_5685]) + _5685 + 196] = mem[floor32(mem[_5685]) + _5685 + -(mem[_5685] % 32) + 228 len mem[_5685] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4593, 0, address(this.address), 128, mem[_5685], mem[_5685 + 196 len floor32(mem[_5685]) + 32]
                                else:
                                    if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        _5686 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_5686 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_5686 + 36] = 0
                                        mem[_5686 + 68] = _4593
                                        mem[_5686 + 100] = this.address
                                        mem[_5686 + 132] = 128
                                        mem[_5686 + 164] = mem[_5686]
                                        idx = 0
                                        while idx < mem[_5686]:
                                            mem[_5686 + idx + 196] = mem[_5686 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_5686] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4593, address(this.address), 128, mem[_5686 + 164 len mem[_5686] + 32]
                                        else:
                                            mem[floor32(mem[_5686]) + _5686 + 196] = mem[floor32(mem[_5686]) + _5686 + -(mem[_5686] % 32) + 228 len mem[_5686] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4593, address(this.address), 128, mem[_5686], mem[_5686 + 196 len floor32(mem[_5686]) + 32]
                                    else:
                                        _5687 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_5687 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_5687 + 36] = _4593
                                        mem[_5687 + 68] = 0
                                        mem[_5687 + 100] = this.address
                                        mem[_5687 + 132] = 128
                                        mem[_5687 + 164] = mem[_5687]
                                        idx = 0
                                        while idx < mem[_5687]:
                                            mem[_5687 + idx + 196] = mem[_5687 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_5687] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4593, 0, address(this.address), 128, mem[_5687 + 164 len mem[_5687] + 32]
                                        else:
                                            mem[floor32(mem[_5687]) + _5687 + 196] = mem[floor32(mem[_5687]) + _5687 + -(mem[_5687] % 32) + 228 len mem[_5687] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4593, 0, address(this.address), 128, mem[_5687], mem[_5687 + 196 len floor32(mem[_5687]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                s = s + 1
                                t = 0
                                u = this.address
                                continue 
                            require 0 < ('cd', 68).length
                            require s < ('cd', 36).length
                            require s + 1 < ('cd', 36).length
                            mem[mem[64] + 4] = this.address
                            mem[mem[64] + 36] = address(('cd', 68)[0])
                            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                            staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                    gas gas_remaining wei
                                   args address(this.address), address(('cd', 68)[0])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= cd[100]:
                                _4993 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                require 0 < mem[_4993]
                                mem[_4993 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                require 1 < mem[_4993]
                                mem[_4993 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                mem[_4993 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_4993 + 100] = cd[100]
                                mem[_4993 + 132] = 1
                                mem[_4993 + 196] = this.address
                                mem[_4993 + 228] = block.timestamp + 300
                                mem[_4993 + 164] = 160
                                mem[_4993 + 260] = mem[_4993]
                                idx = 0
                                while idx < 32 * mem[_4993]:
                                    mem[_4993 + idx + 292] = mem[_4993 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                require ext_code.size(address(('cd', 68)[0]))
                                call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_4993 + 260 len (32 * mem[_4993]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_4993 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _4993 + ceil32(return_data.size) + 96
                                require return_data.size >= 32
                                _14361 = mem[_4993 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                                require mem[_4993 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                                require mem[_4993 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                                require mem[mem[_4993 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _4993 + 96] <= 4294967296 and mem[_4993 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_4993 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _4993 + 96]) + 32 <= return_data.size
                                mem[_4993 + ceil32(return_data.size) + 96] = mem[mem[_4993 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _4993 + 96]
                                _14831 = mem[_14361 + _4993 + 96]
                                idx = 0
                                while idx < 32 * _14831:
                                    mem[_4993 + ceil32(return_data.size) + idx + 128] = mem[_14361 + _4993 + idx + 128]
                                    idx = idx + 32
                                    continue 
                                mem[64] = (32 * _14831) + _4993 + ceil32(return_data.size) + 128
                            else:
                                mem[mem[64] + 4] = address(('cd', 68)[0])
                                mem[mem[64] + 36] = 10000 * cd[100]
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(('cd', 68)[0]), 10000 * cd[100]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _5501 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                require 0 < mem[_5501]
                                mem[_5501 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                require 1 < mem[_5501]
                                mem[_5501 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                mem[_5501 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_5501 + 100] = cd[100]
                                mem[_5501 + 132] = 1
                                mem[_5501 + 196] = this.address
                                mem[_5501 + 228] = block.timestamp + 300
                                mem[_5501 + 164] = 160
                                mem[_5501 + 260] = mem[_5501]
                                idx = 0
                                while idx < 32 * mem[_5501]:
                                    mem[_5501 + idx + 292] = mem[_5501 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                require ext_code.size(address(('cd', 68)[0]))
                                call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_5501 + 260 len (32 * mem[_5501]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_5501 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _5501 + ceil32(return_data.size) + 96
                                require return_data.size >= 32
                                _14363 = mem[_5501 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                                require mem[_5501 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                                require mem[_5501 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                                require mem[mem[_5501 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _5501 + 96] <= 4294967296 and mem[_5501 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_5501 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _5501 + 96]) + 32 <= return_data.size
                                mem[_5501 + ceil32(return_data.size) + 96] = mem[mem[_5501 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _5501 + 96]
                                _14832 = mem[_14363 + _5501 + 96]
                                idx = 0
                                while idx < 32 * _14832:
                                    mem[_5501 + ceil32(return_data.size) + idx + 128] = mem[_14363 + _5501 + idx + 128]
                                    idx = idx + 32
                                    continue 
                                mem[64] = (32 * _14832) + _5501 + ceil32(return_data.size) + 128
                        else:
                            if s != ('cd', 36).length - 1:
                                if not address(cd[((32 * s) + cd[68] + 36)]):
                                    require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _4618 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    require s < ('cd', 36).length
                                    require s + 1 < ('cd', 36).length
                                    require s < ('cd', 4).length
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                    if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        if not address(cd[((32 * s) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                            _5929 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_5929 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_5929 + 36] = 0
                                            mem[_5929 + 68] = _4618
                                            mem[_5929 + 100] = this.address
                                            mem[_5929 + 132] = 128
                                            mem[_5929 + 164] = mem[_5929]
                                            idx = 0
                                            while idx < mem[_5929]:
                                                mem[_5929 + idx + 196] = mem[_5929 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_5929] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4618, address(this.address), 128, mem[_5929 + 164 len mem[_5929] + 32]
                                            else:
                                                mem[floor32(mem[_5929]) + _5929 + 196] = mem[floor32(mem[_5929]) + _5929 + -(mem[_5929] % 32) + 228 len mem[_5929] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4618, address(this.address), 128, mem[_5929], mem[_5929 + 196 len floor32(mem[_5929]) + 32]
                                        else:
                                            _5930 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_5930 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_5930 + 36] = _4618
                                            mem[_5930 + 68] = 0
                                            mem[_5930 + 100] = this.address
                                            mem[_5930 + 132] = 128
                                            mem[_5930 + 164] = mem[_5930]
                                            idx = 0
                                            while idx < mem[_5930]:
                                                mem[_5930 + idx + 196] = mem[_5930 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_5930] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4618, 0, address(this.address), 128, mem[_5930 + 164 len mem[_5930] + 32]
                                            else:
                                                mem[floor32(mem[_5930]) + _5930 + 196] = mem[floor32(mem[_5930]) + _5930 + -(mem[_5930] % 32) + 228 len mem[_5930] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4618, 0, address(this.address), 128, mem[_5930], mem[_5930 + 196 len floor32(mem[_5930]) + 32]
                                    else:
                                        if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            _5931 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_5931 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_5931 + 36] = 0
                                            mem[_5931 + 68] = _4618
                                            mem[_5931 + 100] = this.address
                                            mem[_5931 + 132] = 128
                                            mem[_5931 + 164] = mem[_5931]
                                            idx = 0
                                            while idx < mem[_5931]:
                                                mem[_5931 + idx + 196] = mem[_5931 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_5931] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4618, address(this.address), 128, mem[_5931 + 164 len mem[_5931] + 32]
                                            else:
                                                mem[floor32(mem[_5931]) + _5931 + 196] = mem[floor32(mem[_5931]) + _5931 + -(mem[_5931] % 32) + 228 len mem[_5931] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4618, address(this.address), 128, mem[_5931], mem[_5931 + 196 len floor32(mem[_5931]) + 32]
                                        else:
                                            _5932 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_5932 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_5932 + 36] = _4618
                                            mem[_5932 + 68] = 0
                                            mem[_5932 + 100] = this.address
                                            mem[_5932 + 132] = 128
                                            mem[_5932 + 164] = mem[_5932]
                                            idx = 0
                                            while idx < mem[_5932]:
                                                mem[_5932 + idx + 196] = mem[_5932 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_5932] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4618, 0, address(this.address), 128, mem[_5932 + 164 len mem[_5932] + 32]
                                            else:
                                                mem[floor32(mem[_5932]) + _5932 + 196] = mem[floor32(mem[_5932]) + _5932 + -(mem[_5932] % 32) + 228 len mem[_5932] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4618, 0, address(this.address), 128, mem[_5932], mem[_5932 + 196 len floor32(mem[_5932]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    s = s + 1
                                    t = 0
                                    u = this.address
                                    continue 
                                require s < ('cd', 68).length
                                require s < ('cd', 36).length
                                require s + 1 < ('cd', 36).length
                                require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                _4729 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= _4729:
                                    _5228 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_5228]
                                    mem[_5228 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_5228]
                                    mem[_5228 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                    mem[_5228 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_5228 + 100] = _4729
                                    mem[_5228 + 132] = 1
                                    mem[_5228 + 196] = this.address
                                    mem[_5228 + 228] = block.timestamp + 300
                                    mem[_5228 + 164] = 160
                                    mem[_5228 + 260] = mem[_5228]
                                    idx = 0
                                    while idx < 32 * mem[_5228]:
                                        mem[_5228 + idx + 292] = mem[_5228 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                    call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4729, 1, 160, address(this.address), block.timestamp + 300, mem[_5228 + 260 len (32 * mem[_5228]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_5228 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _5228 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14353 = mem[_5228 + 96 len 4], Mask(224, 32, _4729) >> 32
                                    require mem[_5228 + 96 len 4], Mask(224, 32, _4729) >> 32 <= 4294967296
                                    require mem[_5228 + 96 len 4], Mask(224, 32, _4729) >> 32 + 32 <= return_data.size
                                    require mem[mem[_5228 + 96 len 4], Mask(224, 32, _4729) >> 32 + _5228 + 96] <= 4294967296 and mem[_5228 + 96 len 4], Mask(224, 32, _4729) >> 32 + (32 * mem[mem[_5228 + 96 len 4], Mask(224, 32, _4729) >> 32 + _5228 + 96]) + 32 <= return_data.size
                                    mem[_5228 + ceil32(return_data.size) + 96] = mem[mem[_5228 + 96 len 4], Mask(224, 32, _4729) >> 32 + _5228 + 96]
                                    _14827 = mem[_14353 + _5228 + 96]
                                    idx = 0
                                    while idx < 32 * _14827:
                                        mem[_5228 + ceil32(return_data.size) + idx + 128] = mem[_14353 + _5228 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14827) + _5228 + ceil32(return_data.size) + 128
                                else:
                                    mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                    mem[mem[64] + 36] = 10000 * _4729
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _4729
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _5928 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_5928]
                                    mem[_5928 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_5928]
                                    mem[_5928 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                    mem[_5928 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_5928 + 100] = _4729
                                    mem[_5928 + 132] = 1
                                    mem[_5928 + 196] = this.address
                                    mem[_5928 + 228] = block.timestamp + 300
                                    mem[_5928 + 164] = 160
                                    mem[_5928 + 260] = mem[_5928]
                                    t = 0
                                    while t < 32 * mem[_5928]:
                                        mem[_5928 + t + 292] = mem[_5928 + t + 32]
                                        t = t + 32
                                        continue 
                                    require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                    call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4729, 1, 160, address(this.address), block.timestamp + 300, mem[_5928 + 260 len (32 * mem[_5928]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_5928 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _5928 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14355 = mem[_5928 + 96 len 4], Mask(224, 32, _4729) >> 32
                                    require mem[_5928 + 96 len 4], Mask(224, 32, _4729) >> 32 <= 4294967296
                                    require mem[_5928 + 96 len 4], Mask(224, 32, _4729) >> 32 + 32 <= return_data.size
                                    require mem[mem[_5928 + 96 len 4], Mask(224, 32, _4729) >> 32 + _5928 + 96] <= 4294967296 and mem[_5928 + 96 len 4], Mask(224, 32, _4729) >> 32 + (32 * mem[mem[_5928 + 96 len 4], Mask(224, 32, _4729) >> 32 + _5928 + 96]) + 32 <= return_data.size
                                    mem[_5928 + ceil32(return_data.size) + 96] = mem[mem[_5928 + 96 len 4], Mask(224, 32, _4729) >> 32 + _5928 + 96]
                                    _14828 = mem[_14355 + _5928 + 96]
                                    idx = 0
                                    while idx < 32 * _14828:
                                        mem[_5928 + ceil32(return_data.size) + idx + 128] = mem[_14355 + _5928 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14828) + _5928 + ceil32(return_data.size) + 128
                            else:
                                if not address(cd[((32 * s) + cd[68] + 36)]):
                                    require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _4619 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    require s < ('cd', 36).length
                                    require 0 < ('cd', 36).length
                                    require s < ('cd', 4).length
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                        revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                    if address(cd[((32 * s) + cd[36] + 36)]) < address(('cd', 36)[0]):
                                        if not address(cd[((32 * s) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                            _5937 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_5937 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_5937 + 36] = 0
                                            mem[_5937 + 68] = _4619
                                            mem[_5937 + 100] = this.address
                                            mem[_5937 + 132] = 128
                                            mem[_5937 + 164] = mem[_5937]
                                            idx = 0
                                            while idx < mem[_5937]:
                                                mem[_5937 + idx + 196] = mem[_5937 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_5937] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4619, address(this.address), 128, mem[_5937 + 164 len mem[_5937] + 32]
                                            else:
                                                mem[floor32(mem[_5937]) + _5937 + 196] = mem[floor32(mem[_5937]) + _5937 + -(mem[_5937] % 32) + 228 len mem[_5937] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4619, address(this.address), 128, mem[_5937], mem[_5937 + 196 len floor32(mem[_5937]) + 32]
                                        else:
                                            _5938 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_5938 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_5938 + 36] = _4619
                                            mem[_5938 + 68] = 0
                                            mem[_5938 + 100] = this.address
                                            mem[_5938 + 132] = 128
                                            mem[_5938 + 164] = mem[_5938]
                                            idx = 0
                                            while idx < mem[_5938]:
                                                mem[_5938 + idx + 196] = mem[_5938 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_5938] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4619, 0, address(this.address), 128, mem[_5938 + 164 len mem[_5938] + 32]
                                            else:
                                                mem[floor32(mem[_5938]) + _5938 + 196] = mem[floor32(mem[_5938]) + _5938 + -(mem[_5938] % 32) + 228 len mem[_5938] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4619, 0, address(this.address), 128, mem[_5938], mem[_5938 + 196 len floor32(mem[_5938]) + 32]
                                    else:
                                        if not address(('cd', 36)[0]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                            _5939 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_5939 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_5939 + 36] = 0
                                            mem[_5939 + 68] = _4619
                                            mem[_5939 + 100] = this.address
                                            mem[_5939 + 132] = 128
                                            mem[_5939 + 164] = mem[_5939]
                                            idx = 0
                                            while idx < mem[_5939]:
                                                mem[_5939 + idx + 196] = mem[_5939 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_5939] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4619, address(this.address), 128, mem[_5939 + 164 len mem[_5939] + 32]
                                            else:
                                                mem[floor32(mem[_5939]) + _5939 + 196] = mem[floor32(mem[_5939]) + _5939 + -(mem[_5939] % 32) + 228 len mem[_5939] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4619, address(this.address), 128, mem[_5939], mem[_5939 + 196 len floor32(mem[_5939]) + 32]
                                        else:
                                            _5940 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_5940 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_5940 + 36] = _4619
                                            mem[_5940 + 68] = 0
                                            mem[_5940 + 100] = this.address
                                            mem[_5940 + 132] = 128
                                            mem[_5940 + 164] = mem[_5940]
                                            idx = 0
                                            while idx < mem[_5940]:
                                                mem[_5940 + idx + 196] = mem[_5940 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_5940] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4619, 0, address(this.address), 128, mem[_5940 + 164 len mem[_5940] + 32]
                                            else:
                                                mem[floor32(mem[_5940]) + _5940 + 196] = mem[floor32(mem[_5940]) + _5940 + -(mem[_5940] % 32) + 228 len mem[_5940] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4619, 0, address(this.address), 128, mem[_5940], mem[_5940 + 196 len floor32(mem[_5940]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    s = s + 1
                                    t = 0
                                    u = this.address
                                    continue 
                                require s < ('cd', 68).length
                                require s < ('cd', 36).length
                                require 0 < ('cd', 36).length
                                require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                _4730 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= _4730:
                                    _5233 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_5233]
                                    mem[_5233 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_5233]
                                    mem[_5233 + 64] = address(('cd', 36)[0])
                                    mem[_5233 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_5233 + 100] = _4730
                                    mem[_5233 + 132] = 1
                                    mem[_5233 + 196] = this.address
                                    mem[_5233 + 228] = block.timestamp + 300
                                    mem[_5233 + 164] = 160
                                    mem[_5233 + 260] = mem[_5233]
                                    idx = 0
                                    while idx < 32 * mem[_5233]:
                                        mem[_5233 + idx + 292] = mem[_5233 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                    call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4730, 1, 160, address(this.address), block.timestamp + 300, mem[_5233 + 260 len (32 * mem[_5233]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_5233 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _5233 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14357 = mem[_5233 + 96 len 4], Mask(224, 32, _4730) >> 32
                                    require mem[_5233 + 96 len 4], Mask(224, 32, _4730) >> 32 <= 4294967296
                                    require mem[_5233 + 96 len 4], Mask(224, 32, _4730) >> 32 + 32 <= return_data.size
                                    require mem[mem[_5233 + 96 len 4], Mask(224, 32, _4730) >> 32 + _5233 + 96] <= 4294967296 and mem[_5233 + 96 len 4], Mask(224, 32, _4730) >> 32 + (32 * mem[mem[_5233 + 96 len 4], Mask(224, 32, _4730) >> 32 + _5233 + 96]) + 32 <= return_data.size
                                    mem[_5233 + ceil32(return_data.size) + 96] = mem[mem[_5233 + 96 len 4], Mask(224, 32, _4730) >> 32 + _5233 + 96]
                                    _14829 = mem[_14357 + _5233 + 96]
                                    idx = 0
                                    while idx < 32 * _14829:
                                        mem[_5233 + ceil32(return_data.size) + idx + 128] = mem[_14357 + _5233 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14829) + _5233 + ceil32(return_data.size) + 128
                                else:
                                    mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                    mem[mem[64] + 36] = 10000 * _4730
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _4730
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _5936 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_5936]
                                    mem[_5936 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_5936]
                                    mem[_5936 + 64] = address(('cd', 36)[0])
                                    mem[_5936 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_5936 + 100] = _4730
                                    mem[_5936 + 132] = 1
                                    mem[_5936 + 196] = this.address
                                    mem[_5936 + 228] = block.timestamp + 300
                                    mem[_5936 + 164] = 160
                                    mem[_5936 + 260] = mem[_5936]
                                    t = 0
                                    while t < 32 * mem[_5936]:
                                        mem[_5936 + t + 292] = mem[_5936 + t + 32]
                                        t = t + 32
                                        continue 
                                    require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                    call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4730, 1, 160, address(this.address), block.timestamp + 300, mem[_5936 + 260 len (32 * mem[_5936]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_5936 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _5936 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14359 = mem[_5936 + 96 len 4], Mask(224, 32, _4730) >> 32
                                    require mem[_5936 + 96 len 4], Mask(224, 32, _4730) >> 32 <= 4294967296
                                    require mem[_5936 + 96 len 4], Mask(224, 32, _4730) >> 32 + 32 <= return_data.size
                                    require mem[mem[_5936 + 96 len 4], Mask(224, 32, _4730) >> 32 + _5936 + 96] <= 4294967296 and mem[_5936 + 96 len 4], Mask(224, 32, _4730) >> 32 + (32 * mem[mem[_5936 + 96 len 4], Mask(224, 32, _4730) >> 32 + _5936 + 96]) + 32 <= return_data.size
                                    mem[_5936 + ceil32(return_data.size) + 96] = mem[mem[_5936 + 96 len 4], Mask(224, 32, _4730) >> 32 + _5936 + 96]
                                    _14830 = mem[_14359 + _5936 + 96]
                                    idx = 0
                                    while idx < 32 * _14830:
                                        mem[_5936 + ceil32(return_data.size) + idx + 128] = mem[_14359 + _5936 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14830) + _5936 + ceil32(return_data.size) + 128
                    else:
                        require s < ('cd', 36).length
                        require s < ('cd', 4).length
                        if not s:
                            mem[mem[64] + 4] = address(cd[((32 * s) + cd[4] + 36)])
                            mem[mem[64] + 36] = cd[100]
                            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                            call address(cd[((32 * s) + cd[36] + 36)]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args address(cd[((32 * s) + cd[4] + 36)]), cd[100]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require s < ('cd', 68).length
                            if not s:
                                if not address(cd[((32 * s) + cd[68] + 36)]):
                                    require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _4997 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    require s < ('cd', 36).length
                                    require s + 1 < ('cd', 36).length
                                    require s < ('cd', 4).length
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                    if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        if not address(cd[((32 * s) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                            _7975 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_7975 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_7975 + 36] = 0
                                            mem[_7975 + 68] = _4997
                                            mem[_7975 + 100] = this.address
                                            mem[_7975 + 132] = 128
                                            mem[_7975 + 164] = mem[_7975]
                                            idx = 0
                                            while idx < mem[_7975]:
                                                mem[_7975 + idx + 196] = mem[_7975 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_7975] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4997, address(this.address), 128, mem[_7975 + 164 len mem[_7975] + 32]
                                            else:
                                                mem[floor32(mem[_7975]) + _7975 + 196] = mem[floor32(mem[_7975]) + _7975 + -(mem[_7975] % 32) + 228 len mem[_7975] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4997, address(this.address), 128, mem[_7975], mem[_7975 + 196 len floor32(mem[_7975]) + 32]
                                        else:
                                            _7976 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_7976 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_7976 + 36] = _4997
                                            mem[_7976 + 68] = 0
                                            mem[_7976 + 100] = this.address
                                            mem[_7976 + 132] = 128
                                            mem[_7976 + 164] = mem[_7976]
                                            idx = 0
                                            while idx < mem[_7976]:
                                                mem[_7976 + idx + 196] = mem[_7976 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_7976] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4997, 0, address(this.address), 128, mem[_7976 + 164 len mem[_7976] + 32]
                                            else:
                                                mem[floor32(mem[_7976]) + _7976 + 196] = mem[floor32(mem[_7976]) + _7976 + -(mem[_7976] % 32) + 228 len mem[_7976] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4997, 0, address(this.address), 128, mem[_7976], mem[_7976 + 196 len floor32(mem[_7976]) + 32]
                                    else:
                                        if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            _7977 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_7977 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_7977 + 36] = 0
                                            mem[_7977 + 68] = _4997
                                            mem[_7977 + 100] = this.address
                                            mem[_7977 + 132] = 128
                                            mem[_7977 + 164] = mem[_7977]
                                            idx = 0
                                            while idx < mem[_7977]:
                                                mem[_7977 + idx + 196] = mem[_7977 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_7977] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4997, address(this.address), 128, mem[_7977 + 164 len mem[_7977] + 32]
                                            else:
                                                mem[floor32(mem[_7977]) + _7977 + 196] = mem[floor32(mem[_7977]) + _7977 + -(mem[_7977] % 32) + 228 len mem[_7977] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4997, address(this.address), 128, mem[_7977], mem[_7977 + 196 len floor32(mem[_7977]) + 32]
                                        else:
                                            _7978 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_7978 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_7978 + 36] = _4997
                                            mem[_7978 + 68] = 0
                                            mem[_7978 + 100] = this.address
                                            mem[_7978 + 132] = 128
                                            mem[_7978 + 164] = mem[_7978]
                                            idx = 0
                                            while idx < mem[_7978]:
                                                mem[_7978 + idx + 196] = mem[_7978 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_7978] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4997, 0, address(this.address), 128, mem[_7978 + 164 len mem[_7978] + 32]
                                            else:
                                                mem[floor32(mem[_7978]) + _7978 + 196] = mem[floor32(mem[_7978]) + _7978 + -(mem[_7978] % 32) + 228 len mem[_7978] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4997, 0, address(this.address), 128, mem[_7978], mem[_7978 + 196 len floor32(mem[_7978]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    s = s + 1
                                    t = 0
                                    u = this.address
                                    continue 
                                require 0 < ('cd', 68).length
                                require s < ('cd', 36).length
                                require s + 1 < ('cd', 36).length
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = address(('cd', 68)[0])
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), address(('cd', 68)[0])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= cd[100]:
                                    _6406 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_6406]
                                    mem[_6406 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_6406]
                                    mem[_6406 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                    mem[_6406 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_6406 + 100] = cd[100]
                                    mem[_6406 + 132] = 1
                                    mem[_6406 + 196] = this.address
                                    mem[_6406 + 228] = block.timestamp + 300
                                    mem[_6406 + 164] = 160
                                    mem[_6406 + 260] = mem[_6406]
                                    idx = 0
                                    while idx < 32 * mem[_6406]:
                                        mem[_6406 + idx + 292] = mem[_6406 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(('cd', 68)[0]))
                                    call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_6406 + 260 len (32 * mem[_6406]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_6406 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _6406 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14385 = mem[_6406 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                                    require mem[_6406 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                                    require mem[_6406 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                                    require mem[mem[_6406 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _6406 + 96] <= 4294967296 and mem[_6406 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_6406 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _6406 + 96]) + 32 <= return_data.size
                                    mem[_6406 + ceil32(return_data.size) + 96] = mem[mem[_6406 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _6406 + 96]
                                    _14843 = mem[_14385 + _6406 + 96]
                                    idx = 0
                                    while idx < 32 * _14843:
                                        mem[_6406 + ceil32(return_data.size) + idx + 128] = mem[_14385 + _6406 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14843) + _6406 + ceil32(return_data.size) + 128
                                else:
                                    mem[mem[64] + 4] = address(('cd', 68)[0])
                                    mem[mem[64] + 36] = 10000 * cd[100]
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(('cd', 68)[0]), 10000 * cd[100]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _7626 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_7626]
                                    mem[_7626 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_7626]
                                    mem[_7626 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                    mem[_7626 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_7626 + 100] = cd[100]
                                    mem[_7626 + 132] = 1
                                    mem[_7626 + 196] = this.address
                                    mem[_7626 + 228] = block.timestamp + 300
                                    mem[_7626 + 164] = 160
                                    mem[_7626 + 260] = mem[_7626]
                                    idx = 0
                                    while idx < 32 * mem[_7626]:
                                        mem[_7626 + idx + 292] = mem[_7626 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(('cd', 68)[0]))
                                    call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_7626 + 260 len (32 * mem[_7626]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_7626 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _7626 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14387 = mem[_7626 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                                    require mem[_7626 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                                    require mem[_7626 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                                    require mem[mem[_7626 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _7626 + 96] <= 4294967296 and mem[_7626 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_7626 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _7626 + 96]) + 32 <= return_data.size
                                    mem[_7626 + ceil32(return_data.size) + 96] = mem[mem[_7626 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _7626 + 96]
                                    _14844 = mem[_14387 + _7626 + 96]
                                    idx = 0
                                    while idx < 32 * _14844:
                                        mem[_7626 + ceil32(return_data.size) + idx + 128] = mem[_14387 + _7626 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14844) + _7626 + ceil32(return_data.size) + 128
                            else:
                                if s != ('cd', 36).length - 1:
                                    if not address(cd[((32 * s) + cd[68] + 36)]):
                                        require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                        _5091 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                        require s < ('cd', 36).length
                                        require s + 1 < ('cd', 36).length
                                        require s < ('cd', 4).length
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                        if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            if not address(cd[((32 * s) + cd[36] + 36)]):
                                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                                _8329 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_8329 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_8329 + 36] = 0
                                                mem[_8329 + 68] = _5091
                                                mem[_8329 + 100] = this.address
                                                mem[_8329 + 132] = 128
                                                mem[_8329 + 164] = mem[_8329]
                                                idx = 0
                                                while idx < mem[_8329]:
                                                    mem[_8329 + idx + 196] = mem[_8329 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_8329] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5091, address(this.address), 128, mem[_8329 + 164 len mem[_8329] + 32]
                                                else:
                                                    mem[floor32(mem[_8329]) + _8329 + 196] = mem[floor32(mem[_8329]) + _8329 + -(mem[_8329] % 32) + 228 len mem[_8329] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5091, address(this.address), 128, mem[_8329], mem[_8329 + 196 len floor32(mem[_8329]) + 32]
                                            else:
                                                _8330 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_8330 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_8330 + 36] = _5091
                                                mem[_8330 + 68] = 0
                                                mem[_8330 + 100] = this.address
                                                mem[_8330 + 132] = 128
                                                mem[_8330 + 164] = mem[_8330]
                                                idx = 0
                                                while idx < mem[_8330]:
                                                    mem[_8330 + idx + 196] = mem[_8330 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_8330] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5091, 0, address(this.address), 128, mem[_8330 + 164 len mem[_8330] + 32]
                                                else:
                                                    mem[floor32(mem[_8330]) + _8330 + 196] = mem[floor32(mem[_8330]) + _8330 + -(mem[_8330] % 32) + 228 len mem[_8330] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5091, 0, address(this.address), 128, mem[_8330], mem[_8330 + 196 len floor32(mem[_8330]) + 32]
                                        else:
                                            if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                                _8331 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_8331 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_8331 + 36] = 0
                                                mem[_8331 + 68] = _5091
                                                mem[_8331 + 100] = this.address
                                                mem[_8331 + 132] = 128
                                                mem[_8331 + 164] = mem[_8331]
                                                idx = 0
                                                while idx < mem[_8331]:
                                                    mem[_8331 + idx + 196] = mem[_8331 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_8331] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5091, address(this.address), 128, mem[_8331 + 164 len mem[_8331] + 32]
                                                else:
                                                    mem[floor32(mem[_8331]) + _8331 + 196] = mem[floor32(mem[_8331]) + _8331 + -(mem[_8331] % 32) + 228 len mem[_8331] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5091, address(this.address), 128, mem[_8331], mem[_8331 + 196 len floor32(mem[_8331]) + 32]
                                            else:
                                                _8332 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_8332 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_8332 + 36] = _5091
                                                mem[_8332 + 68] = 0
                                                mem[_8332 + 100] = this.address
                                                mem[_8332 + 132] = 128
                                                mem[_8332 + 164] = mem[_8332]
                                                idx = 0
                                                while idx < mem[_8332]:
                                                    mem[_8332 + idx + 196] = mem[_8332 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_8332] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5091, 0, address(this.address), 128, mem[_8332 + 164 len mem[_8332] + 32]
                                                else:
                                                    mem[floor32(mem[_8332]) + _8332 + 196] = mem[floor32(mem[_8332]) + _8332 + -(mem[_8332] % 32) + 228 len mem[_8332] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5091, 0, address(this.address), 128, mem[_8332], mem[_8332 + 196 len floor32(mem[_8332]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = s + 1
                                        t = 0
                                        u = this.address
                                        continue 
                                    require s < ('cd', 68).length
                                    require s < ('cd', 36).length
                                    require s + 1 < ('cd', 36).length
                                    require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _5506 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    mem[mem[64] + 4] = this.address
                                    mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                            gas gas_remaining wei
                                           args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] >= _5506:
                                        _7078 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require 0 < mem[_7078]
                                        mem[_7078 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                        require 1 < mem[_7078]
                                        mem[_7078 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                        mem[_7078 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_7078 + 100] = _5506
                                        mem[_7078 + 132] = 1
                                        mem[_7078 + 196] = this.address
                                        mem[_7078 + 228] = block.timestamp + 300
                                        mem[_7078 + 164] = 160
                                        mem[_7078 + 260] = mem[_7078]
                                        idx = 0
                                        while idx < 32 * mem[_7078]:
                                            mem[_7078 + idx + 292] = mem[_7078 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                        call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args _5506, 1, 160, address(this.address), block.timestamp + 300, mem[_7078 + 260 len (32 * mem[_7078]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_7078 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = _7078 + ceil32(return_data.size) + 96
                                        require return_data.size >= 32
                                        _14377 = mem[_7078 + 96 len 4], Mask(224, 32, _5506) >> 32
                                        require mem[_7078 + 96 len 4], Mask(224, 32, _5506) >> 32 <= 4294967296
                                        require mem[_7078 + 96 len 4], Mask(224, 32, _5506) >> 32 + 32 <= return_data.size
                                        require mem[mem[_7078 + 96 len 4], Mask(224, 32, _5506) >> 32 + _7078 + 96] <= 4294967296 and mem[_7078 + 96 len 4], Mask(224, 32, _5506) >> 32 + (32 * mem[mem[_7078 + 96 len 4], Mask(224, 32, _5506) >> 32 + _7078 + 96]) + 32 <= return_data.size
                                        mem[_7078 + ceil32(return_data.size) + 96] = mem[mem[_7078 + 96 len 4], Mask(224, 32, _5506) >> 32 + _7078 + 96]
                                        _14839 = mem[_14377 + _7078 + 96]
                                        idx = 0
                                        while idx < 32 * _14839:
                                            mem[_7078 + ceil32(return_data.size) + idx + 128] = mem[_14377 + _7078 + idx + 128]
                                            idx = idx + 32
                                            continue 
                                        mem[64] = (32 * _14839) + _7078 + ceil32(return_data.size) + 128
                                    else:
                                        mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                        mem[mem[64] + 36] = 10000 * _5506
                                        require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                        call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _5506
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _8328 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require 0 < mem[_8328]
                                        mem[_8328 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                        require 1 < mem[_8328]
                                        mem[_8328 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                        mem[_8328 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_8328 + 100] = _5506
                                        mem[_8328 + 132] = 1
                                        mem[_8328 + 196] = this.address
                                        mem[_8328 + 228] = block.timestamp + 300
                                        mem[_8328 + 164] = 160
                                        mem[_8328 + 260] = mem[_8328]
                                        idx = 0
                                        while idx < 32 * mem[_8328]:
                                            mem[_8328 + idx + 292] = mem[_8328 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                        call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args _5506, 1, 160, address(this.address), block.timestamp + 300, mem[_8328 + 260 len (32 * mem[_8328]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_8328 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = _8328 + ceil32(return_data.size) + 96
                                        require return_data.size >= 32
                                        _14379 = mem[_8328 + 96 len 4], Mask(224, 32, _5506) >> 32
                                        require mem[_8328 + 96 len 4], Mask(224, 32, _5506) >> 32 <= 4294967296
                                        require mem[_8328 + 96 len 4], Mask(224, 32, _5506) >> 32 + 32 <= return_data.size
                                        require mem[mem[_8328 + 96 len 4], Mask(224, 32, _5506) >> 32 + _8328 + 96] <= 4294967296 and mem[_8328 + 96 len 4], Mask(224, 32, _5506) >> 32 + (32 * mem[mem[_8328 + 96 len 4], Mask(224, 32, _5506) >> 32 + _8328 + 96]) + 32 <= return_data.size
                                        mem[_8328 + ceil32(return_data.size) + 96] = mem[mem[_8328 + 96 len 4], Mask(224, 32, _5506) >> 32 + _8328 + 96]
                                        _14840 = mem[_14379 + _8328 + 96]
                                        idx = 0
                                        while idx < 32 * _14840:
                                            mem[_8328 + ceil32(return_data.size) + idx + 128] = mem[_14379 + _8328 + idx + 128]
                                            idx = idx + 32
                                            continue 
                                        mem[64] = (32 * _14840) + _8328 + ceil32(return_data.size) + 128
                                else:
                                    if not address(cd[((32 * s) + cd[68] + 36)]):
                                        require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                        _5092 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                        require s < ('cd', 36).length
                                        require 0 < ('cd', 36).length
                                        require s < ('cd', 4).length
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                            revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                        if address(cd[((32 * s) + cd[36] + 36)]) < address(('cd', 36)[0]):
                                            if not address(cd[((32 * s) + cd[36] + 36)]):
                                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                                _8337 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_8337 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_8337 + 36] = 0
                                                mem[_8337 + 68] = _5092
                                                mem[_8337 + 100] = this.address
                                                mem[_8337 + 132] = 128
                                                mem[_8337 + 164] = mem[_8337]
                                                idx = 0
                                                while idx < mem[_8337]:
                                                    mem[_8337 + idx + 196] = mem[_8337 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_8337] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5092, address(this.address), 128, mem[_8337 + 164 len mem[_8337] + 32]
                                                else:
                                                    mem[floor32(mem[_8337]) + _8337 + 196] = mem[floor32(mem[_8337]) + _8337 + -(mem[_8337] % 32) + 228 len mem[_8337] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5092, address(this.address), 128, mem[_8337], mem[_8337 + 196 len floor32(mem[_8337]) + 32]
                                            else:
                                                _8338 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_8338 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_8338 + 36] = _5092
                                                mem[_8338 + 68] = 0
                                                mem[_8338 + 100] = this.address
                                                mem[_8338 + 132] = 128
                                                mem[_8338 + 164] = mem[_8338]
                                                idx = 0
                                                while idx < mem[_8338]:
                                                    mem[_8338 + idx + 196] = mem[_8338 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_8338] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5092, 0, address(this.address), 128, mem[_8338 + 164 len mem[_8338] + 32]
                                                else:
                                                    mem[floor32(mem[_8338]) + _8338 + 196] = mem[floor32(mem[_8338]) + _8338 + -(mem[_8338] % 32) + 228 len mem[_8338] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5092, 0, address(this.address), 128, mem[_8338], mem[_8338 + 196 len floor32(mem[_8338]) + 32]
                                        else:
                                            if not address(('cd', 36)[0]):
                                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                            if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                                _8339 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_8339 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_8339 + 36] = 0
                                                mem[_8339 + 68] = _5092
                                                mem[_8339 + 100] = this.address
                                                mem[_8339 + 132] = 128
                                                mem[_8339 + 164] = mem[_8339]
                                                idx = 0
                                                while idx < mem[_8339]:
                                                    mem[_8339 + idx + 196] = mem[_8339 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_8339] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5092, address(this.address), 128, mem[_8339 + 164 len mem[_8339] + 32]
                                                else:
                                                    mem[floor32(mem[_8339]) + _8339 + 196] = mem[floor32(mem[_8339]) + _8339 + -(mem[_8339] % 32) + 228 len mem[_8339] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5092, address(this.address), 128, mem[_8339], mem[_8339 + 196 len floor32(mem[_8339]) + 32]
                                            else:
                                                _8340 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_8340 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_8340 + 36] = _5092
                                                mem[_8340 + 68] = 0
                                                mem[_8340 + 100] = this.address
                                                mem[_8340 + 132] = 128
                                                mem[_8340 + 164] = mem[_8340]
                                                idx = 0
                                                while idx < mem[_8340]:
                                                    mem[_8340 + idx + 196] = mem[_8340 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_8340] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5092, 0, address(this.address), 128, mem[_8340 + 164 len mem[_8340] + 32]
                                                else:
                                                    mem[floor32(mem[_8340]) + _8340 + 196] = mem[floor32(mem[_8340]) + _8340 + -(mem[_8340] % 32) + 228 len mem[_8340] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5092, 0, address(this.address), 128, mem[_8340], mem[_8340 + 196 len floor32(mem[_8340]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = s + 1
                                        t = 0
                                        u = this.address
                                        continue 
                                    require s < ('cd', 68).length
                                    require s < ('cd', 36).length
                                    require 0 < ('cd', 36).length
                                    require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _5507 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    mem[mem[64] + 4] = this.address
                                    mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                            gas gas_remaining wei
                                           args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] >= _5507:
                                        _7083 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require 0 < mem[_7083]
                                        mem[_7083 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                        require 1 < mem[_7083]
                                        mem[_7083 + 64] = address(('cd', 36)[0])
                                        mem[_7083 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_7083 + 100] = _5507
                                        mem[_7083 + 132] = 1
                                        mem[_7083 + 196] = this.address
                                        mem[_7083 + 228] = block.timestamp + 300
                                        mem[_7083 + 164] = 160
                                        mem[_7083 + 260] = mem[_7083]
                                        idx = 0
                                        while idx < 32 * mem[_7083]:
                                            mem[_7083 + idx + 292] = mem[_7083 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                        call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args _5507, 1, 160, address(this.address), block.timestamp + 300, mem[_7083 + 260 len (32 * mem[_7083]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_7083 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = _7083 + ceil32(return_data.size) + 96
                                        require return_data.size >= 32
                                        _14381 = mem[_7083 + 96 len 4], Mask(224, 32, _5507) >> 32
                                        require mem[_7083 + 96 len 4], Mask(224, 32, _5507) >> 32 <= 4294967296
                                        require mem[_7083 + 96 len 4], Mask(224, 32, _5507) >> 32 + 32 <= return_data.size
                                        require mem[mem[_7083 + 96 len 4], Mask(224, 32, _5507) >> 32 + _7083 + 96] <= 4294967296 and mem[_7083 + 96 len 4], Mask(224, 32, _5507) >> 32 + (32 * mem[mem[_7083 + 96 len 4], Mask(224, 32, _5507) >> 32 + _7083 + 96]) + 32 <= return_data.size
                                        mem[_7083 + ceil32(return_data.size) + 96] = mem[mem[_7083 + 96 len 4], Mask(224, 32, _5507) >> 32 + _7083 + 96]
                                        _14841 = mem[_14381 + _7083 + 96]
                                        idx = 0
                                        while idx < 32 * _14841:
                                            mem[_7083 + ceil32(return_data.size) + idx + 128] = mem[_14381 + _7083 + idx + 128]
                                            idx = idx + 32
                                            continue 
                                        mem[64] = (32 * _14841) + _7083 + ceil32(return_data.size) + 128
                                    else:
                                        mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                        mem[mem[64] + 36] = 10000 * _5507
                                        require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                        call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _5507
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _8336 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require 0 < mem[_8336]
                                        mem[_8336 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                        require 1 < mem[_8336]
                                        mem[_8336 + 64] = address(('cd', 36)[0])
                                        mem[_8336 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_8336 + 100] = _5507
                                        mem[_8336 + 132] = 1
                                        mem[_8336 + 196] = this.address
                                        mem[_8336 + 228] = block.timestamp + 300
                                        mem[_8336 + 164] = 160
                                        mem[_8336 + 260] = mem[_8336]
                                        idx = 0
                                        while idx < 32 * mem[_8336]:
                                            mem[_8336 + idx + 292] = mem[_8336 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                        call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args _5507, 1, 160, address(this.address), block.timestamp + 300, mem[_8336 + 260 len (32 * mem[_8336]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_8336 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = _8336 + ceil32(return_data.size) + 96
                                        require return_data.size >= 32
                                        _14383 = mem[_8336 + 96 len 4], Mask(224, 32, _5507) >> 32
                                        require mem[_8336 + 96 len 4], Mask(224, 32, _5507) >> 32 <= 4294967296
                                        require mem[_8336 + 96 len 4], Mask(224, 32, _5507) >> 32 + 32 <= return_data.size
                                        require mem[mem[_8336 + 96 len 4], Mask(224, 32, _5507) >> 32 + _8336 + 96] <= 4294967296 and mem[_8336 + 96 len 4], Mask(224, 32, _5507) >> 32 + (32 * mem[mem[_8336 + 96 len 4], Mask(224, 32, _5507) >> 32 + _8336 + 96]) + 32 <= return_data.size
                                        mem[_8336 + ceil32(return_data.size) + 96] = mem[mem[_8336 + 96 len 4], Mask(224, 32, _5507) >> 32 + _8336 + 96]
                                        _14842 = mem[_14383 + _8336 + 96]
                                        idx = 0
                                        while idx < 32 * _14842:
                                            mem[_8336 + ceil32(return_data.size) + idx + 128] = mem[_14383 + _8336 + idx + 128]
                                            idx = idx + 32
                                            continue 
                                        mem[64] = (32 * _14842) + _8336 + ceil32(return_data.size) + 128
                        else:
                            require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            _4555 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                            mem[mem[64] + 4] = address(cd[((32 * s) + cd[4] + 36)])
                            mem[mem[64] + 36] = _4555
                            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                            call address(cd[((32 * s) + cd[36] + 36)]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args address(cd[((32 * s) + cd[4] + 36)]), _4555
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require s < ('cd', 68).length
                            if not s:
                                if not address(cd[((32 * s) + cd[68] + 36)]):
                                    require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _5090 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    require s < ('cd', 36).length
                                    require s + 1 < ('cd', 36).length
                                    require s < ('cd', 4).length
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                    if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        if not address(cd[((32 * s) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                            _8321 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_8321 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_8321 + 36] = 0
                                            mem[_8321 + 68] = _5090
                                            mem[_8321 + 100] = this.address
                                            mem[_8321 + 132] = 128
                                            mem[_8321 + 164] = mem[_8321]
                                            idx = 0
                                            while idx < mem[_8321]:
                                                mem[_8321 + idx + 196] = mem[_8321 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_8321] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _5090, address(this.address), 128, mem[_8321 + 164 len mem[_8321] + 32]
                                            else:
                                                mem[floor32(mem[_8321]) + _8321 + 196] = mem[floor32(mem[_8321]) + _8321 + -(mem[_8321] % 32) + 228 len mem[_8321] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _5090, address(this.address), 128, mem[_8321], mem[_8321 + 196 len floor32(mem[_8321]) + 32]
                                        else:
                                            _8322 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_8322 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_8322 + 36] = _5090
                                            mem[_8322 + 68] = 0
                                            mem[_8322 + 100] = this.address
                                            mem[_8322 + 132] = 128
                                            mem[_8322 + 164] = mem[_8322]
                                            idx = 0
                                            while idx < mem[_8322]:
                                                mem[_8322 + idx + 196] = mem[_8322 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_8322] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _5090, 0, address(this.address), 128, mem[_8322 + 164 len mem[_8322] + 32]
                                            else:
                                                mem[floor32(mem[_8322]) + _8322 + 196] = mem[floor32(mem[_8322]) + _8322 + -(mem[_8322] % 32) + 228 len mem[_8322] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _5090, 0, address(this.address), 128, mem[_8322], mem[_8322 + 196 len floor32(mem[_8322]) + 32]
                                    else:
                                        if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            _8323 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_8323 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_8323 + 36] = 0
                                            mem[_8323 + 68] = _5090
                                            mem[_8323 + 100] = this.address
                                            mem[_8323 + 132] = 128
                                            mem[_8323 + 164] = mem[_8323]
                                            idx = 0
                                            while idx < mem[_8323]:
                                                mem[_8323 + idx + 196] = mem[_8323 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_8323] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _5090, address(this.address), 128, mem[_8323 + 164 len mem[_8323] + 32]
                                            else:
                                                mem[floor32(mem[_8323]) + _8323 + 196] = mem[floor32(mem[_8323]) + _8323 + -(mem[_8323] % 32) + 228 len mem[_8323] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _5090, address(this.address), 128, mem[_8323], mem[_8323 + 196 len floor32(mem[_8323]) + 32]
                                        else:
                                            _8324 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_8324 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_8324 + 36] = _5090
                                            mem[_8324 + 68] = 0
                                            mem[_8324 + 100] = this.address
                                            mem[_8324 + 132] = 128
                                            mem[_8324 + 164] = mem[_8324]
                                            idx = 0
                                            while idx < mem[_8324]:
                                                mem[_8324 + idx + 196] = mem[_8324 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_8324] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _5090, 0, address(this.address), 128, mem[_8324 + 164 len mem[_8324] + 32]
                                            else:
                                                mem[floor32(mem[_8324]) + _8324 + 196] = mem[floor32(mem[_8324]) + _8324 + -(mem[_8324] % 32) + 228 len mem[_8324] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _5090, 0, address(this.address), 128, mem[_8324], mem[_8324 + 196 len floor32(mem[_8324]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    s = s + 1
                                    t = 0
                                    u = this.address
                                    continue 
                                require 0 < ('cd', 68).length
                                require s < ('cd', 36).length
                                require s + 1 < ('cd', 36).length
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = address(('cd', 68)[0])
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), address(('cd', 68)[0])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= cd[100]:
                                    _6713 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_6713]
                                    mem[_6713 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_6713]
                                    mem[_6713 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                    mem[_6713 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_6713 + 100] = cd[100]
                                    mem[_6713 + 132] = 1
                                    mem[_6713 + 196] = this.address
                                    mem[_6713 + 228] = block.timestamp + 300
                                    mem[_6713 + 164] = 160
                                    mem[_6713 + 260] = mem[_6713]
                                    idx = 0
                                    while idx < 32 * mem[_6713]:
                                        mem[_6713 + idx + 292] = mem[_6713 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(('cd', 68)[0]))
                                    call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_6713 + 260 len (32 * mem[_6713]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_6713 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _6713 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14373 = mem[_6713 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                                    require mem[_6713 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                                    require mem[_6713 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                                    require mem[mem[_6713 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _6713 + 96] <= 4294967296 and mem[_6713 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_6713 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _6713 + 96]) + 32 <= return_data.size
                                    mem[_6713 + ceil32(return_data.size) + 96] = mem[mem[_6713 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _6713 + 96]
                                    _14837 = mem[_14373 + _6713 + 96]
                                    idx = 0
                                    while idx < 32 * _14837:
                                        mem[_6713 + ceil32(return_data.size) + idx + 128] = mem[_14373 + _6713 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14837) + _6713 + ceil32(return_data.size) + 128
                                    s = s + 1
                                    t = 1
                                    u = this.address
                                    continue 
                                mem[mem[64] + 4] = address(('cd', 68)[0])
                                mem[mem[64] + 36] = 10000 * cd[100]
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(('cd', 68)[0]), 10000 * cd[100]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _7972 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                require 0 < mem[_7972]
                                mem[_7972 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                require 1 < mem[_7972]
                                mem[_7972 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                mem[_7972 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_7972 + 100] = cd[100]
                                mem[_7972 + 132] = 1
                                mem[_7972 + 196] = this.address
                                mem[_7972 + 228] = block.timestamp + 300
                                mem[_7972 + 164] = 160
                                mem[_7972 + 260] = mem[_7972]
                                idx = 0
                                while idx < 32 * mem[_7972]:
                                    mem[_7972 + idx + 292] = mem[_7972 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                require ext_code.size(address(('cd', 68)[0]))
                                call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_7972 + 260 len (32 * mem[_7972]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_7972 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _7972 + ceil32(return_data.size) + 96
                                require return_data.size >= 32
                                _14375 = mem[_7972 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                                require mem[_7972 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                                require mem[_7972 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                                require mem[mem[_7972 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _7972 + 96] <= 4294967296 and mem[_7972 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_7972 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _7972 + 96]) + 32 <= return_data.size
                                mem[_7972 + ceil32(return_data.size) + 96] = mem[mem[_7972 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _7972 + 96]
                                _14838 = mem[_14375 + _7972 + 96]
                                idx = 0
                                while idx < 32 * _14838:
                                    mem[_7972 + ceil32(return_data.size) + idx + 128] = mem[_14375 + _7972 + idx + 128]
                                    idx = idx + 32
                                    continue 
                                mem[64] = (32 * _14838) + _7972 + ceil32(return_data.size) + 128
                                idx = floor32(_14838) + 1
                                t = 1
                                u = this.address
                                continue 
                            if s != ('cd', 36).length - 1:
                                if not address(cd[((32 * s) + cd[68] + 36)]):
                                    require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _5240 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    require s < ('cd', 36).length
                                    require s + 1 < ('cd', 36).length
                                    require s < ('cd', 4).length
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                    if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        if not address(cd[((32 * s) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                            _8626 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_8626 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_8626 + 36] = 0
                                            mem[_8626 + 68] = _5240
                                            mem[_8626 + 100] = this.address
                                            mem[_8626 + 132] = 128
                                            mem[_8626 + 164] = mem[_8626]
                                            idx = 0
                                            while idx < mem[_8626]:
                                                mem[_8626 + idx + 196] = mem[_8626 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_8626] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _5240, address(this.address), 128, mem[_8626 + 164 len mem[_8626] + 32]
                                            else:
                                                mem[floor32(mem[_8626]) + _8626 + 196] = mem[floor32(mem[_8626]) + _8626 + -(mem[_8626] % 32) + 228 len mem[_8626] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _5240, address(this.address), 128, mem[_8626], mem[_8626 + 196 len floor32(mem[_8626]) + 32]
                                        else:
                                            _8627 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_8627 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_8627 + 36] = _5240
                                            mem[_8627 + 68] = 0
                                            mem[_8627 + 100] = this.address
                                            mem[_8627 + 132] = 128
                                            mem[_8627 + 164] = mem[_8627]
                                            idx = 0
                                            while idx < mem[_8627]:
                                                mem[_8627 + idx + 196] = mem[_8627 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_8627] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _5240, 0, address(this.address), 128, mem[_8627 + 164 len mem[_8627] + 32]
                                            else:
                                                mem[floor32(mem[_8627]) + _8627 + 196] = mem[floor32(mem[_8627]) + _8627 + -(mem[_8627] % 32) + 228 len mem[_8627] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _5240, 0, address(this.address), 128, mem[_8627], mem[_8627 + 196 len floor32(mem[_8627]) + 32]
                                    else:
                                        if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            _8628 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_8628 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_8628 + 36] = 0
                                            mem[_8628 + 68] = _5240
                                            mem[_8628 + 100] = this.address
                                            mem[_8628 + 132] = 128
                                            mem[_8628 + 164] = mem[_8628]
                                            idx = 0
                                            while idx < mem[_8628]:
                                                mem[_8628 + idx + 196] = mem[_8628 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_8628] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _5240, address(this.address), 128, mem[_8628 + 164 len mem[_8628] + 32]
                                            else:
                                                mem[floor32(mem[_8628]) + _8628 + 196] = mem[floor32(mem[_8628]) + _8628 + -(mem[_8628] % 32) + 228 len mem[_8628] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _5240, address(this.address), 128, mem[_8628], mem[_8628 + 196 len floor32(mem[_8628]) + 32]
                                        else:
                                            _8629 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_8629 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_8629 + 36] = _5240
                                            mem[_8629 + 68] = 0
                                            mem[_8629 + 100] = this.address
                                            mem[_8629 + 132] = 128
                                            mem[_8629 + 164] = mem[_8629]
                                            idx = 0
                                            while idx < mem[_8629]:
                                                mem[_8629 + idx + 196] = mem[_8629 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_8629] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _5240, 0, address(this.address), 128, mem[_8629 + 164 len mem[_8629] + 32]
                                            else:
                                                mem[floor32(mem[_8629]) + _8629 + 196] = mem[floor32(mem[_8629]) + _8629 + -(mem[_8629] % 32) + 228 len mem[_8629] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _5240, 0, address(this.address), 128, mem[_8629], mem[_8629 + 196 len floor32(mem[_8629]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    s = s + 1
                                    t = 0
                                    u = this.address
                                    continue 
                                require s < ('cd', 68).length
                                require s < ('cd', 36).length
                                require s + 1 < ('cd', 36).length
                                require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                _5688 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= _5688:
                                    _7342 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_7342]
                                    mem[_7342 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_7342]
                                    mem[_7342 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                    mem[_7342 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_7342 + 100] = _5688
                                    mem[_7342 + 132] = 1
                                    mem[_7342 + 196] = this.address
                                    mem[_7342 + 228] = block.timestamp + 300
                                    mem[_7342 + 164] = 160
                                    mem[_7342 + 260] = mem[_7342]
                                    idx = 0
                                    while idx < 32 * mem[_7342]:
                                        mem[_7342 + idx + 292] = mem[_7342 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                    call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _5688, 1, 160, address(this.address), block.timestamp + 300, mem[_7342 + 260 len (32 * mem[_7342]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_7342 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _7342 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14365 = mem[_7342 + 96 len 4], Mask(224, 32, _5688) >> 32
                                    require mem[_7342 + 96 len 4], Mask(224, 32, _5688) >> 32 <= 4294967296
                                    require mem[_7342 + 96 len 4], Mask(224, 32, _5688) >> 32 + 32 <= return_data.size
                                    require mem[mem[_7342 + 96 len 4], Mask(224, 32, _5688) >> 32 + _7342 + 96] <= 4294967296 and mem[_7342 + 96 len 4], Mask(224, 32, _5688) >> 32 + (32 * mem[mem[_7342 + 96 len 4], Mask(224, 32, _5688) >> 32 + _7342 + 96]) + 32 <= return_data.size
                                    mem[_7342 + ceil32(return_data.size) + 96] = mem[mem[_7342 + 96 len 4], Mask(224, 32, _5688) >> 32 + _7342 + 96]
                                    _14833 = mem[_14365 + _7342 + 96]
                                    idx = 0
                                    while idx < 32 * _14833:
                                        mem[_7342 + ceil32(return_data.size) + idx + 128] = mem[_14365 + _7342 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14833) + _7342 + ceil32(return_data.size) + 128
                                else:
                                    mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                    mem[mem[64] + 36] = 10000 * _5688
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _5688
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _8625 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_8625]
                                    mem[_8625 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_8625]
                                    mem[_8625 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                    mem[_8625 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_8625 + 100] = _5688
                                    mem[_8625 + 132] = 1
                                    mem[_8625 + 196] = this.address
                                    mem[_8625 + 228] = block.timestamp + 300
                                    mem[_8625 + 164] = 160
                                    mem[_8625 + 260] = mem[_8625]
                                    idx = 0
                                    while idx < 32 * mem[_8625]:
                                        mem[_8625 + idx + 292] = mem[_8625 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                    call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _5688, 1, 160, address(this.address), block.timestamp + 300, mem[_8625 + 260 len (32 * mem[_8625]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_8625 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _8625 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14367 = mem[_8625 + 96 len 4], Mask(224, 32, _5688) >> 32
                                    require mem[_8625 + 96 len 4], Mask(224, 32, _5688) >> 32 <= 4294967296
                                    require mem[_8625 + 96 len 4], Mask(224, 32, _5688) >> 32 + 32 <= return_data.size
                                    require mem[mem[_8625 + 96 len 4], Mask(224, 32, _5688) >> 32 + _8625 + 96] <= 4294967296 and mem[_8625 + 96 len 4], Mask(224, 32, _5688) >> 32 + (32 * mem[mem[_8625 + 96 len 4], Mask(224, 32, _5688) >> 32 + _8625 + 96]) + 32 <= return_data.size
                                    mem[_8625 + ceil32(return_data.size) + 96] = mem[mem[_8625 + 96 len 4], Mask(224, 32, _5688) >> 32 + _8625 + 96]
                                    _14834 = mem[_14367 + _8625 + 96]
                                    idx = 0
                                    while idx < 32 * _14834:
                                        mem[_8625 + ceil32(return_data.size) + idx + 128] = mem[_14367 + _8625 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14834) + _8625 + ceil32(return_data.size) + 128
                            else:
                                if not address(cd[((32 * s) + cd[68] + 36)]):
                                    require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _5241 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    require s < ('cd', 36).length
                                    require 0 < ('cd', 36).length
                                    require s < ('cd', 4).length
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                        revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                    if address(cd[((32 * s) + cd[36] + 36)]) < address(('cd', 36)[0]):
                                        if not address(cd[((32 * s) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                            _8634 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_8634 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_8634 + 36] = 0
                                            mem[_8634 + 68] = _5241
                                            mem[_8634 + 100] = this.address
                                            mem[_8634 + 132] = 128
                                            mem[_8634 + 164] = mem[_8634]
                                            idx = 0
                                            while idx < mem[_8634]:
                                                mem[_8634 + idx + 196] = mem[_8634 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_8634] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _5241, address(this.address), 128, mem[_8634 + 164 len mem[_8634] + 32]
                                            else:
                                                mem[floor32(mem[_8634]) + _8634 + 196] = mem[floor32(mem[_8634]) + _8634 + -(mem[_8634] % 32) + 228 len mem[_8634] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _5241, address(this.address), 128, mem[_8634], mem[_8634 + 196 len floor32(mem[_8634]) + 32]
                                        else:
                                            _8635 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_8635 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_8635 + 36] = _5241
                                            mem[_8635 + 68] = 0
                                            mem[_8635 + 100] = this.address
                                            mem[_8635 + 132] = 128
                                            mem[_8635 + 164] = mem[_8635]
                                            idx = 0
                                            while idx < mem[_8635]:
                                                mem[_8635 + idx + 196] = mem[_8635 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_8635] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _5241, 0, address(this.address), 128, mem[_8635 + 164 len mem[_8635] + 32]
                                            else:
                                                mem[floor32(mem[_8635]) + _8635 + 196] = mem[floor32(mem[_8635]) + _8635 + -(mem[_8635] % 32) + 228 len mem[_8635] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _5241, 0, address(this.address), 128, mem[_8635], mem[_8635 + 196 len floor32(mem[_8635]) + 32]
                                    else:
                                        if not address(('cd', 36)[0]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                            _8636 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_8636 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_8636 + 36] = 0
                                            mem[_8636 + 68] = _5241
                                            mem[_8636 + 100] = this.address
                                            mem[_8636 + 132] = 128
                                            mem[_8636 + 164] = mem[_8636]
                                            idx = 0
                                            while idx < mem[_8636]:
                                                mem[_8636 + idx + 196] = mem[_8636 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_8636] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _5241, address(this.address), 128, mem[_8636 + 164 len mem[_8636] + 32]
                                            else:
                                                mem[floor32(mem[_8636]) + _8636 + 196] = mem[floor32(mem[_8636]) + _8636 + -(mem[_8636] % 32) + 228 len mem[_8636] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _5241, address(this.address), 128, mem[_8636], mem[_8636 + 196 len floor32(mem[_8636]) + 32]
                                        else:
                                            _8637 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_8637 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_8637 + 36] = _5241
                                            mem[_8637 + 68] = 0
                                            mem[_8637 + 100] = this.address
                                            mem[_8637 + 132] = 128
                                            mem[_8637 + 164] = mem[_8637]
                                            idx = 0
                                            while idx < mem[_8637]:
                                                mem[_8637 + idx + 196] = mem[_8637 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_8637] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _5241, 0, address(this.address), 128, mem[_8637 + 164 len mem[_8637] + 32]
                                            else:
                                                mem[floor32(mem[_8637]) + _8637 + 196] = mem[floor32(mem[_8637]) + _8637 + -(mem[_8637] % 32) + 228 len mem[_8637] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _5241, 0, address(this.address), 128, mem[_8637], mem[_8637 + 196 len floor32(mem[_8637]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    s = s + 1
                                    t = 0
                                    u = this.address
                                    continue 
                                require s < ('cd', 68).length
                                require s < ('cd', 36).length
                                require 0 < ('cd', 36).length
                                require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                _5689 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= _5689:
                                    _7347 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_7347]
                                    mem[_7347 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_7347]
                                    mem[_7347 + 64] = address(('cd', 36)[0])
                                    mem[_7347 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_7347 + 100] = _5689
                                    mem[_7347 + 132] = 1
                                    mem[_7347 + 196] = this.address
                                    mem[_7347 + 228] = block.timestamp + 300
                                    mem[_7347 + 164] = 160
                                    mem[_7347 + 260] = mem[_7347]
                                    idx = 0
                                    while idx < 32 * mem[_7347]:
                                        mem[_7347 + idx + 292] = mem[_7347 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                    call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _5689, 1, 160, address(this.address), block.timestamp + 300, mem[_7347 + 260 len (32 * mem[_7347]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_7347 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _7347 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14369 = mem[_7347 + 96 len 4], Mask(224, 32, _5689) >> 32
                                    require mem[_7347 + 96 len 4], Mask(224, 32, _5689) >> 32 <= 4294967296
                                    require mem[_7347 + 96 len 4], Mask(224, 32, _5689) >> 32 + 32 <= return_data.size
                                    require mem[mem[_7347 + 96 len 4], Mask(224, 32, _5689) >> 32 + _7347 + 96] <= 4294967296 and mem[_7347 + 96 len 4], Mask(224, 32, _5689) >> 32 + (32 * mem[mem[_7347 + 96 len 4], Mask(224, 32, _5689) >> 32 + _7347 + 96]) + 32 <= return_data.size
                                    mem[_7347 + ceil32(return_data.size) + 96] = mem[mem[_7347 + 96 len 4], Mask(224, 32, _5689) >> 32 + _7347 + 96]
                                    _14835 = mem[_14369 + _7347 + 96]
                                    idx = 0
                                    while idx < 32 * _14835:
                                        mem[_7347 + ceil32(return_data.size) + idx + 128] = mem[_14369 + _7347 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14835) + _7347 + ceil32(return_data.size) + 128
                                else:
                                    mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                    mem[mem[64] + 36] = 10000 * _5689
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _5689
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _8633 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_8633]
                                    mem[_8633 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_8633]
                                    mem[_8633 + 64] = address(('cd', 36)[0])
                                    mem[_8633 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_8633 + 100] = _5689
                                    mem[_8633 + 132] = 1
                                    mem[_8633 + 196] = this.address
                                    mem[_8633 + 228] = block.timestamp + 300
                                    mem[_8633 + 164] = 160
                                    mem[_8633 + 260] = mem[_8633]
                                    idx = 0
                                    while idx < 32 * mem[_8633]:
                                        mem[_8633 + idx + 292] = mem[_8633 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                    call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _5689, 1, 160, address(this.address), block.timestamp + 300, mem[_8633 + 260 len (32 * mem[_8633]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_8633 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _8633 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14371 = mem[_8633 + 96 len 4], Mask(224, 32, _5689) >> 32
                                    require mem[_8633 + 96 len 4], Mask(224, 32, _5689) >> 32 <= 4294967296
                                    require mem[_8633 + 96 len 4], Mask(224, 32, _5689) >> 32 + 32 <= return_data.size
                                    require mem[mem[_8633 + 96 len 4], Mask(224, 32, _5689) >> 32 + _8633 + 96] <= 4294967296 and mem[_8633 + 96 len 4], Mask(224, 32, _5689) >> 32 + (32 * mem[mem[_8633 + 96 len 4], Mask(224, 32, _5689) >> 32 + _8633 + 96]) + 32 <= return_data.size
                                    mem[_8633 + ceil32(return_data.size) + 96] = mem[mem[_8633 + 96 len 4], Mask(224, 32, _5689) >> 32 + _8633 + 96]
                                    _14836 = mem[_14371 + _8633 + 96]
                                    idx = 0
                                    while idx < 32 * _14836:
                                        mem[_8633 + ceil32(return_data.size) + idx + 128] = mem[_14371 + _8633 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14836) + _8633 + ceil32(return_data.size) + 128
                s = s + 1
                t = 1
                u = this.address
                continue 
            if s >= ('cd', 36).length - 1:
                require s + 1 < ('cd', 4).length
                require s < ('cd', 68).length
                if not t:
                    if not s:
                        if not address(cd[((32 * s) + cd[68] + 36)]):
                            require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            _4576 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                            require s < ('cd', 36).length
                            require s + 1 < ('cd', 36).length
                            require s < ('cd', 4).length
                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                            if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                if not address(cd[((32 * s) + cd[36] + 36)]):
                                    revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                    _5510 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_5510 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_5510 + 36] = 0
                                    mem[_5510 + 68] = _4576
                                    mem[_5510 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    mem[_5510 + 132] = 128
                                    mem[_5510 + 164] = mem[_5510]
                                    idx = 0
                                    while idx < mem[_5510]:
                                        mem[_5510 + idx + 196] = mem[_5510 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    if not mem[_5510] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _4576, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5510 + 164 len mem[_5510] + 32]
                                    else:
                                        mem[floor32(mem[_5510]) + _5510 + 196] = mem[floor32(mem[_5510]) + _5510 + -(mem[_5510] % 32) + 228 len mem[_5510] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _4576, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5510], mem[_5510 + 196 len floor32(mem[_5510]) + 32]
                                else:
                                    _5511 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_5511 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_5511 + 36] = _4576
                                    mem[_5511 + 68] = 0
                                    mem[_5511 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    mem[_5511 + 132] = 128
                                    mem[_5511 + 164] = mem[_5511]
                                    idx = 0
                                    while idx < mem[_5511]:
                                        mem[_5511 + idx + 196] = mem[_5511 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    if not mem[_5511] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _4576, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5511 + 164 len mem[_5511] + 32]
                                    else:
                                        mem[floor32(mem[_5511]) + _5511 + 196] = mem[floor32(mem[_5511]) + _5511 + -(mem[_5511] % 32) + 228 len mem[_5511] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _4576, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5511], mem[_5511 + 196 len floor32(mem[_5511]) + 32]
                            else:
                                if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                    revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                    _5512 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_5512 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_5512 + 36] = 0
                                    mem[_5512 + 68] = _4576
                                    mem[_5512 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    mem[_5512 + 132] = 128
                                    mem[_5512 + 164] = mem[_5512]
                                    idx = 0
                                    while idx < mem[_5512]:
                                        mem[_5512 + idx + 196] = mem[_5512 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    if not mem[_5512] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _4576, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5512 + 164 len mem[_5512] + 32]
                                    else:
                                        mem[floor32(mem[_5512]) + _5512 + 196] = mem[floor32(mem[_5512]) + _5512 + -(mem[_5512] % 32) + 228 len mem[_5512] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _4576, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5512], mem[_5512 + 196 len floor32(mem[_5512]) + 32]
                                else:
                                    _5513 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_5513 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_5513 + 36] = _4576
                                    mem[_5513 + 68] = 0
                                    mem[_5513 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    mem[_5513 + 132] = 128
                                    mem[_5513 + 164] = mem[_5513]
                                    idx = 0
                                    while idx < mem[_5513]:
                                        mem[_5513 + idx + 196] = mem[_5513 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    if not mem[_5513] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _4576, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5513 + 164 len mem[_5513] + 32]
                                    else:
                                        mem[floor32(mem[_5513]) + _5513 + 196] = mem[floor32(mem[_5513]) + _5513 + -(mem[_5513] % 32) + 228 len mem[_5513] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _4576, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5513], mem[_5513 + 196 len floor32(mem[_5513]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            s = s + 1
                            t = 0
                            u = address(cd[((32 * s + 1) + cd[4] + 36)])
                            continue 
                        require 0 < ('cd', 68).length
                        require s < ('cd', 36).length
                        require s + 1 < ('cd', 36).length
                        mem[mem[64] + 4] = this.address
                        mem[mem[64] + 36] = address(('cd', 68)[0])
                        require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                        staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                gas gas_remaining wei
                               args address(this.address), address(('cd', 68)[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= cd[100]:
                            _4925 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            require 0 < mem[_4925]
                            mem[_4925 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                            require 1 < mem[_4925]
                            mem[_4925 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                            mem[_4925 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_4925 + 100] = cd[100]
                            mem[_4925 + 132] = 1
                            mem[_4925 + 196] = this.address
                            mem[_4925 + 228] = block.timestamp + 300
                            mem[_4925 + 164] = 160
                            mem[_4925 + 260] = mem[_4925]
                            idx = 0
                            while idx < 32 * mem[_4925]:
                                mem[_4925 + idx + 292] = mem[_4925 + idx + 32]
                                idx = idx + 32
                                continue 
                            require ext_code.size(address(('cd', 68)[0]))
                            call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_4925 + 260 len (32 * mem[_4925]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_4925 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _4925 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _14397 = mem[_4925 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                            require mem[_4925 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                            require mem[_4925 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                            require mem[mem[_4925 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _4925 + 96] <= 4294967296 and mem[_4925 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_4925 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _4925 + 96]) + 32 <= return_data.size
                            mem[_4925 + ceil32(return_data.size) + 96] = mem[mem[_4925 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _4925 + 96]
                            _14849 = mem[_14397 + _4925 + 96]
                            idx = 0
                            while idx < 32 * _14849:
                                mem[_4925 + ceil32(return_data.size) + idx + 128] = mem[_14397 + _4925 + idx + 128]
                                idx = idx + 32
                                continue 
                            mem[64] = (32 * _14849) + _4925 + ceil32(return_data.size) + 128
                        else:
                            mem[mem[64] + 4] = address(('cd', 68)[0])
                            mem[mem[64] + 36] = 10000 * cd[100]
                            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                            call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(('cd', 68)[0]), 10000 * cd[100]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            _5376 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            require 0 < mem[_5376]
                            mem[_5376 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                            require 1 < mem[_5376]
                            mem[_5376 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                            mem[_5376 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_5376 + 100] = cd[100]
                            mem[_5376 + 132] = 1
                            mem[_5376 + 196] = this.address
                            mem[_5376 + 228] = block.timestamp + 300
                            mem[_5376 + 164] = 160
                            mem[_5376 + 260] = mem[_5376]
                            idx = 0
                            while idx < 32 * mem[_5376]:
                                mem[_5376 + idx + 292] = mem[_5376 + idx + 32]
                                idx = idx + 32
                                continue 
                            require ext_code.size(address(('cd', 68)[0]))
                            call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_5376 + 260 len (32 * mem[_5376]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_5376 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _5376 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _14399 = mem[_5376 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                            require mem[_5376 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                            require mem[_5376 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                            require mem[mem[_5376 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _5376 + 96] <= 4294967296 and mem[_5376 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_5376 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _5376 + 96]) + 32 <= return_data.size
                            mem[_5376 + ceil32(return_data.size) + 96] = mem[mem[_5376 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _5376 + 96]
                            _14850 = mem[_14399 + _5376 + 96]
                            idx = 0
                            while idx < 32 * _14850:
                                mem[_5376 + ceil32(return_data.size) + idx + 128] = mem[_14399 + _5376 + idx + 128]
                                idx = idx + 32
                                continue 
                            mem[64] = (32 * _14850) + _5376 + ceil32(return_data.size) + 128
                    else:
                        if s != ('cd', 36).length - 1:
                            if not address(cd[((32 * s) + cd[68] + 36)]):
                                require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                _4596 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                require s < ('cd', 36).length
                                require s + 1 < ('cd', 36).length
                                require s < ('cd', 4).length
                                if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                    revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                    if not address(cd[((32 * s) + cd[36] + 36)]):
                                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                        _5699 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_5699 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_5699 + 36] = 0
                                        mem[_5699 + 68] = _4596
                                        mem[_5699 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                        mem[_5699 + 132] = 128
                                        mem[_5699 + 164] = mem[_5699]
                                        idx = 0
                                        while idx < mem[_5699]:
                                            mem[_5699 + idx + 196] = mem[_5699 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_5699] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4596, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5699 + 164 len mem[_5699] + 32]
                                        else:
                                            mem[floor32(mem[_5699]) + _5699 + 196] = mem[floor32(mem[_5699]) + _5699 + -(mem[_5699] % 32) + 228 len mem[_5699] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4596, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5699], mem[_5699 + 196 len floor32(mem[_5699]) + 32]
                                    else:
                                        _5700 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_5700 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_5700 + 36] = _4596
                                        mem[_5700 + 68] = 0
                                        mem[_5700 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                        mem[_5700 + 132] = 128
                                        mem[_5700 + 164] = mem[_5700]
                                        idx = 0
                                        while idx < mem[_5700]:
                                            mem[_5700 + idx + 196] = mem[_5700 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_5700] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4596, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5700 + 164 len mem[_5700] + 32]
                                        else:
                                            mem[floor32(mem[_5700]) + _5700 + 196] = mem[floor32(mem[_5700]) + _5700 + -(mem[_5700] % 32) + 228 len mem[_5700] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4596, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5700], mem[_5700 + 196 len floor32(mem[_5700]) + 32]
                                else:
                                    if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        _5701 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_5701 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_5701 + 36] = 0
                                        mem[_5701 + 68] = _4596
                                        mem[_5701 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                        mem[_5701 + 132] = 128
                                        mem[_5701 + 164] = mem[_5701]
                                        idx = 0
                                        while idx < mem[_5701]:
                                            mem[_5701 + idx + 196] = mem[_5701 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_5701] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4596, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5701 + 164 len mem[_5701] + 32]
                                        else:
                                            mem[floor32(mem[_5701]) + _5701 + 196] = mem[floor32(mem[_5701]) + _5701 + -(mem[_5701] % 32) + 228 len mem[_5701] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4596, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5701], mem[_5701 + 196 len floor32(mem[_5701]) + 32]
                                    else:
                                        _5702 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_5702 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_5702 + 36] = _4596
                                        mem[_5702 + 68] = 0
                                        mem[_5702 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                        mem[_5702 + 132] = 128
                                        mem[_5702 + 164] = mem[_5702]
                                        idx = 0
                                        while idx < mem[_5702]:
                                            mem[_5702 + idx + 196] = mem[_5702 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_5702] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4596, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5702 + 164 len mem[_5702] + 32]
                                        else:
                                            mem[floor32(mem[_5702]) + _5702 + 196] = mem[floor32(mem[_5702]) + _5702 + -(mem[_5702] % 32) + 228 len mem[_5702] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4596, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5702], mem[_5702 + 196 len floor32(mem[_5702]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                s = s + 1
                                t = 0
                                u = address(cd[((32 * s + 1) + cd[4] + 36)])
                                continue 
                            require s < ('cd', 68).length
                            require s < ('cd', 36).length
                            require s + 1 < ('cd', 36).length
                            require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            _4690 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                            mem[mem[64] + 4] = this.address
                            mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                            staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                    gas gas_remaining wei
                                   args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= _4690:
                                _5093 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                require 0 < mem[_5093]
                                mem[_5093 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                require 1 < mem[_5093]
                                mem[_5093 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                mem[_5093 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_5093 + 100] = _4690
                                mem[_5093 + 132] = 1
                                mem[_5093 + 196] = this.address
                                mem[_5093 + 228] = block.timestamp + 300
                                mem[_5093 + 164] = 160
                                mem[_5093 + 260] = mem[_5093]
                                idx = 0
                                while idx < 32 * mem[_5093]:
                                    mem[_5093 + idx + 292] = mem[_5093 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _4690, 1, 160, address(this.address), block.timestamp + 300, mem[_5093 + 260 len (32 * mem[_5093]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_5093 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _5093 + ceil32(return_data.size) + 96
                                require return_data.size >= 32
                                _14389 = mem[_5093 + 96 len 4], Mask(224, 32, _4690) >> 32
                                require mem[_5093 + 96 len 4], Mask(224, 32, _4690) >> 32 <= 4294967296
                                require mem[_5093 + 96 len 4], Mask(224, 32, _4690) >> 32 + 32 <= return_data.size
                                require mem[mem[_5093 + 96 len 4], Mask(224, 32, _4690) >> 32 + _5093 + 96] <= 4294967296 and mem[_5093 + 96 len 4], Mask(224, 32, _4690) >> 32 + (32 * mem[mem[_5093 + 96 len 4], Mask(224, 32, _4690) >> 32 + _5093 + 96]) + 32 <= return_data.size
                                mem[_5093 + ceil32(return_data.size) + 96] = mem[mem[_5093 + 96 len 4], Mask(224, 32, _4690) >> 32 + _5093 + 96]
                                _14845 = mem[_14389 + _5093 + 96]
                                idx = 0
                                while idx < 32 * _14845:
                                    mem[_5093 + ceil32(return_data.size) + idx + 128] = mem[_14389 + _5093 + idx + 128]
                                    idx = idx + 32
                                    continue 
                                mem[64] = (32 * _14845) + _5093 + ceil32(return_data.size) + 128
                            else:
                                mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                mem[mem[64] + 36] = 10000 * _4690
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _4690
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _5698 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                require 0 < mem[_5698]
                                mem[_5698 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                require 1 < mem[_5698]
                                mem[_5698 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                mem[_5698 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_5698 + 100] = _4690
                                mem[_5698 + 132] = 1
                                mem[_5698 + 196] = this.address
                                mem[_5698 + 228] = block.timestamp + 300
                                mem[_5698 + 164] = 160
                                mem[_5698 + 260] = mem[_5698]
                                idx = 0
                                while idx < 32 * mem[_5698]:
                                    mem[_5698 + idx + 292] = mem[_5698 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _4690, 1, 160, address(this.address), block.timestamp + 300, mem[_5698 + 260 len (32 * mem[_5698]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_5698 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _5698 + ceil32(return_data.size) + 96
                                require return_data.size >= 32
                                _14391 = mem[_5698 + 96 len 4], Mask(224, 32, _4690) >> 32
                                require mem[_5698 + 96 len 4], Mask(224, 32, _4690) >> 32 <= 4294967296
                                require mem[_5698 + 96 len 4], Mask(224, 32, _4690) >> 32 + 32 <= return_data.size
                                require mem[mem[_5698 + 96 len 4], Mask(224, 32, _4690) >> 32 + _5698 + 96] <= 4294967296 and mem[_5698 + 96 len 4], Mask(224, 32, _4690) >> 32 + (32 * mem[mem[_5698 + 96 len 4], Mask(224, 32, _4690) >> 32 + _5698 + 96]) + 32 <= return_data.size
                                mem[_5698 + ceil32(return_data.size) + 96] = mem[mem[_5698 + 96 len 4], Mask(224, 32, _4690) >> 32 + _5698 + 96]
                                _14846 = mem[_14391 + _5698 + 96]
                                idx = 0
                                while idx < 32 * _14846:
                                    mem[_5698 + ceil32(return_data.size) + idx + 128] = mem[_14391 + _5698 + idx + 128]
                                    idx = idx + 32
                                    continue 
                                mem[64] = (32 * _14846) + _5698 + ceil32(return_data.size) + 128
                        else:
                            if not address(cd[((32 * s) + cd[68] + 36)]):
                                require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                _4597 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                require s < ('cd', 36).length
                                require 0 < ('cd', 36).length
                                require s < ('cd', 4).length
                                if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                    revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                if address(cd[((32 * s) + cd[36] + 36)]) < address(('cd', 36)[0]):
                                    if not address(cd[((32 * s) + cd[36] + 36)]):
                                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                        _5707 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_5707 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_5707 + 36] = 0
                                        mem[_5707 + 68] = _4597
                                        mem[_5707 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                        mem[_5707 + 132] = 128
                                        mem[_5707 + 164] = mem[_5707]
                                        idx = 0
                                        while idx < mem[_5707]:
                                            mem[_5707 + idx + 196] = mem[_5707 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_5707] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4597, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5707 + 164 len mem[_5707] + 32]
                                        else:
                                            mem[floor32(mem[_5707]) + _5707 + 196] = mem[floor32(mem[_5707]) + _5707 + -(mem[_5707] % 32) + 228 len mem[_5707] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4597, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5707], mem[_5707 + 196 len floor32(mem[_5707]) + 32]
                                    else:
                                        _5708 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_5708 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_5708 + 36] = _4597
                                        mem[_5708 + 68] = 0
                                        mem[_5708 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                        mem[_5708 + 132] = 128
                                        mem[_5708 + 164] = mem[_5708]
                                        idx = 0
                                        while idx < mem[_5708]:
                                            mem[_5708 + idx + 196] = mem[_5708 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_5708] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4597, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5708 + 164 len mem[_5708] + 32]
                                        else:
                                            mem[floor32(mem[_5708]) + _5708 + 196] = mem[floor32(mem[_5708]) + _5708 + -(mem[_5708] % 32) + 228 len mem[_5708] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4597, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5708], mem[_5708 + 196 len floor32(mem[_5708]) + 32]
                                else:
                                    if not address(('cd', 36)[0]):
                                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                        _5709 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_5709 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_5709 + 36] = 0
                                        mem[_5709 + 68] = _4597
                                        mem[_5709 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                        mem[_5709 + 132] = 128
                                        mem[_5709 + 164] = mem[_5709]
                                        idx = 0
                                        while idx < mem[_5709]:
                                            mem[_5709 + idx + 196] = mem[_5709 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_5709] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4597, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5709 + 164 len mem[_5709] + 32]
                                        else:
                                            mem[floor32(mem[_5709]) + _5709 + 196] = mem[floor32(mem[_5709]) + _5709 + -(mem[_5709] % 32) + 228 len mem[_5709] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4597, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5709], mem[_5709 + 196 len floor32(mem[_5709]) + 32]
                                    else:
                                        _5710 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_5710 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_5710 + 36] = _4597
                                        mem[_5710 + 68] = 0
                                        mem[_5710 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                        mem[_5710 + 132] = 128
                                        mem[_5710 + 164] = mem[_5710]
                                        idx = 0
                                        while idx < mem[_5710]:
                                            mem[_5710 + idx + 196] = mem[_5710 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_5710] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4597, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5710 + 164 len mem[_5710] + 32]
                                        else:
                                            mem[floor32(mem[_5710]) + _5710 + 196] = mem[floor32(mem[_5710]) + _5710 + -(mem[_5710] % 32) + 228 len mem[_5710] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4597, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_5710], mem[_5710 + 196 len floor32(mem[_5710]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                s = s + 1
                                t = 0
                                u = address(cd[((32 * s + 1) + cd[4] + 36)])
                                continue 
                            require s < ('cd', 68).length
                            require s < ('cd', 36).length
                            require 0 < ('cd', 36).length
                            require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            _4691 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                            mem[mem[64] + 4] = this.address
                            mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                            staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                    gas gas_remaining wei
                                   args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= _4691:
                                _5098 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                require 0 < mem[_5098]
                                mem[_5098 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                require 1 < mem[_5098]
                                mem[_5098 + 64] = address(('cd', 36)[0])
                                mem[_5098 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_5098 + 100] = _4691
                                mem[_5098 + 132] = 1
                                mem[_5098 + 196] = this.address
                                mem[_5098 + 228] = block.timestamp + 300
                                mem[_5098 + 164] = 160
                                mem[_5098 + 260] = mem[_5098]
                                idx = 0
                                while idx < 32 * mem[_5098]:
                                    mem[_5098 + idx + 292] = mem[_5098 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _4691, 1, 160, address(this.address), block.timestamp + 300, mem[_5098 + 260 len (32 * mem[_5098]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_5098 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _5098 + ceil32(return_data.size) + 96
                                require return_data.size >= 32
                                _14393 = mem[_5098 + 96 len 4], Mask(224, 32, _4691) >> 32
                                require mem[_5098 + 96 len 4], Mask(224, 32, _4691) >> 32 <= 4294967296
                                require mem[_5098 + 96 len 4], Mask(224, 32, _4691) >> 32 + 32 <= return_data.size
                                require mem[mem[_5098 + 96 len 4], Mask(224, 32, _4691) >> 32 + _5098 + 96] <= 4294967296 and mem[_5098 + 96 len 4], Mask(224, 32, _4691) >> 32 + (32 * mem[mem[_5098 + 96 len 4], Mask(224, 32, _4691) >> 32 + _5098 + 96]) + 32 <= return_data.size
                                mem[_5098 + ceil32(return_data.size) + 96] = mem[mem[_5098 + 96 len 4], Mask(224, 32, _4691) >> 32 + _5098 + 96]
                                _14847 = mem[_14393 + _5098 + 96]
                                idx = 0
                                while idx < 32 * _14847:
                                    mem[_5098 + ceil32(return_data.size) + idx + 128] = mem[_14393 + _5098 + idx + 128]
                                    idx = idx + 32
                                    continue 
                                mem[64] = (32 * _14847) + _5098 + ceil32(return_data.size) + 128
                            else:
                                mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                mem[mem[64] + 36] = 10000 * _4691
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _4691
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _5706 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                require 0 < mem[_5706]
                                mem[_5706 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                require 1 < mem[_5706]
                                mem[_5706 + 64] = address(('cd', 36)[0])
                                mem[_5706 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_5706 + 100] = _4691
                                mem[_5706 + 132] = 1
                                mem[_5706 + 196] = this.address
                                mem[_5706 + 228] = block.timestamp + 300
                                mem[_5706 + 164] = 160
                                mem[_5706 + 260] = mem[_5706]
                                idx = 0
                                while idx < 32 * mem[_5706]:
                                    mem[_5706 + idx + 292] = mem[_5706 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _4691, 1, 160, address(this.address), block.timestamp + 300, mem[_5706 + 260 len (32 * mem[_5706]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_5706 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _5706 + ceil32(return_data.size) + 96
                                require return_data.size >= 32
                                _14395 = mem[_5706 + 96 len 4], Mask(224, 32, _4691) >> 32
                                require mem[_5706 + 96 len 4], Mask(224, 32, _4691) >> 32 <= 4294967296
                                require mem[_5706 + 96 len 4], Mask(224, 32, _4691) >> 32 + 32 <= return_data.size
                                require mem[mem[_5706 + 96 len 4], Mask(224, 32, _4691) >> 32 + _5706 + 96] <= 4294967296 and mem[_5706 + 96 len 4], Mask(224, 32, _4691) >> 32 + (32 * mem[mem[_5706 + 96 len 4], Mask(224, 32, _4691) >> 32 + _5706 + 96]) + 32 <= return_data.size
                                mem[_5706 + ceil32(return_data.size) + 96] = mem[mem[_5706 + 96 len 4], Mask(224, 32, _4691) >> 32 + _5706 + 96]
                                _14848 = mem[_14395 + _5706 + 96]
                                idx = 0
                                while idx < 32 * _14848:
                                    mem[_5706 + ceil32(return_data.size) + idx + 128] = mem[_14395 + _5706 + idx + 128]
                                    idx = idx + 32
                                    continue 
                                mem[64] = (32 * _14848) + _5706 + ceil32(return_data.size) + 128
                else:
                    if address(cd[((32 * s) + cd[68] + 36)]):
                        require s < ('cd', 68).length
                        if not s:
                            if not address(cd[((32 * s) + cd[68] + 36)]):
                                require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                _4694 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                require s < ('cd', 36).length
                                require s + 1 < ('cd', 36).length
                                require s < ('cd', 4).length
                                if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                    revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                    if not address(cd[((32 * s) + cd[36] + 36)]):
                                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                        _6429 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_6429 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_6429 + 36] = 0
                                        mem[_6429 + 68] = _4694
                                        mem[_6429 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                        mem[_6429 + 132] = 128
                                        mem[_6429 + 164] = mem[_6429]
                                        idx = 0
                                        while idx < mem[_6429]:
                                            mem[_6429 + idx + 196] = mem[_6429 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_6429] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4694, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6429 + 164 len mem[_6429] + 32]
                                        else:
                                            mem[floor32(mem[_6429]) + _6429 + 196] = mem[floor32(mem[_6429]) + _6429 + -(mem[_6429] % 32) + 228 len mem[_6429] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4694, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6429], mem[_6429 + 196 len floor32(mem[_6429]) + 32]
                                    else:
                                        _6430 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_6430 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_6430 + 36] = _4694
                                        mem[_6430 + 68] = 0
                                        mem[_6430 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                        mem[_6430 + 132] = 128
                                        mem[_6430 + 164] = mem[_6430]
                                        idx = 0
                                        while idx < mem[_6430]:
                                            mem[_6430 + idx + 196] = mem[_6430 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_6430] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4694, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6430 + 164 len mem[_6430] + 32]
                                        else:
                                            mem[floor32(mem[_6430]) + _6430 + 196] = mem[floor32(mem[_6430]) + _6430 + -(mem[_6430] % 32) + 228 len mem[_6430] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4694, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6430], mem[_6430 + 196 len floor32(mem[_6430]) + 32]
                                else:
                                    if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        _6431 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_6431 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_6431 + 36] = 0
                                        mem[_6431 + 68] = _4694
                                        mem[_6431 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                        mem[_6431 + 132] = 128
                                        mem[_6431 + 164] = mem[_6431]
                                        idx = 0
                                        while idx < mem[_6431]:
                                            mem[_6431 + idx + 196] = mem[_6431 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_6431] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4694, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6431 + 164 len mem[_6431] + 32]
                                        else:
                                            mem[floor32(mem[_6431]) + _6431 + 196] = mem[floor32(mem[_6431]) + _6431 + -(mem[_6431] % 32) + 228 len mem[_6431] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4694, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6431], mem[_6431 + 196 len floor32(mem[_6431]) + 32]
                                    else:
                                        _6432 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_6432 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_6432 + 36] = _4694
                                        mem[_6432 + 68] = 0
                                        mem[_6432 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                        mem[_6432 + 132] = 128
                                        mem[_6432 + 164] = mem[_6432]
                                        idx = 0
                                        while idx < mem[_6432]:
                                            mem[_6432 + idx + 196] = mem[_6432 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_6432] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4694, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6432 + 164 len mem[_6432] + 32]
                                        else:
                                            mem[floor32(mem[_6432]) + _6432 + 196] = mem[floor32(mem[_6432]) + _6432 + -(mem[_6432] % 32) + 228 len mem[_6432] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4694, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6432], mem[_6432 + 196 len floor32(mem[_6432]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                s = s + 1
                                t = 0
                                u = address(cd[((32 * s + 1) + cd[4] + 36)])
                                continue 
                            require 0 < ('cd', 68).length
                            require s < ('cd', 36).length
                            require s + 1 < ('cd', 36).length
                            mem[mem[64] + 4] = this.address
                            mem[mem[64] + 36] = address(('cd', 68)[0])
                            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                            staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                    gas gas_remaining wei
                                   args address(this.address), address(('cd', 68)[0])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= cd[100]:
                                _5379 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                require 0 < mem[_5379]
                                mem[_5379 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                require 1 < mem[_5379]
                                mem[_5379 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                mem[_5379 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_5379 + 100] = cd[100]
                                mem[_5379 + 132] = 1
                                mem[_5379 + 196] = this.address
                                mem[_5379 + 228] = block.timestamp + 300
                                mem[_5379 + 164] = 160
                                mem[_5379 + 260] = mem[_5379]
                                idx = 0
                                while idx < 32 * mem[_5379]:
                                    mem[_5379 + idx + 292] = mem[_5379 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                require ext_code.size(address(('cd', 68)[0]))
                                call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_5379 + 260 len (32 * mem[_5379]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_5379 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _5379 + ceil32(return_data.size) + 96
                                require return_data.size >= 32
                                _14409 = mem[_5379 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                                require mem[_5379 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                                require mem[_5379 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                                require mem[mem[_5379 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _5379 + 96] <= 4294967296 and mem[_5379 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_5379 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _5379 + 96]) + 32 <= return_data.size
                                mem[_5379 + ceil32(return_data.size) + 96] = mem[mem[_5379 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _5379 + 96]
                                _14855 = mem[_14409 + _5379 + 96]
                                idx = 0
                                while idx < 32 * _14855:
                                    mem[_5379 + ceil32(return_data.size) + idx + 128] = mem[_14409 + _5379 + idx + 128]
                                    idx = idx + 32
                                    continue 
                                mem[64] = (32 * _14855) + _5379 + ceil32(return_data.size) + 128
                            else:
                                mem[mem[64] + 4] = address(('cd', 68)[0])
                                mem[mem[64] + 36] = 10000 * cd[100]
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(('cd', 68)[0]), 10000 * cd[100]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _6205 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                require 0 < mem[_6205]
                                mem[_6205 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                require 1 < mem[_6205]
                                mem[_6205 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                mem[_6205 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_6205 + 100] = cd[100]
                                mem[_6205 + 132] = 1
                                mem[_6205 + 196] = this.address
                                mem[_6205 + 228] = block.timestamp + 300
                                mem[_6205 + 164] = 160
                                mem[_6205 + 260] = mem[_6205]
                                idx = 0
                                while idx < 32 * mem[_6205]:
                                    mem[_6205 + idx + 292] = mem[_6205 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                require ext_code.size(address(('cd', 68)[0]))
                                call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_6205 + 260 len (32 * mem[_6205]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_6205 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _6205 + ceil32(return_data.size) + 96
                                require return_data.size >= 32
                                _14411 = mem[_6205 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                                require mem[_6205 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                                require mem[_6205 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                                require mem[mem[_6205 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _6205 + 96] <= 4294967296 and mem[_6205 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_6205 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _6205 + 96]) + 32 <= return_data.size
                                mem[_6205 + ceil32(return_data.size) + 96] = mem[mem[_6205 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _6205 + 96]
                                _14856 = mem[_14411 + _6205 + 96]
                                idx = 0
                                while idx < 32 * _14856:
                                    mem[_6205 + ceil32(return_data.size) + idx + 128] = mem[_14411 + _6205 + idx + 128]
                                    idx = idx + 32
                                    continue 
                                mem[64] = (32 * _14856) + _6205 + ceil32(return_data.size) + 128
                        else:
                            if s != ('cd', 36).length - 1:
                                if not address(cd[((32 * s) + cd[68] + 36)]):
                                    require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _4736 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    require s < ('cd', 36).length
                                    require s + 1 < ('cd', 36).length
                                    require s < ('cd', 4).length
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                    if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        if not address(cd[((32 * s) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                            _6757 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_6757 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_6757 + 36] = 0
                                            mem[_6757 + 68] = _4736
                                            mem[_6757 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                            mem[_6757 + 132] = 128
                                            mem[_6757 + 164] = mem[_6757]
                                            t = 0
                                            while t < mem[_6757]:
                                                mem[_6757 + t + 196] = mem[_6757 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_6757] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4736, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6757 + 164 len mem[_6757] + 32]
                                            else:
                                                mem[floor32(mem[_6757]) + _6757 + 196] = mem[floor32(mem[_6757]) + _6757 + -(mem[_6757] % 32) + 228 len mem[_6757] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4736, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6757], mem[_6757 + 196 len floor32(mem[_6757]) + 32]
                                        else:
                                            _6758 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_6758 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_6758 + 36] = _4736
                                            mem[_6758 + 68] = 0
                                            mem[_6758 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                            mem[_6758 + 132] = 128
                                            mem[_6758 + 164] = mem[_6758]
                                            t = 0
                                            while t < mem[_6758]:
                                                mem[_6758 + t + 196] = mem[_6758 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_6758] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4736, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6758 + 164 len mem[_6758] + 32]
                                            else:
                                                mem[floor32(mem[_6758]) + _6758 + 196] = mem[floor32(mem[_6758]) + _6758 + -(mem[_6758] % 32) + 228 len mem[_6758] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4736, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6758], mem[_6758 + 196 len floor32(mem[_6758]) + 32]
                                    else:
                                        if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            _6759 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_6759 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_6759 + 36] = 0
                                            mem[_6759 + 68] = _4736
                                            mem[_6759 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                            mem[_6759 + 132] = 128
                                            mem[_6759 + 164] = mem[_6759]
                                            t = 0
                                            while t < mem[_6759]:
                                                mem[_6759 + t + 196] = mem[_6759 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_6759] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4736, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6759 + 164 len mem[_6759] + 32]
                                            else:
                                                mem[floor32(mem[_6759]) + _6759 + 196] = mem[floor32(mem[_6759]) + _6759 + -(mem[_6759] % 32) + 228 len mem[_6759] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4736, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6759], mem[_6759 + 196 len floor32(mem[_6759]) + 32]
                                        else:
                                            _6760 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_6760 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_6760 + 36] = _4736
                                            mem[_6760 + 68] = 0
                                            mem[_6760 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                            mem[_6760 + 132] = 128
                                            mem[_6760 + 164] = mem[_6760]
                                            t = 0
                                            while t < mem[_6760]:
                                                mem[_6760 + t + 196] = mem[_6760 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_6760] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4736, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6760 + 164 len mem[_6760] + 32]
                                            else:
                                                mem[floor32(mem[_6760]) + _6760 + 196] = mem[floor32(mem[_6760]) + _6760 + -(mem[_6760] % 32) + 228 len mem[_6760] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4736, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6760], mem[_6760 + 196 len floor32(mem[_6760]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    s = s + 1
                                    t = 0
                                    u = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    continue 
                                require s < ('cd', 68).length
                                require s < ('cd', 36).length
                                require s + 1 < ('cd', 36).length
                                require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                _4926 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= _4926:
                                    _5726 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_5726]
                                    mem[_5726 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_5726]
                                    mem[_5726 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                    mem[_5726 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_5726 + 100] = _4926
                                    mem[_5726 + 132] = 1
                                    mem[_5726 + 196] = this.address
                                    mem[_5726 + 228] = block.timestamp + 300
                                    mem[_5726 + 164] = 160
                                    mem[_5726 + 260] = mem[_5726]
                                    idx = 0
                                    while idx < 32 * mem[_5726]:
                                        mem[_5726 + idx + 292] = mem[_5726 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                    call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4926, 1, 160, address(this.address), block.timestamp + 300, mem[_5726 + 260 len (32 * mem[_5726]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_5726 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _5726 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14401 = mem[_5726 + 96 len 4], Mask(224, 32, _4926) >> 32
                                    require mem[_5726 + 96 len 4], Mask(224, 32, _4926) >> 32 <= 4294967296
                                    require mem[_5726 + 96 len 4], Mask(224, 32, _4926) >> 32 + 32 <= return_data.size
                                    require mem[mem[_5726 + 96 len 4], Mask(224, 32, _4926) >> 32 + _5726 + 96] <= 4294967296 and mem[_5726 + 96 len 4], Mask(224, 32, _4926) >> 32 + (32 * mem[mem[_5726 + 96 len 4], Mask(224, 32, _4926) >> 32 + _5726 + 96]) + 32 <= return_data.size
                                    mem[_5726 + ceil32(return_data.size) + 96] = mem[mem[_5726 + 96 len 4], Mask(224, 32, _4926) >> 32 + _5726 + 96]
                                    _14851 = mem[_14401 + _5726 + 96]
                                    idx = 0
                                    while idx < 32 * _14851:
                                        mem[_5726 + ceil32(return_data.size) + idx + 128] = mem[_14401 + _5726 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14851) + _5726 + ceil32(return_data.size) + 128
                                else:
                                    mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                    mem[mem[64] + 36] = 10000 * _4926
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _4926
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _6756 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_6756]
                                    mem[_6756 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_6756]
                                    mem[_6756 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                    mem[_6756 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_6756 + 100] = _4926
                                    mem[_6756 + 132] = 1
                                    mem[_6756 + 196] = this.address
                                    mem[_6756 + 228] = block.timestamp + 300
                                    mem[_6756 + 164] = 160
                                    mem[_6756 + 260] = mem[_6756]
                                    idx = 0
                                    while idx < 32 * mem[_6756]:
                                        mem[_6756 + idx + 292] = mem[_6756 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                    call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4926, 1, 160, address(this.address), block.timestamp + 300, mem[_6756 + 260 len (32 * mem[_6756]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_6756 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _6756 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14403 = mem[_6756 + 96 len 4], Mask(224, 32, _4926) >> 32
                                    require mem[_6756 + 96 len 4], Mask(224, 32, _4926) >> 32 <= 4294967296
                                    require mem[_6756 + 96 len 4], Mask(224, 32, _4926) >> 32 + 32 <= return_data.size
                                    require mem[mem[_6756 + 96 len 4], Mask(224, 32, _4926) >> 32 + _6756 + 96] <= 4294967296 and mem[_6756 + 96 len 4], Mask(224, 32, _4926) >> 32 + (32 * mem[mem[_6756 + 96 len 4], Mask(224, 32, _4926) >> 32 + _6756 + 96]) + 32 <= return_data.size
                                    mem[_6756 + ceil32(return_data.size) + 96] = mem[mem[_6756 + 96 len 4], Mask(224, 32, _4926) >> 32 + _6756 + 96]
                                    _14852 = mem[_14403 + _6756 + 96]
                                    idx = 0
                                    while idx < 32 * _14852:
                                        mem[_6756 + ceil32(return_data.size) + idx + 128] = mem[_14403 + _6756 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14852) + _6756 + ceil32(return_data.size) + 128
                            else:
                                if not address(cd[((32 * s) + cd[68] + 36)]):
                                    require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _4737 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    require s < ('cd', 36).length
                                    require 0 < ('cd', 36).length
                                    require s < ('cd', 4).length
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                        revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                    if address(cd[((32 * s) + cd[36] + 36)]) < address(('cd', 36)[0]):
                                        if not address(cd[((32 * s) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                            _6765 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_6765 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_6765 + 36] = 0
                                            mem[_6765 + 68] = _4737
                                            mem[_6765 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                            mem[_6765 + 132] = 128
                                            mem[_6765 + 164] = mem[_6765]
                                            t = 0
                                            while t < mem[_6765]:
                                                mem[_6765 + t + 196] = mem[_6765 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_6765] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4737, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6765 + 164 len mem[_6765] + 32]
                                            else:
                                                mem[floor32(mem[_6765]) + _6765 + 196] = mem[floor32(mem[_6765]) + _6765 + -(mem[_6765] % 32) + 228 len mem[_6765] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4737, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6765], mem[_6765 + 196 len floor32(mem[_6765]) + 32]
                                        else:
                                            _6766 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_6766 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_6766 + 36] = _4737
                                            mem[_6766 + 68] = 0
                                            mem[_6766 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                            mem[_6766 + 132] = 128
                                            mem[_6766 + 164] = mem[_6766]
                                            t = 0
                                            while t < mem[_6766]:
                                                mem[_6766 + t + 196] = mem[_6766 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_6766] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4737, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6766 + 164 len mem[_6766] + 32]
                                            else:
                                                mem[floor32(mem[_6766]) + _6766 + 196] = mem[floor32(mem[_6766]) + _6766 + -(mem[_6766] % 32) + 228 len mem[_6766] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4737, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6766], mem[_6766 + 196 len floor32(mem[_6766]) + 32]
                                    else:
                                        if not address(('cd', 36)[0]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                            _6767 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_6767 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_6767 + 36] = 0
                                            mem[_6767 + 68] = _4737
                                            mem[_6767 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                            mem[_6767 + 132] = 128
                                            mem[_6767 + 164] = mem[_6767]
                                            t = 0
                                            while t < mem[_6767]:
                                                mem[_6767 + t + 196] = mem[_6767 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_6767] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4737, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6767 + 164 len mem[_6767] + 32]
                                            else:
                                                mem[floor32(mem[_6767]) + _6767 + 196] = mem[floor32(mem[_6767]) + _6767 + -(mem[_6767] % 32) + 228 len mem[_6767] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4737, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6767], mem[_6767 + 196 len floor32(mem[_6767]) + 32]
                                        else:
                                            _6768 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_6768 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_6768 + 36] = _4737
                                            mem[_6768 + 68] = 0
                                            mem[_6768 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                            mem[_6768 + 132] = 128
                                            mem[_6768 + 164] = mem[_6768]
                                            t = 0
                                            while t < mem[_6768]:
                                                mem[_6768 + t + 196] = mem[_6768 + t + 32]
                                                t = t + 32
                                                continue 
                                            if not mem[_6768] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4737, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6768 + 164 len mem[_6768] + 32]
                                            else:
                                                mem[floor32(mem[_6768]) + _6768 + 196] = mem[floor32(mem[_6768]) + _6768 + -(mem[_6768] % 32) + 228 len mem[_6768] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4737, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6768], mem[_6768 + 196 len floor32(mem[_6768]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    s = s + 1
                                    t = 0
                                    u = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    continue 
                                require s < ('cd', 68).length
                                require s < ('cd', 36).length
                                require 0 < ('cd', 36).length
                                require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                _4927 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= _4927:
                                    _5731 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_5731]
                                    mem[_5731 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_5731]
                                    mem[_5731 + 64] = address(('cd', 36)[0])
                                    mem[_5731 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_5731 + 100] = _4927
                                    mem[_5731 + 132] = 1
                                    mem[_5731 + 196] = this.address
                                    mem[_5731 + 228] = block.timestamp + 300
                                    mem[_5731 + 164] = 160
                                    mem[_5731 + 260] = mem[_5731]
                                    idx = 0
                                    while idx < 32 * mem[_5731]:
                                        mem[_5731 + idx + 292] = mem[_5731 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                    call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4927, 1, 160, address(this.address), block.timestamp + 300, mem[_5731 + 260 len (32 * mem[_5731]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_5731 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _5731 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14405 = mem[_5731 + 96 len 4], Mask(224, 32, _4927) >> 32
                                    require mem[_5731 + 96 len 4], Mask(224, 32, _4927) >> 32 <= 4294967296
                                    require mem[_5731 + 96 len 4], Mask(224, 32, _4927) >> 32 + 32 <= return_data.size
                                    require mem[mem[_5731 + 96 len 4], Mask(224, 32, _4927) >> 32 + _5731 + 96] <= 4294967296 and mem[_5731 + 96 len 4], Mask(224, 32, _4927) >> 32 + (32 * mem[mem[_5731 + 96 len 4], Mask(224, 32, _4927) >> 32 + _5731 + 96]) + 32 <= return_data.size
                                    mem[_5731 + ceil32(return_data.size) + 96] = mem[mem[_5731 + 96 len 4], Mask(224, 32, _4927) >> 32 + _5731 + 96]
                                    _14853 = mem[_14405 + _5731 + 96]
                                    idx = 0
                                    while idx < 32 * _14853:
                                        mem[_5731 + ceil32(return_data.size) + idx + 128] = mem[_14405 + _5731 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14853) + _5731 + ceil32(return_data.size) + 128
                                else:
                                    mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                    mem[mem[64] + 36] = 10000 * _4927
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _4927
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _6764 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_6764]
                                    mem[_6764 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_6764]
                                    mem[_6764 + 64] = address(('cd', 36)[0])
                                    mem[_6764 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_6764 + 100] = _4927
                                    mem[_6764 + 132] = 1
                                    mem[_6764 + 196] = this.address
                                    mem[_6764 + 228] = block.timestamp + 300
                                    mem[_6764 + 164] = 160
                                    mem[_6764 + 260] = mem[_6764]
                                    idx = 0
                                    while idx < 32 * mem[_6764]:
                                        mem[_6764 + idx + 292] = mem[_6764 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                    call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _4927, 1, 160, address(this.address), block.timestamp + 300, mem[_6764 + 260 len (32 * mem[_6764]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_6764 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _6764 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14407 = mem[_6764 + 96 len 4], Mask(224, 32, _4927) >> 32
                                    require mem[_6764 + 96 len 4], Mask(224, 32, _4927) >> 32 <= 4294967296
                                    require mem[_6764 + 96 len 4], Mask(224, 32, _4927) >> 32 + 32 <= return_data.size
                                    require mem[mem[_6764 + 96 len 4], Mask(224, 32, _4927) >> 32 + _6764 + 96] <= 4294967296 and mem[_6764 + 96 len 4], Mask(224, 32, _4927) >> 32 + (32 * mem[mem[_6764 + 96 len 4], Mask(224, 32, _4927) >> 32 + _6764 + 96]) + 32 <= return_data.size
                                    mem[_6764 + ceil32(return_data.size) + 96] = mem[mem[_6764 + 96 len 4], Mask(224, 32, _4927) >> 32 + _6764 + 96]
                                    _14854 = mem[_14407 + _6764 + 96]
                                    idx = 0
                                    while idx < 32 * _14854:
                                        mem[_6764 + ceil32(return_data.size) + idx + 128] = mem[_14407 + _6764 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14854) + _6764 + ceil32(return_data.size) + 128
                    else:
                        require s < ('cd', 36).length
                        require s < ('cd', 4).length
                        if not s:
                            mem[mem[64] + 4] = address(cd[((32 * s) + cd[4] + 36)])
                            mem[mem[64] + 36] = cd[100]
                            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                            call address(cd[((32 * s) + cd[36] + 36)]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args address(cd[((32 * s) + cd[4] + 36)]), cd[100]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require s < ('cd', 68).length
                            if not s:
                                if not address(cd[((32 * s) + cd[68] + 36)]):
                                    require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _5383 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    require s < ('cd', 36).length
                                    require s + 1 < ('cd', 36).length
                                    require s < ('cd', 4).length
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                    if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        if not address(cd[((32 * s) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                            _8981 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_8981 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_8981 + 36] = 0
                                            mem[_8981 + 68] = _5383
                                            mem[_8981 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                            mem[_8981 + 132] = 128
                                            mem[_8981 + 164] = mem[_8981]
                                            idx = 0
                                            while idx < mem[_8981]:
                                                mem[_8981 + idx + 196] = mem[_8981 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_8981] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _5383, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_8981 + 164 len mem[_8981] + 32]
                                            else:
                                                mem[floor32(mem[_8981]) + _8981 + 196] = mem[floor32(mem[_8981]) + _8981 + -(mem[_8981] % 32) + 228 len mem[_8981] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _5383, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_8981], mem[_8981 + 196 len floor32(mem[_8981]) + 32]
                                        else:
                                            _8982 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_8982 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_8982 + 36] = _5383
                                            mem[_8982 + 68] = 0
                                            mem[_8982 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                            mem[_8982 + 132] = 128
                                            mem[_8982 + 164] = mem[_8982]
                                            idx = 0
                                            while idx < mem[_8982]:
                                                mem[_8982 + idx + 196] = mem[_8982 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_8982] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _5383, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_8982 + 164 len mem[_8982] + 32]
                                            else:
                                                mem[floor32(mem[_8982]) + _8982 + 196] = mem[floor32(mem[_8982]) + _8982 + -(mem[_8982] % 32) + 228 len mem[_8982] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _5383, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_8982], mem[_8982 + 196 len floor32(mem[_8982]) + 32]
                                    else:
                                        if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            _8983 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_8983 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_8983 + 36] = 0
                                            mem[_8983 + 68] = _5383
                                            mem[_8983 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                            mem[_8983 + 132] = 128
                                            mem[_8983 + 164] = mem[_8983]
                                            idx = 0
                                            while idx < mem[_8983]:
                                                mem[_8983 + idx + 196] = mem[_8983 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_8983] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _5383, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_8983 + 164 len mem[_8983] + 32]
                                            else:
                                                mem[floor32(mem[_8983]) + _8983 + 196] = mem[floor32(mem[_8983]) + _8983 + -(mem[_8983] % 32) + 228 len mem[_8983] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _5383, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_8983], mem[_8983 + 196 len floor32(mem[_8983]) + 32]
                                        else:
                                            _8984 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_8984 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_8984 + 36] = _5383
                                            mem[_8984 + 68] = 0
                                            mem[_8984 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                            mem[_8984 + 132] = 128
                                            mem[_8984 + 164] = mem[_8984]
                                            idx = 0
                                            while idx < mem[_8984]:
                                                mem[_8984 + idx + 196] = mem[_8984 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_8984] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _5383, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_8984 + 164 len mem[_8984] + 32]
                                            else:
                                                mem[floor32(mem[_8984]) + _8984 + 196] = mem[floor32(mem[_8984]) + _8984 + -(mem[_8984] % 32) + 228 len mem[_8984] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _5383, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_8984], mem[_8984 + 196 len floor32(mem[_8984]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    s = s + 1
                                    t = 0
                                    u = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    continue 
                                require 0 < ('cd', 68).length
                                require s < ('cd', 36).length
                                require s + 1 < ('cd', 36).length
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = address(('cd', 68)[0])
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), address(('cd', 68)[0])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= cd[100]:
                                    _7387 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_7387]
                                    mem[_7387 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_7387]
                                    mem[_7387 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                    mem[_7387 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_7387 + 100] = cd[100]
                                    mem[_7387 + 132] = 1
                                    mem[_7387 + 196] = this.address
                                    mem[_7387 + 228] = block.timestamp + 300
                                    mem[_7387 + 164] = 160
                                    mem[_7387 + 260] = mem[_7387]
                                    idx = 0
                                    while idx < 32 * mem[_7387]:
                                        mem[_7387 + idx + 292] = mem[_7387 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(('cd', 68)[0]))
                                    call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_7387 + 260 len (32 * mem[_7387]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_7387 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _7387 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14433 = mem[_7387 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                                    require mem[_7387 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                                    require mem[_7387 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                                    require mem[mem[_7387 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _7387 + 96] <= 4294967296 and mem[_7387 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_7387 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _7387 + 96]) + 32 <= return_data.size
                                    mem[_7387 + ceil32(return_data.size) + 96] = mem[mem[_7387 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _7387 + 96]
                                    _14867 = mem[_14433 + _7387 + 96]
                                    idx = 0
                                    while idx < 32 * _14867:
                                        mem[_7387 + ceil32(return_data.size) + idx + 128] = mem[_14433 + _7387 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14867) + _7387 + ceil32(return_data.size) + 128
                                else:
                                    mem[mem[64] + 4] = address(('cd', 68)[0])
                                    mem[mem[64] + 36] = 10000 * cd[100]
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(('cd', 68)[0]), 10000 * cd[100]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _8697 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_8697]
                                    mem[_8697 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_8697]
                                    mem[_8697 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                    mem[_8697 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_8697 + 100] = cd[100]
                                    mem[_8697 + 132] = 1
                                    mem[_8697 + 196] = this.address
                                    mem[_8697 + 228] = block.timestamp + 300
                                    mem[_8697 + 164] = 160
                                    mem[_8697 + 260] = mem[_8697]
                                    idx = 0
                                    while idx < 32 * mem[_8697]:
                                        mem[_8697 + idx + 292] = mem[_8697 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(('cd', 68)[0]))
                                    call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_8697 + 260 len (32 * mem[_8697]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_8697 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _8697 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14435 = mem[_8697 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                                    require mem[_8697 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                                    require mem[_8697 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                                    require mem[mem[_8697 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _8697 + 96] <= 4294967296 and mem[_8697 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_8697 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _8697 + 96]) + 32 <= return_data.size
                                    mem[_8697 + ceil32(return_data.size) + 96] = mem[mem[_8697 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _8697 + 96]
                                    _14868 = mem[_14435 + _8697 + 96]
                                    idx = 0
                                    while idx < 32 * _14868:
                                        mem[_8697 + ceil32(return_data.size) + idx + 128] = mem[_14435 + _8697 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14868) + _8697 + ceil32(return_data.size) + 128
                            else:
                                if s != ('cd', 36).length - 1:
                                    if not address(cd[((32 * s) + cd[68] + 36)]):
                                        require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                        _5526 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                        require s < ('cd', 36).length
                                        require s + 1 < ('cd', 36).length
                                        require s < ('cd', 4).length
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                        if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            if not address(cd[((32 * s) + cd[36] + 36)]):
                                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                                _9301 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_9301 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_9301 + 36] = 0
                                                mem[_9301 + 68] = _5526
                                                mem[_9301 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                                mem[_9301 + 132] = 128
                                                mem[_9301 + 164] = mem[_9301]
                                                idx = 0
                                                while idx < mem[_9301]:
                                                    mem[_9301 + idx + 196] = mem[_9301 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_9301] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5526, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9301 + 164 len mem[_9301] + 32]
                                                else:
                                                    mem[floor32(mem[_9301]) + _9301 + 196] = mem[floor32(mem[_9301]) + _9301 + -(mem[_9301] % 32) + 228 len mem[_9301] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5526, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9301], mem[_9301 + 196 len floor32(mem[_9301]) + 32]
                                            else:
                                                _9302 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_9302 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_9302 + 36] = _5526
                                                mem[_9302 + 68] = 0
                                                mem[_9302 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                                mem[_9302 + 132] = 128
                                                mem[_9302 + 164] = mem[_9302]
                                                idx = 0
                                                while idx < mem[_9302]:
                                                    mem[_9302 + idx + 196] = mem[_9302 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_9302] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5526, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9302 + 164 len mem[_9302] + 32]
                                                else:
                                                    mem[floor32(mem[_9302]) + _9302 + 196] = mem[floor32(mem[_9302]) + _9302 + -(mem[_9302] % 32) + 228 len mem[_9302] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5526, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9302], mem[_9302 + 196 len floor32(mem[_9302]) + 32]
                                        else:
                                            if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                                _9303 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_9303 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_9303 + 36] = 0
                                                mem[_9303 + 68] = _5526
                                                mem[_9303 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                                mem[_9303 + 132] = 128
                                                mem[_9303 + 164] = mem[_9303]
                                                idx = 0
                                                while idx < mem[_9303]:
                                                    mem[_9303 + idx + 196] = mem[_9303 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_9303] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5526, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9303 + 164 len mem[_9303] + 32]
                                                else:
                                                    mem[floor32(mem[_9303]) + _9303 + 196] = mem[floor32(mem[_9303]) + _9303 + -(mem[_9303] % 32) + 228 len mem[_9303] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5526, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9303], mem[_9303 + 196 len floor32(mem[_9303]) + 32]
                                            else:
                                                _9304 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_9304 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_9304 + 36] = _5526
                                                mem[_9304 + 68] = 0
                                                mem[_9304 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                                mem[_9304 + 132] = 128
                                                mem[_9304 + 164] = mem[_9304]
                                                idx = 0
                                                while idx < mem[_9304]:
                                                    mem[_9304 + idx + 196] = mem[_9304 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_9304] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5526, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9304 + 164 len mem[_9304] + 32]
                                                else:
                                                    mem[floor32(mem[_9304]) + _9304 + 196] = mem[floor32(mem[_9304]) + _9304 + -(mem[_9304] % 32) + 228 len mem[_9304] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5526, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9304], mem[_9304 + 196 len floor32(mem[_9304]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = s + 1
                                        t = 0
                                        u = address(cd[((32 * s + 1) + cd[4] + 36)])
                                        continue 
                                    require s < ('cd', 68).length
                                    require s < ('cd', 36).length
                                    require s + 1 < ('cd', 36).length
                                    require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _6210 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    mem[mem[64] + 4] = this.address
                                    mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                            gas gas_remaining wei
                                           args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] >= _6210:
                                        _8023 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require 0 < mem[_8023]
                                        mem[_8023 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                        require 1 < mem[_8023]
                                        mem[_8023 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                        mem[_8023 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_8023 + 100] = _6210
                                        mem[_8023 + 132] = 1
                                        mem[_8023 + 196] = this.address
                                        mem[_8023 + 228] = block.timestamp + 300
                                        mem[_8023 + 164] = 160
                                        mem[_8023 + 260] = mem[_8023]
                                        idx = 0
                                        while idx < 32 * mem[_8023]:
                                            mem[_8023 + idx + 292] = mem[_8023 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                        call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args _6210, 1, 160, address(this.address), block.timestamp + 300, mem[_8023 + 260 len (32 * mem[_8023]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_8023 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = _8023 + ceil32(return_data.size) + 96
                                        require return_data.size >= 32
                                        _14425 = mem[_8023 + 96 len 4], Mask(224, 32, _6210) >> 32
                                        require mem[_8023 + 96 len 4], Mask(224, 32, _6210) >> 32 <= 4294967296
                                        require mem[_8023 + 96 len 4], Mask(224, 32, _6210) >> 32 + 32 <= return_data.size
                                        require mem[mem[_8023 + 96 len 4], Mask(224, 32, _6210) >> 32 + _8023 + 96] <= 4294967296 and mem[_8023 + 96 len 4], Mask(224, 32, _6210) >> 32 + (32 * mem[mem[_8023 + 96 len 4], Mask(224, 32, _6210) >> 32 + _8023 + 96]) + 32 <= return_data.size
                                        mem[_8023 + ceil32(return_data.size) + 96] = mem[mem[_8023 + 96 len 4], Mask(224, 32, _6210) >> 32 + _8023 + 96]
                                        _14863 = mem[_14425 + _8023 + 96]
                                        idx = 0
                                        while idx < 32 * _14863:
                                            mem[_8023 + ceil32(return_data.size) + idx + 128] = mem[_14425 + _8023 + idx + 128]
                                            idx = idx + 32
                                            continue 
                                        mem[64] = (32 * _14863) + _8023 + ceil32(return_data.size) + 128
                                        idx = floor32(_14863) + 1
                                        t = 1
                                        u = address(cd[((32 * floor32(_14863) + 1) + cd[4] + 36)])
                                        continue 
                                    mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                    mem[mem[64] + 36] = 10000 * _6210
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _6210
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _9300 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_9300]
                                    mem[_9300 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_9300]
                                    mem[_9300 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                    mem[_9300 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_9300 + 100] = _6210
                                    mem[_9300 + 132] = 1
                                    mem[_9300 + 196] = this.address
                                    mem[_9300 + 228] = block.timestamp + 300
                                    mem[_9300 + 164] = 160
                                    mem[_9300 + 260] = mem[_9300]
                                    idx = 0
                                    while idx < 32 * mem[_9300]:
                                        mem[_9300 + idx + 292] = mem[_9300 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                    call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _6210, 1, 160, address(this.address), block.timestamp + 300, mem[_9300 + 260 len (32 * mem[_9300]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_9300 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _9300 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14427 = mem[_9300 + 96 len 4], Mask(224, 32, _6210) >> 32
                                    require mem[_9300 + 96 len 4], Mask(224, 32, _6210) >> 32 <= 4294967296
                                    require mem[_9300 + 96 len 4], Mask(224, 32, _6210) >> 32 + 32 <= return_data.size
                                    require mem[mem[_9300 + 96 len 4], Mask(224, 32, _6210) >> 32 + _9300 + 96] <= 4294967296 and mem[_9300 + 96 len 4], Mask(224, 32, _6210) >> 32 + (32 * mem[mem[_9300 + 96 len 4], Mask(224, 32, _6210) >> 32 + _9300 + 96]) + 32 <= return_data.size
                                    mem[_9300 + ceil32(return_data.size) + 96] = mem[mem[_9300 + 96 len 4], Mask(224, 32, _6210) >> 32 + _9300 + 96]
                                    _14864 = mem[_14427 + _9300 + 96]
                                    idx = 0
                                    while idx < 32 * _14864:
                                        mem[_9300 + ceil32(return_data.size) + idx + 128] = mem[_14427 + _9300 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14864) + _9300 + ceil32(return_data.size) + 128
                                else:
                                    if not address(cd[((32 * s) + cd[68] + 36)]):
                                        require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                        _5527 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                        require s < ('cd', 36).length
                                        require 0 < ('cd', 36).length
                                        require s < ('cd', 4).length
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                            revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                        if address(cd[((32 * s) + cd[36] + 36)]) < address(('cd', 36)[0]):
                                            if not address(cd[((32 * s) + cd[36] + 36)]):
                                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                                _9309 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_9309 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_9309 + 36] = 0
                                                mem[_9309 + 68] = _5527
                                                mem[_9309 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                                mem[_9309 + 132] = 128
                                                mem[_9309 + 164] = mem[_9309]
                                                idx = 0
                                                while idx < mem[_9309]:
                                                    mem[_9309 + idx + 196] = mem[_9309 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_9309] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5527, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9309 + 164 len mem[_9309] + 32]
                                                else:
                                                    mem[floor32(mem[_9309]) + _9309 + 196] = mem[floor32(mem[_9309]) + _9309 + -(mem[_9309] % 32) + 228 len mem[_9309] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5527, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9309], mem[_9309 + 196 len floor32(mem[_9309]) + 32]
                                            else:
                                                _9310 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_9310 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_9310 + 36] = _5527
                                                mem[_9310 + 68] = 0
                                                mem[_9310 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                                mem[_9310 + 132] = 128
                                                mem[_9310 + 164] = mem[_9310]
                                                idx = 0
                                                while idx < mem[_9310]:
                                                    mem[_9310 + idx + 196] = mem[_9310 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_9310] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5527, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9310 + 164 len mem[_9310] + 32]
                                                else:
                                                    mem[floor32(mem[_9310]) + _9310 + 196] = mem[floor32(mem[_9310]) + _9310 + -(mem[_9310] % 32) + 228 len mem[_9310] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5527, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9310], mem[_9310 + 196 len floor32(mem[_9310]) + 32]
                                        else:
                                            if not address(('cd', 36)[0]):
                                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                            if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                                _9311 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_9311 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_9311 + 36] = 0
                                                mem[_9311 + 68] = _5527
                                                mem[_9311 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                                mem[_9311 + 132] = 128
                                                mem[_9311 + 164] = mem[_9311]
                                                idx = 0
                                                while idx < mem[_9311]:
                                                    mem[_9311 + idx + 196] = mem[_9311 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_9311] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5527, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9311 + 164 len mem[_9311] + 32]
                                                else:
                                                    mem[floor32(mem[_9311]) + _9311 + 196] = mem[floor32(mem[_9311]) + _9311 + -(mem[_9311] % 32) + 228 len mem[_9311] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5527, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9311], mem[_9311 + 196 len floor32(mem[_9311]) + 32]
                                            else:
                                                _9312 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_9312 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_9312 + 36] = _5527
                                                mem[_9312 + 68] = 0
                                                mem[_9312 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                                mem[_9312 + 132] = 128
                                                mem[_9312 + 164] = mem[_9312]
                                                idx = 0
                                                while idx < mem[_9312]:
                                                    mem[_9312 + idx + 196] = mem[_9312 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_9312] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5527, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9312 + 164 len mem[_9312] + 32]
                                                else:
                                                    mem[floor32(mem[_9312]) + _9312 + 196] = mem[floor32(mem[_9312]) + _9312 + -(mem[_9312] % 32) + 228 len mem[_9312] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5527, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9312], mem[_9312 + 196 len floor32(mem[_9312]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = s + 1
                                        t = 0
                                        u = address(cd[((32 * s + 1) + cd[4] + 36)])
                                        continue 
                                    require s < ('cd', 68).length
                                    require s < ('cd', 36).length
                                    require 0 < ('cd', 36).length
                                    require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _6211 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    mem[mem[64] + 4] = this.address
                                    mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                            gas gas_remaining wei
                                           args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] >= _6211:
                                        _8028 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require 0 < mem[_8028]
                                        mem[_8028 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                        require 1 < mem[_8028]
                                        mem[_8028 + 64] = address(('cd', 36)[0])
                                        mem[_8028 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_8028 + 100] = _6211
                                        mem[_8028 + 132] = 1
                                        mem[_8028 + 196] = this.address
                                        mem[_8028 + 228] = block.timestamp + 300
                                        mem[_8028 + 164] = 160
                                        mem[_8028 + 260] = mem[_8028]
                                        idx = 0
                                        while idx < 32 * mem[_8028]:
                                            mem[_8028 + idx + 292] = mem[_8028 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                        call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args _6211, 1, 160, address(this.address), block.timestamp + 300, mem[_8028 + 260 len (32 * mem[_8028]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_8028 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = _8028 + ceil32(return_data.size) + 96
                                        require return_data.size >= 32
                                        _14429 = mem[_8028 + 96 len 4], Mask(224, 32, _6211) >> 32
                                        require mem[_8028 + 96 len 4], Mask(224, 32, _6211) >> 32 <= 4294967296
                                        require mem[_8028 + 96 len 4], Mask(224, 32, _6211) >> 32 + 32 <= return_data.size
                                        require mem[mem[_8028 + 96 len 4], Mask(224, 32, _6211) >> 32 + _8028 + 96] <= 4294967296 and mem[_8028 + 96 len 4], Mask(224, 32, _6211) >> 32 + (32 * mem[mem[_8028 + 96 len 4], Mask(224, 32, _6211) >> 32 + _8028 + 96]) + 32 <= return_data.size
                                        mem[_8028 + ceil32(return_data.size) + 96] = mem[mem[_8028 + 96 len 4], Mask(224, 32, _6211) >> 32 + _8028 + 96]
                                        _14865 = mem[_14429 + _8028 + 96]
                                        idx = 0
                                        while idx < 32 * _14865:
                                            mem[_8028 + ceil32(return_data.size) + idx + 128] = mem[_14429 + _8028 + idx + 128]
                                            idx = idx + 32
                                            continue 
                                        mem[64] = (32 * _14865) + _8028 + ceil32(return_data.size) + 128
                                        idx = floor32(_14865) + 1
                                        t = 1
                                        u = address(cd[((32 * floor32(_14865) + 1) + cd[4] + 36)])
                                        continue 
                                    mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                    mem[mem[64] + 36] = 10000 * _6211
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _6211
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _9308 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_9308]
                                    mem[_9308 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_9308]
                                    mem[_9308 + 64] = address(('cd', 36)[0])
                                    mem[_9308 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_9308 + 100] = _6211
                                    mem[_9308 + 132] = 1
                                    mem[_9308 + 196] = this.address
                                    mem[_9308 + 228] = block.timestamp + 300
                                    mem[_9308 + 164] = 160
                                    mem[_9308 + 260] = mem[_9308]
                                    idx = 0
                                    while idx < 32 * mem[_9308]:
                                        mem[_9308 + idx + 292] = mem[_9308 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                    call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _6211, 1, 160, address(this.address), block.timestamp + 300, mem[_9308 + 260 len (32 * mem[_9308]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_9308 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _9308 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14431 = mem[_9308 + 96 len 4], Mask(224, 32, _6211) >> 32
                                    require mem[_9308 + 96 len 4], Mask(224, 32, _6211) >> 32 <= 4294967296
                                    require mem[_9308 + 96 len 4], Mask(224, 32, _6211) >> 32 + 32 <= return_data.size
                                    require mem[mem[_9308 + 96 len 4], Mask(224, 32, _6211) >> 32 + _9308 + 96] <= 4294967296 and mem[_9308 + 96 len 4], Mask(224, 32, _6211) >> 32 + (32 * mem[mem[_9308 + 96 len 4], Mask(224, 32, _6211) >> 32 + _9308 + 96]) + 32 <= return_data.size
                                    mem[_9308 + ceil32(return_data.size) + 96] = mem[mem[_9308 + 96 len 4], Mask(224, 32, _6211) >> 32 + _9308 + 96]
                                    _14866 = mem[_14431 + _9308 + 96]
                                    idx = 0
                                    while idx < 32 * _14866:
                                        mem[_9308 + ceil32(return_data.size) + idx + 128] = mem[_14431 + _9308 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14866) + _9308 + ceil32(return_data.size) + 128
                        else:
                            require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            _4621 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                            mem[mem[64] + 4] = address(cd[((32 * s) + cd[4] + 36)])
                            mem[mem[64] + 36] = _4621
                            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                            call address(cd[((32 * s) + cd[36] + 36)]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args address(cd[((32 * s) + cd[4] + 36)]), _4621
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require s < ('cd', 68).length
                            if not s:
                                if not address(cd[((32 * s) + cd[68] + 36)]):
                                    require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _5525 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    require s < ('cd', 36).length
                                    require s + 1 < ('cd', 36).length
                                    require s < ('cd', 4).length
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                    if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        if not address(cd[((32 * s) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                            _9293 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_9293 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_9293 + 36] = 0
                                            mem[_9293 + 68] = _5525
                                            mem[_9293 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                            mem[_9293 + 132] = 128
                                            mem[_9293 + 164] = mem[_9293]
                                            idx = 0
                                            while idx < mem[_9293]:
                                                mem[_9293 + idx + 196] = mem[_9293 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_9293] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _5525, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9293 + 164 len mem[_9293] + 32]
                                            else:
                                                mem[floor32(mem[_9293]) + _9293 + 196] = mem[floor32(mem[_9293]) + _9293 + -(mem[_9293] % 32) + 228 len mem[_9293] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _5525, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9293], mem[_9293 + 196 len floor32(mem[_9293]) + 32]
                                        else:
                                            _9294 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_9294 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_9294 + 36] = _5525
                                            mem[_9294 + 68] = 0
                                            mem[_9294 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                            mem[_9294 + 132] = 128
                                            mem[_9294 + 164] = mem[_9294]
                                            idx = 0
                                            while idx < mem[_9294]:
                                                mem[_9294 + idx + 196] = mem[_9294 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_9294] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _5525, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9294 + 164 len mem[_9294] + 32]
                                            else:
                                                mem[floor32(mem[_9294]) + _9294 + 196] = mem[floor32(mem[_9294]) + _9294 + -(mem[_9294] % 32) + 228 len mem[_9294] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _5525, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9294], mem[_9294 + 196 len floor32(mem[_9294]) + 32]
                                    else:
                                        if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            _9295 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_9295 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_9295 + 36] = 0
                                            mem[_9295 + 68] = _5525
                                            mem[_9295 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                            mem[_9295 + 132] = 128
                                            mem[_9295 + 164] = mem[_9295]
                                            idx = 0
                                            while idx < mem[_9295]:
                                                mem[_9295 + idx + 196] = mem[_9295 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_9295] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _5525, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9295 + 164 len mem[_9295] + 32]
                                            else:
                                                mem[floor32(mem[_9295]) + _9295 + 196] = mem[floor32(mem[_9295]) + _9295 + -(mem[_9295] % 32) + 228 len mem[_9295] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _5525, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9295], mem[_9295 + 196 len floor32(mem[_9295]) + 32]
                                        else:
                                            _9296 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_9296 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_9296 + 36] = _5525
                                            mem[_9296 + 68] = 0
                                            mem[_9296 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                            mem[_9296 + 132] = 128
                                            mem[_9296 + 164] = mem[_9296]
                                            idx = 0
                                            while idx < mem[_9296]:
                                                mem[_9296 + idx + 196] = mem[_9296 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_9296] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _5525, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9296 + 164 len mem[_9296] + 32]
                                            else:
                                                mem[floor32(mem[_9296]) + _9296 + 196] = mem[floor32(mem[_9296]) + _9296 + -(mem[_9296] % 32) + 228 len mem[_9296] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _5525, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9296], mem[_9296 + 196 len floor32(mem[_9296]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    s = s + 1
                                    t = 0
                                    u = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    continue 
                                require 0 < ('cd', 68).length
                                require s < ('cd', 36).length
                                require s + 1 < ('cd', 36).length
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = address(('cd', 68)[0])
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), address(('cd', 68)[0])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= cd[100]:
                                    _7653 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_7653]
                                    mem[_7653 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_7653]
                                    mem[_7653 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                    mem[_7653 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_7653 + 100] = cd[100]
                                    mem[_7653 + 132] = 1
                                    mem[_7653 + 196] = this.address
                                    mem[_7653 + 228] = block.timestamp + 300
                                    mem[_7653 + 164] = 160
                                    mem[_7653 + 260] = mem[_7653]
                                    idx = 0
                                    while idx < 32 * mem[_7653]:
                                        mem[_7653 + idx + 292] = mem[_7653 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(('cd', 68)[0]))
                                    call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_7653 + 260 len (32 * mem[_7653]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_7653 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _7653 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14421 = mem[_7653 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                                    require mem[_7653 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                                    require mem[_7653 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                                    require mem[mem[_7653 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _7653 + 96] <= 4294967296 and mem[_7653 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_7653 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _7653 + 96]) + 32 <= return_data.size
                                    mem[_7653 + ceil32(return_data.size) + 96] = mem[mem[_7653 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _7653 + 96]
                                    _14861 = mem[_14421 + _7653 + 96]
                                    idx = 0
                                    while idx < 32 * _14861:
                                        mem[_7653 + ceil32(return_data.size) + idx + 128] = mem[_14421 + _7653 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14861) + _7653 + ceil32(return_data.size) + 128
                                else:
                                    mem[mem[64] + 4] = address(('cd', 68)[0])
                                    mem[mem[64] + 36] = 10000 * cd[100]
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(('cd', 68)[0]), 10000 * cd[100]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _8978 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_8978]
                                    mem[_8978 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_8978]
                                    mem[_8978 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                    mem[_8978 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_8978 + 100] = cd[100]
                                    mem[_8978 + 132] = 1
                                    mem[_8978 + 196] = this.address
                                    mem[_8978 + 228] = block.timestamp + 300
                                    mem[_8978 + 164] = 160
                                    mem[_8978 + 260] = mem[_8978]
                                    idx = 0
                                    while idx < 32 * mem[_8978]:
                                        mem[_8978 + idx + 292] = mem[_8978 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(('cd', 68)[0]))
                                    call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_8978 + 260 len (32 * mem[_8978]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_8978 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _8978 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14423 = mem[_8978 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                                    require mem[_8978 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                                    require mem[_8978 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                                    require mem[mem[_8978 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _8978 + 96] <= 4294967296 and mem[_8978 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_8978 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _8978 + 96]) + 32 <= return_data.size
                                    mem[_8978 + ceil32(return_data.size) + 96] = mem[mem[_8978 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _8978 + 96]
                                    _14862 = mem[_14423 + _8978 + 96]
                                    idx = 0
                                    while idx < 32 * _14862:
                                        mem[_8978 + ceil32(return_data.size) + idx + 128] = mem[_14423 + _8978 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14862) + _8978 + ceil32(return_data.size) + 128
                            else:
                                if s != ('cd', 36).length - 1:
                                    if not address(cd[((32 * s) + cd[68] + 36)]):
                                        require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                        _5738 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                        require s < ('cd', 36).length
                                        require s + 1 < ('cd', 36).length
                                        require s < ('cd', 4).length
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                        if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            if not address(cd[((32 * s) + cd[36] + 36)]):
                                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                                _9646 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_9646 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_9646 + 36] = 0
                                                mem[_9646 + 68] = _5738
                                                mem[_9646 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                                mem[_9646 + 132] = 128
                                                mem[_9646 + 164] = mem[_9646]
                                                idx = 0
                                                while idx < mem[_9646]:
                                                    mem[_9646 + idx + 196] = mem[_9646 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_9646] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5738, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9646 + 164 len mem[_9646] + 32]
                                                else:
                                                    mem[floor32(mem[_9646]) + _9646 + 196] = mem[floor32(mem[_9646]) + _9646 + -(mem[_9646] % 32) + 228 len mem[_9646] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5738, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9646], mem[_9646 + 196 len floor32(mem[_9646]) + 32]
                                            else:
                                                _9647 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_9647 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_9647 + 36] = _5738
                                                mem[_9647 + 68] = 0
                                                mem[_9647 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                                mem[_9647 + 132] = 128
                                                mem[_9647 + 164] = mem[_9647]
                                                idx = 0
                                                while idx < mem[_9647]:
                                                    mem[_9647 + idx + 196] = mem[_9647 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_9647] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5738, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9647 + 164 len mem[_9647] + 32]
                                                else:
                                                    mem[floor32(mem[_9647]) + _9647 + 196] = mem[floor32(mem[_9647]) + _9647 + -(mem[_9647] % 32) + 228 len mem[_9647] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5738, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9647], mem[_9647 + 196 len floor32(mem[_9647]) + 32]
                                        else:
                                            if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                                _9648 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_9648 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_9648 + 36] = 0
                                                mem[_9648 + 68] = _5738
                                                mem[_9648 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                                mem[_9648 + 132] = 128
                                                mem[_9648 + 164] = mem[_9648]
                                                idx = 0
                                                while idx < mem[_9648]:
                                                    mem[_9648 + idx + 196] = mem[_9648 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_9648] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5738, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9648 + 164 len mem[_9648] + 32]
                                                else:
                                                    mem[floor32(mem[_9648]) + _9648 + 196] = mem[floor32(mem[_9648]) + _9648 + -(mem[_9648] % 32) + 228 len mem[_9648] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5738, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9648], mem[_9648 + 196 len floor32(mem[_9648]) + 32]
                                            else:
                                                _9649 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_9649 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_9649 + 36] = _5738
                                                mem[_9649 + 68] = 0
                                                mem[_9649 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                                mem[_9649 + 132] = 128
                                                mem[_9649 + 164] = mem[_9649]
                                                idx = 0
                                                while idx < mem[_9649]:
                                                    mem[_9649 + idx + 196] = mem[_9649 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_9649] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5738, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9649 + 164 len mem[_9649] + 32]
                                                else:
                                                    mem[floor32(mem[_9649]) + _9649 + 196] = mem[floor32(mem[_9649]) + _9649 + -(mem[_9649] % 32) + 228 len mem[_9649] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5738, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9649], mem[_9649 + 196 len floor32(mem[_9649]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = s + 1
                                        t = 0
                                        u = address(cd[((32 * s + 1) + cd[4] + 36)])
                                        continue 
                                    require s < ('cd', 68).length
                                    require s < ('cd', 36).length
                                    require s + 1 < ('cd', 36).length
                                    require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _6433 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    mem[mem[64] + 4] = this.address
                                    mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                            gas gas_remaining wei
                                           args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] >= _6433:
                                        _8374 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require 0 < mem[_8374]
                                        mem[_8374 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                        require 1 < mem[_8374]
                                        mem[_8374 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                        mem[_8374 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_8374 + 100] = _6433
                                        mem[_8374 + 132] = 1
                                        mem[_8374 + 196] = this.address
                                        mem[_8374 + 228] = block.timestamp + 300
                                        mem[_8374 + 164] = 160
                                        mem[_8374 + 260] = mem[_8374]
                                        idx = 0
                                        while idx < 32 * mem[_8374]:
                                            mem[_8374 + idx + 292] = mem[_8374 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                        call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args _6433, 1, 160, address(this.address), block.timestamp + 300, mem[_8374 + 260 len (32 * mem[_8374]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_8374 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = _8374 + ceil32(return_data.size) + 96
                                        require return_data.size >= 32
                                        _14413 = mem[_8374 + 96 len 4], Mask(224, 32, _6433) >> 32
                                        require mem[_8374 + 96 len 4], Mask(224, 32, _6433) >> 32 <= 4294967296
                                        require mem[_8374 + 96 len 4], Mask(224, 32, _6433) >> 32 + 32 <= return_data.size
                                        require mem[mem[_8374 + 96 len 4], Mask(224, 32, _6433) >> 32 + _8374 + 96] <= 4294967296 and mem[_8374 + 96 len 4], Mask(224, 32, _6433) >> 32 + (32 * mem[mem[_8374 + 96 len 4], Mask(224, 32, _6433) >> 32 + _8374 + 96]) + 32 <= return_data.size
                                        mem[_8374 + ceil32(return_data.size) + 96] = mem[mem[_8374 + 96 len 4], Mask(224, 32, _6433) >> 32 + _8374 + 96]
                                        _14857 = mem[_14413 + _8374 + 96]
                                        idx = 0
                                        while idx < 32 * _14857:
                                            mem[_8374 + ceil32(return_data.size) + idx + 128] = mem[_14413 + _8374 + idx + 128]
                                            idx = idx + 32
                                            continue 
                                        mem[64] = (32 * _14857) + _8374 + ceil32(return_data.size) + 128
                                    else:
                                        mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                        mem[mem[64] + 36] = 10000 * _6433
                                        require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                        call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _6433
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _9645 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require 0 < mem[_9645]
                                        mem[_9645 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                        require 1 < mem[_9645]
                                        mem[_9645 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                        mem[_9645 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_9645 + 100] = _6433
                                        mem[_9645 + 132] = 1
                                        mem[_9645 + 196] = this.address
                                        mem[_9645 + 228] = block.timestamp + 300
                                        mem[_9645 + 164] = 160
                                        mem[_9645 + 260] = mem[_9645]
                                        idx = 0
                                        while idx < 32 * mem[_9645]:
                                            mem[_9645 + idx + 292] = mem[_9645 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                        call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args _6433, 1, 160, address(this.address), block.timestamp + 300, mem[_9645 + 260 len (32 * mem[_9645]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_9645 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = _9645 + ceil32(return_data.size) + 96
                                        require return_data.size >= 32
                                        _14415 = mem[_9645 + 96 len 4], Mask(224, 32, _6433) >> 32
                                        require mem[_9645 + 96 len 4], Mask(224, 32, _6433) >> 32 <= 4294967296
                                        require mem[_9645 + 96 len 4], Mask(224, 32, _6433) >> 32 + 32 <= return_data.size
                                        require mem[mem[_9645 + 96 len 4], Mask(224, 32, _6433) >> 32 + _9645 + 96] <= 4294967296 and mem[_9645 + 96 len 4], Mask(224, 32, _6433) >> 32 + (32 * mem[mem[_9645 + 96 len 4], Mask(224, 32, _6433) >> 32 + _9645 + 96]) + 32 <= return_data.size
                                        mem[_9645 + ceil32(return_data.size) + 96] = mem[mem[_9645 + 96 len 4], Mask(224, 32, _6433) >> 32 + _9645 + 96]
                                        _14858 = mem[_14415 + _9645 + 96]
                                        idx = 0
                                        while idx < 32 * _14858:
                                            mem[_9645 + ceil32(return_data.size) + idx + 128] = mem[_14415 + _9645 + idx + 128]
                                            idx = idx + 32
                                            continue 
                                        mem[64] = (32 * _14858) + _9645 + ceil32(return_data.size) + 128
                                else:
                                    if not address(cd[((32 * s) + cd[68] + 36)]):
                                        require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                        _5739 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                        require s < ('cd', 36).length
                                        require 0 < ('cd', 36).length
                                        require s < ('cd', 4).length
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                            revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                        if address(cd[((32 * s) + cd[36] + 36)]) < address(('cd', 36)[0]):
                                            if not address(cd[((32 * s) + cd[36] + 36)]):
                                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                                _9654 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_9654 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_9654 + 36] = 0
                                                mem[_9654 + 68] = _5739
                                                mem[_9654 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                                mem[_9654 + 132] = 128
                                                mem[_9654 + 164] = mem[_9654]
                                                idx = 0
                                                while idx < mem[_9654]:
                                                    mem[_9654 + idx + 196] = mem[_9654 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_9654] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5739, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9654 + 164 len mem[_9654] + 32]
                                                else:
                                                    mem[floor32(mem[_9654]) + _9654 + 196] = mem[floor32(mem[_9654]) + _9654 + -(mem[_9654] % 32) + 228 len mem[_9654] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5739, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9654], mem[_9654 + 196 len floor32(mem[_9654]) + 32]
                                            else:
                                                _9655 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_9655 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_9655 + 36] = _5739
                                                mem[_9655 + 68] = 0
                                                mem[_9655 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                                mem[_9655 + 132] = 128
                                                mem[_9655 + 164] = mem[_9655]
                                                idx = 0
                                                while idx < mem[_9655]:
                                                    mem[_9655 + idx + 196] = mem[_9655 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_9655] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5739, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9655 + 164 len mem[_9655] + 32]
                                                else:
                                                    mem[floor32(mem[_9655]) + _9655 + 196] = mem[floor32(mem[_9655]) + _9655 + -(mem[_9655] % 32) + 228 len mem[_9655] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5739, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9655], mem[_9655 + 196 len floor32(mem[_9655]) + 32]
                                        else:
                                            if not address(('cd', 36)[0]):
                                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                            if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                                _9656 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_9656 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_9656 + 36] = 0
                                                mem[_9656 + 68] = _5739
                                                mem[_9656 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                                mem[_9656 + 132] = 128
                                                mem[_9656 + 164] = mem[_9656]
                                                idx = 0
                                                while idx < mem[_9656]:
                                                    mem[_9656 + idx + 196] = mem[_9656 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_9656] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5739, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9656 + 164 len mem[_9656] + 32]
                                                else:
                                                    mem[floor32(mem[_9656]) + _9656 + 196] = mem[floor32(mem[_9656]) + _9656 + -(mem[_9656] % 32) + 228 len mem[_9656] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _5739, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9656], mem[_9656 + 196 len floor32(mem[_9656]) + 32]
                                            else:
                                                _9657 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_9657 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_9657 + 36] = _5739
                                                mem[_9657 + 68] = 0
                                                mem[_9657 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                                mem[_9657 + 132] = 128
                                                mem[_9657 + 164] = mem[_9657]
                                                idx = 0
                                                while idx < mem[_9657]:
                                                    mem[_9657 + idx + 196] = mem[_9657 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_9657] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5739, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9657 + 164 len mem[_9657] + 32]
                                                else:
                                                    mem[floor32(mem[_9657]) + _9657 + 196] = mem[floor32(mem[_9657]) + _9657 + -(mem[_9657] % 32) + 228 len mem[_9657] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _5739, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_9657], mem[_9657 + 196 len floor32(mem[_9657]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = s + 1
                                        t = 0
                                        u = address(cd[((32 * s + 1) + cd[4] + 36)])
                                        continue 
                                    require s < ('cd', 68).length
                                    require s < ('cd', 36).length
                                    require 0 < ('cd', 36).length
                                    require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _6434 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    mem[mem[64] + 4] = this.address
                                    mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                            gas gas_remaining wei
                                           args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] >= _6434:
                                        _8379 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require 0 < mem[_8379]
                                        mem[_8379 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                        require 1 < mem[_8379]
                                        mem[_8379 + 64] = address(('cd', 36)[0])
                                        mem[_8379 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_8379 + 100] = _6434
                                        mem[_8379 + 132] = 1
                                        mem[_8379 + 196] = this.address
                                        mem[_8379 + 228] = block.timestamp + 300
                                        mem[_8379 + 164] = 160
                                        mem[_8379 + 260] = mem[_8379]
                                        idx = 0
                                        while idx < 32 * mem[_8379]:
                                            mem[_8379 + idx + 292] = mem[_8379 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                        call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args _6434, 1, 160, address(this.address), block.timestamp + 300, mem[_8379 + 260 len (32 * mem[_8379]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_8379 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = _8379 + ceil32(return_data.size) + 96
                                        require return_data.size >= 32
                                        _14417 = mem[_8379 + 96 len 4], Mask(224, 32, _6434) >> 32
                                        require mem[_8379 + 96 len 4], Mask(224, 32, _6434) >> 32 <= 4294967296
                                        require mem[_8379 + 96 len 4], Mask(224, 32, _6434) >> 32 + 32 <= return_data.size
                                        require mem[mem[_8379 + 96 len 4], Mask(224, 32, _6434) >> 32 + _8379 + 96] <= 4294967296 and mem[_8379 + 96 len 4], Mask(224, 32, _6434) >> 32 + (32 * mem[mem[_8379 + 96 len 4], Mask(224, 32, _6434) >> 32 + _8379 + 96]) + 32 <= return_data.size
                                        mem[_8379 + ceil32(return_data.size) + 96] = mem[mem[_8379 + 96 len 4], Mask(224, 32, _6434) >> 32 + _8379 + 96]
                                        _14859 = mem[_14417 + _8379 + 96]
                                        idx = 0
                                        while idx < 32 * _14859:
                                            mem[_8379 + ceil32(return_data.size) + idx + 128] = mem[_14417 + _8379 + idx + 128]
                                            idx = idx + 32
                                            continue 
                                        mem[64] = (32 * _14859) + _8379 + ceil32(return_data.size) + 128
                                    else:
                                        mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                        mem[mem[64] + 36] = 10000 * _6434
                                        require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                        call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _6434
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _9653 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require 0 < mem[_9653]
                                        mem[_9653 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                        require 1 < mem[_9653]
                                        mem[_9653 + 64] = address(('cd', 36)[0])
                                        mem[_9653 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_9653 + 100] = _6434
                                        mem[_9653 + 132] = 1
                                        mem[_9653 + 196] = this.address
                                        mem[_9653 + 228] = block.timestamp + 300
                                        mem[_9653 + 164] = 160
                                        mem[_9653 + 260] = mem[_9653]
                                        idx = 0
                                        while idx < 32 * mem[_9653]:
                                            mem[_9653 + idx + 292] = mem[_9653 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                        call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args _6434, 1, 160, address(this.address), block.timestamp + 300, mem[_9653 + 260 len (32 * mem[_9653]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_9653 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = _9653 + ceil32(return_data.size) + 96
                                        require return_data.size >= 32
                                        _14419 = mem[_9653 + 96 len 4], Mask(224, 32, _6434) >> 32
                                        require mem[_9653 + 96 len 4], Mask(224, 32, _6434) >> 32 <= 4294967296
                                        require mem[_9653 + 96 len 4], Mask(224, 32, _6434) >> 32 + 32 <= return_data.size
                                        require mem[mem[_9653 + 96 len 4], Mask(224, 32, _6434) >> 32 + _9653 + 96] <= 4294967296 and mem[_9653 + 96 len 4], Mask(224, 32, _6434) >> 32 + (32 * mem[mem[_9653 + 96 len 4], Mask(224, 32, _6434) >> 32 + _9653 + 96]) + 32 <= return_data.size
                                        mem[_9653 + ceil32(return_data.size) + 96] = mem[mem[_9653 + 96 len 4], Mask(224, 32, _6434) >> 32 + _9653 + 96]
                                        _14860 = mem[_14419 + _9653 + 96]
                                        idx = 0
                                        while idx < 32 * _14860:
                                            mem[_9653 + ceil32(return_data.size) + idx + 128] = mem[_14419 + _9653 + idx + 128]
                                            idx = idx + 32
                                            continue 
                                        mem[64] = (32 * _14860) + _9653 + ceil32(return_data.size) + 128
                s = s + 1
                t = 1
                u = address(cd[((32 * s + 1) + cd[4] + 36)])
                continue 
            require s + 1 < ('cd', 68).length
            if address(cd[((32 * s + 1) + cd[68] + 36)]):
                require s < ('cd', 68).length
                if not t:
                    if not s:
                        if not address(cd[((32 * s) + cd[68] + 36)]):
                            require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            _4650 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                            require s < ('cd', 36).length
                            require s + 1 < ('cd', 36).length
                            require s < ('cd', 4).length
                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                            if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                if not address(cd[((32 * s) + cd[36] + 36)]):
                                    revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                    _6229 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_6229 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_6229 + 36] = 0
                                    mem[_6229 + 68] = _4650
                                    mem[_6229 + 100] = this.address
                                    mem[_6229 + 132] = 128
                                    mem[_6229 + 164] = mem[_6229]
                                    idx = 0
                                    while idx < mem[_6229]:
                                        mem[_6229 + idx + 196] = mem[_6229 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    if not mem[_6229] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _4650, address(this.address), 128, mem[_6229 + 164 len mem[_6229] + 32]
                                    else:
                                        mem[floor32(mem[_6229]) + _6229 + 196] = mem[floor32(mem[_6229]) + _6229 + -(mem[_6229] % 32) + 228 len mem[_6229] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _4650, address(this.address), 128, mem[_6229], mem[_6229 + 196 len floor32(mem[_6229]) + 32]
                                else:
                                    _6230 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_6230 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_6230 + 36] = _4650
                                    mem[_6230 + 68] = 0
                                    mem[_6230 + 100] = this.address
                                    mem[_6230 + 132] = 128
                                    mem[_6230 + 164] = mem[_6230]
                                    idx = 0
                                    while idx < mem[_6230]:
                                        mem[_6230 + idx + 196] = mem[_6230 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    if not mem[_6230] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _4650, 0, address(this.address), 128, mem[_6230 + 164 len mem[_6230] + 32]
                                    else:
                                        mem[floor32(mem[_6230]) + _6230 + 196] = mem[floor32(mem[_6230]) + _6230 + -(mem[_6230] % 32) + 228 len mem[_6230] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _4650, 0, address(this.address), 128, mem[_6230], mem[_6230 + 196 len floor32(mem[_6230]) + 32]
                            else:
                                if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                    revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                    _6231 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_6231 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_6231 + 36] = 0
                                    mem[_6231 + 68] = _4650
                                    mem[_6231 + 100] = this.address
                                    mem[_6231 + 132] = 128
                                    mem[_6231 + 164] = mem[_6231]
                                    idx = 0
                                    while idx < mem[_6231]:
                                        mem[_6231 + idx + 196] = mem[_6231 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    if not mem[_6231] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _4650, address(this.address), 128, mem[_6231 + 164 len mem[_6231] + 32]
                                    else:
                                        mem[floor32(mem[_6231]) + _6231 + 196] = mem[floor32(mem[_6231]) + _6231 + -(mem[_6231] % 32) + 228 len mem[_6231] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _4650, address(this.address), 128, mem[_6231], mem[_6231 + 196 len floor32(mem[_6231]) + 32]
                                else:
                                    _6232 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_6232 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_6232 + 36] = _4650
                                    mem[_6232 + 68] = 0
                                    mem[_6232 + 100] = this.address
                                    mem[_6232 + 132] = 128
                                    mem[_6232 + 164] = mem[_6232]
                                    idx = 0
                                    while idx < mem[_6232]:
                                        mem[_6232 + idx + 196] = mem[_6232 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    if not mem[_6232] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _4650, 0, address(this.address), 128, mem[_6232 + 164 len mem[_6232] + 32]
                                    else:
                                        mem[floor32(mem[_6232]) + _6232 + 196] = mem[floor32(mem[_6232]) + _6232 + -(mem[_6232] % 32) + 228 len mem[_6232] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _4650, 0, address(this.address), 128, mem[_6232], mem[_6232 + 196 len floor32(mem[_6232]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            s = s + 1
                            t = 0
                            u = this.address
                            continue 
                        require 0 < ('cd', 68).length
                        require s < ('cd', 36).length
                        require s + 1 < ('cd', 36).length
                        mem[mem[64] + 4] = this.address
                        mem[mem[64] + 36] = address(('cd', 68)[0])
                        require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                        staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                gas gas_remaining wei
                               args address(this.address), address(('cd', 68)[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= cd[100]:
                            _5268 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            require 0 < mem[_5268]
                            mem[_5268 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                            require 1 < mem[_5268]
                            mem[_5268 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                            mem[_5268 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_5268 + 100] = cd[100]
                            mem[_5268 + 132] = 1
                            mem[_5268 + 196] = this.address
                            mem[_5268 + 228] = block.timestamp + 300
                            mem[_5268 + 164] = 160
                            mem[_5268 + 260] = mem[_5268]
                            idx = 0
                            while idx < 32 * mem[_5268]:
                                mem[_5268 + idx + 292] = mem[_5268 + idx + 32]
                                idx = idx + 32
                                continue 
                            require ext_code.size(address(('cd', 68)[0]))
                            call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_5268 + 260 len (32 * mem[_5268]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_5268 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _5268 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _14493 = mem[_5268 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                            require mem[_5268 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                            require mem[_5268 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                            require mem[mem[_5268 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _5268 + 96] <= 4294967296 and mem[_5268 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_5268 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _5268 + 96]) + 32 <= return_data.size
                            mem[_5268 + ceil32(return_data.size) + 96] = mem[mem[_5268 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _5268 + 96]
                            _14897 = mem[_14493 + _5268 + 96]
                            idx = 0
                            while idx < 32 * _14897:
                                mem[_5268 + ceil32(return_data.size) + idx + 128] = mem[_14493 + _5268 + idx + 128]
                                idx = idx + 32
                                continue 
                            mem[64] = (32 * _14897) + _5268 + ceil32(return_data.size) + 128
                        else:
                            mem[mem[64] + 4] = address(('cd', 68)[0])
                            mem[mem[64] + 36] = 10000 * cd[100]
                            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                            call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(('cd', 68)[0]), 10000 * cd[100]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            _6015 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            require 0 < mem[_6015]
                            mem[_6015 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                            require 1 < mem[_6015]
                            mem[_6015 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                            mem[_6015 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_6015 + 100] = cd[100]
                            mem[_6015 + 132] = 1
                            mem[_6015 + 196] = this.address
                            mem[_6015 + 228] = block.timestamp + 300
                            mem[_6015 + 164] = 160
                            mem[_6015 + 260] = mem[_6015]
                            t = 0
                            while t < 32 * mem[_6015]:
                                mem[_6015 + t + 292] = mem[_6015 + t + 32]
                                t = t + 32
                                continue 
                            require ext_code.size(address(('cd', 68)[0]))
                            call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_6015 + 260 len (32 * mem[_6015]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_6015 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _6015 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _14495 = mem[_6015 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                            require mem[_6015 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                            require mem[_6015 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                            require mem[mem[_6015 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _6015 + 96] <= 4294967296 and mem[_6015 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_6015 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _6015 + 96]) + 32 <= return_data.size
                            mem[_6015 + ceil32(return_data.size) + 96] = mem[mem[_6015 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _6015 + 96]
                            _14898 = mem[_14495 + _6015 + 96]
                            idx = 0
                            while idx < 32 * _14898:
                                mem[_6015 + ceil32(return_data.size) + idx + 128] = mem[_14495 + _6015 + idx + 128]
                                idx = idx + 32
                                continue 
                            mem[64] = (32 * _14898) + _6015 + ceil32(return_data.size) + 128
                    else:
                        if s != ('cd', 36).length - 1:
                            if not address(cd[((32 * s) + cd[68] + 36)]):
                                require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                _4700 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                require s < ('cd', 36).length
                                require s + 1 < ('cd', 36).length
                                require s < ('cd', 4).length
                                if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                    revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                    if not address(cd[((32 * s) + cd[36] + 36)]):
                                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                        _6464 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_6464 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_6464 + 36] = 0
                                        mem[_6464 + 68] = _4700
                                        mem[_6464 + 100] = this.address
                                        mem[_6464 + 132] = 128
                                        mem[_6464 + 164] = mem[_6464]
                                        idx = 0
                                        while idx < mem[_6464]:
                                            mem[_6464 + idx + 196] = mem[_6464 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_6464] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4700, address(this.address), 128, mem[_6464 + 164 len mem[_6464] + 32]
                                        else:
                                            mem[floor32(mem[_6464]) + _6464 + 196] = mem[floor32(mem[_6464]) + _6464 + -(mem[_6464] % 32) + 228 len mem[_6464] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4700, address(this.address), 128, mem[_6464], mem[_6464 + 196 len floor32(mem[_6464]) + 32]
                                    else:
                                        _6465 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_6465 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_6465 + 36] = _4700
                                        mem[_6465 + 68] = 0
                                        mem[_6465 + 100] = this.address
                                        mem[_6465 + 132] = 128
                                        mem[_6465 + 164] = mem[_6465]
                                        idx = 0
                                        while idx < mem[_6465]:
                                            mem[_6465 + idx + 196] = mem[_6465 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_6465] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4700, 0, address(this.address), 128, mem[_6465 + 164 len mem[_6465] + 32]
                                        else:
                                            mem[floor32(mem[_6465]) + _6465 + 196] = mem[floor32(mem[_6465]) + _6465 + -(mem[_6465] % 32) + 228 len mem[_6465] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4700, 0, address(this.address), 128, mem[_6465], mem[_6465 + 196 len floor32(mem[_6465]) + 32]
                                else:
                                    if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        _6466 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_6466 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_6466 + 36] = 0
                                        mem[_6466 + 68] = _4700
                                        mem[_6466 + 100] = this.address
                                        mem[_6466 + 132] = 128
                                        mem[_6466 + 164] = mem[_6466]
                                        idx = 0
                                        while idx < mem[_6466]:
                                            mem[_6466 + idx + 196] = mem[_6466 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_6466] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4700, address(this.address), 128, mem[_6466 + 164 len mem[_6466] + 32]
                                        else:
                                            mem[floor32(mem[_6466]) + _6466 + 196] = mem[floor32(mem[_6466]) + _6466 + -(mem[_6466] % 32) + 228 len mem[_6466] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4700, address(this.address), 128, mem[_6466], mem[_6466 + 196 len floor32(mem[_6466]) + 32]
                                    else:
                                        _6467 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_6467 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_6467 + 36] = _4700
                                        mem[_6467 + 68] = 0
                                        mem[_6467 + 100] = this.address
                                        mem[_6467 + 132] = 128
                                        mem[_6467 + 164] = mem[_6467]
                                        idx = 0
                                        while idx < mem[_6467]:
                                            mem[_6467 + idx + 196] = mem[_6467 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_6467] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4700, 0, address(this.address), 128, mem[_6467 + 164 len mem[_6467] + 32]
                                        else:
                                            mem[floor32(mem[_6467]) + _6467 + 196] = mem[floor32(mem[_6467]) + _6467 + -(mem[_6467] % 32) + 228 len mem[_6467] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4700, 0, address(this.address), 128, mem[_6467], mem[_6467 + 196 len floor32(mem[_6467]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                s = s + 1
                                t = 0
                                u = this.address
                                continue 
                            require s < ('cd', 68).length
                            require s < ('cd', 36).length
                            require s + 1 < ('cd', 36).length
                            require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            _4872 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                            mem[mem[64] + 4] = this.address
                            mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                            staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                    gas gas_remaining wei
                                   args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= _4872:
                                _5542 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                require 0 < mem[_5542]
                                mem[_5542 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                require 1 < mem[_5542]
                                mem[_5542 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                mem[_5542 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_5542 + 100] = _4872
                                mem[_5542 + 132] = 1
                                mem[_5542 + 196] = this.address
                                mem[_5542 + 228] = block.timestamp + 300
                                mem[_5542 + 164] = 160
                                mem[_5542 + 260] = mem[_5542]
                                idx = 0
                                while idx < 32 * mem[_5542]:
                                    mem[_5542 + idx + 292] = mem[_5542 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _4872, 1, 160, address(this.address), block.timestamp + 300, mem[_5542 + 260 len (32 * mem[_5542]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_5542 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _5542 + ceil32(return_data.size) + 96
                                require return_data.size >= 32
                                _14485 = mem[_5542 + 96 len 4], Mask(224, 32, _4872) >> 32
                                require mem[_5542 + 96 len 4], Mask(224, 32, _4872) >> 32 <= 4294967296
                                require mem[_5542 + 96 len 4], Mask(224, 32, _4872) >> 32 + 32 <= return_data.size
                                require mem[mem[_5542 + 96 len 4], Mask(224, 32, _4872) >> 32 + _5542 + 96] <= 4294967296 and mem[_5542 + 96 len 4], Mask(224, 32, _4872) >> 32 + (32 * mem[mem[_5542 + 96 len 4], Mask(224, 32, _4872) >> 32 + _5542 + 96]) + 32 <= return_data.size
                                mem[_5542 + ceil32(return_data.size) + 96] = mem[mem[_5542 + 96 len 4], Mask(224, 32, _4872) >> 32 + _5542 + 96]
                                _14893 = mem[_14485 + _5542 + 96]
                                idx = 0
                                while idx < 32 * _14893:
                                    mem[_5542 + ceil32(return_data.size) + idx + 128] = mem[_14485 + _5542 + idx + 128]
                                    idx = idx + 32
                                    continue 
                                mem[64] = (32 * _14893) + _5542 + ceil32(return_data.size) + 128
                            else:
                                mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                mem[mem[64] + 36] = 10000 * _4872
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _4872
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _6463 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                require 0 < mem[_6463]
                                mem[_6463 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                require 1 < mem[_6463]
                                mem[_6463 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                mem[_6463 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_6463 + 100] = _4872
                                mem[_6463 + 132] = 1
                                mem[_6463 + 196] = this.address
                                mem[_6463 + 228] = block.timestamp + 300
                                mem[_6463 + 164] = 160
                                mem[_6463 + 260] = mem[_6463]
                                idx = 0
                                while idx < 32 * mem[_6463]:
                                    mem[_6463 + idx + 292] = mem[_6463 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _4872, 1, 160, address(this.address), block.timestamp + 300, mem[_6463 + 260 len (32 * mem[_6463]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_6463 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _6463 + ceil32(return_data.size) + 96
                                require return_data.size >= 32
                                _14487 = mem[_6463 + 96 len 4], Mask(224, 32, _4872) >> 32
                                require mem[_6463 + 96 len 4], Mask(224, 32, _4872) >> 32 <= 4294967296
                                require mem[_6463 + 96 len 4], Mask(224, 32, _4872) >> 32 + 32 <= return_data.size
                                require mem[mem[_6463 + 96 len 4], Mask(224, 32, _4872) >> 32 + _6463 + 96] <= 4294967296 and mem[_6463 + 96 len 4], Mask(224, 32, _4872) >> 32 + (32 * mem[mem[_6463 + 96 len 4], Mask(224, 32, _4872) >> 32 + _6463 + 96]) + 32 <= return_data.size
                                mem[_6463 + ceil32(return_data.size) + 96] = mem[mem[_6463 + 96 len 4], Mask(224, 32, _4872) >> 32 + _6463 + 96]
                                _14894 = mem[_14487 + _6463 + 96]
                                idx = 0
                                while idx < 32 * _14894:
                                    mem[_6463 + ceil32(return_data.size) + idx + 128] = mem[_14487 + _6463 + idx + 128]
                                    idx = idx + 32
                                    continue 
                                mem[64] = (32 * _14894) + _6463 + ceil32(return_data.size) + 128
                        else:
                            if not address(cd[((32 * s) + cd[68] + 36)]):
                                require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                _4701 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                require s < ('cd', 36).length
                                require 0 < ('cd', 36).length
                                require s < ('cd', 4).length
                                if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                    revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                if address(cd[((32 * s) + cd[36] + 36)]) < address(('cd', 36)[0]):
                                    if not address(cd[((32 * s) + cd[36] + 36)]):
                                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                        _6472 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_6472 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_6472 + 36] = 0
                                        mem[_6472 + 68] = _4701
                                        mem[_6472 + 100] = this.address
                                        mem[_6472 + 132] = 128
                                        mem[_6472 + 164] = mem[_6472]
                                        idx = 0
                                        while idx < mem[_6472]:
                                            mem[_6472 + idx + 196] = mem[_6472 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_6472] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4701, address(this.address), 128, mem[_6472 + 164 len mem[_6472] + 32]
                                        else:
                                            mem[floor32(mem[_6472]) + _6472 + 196] = mem[floor32(mem[_6472]) + _6472 + -(mem[_6472] % 32) + 228 len mem[_6472] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4701, address(this.address), 128, mem[_6472], mem[_6472 + 196 len floor32(mem[_6472]) + 32]
                                    else:
                                        _6473 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_6473 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_6473 + 36] = _4701
                                        mem[_6473 + 68] = 0
                                        mem[_6473 + 100] = this.address
                                        mem[_6473 + 132] = 128
                                        mem[_6473 + 164] = mem[_6473]
                                        idx = 0
                                        while idx < mem[_6473]:
                                            mem[_6473 + idx + 196] = mem[_6473 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_6473] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4701, 0, address(this.address), 128, mem[_6473 + 164 len mem[_6473] + 32]
                                        else:
                                            mem[floor32(mem[_6473]) + _6473 + 196] = mem[floor32(mem[_6473]) + _6473 + -(mem[_6473] % 32) + 228 len mem[_6473] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4701, 0, address(this.address), 128, mem[_6473], mem[_6473 + 196 len floor32(mem[_6473]) + 32]
                                else:
                                    if not address(('cd', 36)[0]):
                                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                        _6474 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_6474 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_6474 + 36] = 0
                                        mem[_6474 + 68] = _4701
                                        mem[_6474 + 100] = this.address
                                        mem[_6474 + 132] = 128
                                        mem[_6474 + 164] = mem[_6474]
                                        idx = 0
                                        while idx < mem[_6474]:
                                            mem[_6474 + idx + 196] = mem[_6474 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_6474] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4701, address(this.address), 128, mem[_6474 + 164 len mem[_6474] + 32]
                                        else:
                                            mem[floor32(mem[_6474]) + _6474 + 196] = mem[floor32(mem[_6474]) + _6474 + -(mem[_6474] % 32) + 228 len mem[_6474] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4701, address(this.address), 128, mem[_6474], mem[_6474 + 196 len floor32(mem[_6474]) + 32]
                                    else:
                                        _6475 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_6475 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_6475 + 36] = _4701
                                        mem[_6475 + 68] = 0
                                        mem[_6475 + 100] = this.address
                                        mem[_6475 + 132] = 128
                                        mem[_6475 + 164] = mem[_6475]
                                        idx = 0
                                        while idx < mem[_6475]:
                                            mem[_6475 + idx + 196] = mem[_6475 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_6475] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4701, 0, address(this.address), 128, mem[_6475 + 164 len mem[_6475] + 32]
                                        else:
                                            mem[floor32(mem[_6475]) + _6475 + 196] = mem[floor32(mem[_6475]) + _6475 + -(mem[_6475] % 32) + 228 len mem[_6475] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4701, 0, address(this.address), 128, mem[_6475], mem[_6475 + 196 len floor32(mem[_6475]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                s = s + 1
                                t = 0
                                u = this.address
                                continue 
                            require s < ('cd', 68).length
                            require s < ('cd', 36).length
                            require 0 < ('cd', 36).length
                            require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            _4873 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                            mem[mem[64] + 4] = this.address
                            mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                            staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                    gas gas_remaining wei
                                   args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= _4873:
                                _5547 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                require 0 < mem[_5547]
                                mem[_5547 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                require 1 < mem[_5547]
                                mem[_5547 + 64] = address(('cd', 36)[0])
                                mem[_5547 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_5547 + 100] = _4873
                                mem[_5547 + 132] = 1
                                mem[_5547 + 196] = this.address
                                mem[_5547 + 228] = block.timestamp + 300
                                mem[_5547 + 164] = 160
                                mem[_5547 + 260] = mem[_5547]
                                idx = 0
                                while idx < 32 * mem[_5547]:
                                    mem[_5547 + idx + 292] = mem[_5547 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _4873, 1, 160, address(this.address), block.timestamp + 300, mem[_5547 + 260 len (32 * mem[_5547]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_5547 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _5547 + ceil32(return_data.size) + 96
                                require return_data.size >= 32
                                _14489 = mem[_5547 + 96 len 4], Mask(224, 32, _4873) >> 32
                                require mem[_5547 + 96 len 4], Mask(224, 32, _4873) >> 32 <= 4294967296
                                require mem[_5547 + 96 len 4], Mask(224, 32, _4873) >> 32 + 32 <= return_data.size
                                require mem[mem[_5547 + 96 len 4], Mask(224, 32, _4873) >> 32 + _5547 + 96] <= 4294967296 and mem[_5547 + 96 len 4], Mask(224, 32, _4873) >> 32 + (32 * mem[mem[_5547 + 96 len 4], Mask(224, 32, _4873) >> 32 + _5547 + 96]) + 32 <= return_data.size
                                mem[_5547 + ceil32(return_data.size) + 96] = mem[mem[_5547 + 96 len 4], Mask(224, 32, _4873) >> 32 + _5547 + 96]
                                _14895 = mem[_14489 + _5547 + 96]
                                idx = 0
                                while idx < 32 * _14895:
                                    mem[_5547 + ceil32(return_data.size) + idx + 128] = mem[_14489 + _5547 + idx + 128]
                                    idx = idx + 32
                                    continue 
                                mem[64] = (32 * _14895) + _5547 + ceil32(return_data.size) + 128
                            else:
                                mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                mem[mem[64] + 36] = 10000 * _4873
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _4873
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _6471 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                require 0 < mem[_6471]
                                mem[_6471 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                require 1 < mem[_6471]
                                mem[_6471 + 64] = address(('cd', 36)[0])
                                mem[_6471 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_6471 + 100] = _4873
                                mem[_6471 + 132] = 1
                                mem[_6471 + 196] = this.address
                                mem[_6471 + 228] = block.timestamp + 300
                                mem[_6471 + 164] = 160
                                mem[_6471 + 260] = mem[_6471]
                                idx = 0
                                while idx < 32 * mem[_6471]:
                                    mem[_6471 + idx + 292] = mem[_6471 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args _4873, 1, 160, address(this.address), block.timestamp + 300, mem[_6471 + 260 len (32 * mem[_6471]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_6471 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _6471 + ceil32(return_data.size) + 96
                                require return_data.size >= 32
                                _14491 = mem[_6471 + 96 len 4], Mask(224, 32, _4873) >> 32
                                require mem[_6471 + 96 len 4], Mask(224, 32, _4873) >> 32 <= 4294967296
                                require mem[_6471 + 96 len 4], Mask(224, 32, _4873) >> 32 + 32 <= return_data.size
                                require mem[mem[_6471 + 96 len 4], Mask(224, 32, _4873) >> 32 + _6471 + 96] <= 4294967296 and mem[_6471 + 96 len 4], Mask(224, 32, _4873) >> 32 + (32 * mem[mem[_6471 + 96 len 4], Mask(224, 32, _4873) >> 32 + _6471 + 96]) + 32 <= return_data.size
                                mem[_6471 + ceil32(return_data.size) + 96] = mem[mem[_6471 + 96 len 4], Mask(224, 32, _4873) >> 32 + _6471 + 96]
                                _14896 = mem[_14491 + _6471 + 96]
                                idx = 0
                                while idx < 32 * _14896:
                                    mem[_6471 + ceil32(return_data.size) + idx + 128] = mem[_14491 + _6471 + idx + 128]
                                    idx = idx + 32
                                    continue 
                                mem[64] = (32 * _14896) + _6471 + ceil32(return_data.size) + 128
                else:
                    if address(cd[((32 * s) + cd[68] + 36)]):
                        require s < ('cd', 68).length
                        if not s:
                            if not address(cd[((32 * s) + cd[68] + 36)]):
                                require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                _4876 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                require s < ('cd', 36).length
                                require s + 1 < ('cd', 36).length
                                require s < ('cd', 4).length
                                if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                    revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                    if not address(cd[((32 * s) + cd[36] + 36)]):
                                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                        _7438 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_7438 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_7438 + 36] = 0
                                        mem[_7438 + 68] = _4876
                                        mem[_7438 + 100] = this.address
                                        mem[_7438 + 132] = 128
                                        mem[_7438 + 164] = mem[_7438]
                                        idx = 0
                                        while idx < mem[_7438]:
                                            mem[_7438 + idx + 196] = mem[_7438 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_7438] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4876, address(this.address), 128, mem[_7438 + 164 len mem[_7438] + 32]
                                        else:
                                            mem[floor32(mem[_7438]) + _7438 + 196] = mem[floor32(mem[_7438]) + _7438 + -(mem[_7438] % 32) + 228 len mem[_7438] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4876, address(this.address), 128, mem[_7438], mem[_7438 + 196 len floor32(mem[_7438]) + 32]
                                    else:
                                        _7439 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_7439 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_7439 + 36] = _4876
                                        mem[_7439 + 68] = 0
                                        mem[_7439 + 100] = this.address
                                        mem[_7439 + 132] = 128
                                        mem[_7439 + 164] = mem[_7439]
                                        idx = 0
                                        while idx < mem[_7439]:
                                            mem[_7439 + idx + 196] = mem[_7439 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_7439] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4876, 0, address(this.address), 128, mem[_7439 + 164 len mem[_7439] + 32]
                                        else:
                                            mem[floor32(mem[_7439]) + _7439 + 196] = mem[floor32(mem[_7439]) + _7439 + -(mem[_7439] % 32) + 228 len mem[_7439] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4876, 0, address(this.address), 128, mem[_7439], mem[_7439 + 196 len floor32(mem[_7439]) + 32]
                                else:
                                    if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        _7440 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_7440 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_7440 + 36] = 0
                                        mem[_7440 + 68] = _4876
                                        mem[_7440 + 100] = this.address
                                        mem[_7440 + 132] = 128
                                        mem[_7440 + 164] = mem[_7440]
                                        idx = 0
                                        while idx < mem[_7440]:
                                            mem[_7440 + idx + 196] = mem[_7440 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_7440] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4876, address(this.address), 128, mem[_7440 + 164 len mem[_7440] + 32]
                                        else:
                                            mem[floor32(mem[_7440]) + _7440 + 196] = mem[floor32(mem[_7440]) + _7440 + -(mem[_7440] % 32) + 228 len mem[_7440] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args 0, _4876, address(this.address), 128, mem[_7440], mem[_7440 + 196 len floor32(mem[_7440]) + 32]
                                    else:
                                        _7441 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_7441 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_7441 + 36] = _4876
                                        mem[_7441 + 68] = 0
                                        mem[_7441 + 100] = this.address
                                        mem[_7441 + 132] = 128
                                        mem[_7441 + 164] = mem[_7441]
                                        idx = 0
                                        while idx < mem[_7441]:
                                            mem[_7441 + idx + 196] = mem[_7441 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        if not mem[_7441] % 32:
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4876, 0, address(this.address), 128, mem[_7441 + 164 len mem[_7441] + 32]
                                        else:
                                            mem[floor32(mem[_7441]) + _7441 + 196] = mem[floor32(mem[_7441]) + _7441 + -(mem[_7441] % 32) + 228 len mem[_7441] % 32]
                                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args _4876, 0, address(this.address), 128, mem[_7441], mem[_7441 + 196 len floor32(mem[_7441]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                s = s + 1
                                t = 0
                                u = this.address
                                continue 
                            require 0 < ('cd', 68).length
                            require s < ('cd', 36).length
                            require s + 1 < ('cd', 36).length
                            mem[mem[64] + 4] = this.address
                            mem[mem[64] + 36] = address(('cd', 68)[0])
                            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                            staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                    gas gas_remaining wei
                                   args address(this.address), address(('cd', 68)[0])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= cd[100]:
                                _6018 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                require 0 < mem[_6018]
                                mem[_6018 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                require 1 < mem[_6018]
                                mem[_6018 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                mem[_6018 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_6018 + 100] = cd[100]
                                mem[_6018 + 132] = 1
                                mem[_6018 + 196] = this.address
                                mem[_6018 + 228] = block.timestamp + 300
                                mem[_6018 + 164] = 160
                                mem[_6018 + 260] = mem[_6018]
                                t = 0
                                while t < 32 * mem[_6018]:
                                    mem[_6018 + t + 292] = mem[_6018 + t + 32]
                                    t = t + 32
                                    continue 
                                require ext_code.size(address(('cd', 68)[0]))
                                call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_6018 + 260 len (32 * mem[_6018]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_6018 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _6018 + ceil32(return_data.size) + 96
                                require return_data.size >= 32
                                _14505 = mem[_6018 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                                require mem[_6018 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                                require mem[_6018 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                                require mem[mem[_6018 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _6018 + 96] <= 4294967296 and mem[_6018 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_6018 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _6018 + 96]) + 32 <= return_data.size
                                mem[_6018 + ceil32(return_data.size) + 96] = mem[mem[_6018 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _6018 + 96]
                                _14903 = mem[_14505 + _6018 + 96]
                                idx = 0
                                while idx < 32 * _14903:
                                    mem[_6018 + ceil32(return_data.size) + idx + 128] = mem[_14505 + _6018 + idx + 128]
                                    idx = idx + 32
                                    continue 
                                mem[64] = (32 * _14903) + _6018 + ceil32(return_data.size) + 128
                            else:
                                mem[mem[64] + 4] = address(('cd', 68)[0])
                                mem[mem[64] + 36] = 10000 * cd[100]
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(('cd', 68)[0]), 10000 * cd[100]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _7192 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                require 0 < mem[_7192]
                                mem[_7192 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                require 1 < mem[_7192]
                                mem[_7192 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                mem[_7192 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_7192 + 100] = cd[100]
                                mem[_7192 + 132] = 1
                                mem[_7192 + 196] = this.address
                                mem[_7192 + 228] = block.timestamp + 300
                                mem[_7192 + 164] = 160
                                mem[_7192 + 260] = mem[_7192]
                                idx = 0
                                while idx < 32 * mem[_7192]:
                                    mem[_7192 + idx + 292] = mem[_7192 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                require ext_code.size(address(('cd', 68)[0]))
                                call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_7192 + 260 len (32 * mem[_7192]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_7192 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _7192 + ceil32(return_data.size) + 96
                                require return_data.size >= 32
                                _14507 = mem[_7192 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                                require mem[_7192 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                                require mem[_7192 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                                require mem[mem[_7192 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _7192 + 96] <= 4294967296 and mem[_7192 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_7192 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _7192 + 96]) + 32 <= return_data.size
                                mem[_7192 + ceil32(return_data.size) + 96] = mem[mem[_7192 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _7192 + 96]
                                _14904 = mem[_14507 + _7192 + 96]
                                idx = 0
                                while idx < 32 * _14904:
                                    mem[_7192 + ceil32(return_data.size) + idx + 128] = mem[_14507 + _7192 + idx + 128]
                                    idx = idx + 32
                                    continue 
                                mem[64] = (32 * _14904) + _7192 + ceil32(return_data.size) + 128
                        else:
                            if s != ('cd', 36).length - 1:
                                if not address(cd[((32 * s) + cd[68] + 36)]):
                                    require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _4940 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    require s < ('cd', 36).length
                                    require s + 1 < ('cd', 36).length
                                    require s < ('cd', 4).length
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                    if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        if not address(cd[((32 * s) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                            _7730 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_7730 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_7730 + 36] = 0
                                            mem[_7730 + 68] = _4940
                                            mem[_7730 + 100] = this.address
                                            mem[_7730 + 132] = 128
                                            mem[_7730 + 164] = mem[_7730]
                                            idx = 0
                                            while idx < mem[_7730]:
                                                mem[_7730 + idx + 196] = mem[_7730 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_7730] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4940, address(this.address), 128, mem[_7730 + 164 len mem[_7730] + 32]
                                            else:
                                                mem[floor32(mem[_7730]) + _7730 + 196] = mem[floor32(mem[_7730]) + _7730 + -(mem[_7730] % 32) + 228 len mem[_7730] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4940, address(this.address), 128, mem[_7730], mem[_7730 + 196 len floor32(mem[_7730]) + 32]
                                        else:
                                            _7731 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_7731 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_7731 + 36] = _4940
                                            mem[_7731 + 68] = 0
                                            mem[_7731 + 100] = this.address
                                            mem[_7731 + 132] = 128
                                            mem[_7731 + 164] = mem[_7731]
                                            idx = 0
                                            while idx < mem[_7731]:
                                                mem[_7731 + idx + 196] = mem[_7731 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_7731] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4940, 0, address(this.address), 128, mem[_7731 + 164 len mem[_7731] + 32]
                                            else:
                                                mem[floor32(mem[_7731]) + _7731 + 196] = mem[floor32(mem[_7731]) + _7731 + -(mem[_7731] % 32) + 228 len mem[_7731] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4940, 0, address(this.address), 128, mem[_7731], mem[_7731 + 196 len floor32(mem[_7731]) + 32]
                                    else:
                                        if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            _7732 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_7732 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_7732 + 36] = 0
                                            mem[_7732 + 68] = _4940
                                            mem[_7732 + 100] = this.address
                                            mem[_7732 + 132] = 128
                                            mem[_7732 + 164] = mem[_7732]
                                            idx = 0
                                            while idx < mem[_7732]:
                                                mem[_7732 + idx + 196] = mem[_7732 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_7732] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4940, address(this.address), 128, mem[_7732 + 164 len mem[_7732] + 32]
                                            else:
                                                mem[floor32(mem[_7732]) + _7732 + 196] = mem[floor32(mem[_7732]) + _7732 + -(mem[_7732] % 32) + 228 len mem[_7732] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4940, address(this.address), 128, mem[_7732], mem[_7732 + 196 len floor32(mem[_7732]) + 32]
                                        else:
                                            _7733 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_7733 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_7733 + 36] = _4940
                                            mem[_7733 + 68] = 0
                                            mem[_7733 + 100] = this.address
                                            mem[_7733 + 132] = 128
                                            mem[_7733 + 164] = mem[_7733]
                                            idx = 0
                                            while idx < mem[_7733]:
                                                mem[_7733 + idx + 196] = mem[_7733 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_7733] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4940, 0, address(this.address), 128, mem[_7733 + 164 len mem[_7733] + 32]
                                            else:
                                                mem[floor32(mem[_7733]) + _7733 + 196] = mem[floor32(mem[_7733]) + _7733 + -(mem[_7733] % 32) + 228 len mem[_7733] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4940, 0, address(this.address), 128, mem[_7733], mem[_7733 + 196 len floor32(mem[_7733]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    s = s + 1
                                    t = 0
                                    u = this.address
                                    continue 
                                require s < ('cd', 68).length
                                require s < ('cd', 36).length
                                require s + 1 < ('cd', 36).length
                                require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                _5269 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= _5269:
                                    _6491 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_6491]
                                    mem[_6491 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_6491]
                                    mem[_6491 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                    mem[_6491 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_6491 + 100] = _5269
                                    mem[_6491 + 132] = 1
                                    mem[_6491 + 196] = this.address
                                    mem[_6491 + 228] = block.timestamp + 300
                                    mem[_6491 + 164] = 160
                                    mem[_6491 + 260] = mem[_6491]
                                    idx = 0
                                    while idx < 32 * mem[_6491]:
                                        mem[_6491 + idx + 292] = mem[_6491 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                    call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _5269, 1, 160, address(this.address), block.timestamp + 300, mem[_6491 + 260 len (32 * mem[_6491]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_6491 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _6491 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14497 = mem[_6491 + 96 len 4], Mask(224, 32, _5269) >> 32
                                    require mem[_6491 + 96 len 4], Mask(224, 32, _5269) >> 32 <= 4294967296
                                    require mem[_6491 + 96 len 4], Mask(224, 32, _5269) >> 32 + 32 <= return_data.size
                                    require mem[mem[_6491 + 96 len 4], Mask(224, 32, _5269) >> 32 + _6491 + 96] <= 4294967296 and mem[_6491 + 96 len 4], Mask(224, 32, _5269) >> 32 + (32 * mem[mem[_6491 + 96 len 4], Mask(224, 32, _5269) >> 32 + _6491 + 96]) + 32 <= return_data.size
                                    mem[_6491 + ceil32(return_data.size) + 96] = mem[mem[_6491 + 96 len 4], Mask(224, 32, _5269) >> 32 + _6491 + 96]
                                    _14899 = mem[_14497 + _6491 + 96]
                                    idx = 0
                                    while idx < 32 * _14899:
                                        mem[_6491 + ceil32(return_data.size) + idx + 128] = mem[_14497 + _6491 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14899) + _6491 + ceil32(return_data.size) + 128
                                else:
                                    mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                    mem[mem[64] + 36] = 10000 * _5269
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _5269
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _7729 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_7729]
                                    mem[_7729 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_7729]
                                    mem[_7729 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                    mem[_7729 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_7729 + 100] = _5269
                                    mem[_7729 + 132] = 1
                                    mem[_7729 + 196] = this.address
                                    mem[_7729 + 228] = block.timestamp + 300
                                    mem[_7729 + 164] = 160
                                    mem[_7729 + 260] = mem[_7729]
                                    idx = 0
                                    while idx < 32 * mem[_7729]:
                                        mem[_7729 + idx + 292] = mem[_7729 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                    call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _5269, 1, 160, address(this.address), block.timestamp + 300, mem[_7729 + 260 len (32 * mem[_7729]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_7729 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _7729 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14499 = mem[_7729 + 96 len 4], Mask(224, 32, _5269) >> 32
                                    require mem[_7729 + 96 len 4], Mask(224, 32, _5269) >> 32 <= 4294967296
                                    require mem[_7729 + 96 len 4], Mask(224, 32, _5269) >> 32 + 32 <= return_data.size
                                    require mem[mem[_7729 + 96 len 4], Mask(224, 32, _5269) >> 32 + _7729 + 96] <= 4294967296 and mem[_7729 + 96 len 4], Mask(224, 32, _5269) >> 32 + (32 * mem[mem[_7729 + 96 len 4], Mask(224, 32, _5269) >> 32 + _7729 + 96]) + 32 <= return_data.size
                                    mem[_7729 + ceil32(return_data.size) + 96] = mem[mem[_7729 + 96 len 4], Mask(224, 32, _5269) >> 32 + _7729 + 96]
                                    _14900 = mem[_14499 + _7729 + 96]
                                    idx = 0
                                    while idx < 32 * _14900:
                                        mem[_7729 + ceil32(return_data.size) + idx + 128] = mem[_14499 + _7729 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14900) + _7729 + ceil32(return_data.size) + 128
                            else:
                                if not address(cd[((32 * s) + cd[68] + 36)]):
                                    require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _4941 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    require s < ('cd', 36).length
                                    require 0 < ('cd', 36).length
                                    require s < ('cd', 4).length
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                        revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                    if address(cd[((32 * s) + cd[36] + 36)]) < address(('cd', 36)[0]):
                                        if not address(cd[((32 * s) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                            _7738 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_7738 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_7738 + 36] = 0
                                            mem[_7738 + 68] = _4941
                                            mem[_7738 + 100] = this.address
                                            mem[_7738 + 132] = 128
                                            mem[_7738 + 164] = mem[_7738]
                                            idx = 0
                                            while idx < mem[_7738]:
                                                mem[_7738 + idx + 196] = mem[_7738 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_7738] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4941, address(this.address), 128, mem[_7738 + 164 len mem[_7738] + 32]
                                            else:
                                                mem[floor32(mem[_7738]) + _7738 + 196] = mem[floor32(mem[_7738]) + _7738 + -(mem[_7738] % 32) + 228 len mem[_7738] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4941, address(this.address), 128, mem[_7738], mem[_7738 + 196 len floor32(mem[_7738]) + 32]
                                        else:
                                            _7739 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_7739 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_7739 + 36] = _4941
                                            mem[_7739 + 68] = 0
                                            mem[_7739 + 100] = this.address
                                            mem[_7739 + 132] = 128
                                            mem[_7739 + 164] = mem[_7739]
                                            idx = 0
                                            while idx < mem[_7739]:
                                                mem[_7739 + idx + 196] = mem[_7739 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_7739] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4941, 0, address(this.address), 128, mem[_7739 + 164 len mem[_7739] + 32]
                                            else:
                                                mem[floor32(mem[_7739]) + _7739 + 196] = mem[floor32(mem[_7739]) + _7739 + -(mem[_7739] % 32) + 228 len mem[_7739] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4941, 0, address(this.address), 128, mem[_7739], mem[_7739 + 196 len floor32(mem[_7739]) + 32]
                                    else:
                                        if not address(('cd', 36)[0]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                            _7740 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_7740 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_7740 + 36] = 0
                                            mem[_7740 + 68] = _4941
                                            mem[_7740 + 100] = this.address
                                            mem[_7740 + 132] = 128
                                            mem[_7740 + 164] = mem[_7740]
                                            idx = 0
                                            while idx < mem[_7740]:
                                                mem[_7740 + idx + 196] = mem[_7740 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_7740] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4941, address(this.address), 128, mem[_7740 + 164 len mem[_7740] + 32]
                                            else:
                                                mem[floor32(mem[_7740]) + _7740 + 196] = mem[floor32(mem[_7740]) + _7740 + -(mem[_7740] % 32) + 228 len mem[_7740] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _4941, address(this.address), 128, mem[_7740], mem[_7740 + 196 len floor32(mem[_7740]) + 32]
                                        else:
                                            _7741 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_7741 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_7741 + 36] = _4941
                                            mem[_7741 + 68] = 0
                                            mem[_7741 + 100] = this.address
                                            mem[_7741 + 132] = 128
                                            mem[_7741 + 164] = mem[_7741]
                                            idx = 0
                                            while idx < mem[_7741]:
                                                mem[_7741 + idx + 196] = mem[_7741 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_7741] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4941, 0, address(this.address), 128, mem[_7741 + 164 len mem[_7741] + 32]
                                            else:
                                                mem[floor32(mem[_7741]) + _7741 + 196] = mem[floor32(mem[_7741]) + _7741 + -(mem[_7741] % 32) + 228 len mem[_7741] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _4941, 0, address(this.address), 128, mem[_7741], mem[_7741 + 196 len floor32(mem[_7741]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    s = s + 1
                                    t = 0
                                    u = this.address
                                    continue 
                                require s < ('cd', 68).length
                                require s < ('cd', 36).length
                                require 0 < ('cd', 36).length
                                require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                _5270 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= _5270:
                                    _6496 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_6496]
                                    mem[_6496 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_6496]
                                    mem[_6496 + 64] = address(('cd', 36)[0])
                                    mem[_6496 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_6496 + 100] = _5270
                                    mem[_6496 + 132] = 1
                                    mem[_6496 + 196] = this.address
                                    mem[_6496 + 228] = block.timestamp + 300
                                    mem[_6496 + 164] = 160
                                    mem[_6496 + 260] = mem[_6496]
                                    idx = 0
                                    while idx < 32 * mem[_6496]:
                                        mem[_6496 + idx + 292] = mem[_6496 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                    call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _5270, 1, 160, address(this.address), block.timestamp + 300, mem[_6496 + 260 len (32 * mem[_6496]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_6496 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _6496 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14501 = mem[_6496 + 96 len 4], Mask(224, 32, _5270) >> 32
                                    require mem[_6496 + 96 len 4], Mask(224, 32, _5270) >> 32 <= 4294967296
                                    require mem[_6496 + 96 len 4], Mask(224, 32, _5270) >> 32 + 32 <= return_data.size
                                    require mem[mem[_6496 + 96 len 4], Mask(224, 32, _5270) >> 32 + _6496 + 96] <= 4294967296 and mem[_6496 + 96 len 4], Mask(224, 32, _5270) >> 32 + (32 * mem[mem[_6496 + 96 len 4], Mask(224, 32, _5270) >> 32 + _6496 + 96]) + 32 <= return_data.size
                                    mem[_6496 + ceil32(return_data.size) + 96] = mem[mem[_6496 + 96 len 4], Mask(224, 32, _5270) >> 32 + _6496 + 96]
                                    _14901 = mem[_14501 + _6496 + 96]
                                    idx = 0
                                    while idx < 32 * _14901:
                                        mem[_6496 + ceil32(return_data.size) + idx + 128] = mem[_14501 + _6496 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14901) + _6496 + ceil32(return_data.size) + 128
                                else:
                                    mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                    mem[mem[64] + 36] = 10000 * _5270
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _5270
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _7737 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_7737]
                                    mem[_7737 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_7737]
                                    mem[_7737 + 64] = address(('cd', 36)[0])
                                    mem[_7737 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_7737 + 100] = _5270
                                    mem[_7737 + 132] = 1
                                    mem[_7737 + 196] = this.address
                                    mem[_7737 + 228] = block.timestamp + 300
                                    mem[_7737 + 164] = 160
                                    mem[_7737 + 260] = mem[_7737]
                                    idx = 0
                                    while idx < 32 * mem[_7737]:
                                        mem[_7737 + idx + 292] = mem[_7737 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                    call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args _5270, 1, 160, address(this.address), block.timestamp + 300, mem[_7737 + 260 len (32 * mem[_7737]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_7737 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _7737 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14503 = mem[_7737 + 96 len 4], Mask(224, 32, _5270) >> 32
                                    require mem[_7737 + 96 len 4], Mask(224, 32, _5270) >> 32 <= 4294967296
                                    require mem[_7737 + 96 len 4], Mask(224, 32, _5270) >> 32 + 32 <= return_data.size
                                    require mem[mem[_7737 + 96 len 4], Mask(224, 32, _5270) >> 32 + _7737 + 96] <= 4294967296 and mem[_7737 + 96 len 4], Mask(224, 32, _5270) >> 32 + (32 * mem[mem[_7737 + 96 len 4], Mask(224, 32, _5270) >> 32 + _7737 + 96]) + 32 <= return_data.size
                                    mem[_7737 + ceil32(return_data.size) + 96] = mem[mem[_7737 + 96 len 4], Mask(224, 32, _5270) >> 32 + _7737 + 96]
                                    _14902 = mem[_14503 + _7737 + 96]
                                    idx = 0
                                    while idx < 32 * _14902:
                                        mem[_7737 + ceil32(return_data.size) + idx + 128] = mem[_14503 + _7737 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14902) + _7737 + ceil32(return_data.size) + 128
                    else:
                        require s < ('cd', 36).length
                        require s < ('cd', 4).length
                        if not s:
                            mem[mem[64] + 4] = address(cd[((32 * s) + cd[4] + 36)])
                            mem[mem[64] + 36] = cd[100]
                            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                            call address(cd[((32 * s) + cd[36] + 36)]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args address(cd[((32 * s) + cd[4] + 36)]), cd[100]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require s < ('cd', 68).length
                            if not s:
                                if not address(cd[((32 * s) + cd[68] + 36)]):
                                    require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _6022 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    require s < ('cd', 36).length
                                    require s + 1 < ('cd', 36).length
                                    require s < ('cd', 4).length
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                    if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        if not address(cd[((32 * s) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                            _10001 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_10001 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_10001 + 36] = 0
                                            mem[_10001 + 68] = _6022
                                            mem[_10001 + 100] = this.address
                                            mem[_10001 + 132] = 128
                                            mem[_10001 + 164] = mem[_10001]
                                            idx = 0
                                            while idx < mem[_10001]:
                                                mem[_10001 + idx + 196] = mem[_10001 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_10001] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _6022, address(this.address), 128, mem[_10001 + 164 len mem[_10001] + 32]
                                            else:
                                                mem[floor32(mem[_10001]) + _10001 + 196] = mem[floor32(mem[_10001]) + _10001 + -(mem[_10001] % 32) + 228 len mem[_10001] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _6022, address(this.address), 128, mem[_10001], mem[_10001 + 196 len floor32(mem[_10001]) + 32]
                                        else:
                                            _10002 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_10002 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_10002 + 36] = _6022
                                            mem[_10002 + 68] = 0
                                            mem[_10002 + 100] = this.address
                                            mem[_10002 + 132] = 128
                                            mem[_10002 + 164] = mem[_10002]
                                            idx = 0
                                            while idx < mem[_10002]:
                                                mem[_10002 + idx + 196] = mem[_10002 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_10002] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _6022, 0, address(this.address), 128, mem[_10002 + 164 len mem[_10002] + 32]
                                            else:
                                                mem[floor32(mem[_10002]) + _10002 + 196] = mem[floor32(mem[_10002]) + _10002 + -(mem[_10002] % 32) + 228 len mem[_10002] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _6022, 0, address(this.address), 128, mem[_10002], mem[_10002 + 196 len floor32(mem[_10002]) + 32]
                                    else:
                                        if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            _10003 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_10003 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_10003 + 36] = 0
                                            mem[_10003 + 68] = _6022
                                            mem[_10003 + 100] = this.address
                                            mem[_10003 + 132] = 128
                                            mem[_10003 + 164] = mem[_10003]
                                            idx = 0
                                            while idx < mem[_10003]:
                                                mem[_10003 + idx + 196] = mem[_10003 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_10003] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _6022, address(this.address), 128, mem[_10003 + 164 len mem[_10003] + 32]
                                            else:
                                                mem[floor32(mem[_10003]) + _10003 + 196] = mem[floor32(mem[_10003]) + _10003 + -(mem[_10003] % 32) + 228 len mem[_10003] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _6022, address(this.address), 128, mem[_10003], mem[_10003 + 196 len floor32(mem[_10003]) + 32]
                                        else:
                                            _10004 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_10004 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_10004 + 36] = _6022
                                            mem[_10004 + 68] = 0
                                            mem[_10004 + 100] = this.address
                                            mem[_10004 + 132] = 128
                                            mem[_10004 + 164] = mem[_10004]
                                            idx = 0
                                            while idx < mem[_10004]:
                                                mem[_10004 + idx + 196] = mem[_10004 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_10004] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _6022, 0, address(this.address), 128, mem[_10004 + 164 len mem[_10004] + 32]
                                            else:
                                                mem[floor32(mem[_10004]) + _10004 + 196] = mem[floor32(mem[_10004]) + _10004 + -(mem[_10004] % 32) + 228 len mem[_10004] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _6022, 0, address(this.address), 128, mem[_10004], mem[_10004 + 196 len floor32(mem[_10004]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    s = s + 1
                                    t = 0
                                    u = this.address
                                    continue 
                                require 0 < ('cd', 68).length
                                require s < ('cd', 36).length
                                require s + 1 < ('cd', 36).length
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = address(('cd', 68)[0])
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), address(('cd', 68)[0])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= cd[100]:
                                    _8468 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_8468]
                                    mem[_8468 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_8468]
                                    mem[_8468 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                    mem[_8468 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_8468 + 100] = cd[100]
                                    mem[_8468 + 132] = 1
                                    mem[_8468 + 196] = this.address
                                    mem[_8468 + 228] = block.timestamp + 300
                                    mem[_8468 + 164] = 160
                                    mem[_8468 + 260] = mem[_8468]
                                    idx = 0
                                    while idx < 32 * mem[_8468]:
                                        mem[_8468 + idx + 292] = mem[_8468 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(('cd', 68)[0]))
                                    call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_8468 + 260 len (32 * mem[_8468]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_8468 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _8468 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14529 = mem[_8468 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                                    require mem[_8468 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                                    require mem[_8468 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                                    require mem[mem[_8468 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _8468 + 96] <= 4294967296 and mem[_8468 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_8468 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _8468 + 96]) + 32 <= return_data.size
                                    mem[_8468 + ceil32(return_data.size) + 96] = mem[mem[_8468 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _8468 + 96]
                                    _14915 = mem[_14529 + _8468 + 96]
                                    idx = 0
                                    while idx < 32 * _14915:
                                        mem[_8468 + ceil32(return_data.size) + idx + 128] = mem[_14529 + _8468 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14915) + _8468 + ceil32(return_data.size) + 128
                                else:
                                    mem[mem[64] + 4] = address(('cd', 68)[0])
                                    mem[mem[64] + 36] = 10000 * cd[100]
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(('cd', 68)[0]), 10000 * cd[100]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _9750 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_9750]
                                    mem[_9750 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_9750]
                                    mem[_9750 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                    mem[_9750 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_9750 + 100] = cd[100]
                                    mem[_9750 + 132] = 1
                                    mem[_9750 + 196] = this.address
                                    mem[_9750 + 228] = block.timestamp + 300
                                    mem[_9750 + 164] = 160
                                    mem[_9750 + 260] = mem[_9750]
                                    idx = 0
                                    while idx < 32 * mem[_9750]:
                                        mem[_9750 + idx + 292] = mem[_9750 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(('cd', 68)[0]))
                                    call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_9750 + 260 len (32 * mem[_9750]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_9750 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _9750 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14531 = mem[_9750 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                                    require mem[_9750 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                                    require mem[_9750 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                                    require mem[mem[_9750 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _9750 + 96] <= 4294967296 and mem[_9750 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_9750 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _9750 + 96]) + 32 <= return_data.size
                                    mem[_9750 + ceil32(return_data.size) + 96] = mem[mem[_9750 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _9750 + 96]
                                    _14916 = mem[_14531 + _9750 + 96]
                                    idx = 0
                                    while idx < 32 * _14916:
                                        mem[_9750 + ceil32(return_data.size) + idx + 128] = mem[_14531 + _9750 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14916) + _9750 + ceil32(return_data.size) + 128
                            else:
                                if s != ('cd', 36).length - 1:
                                    if not address(cd[((32 * s) + cd[68] + 36)]):
                                        require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                        _6245 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                        require s < ('cd', 36).length
                                        require s + 1 < ('cd', 36).length
                                        require s < ('cd', 4).length
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                        if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            if not address(cd[((32 * s) + cd[36] + 36)]):
                                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                                _10222 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_10222 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_10222 + 36] = 0
                                                mem[_10222 + 68] = _6245
                                                mem[_10222 + 100] = this.address
                                                mem[_10222 + 132] = 128
                                                mem[_10222 + 164] = mem[_10222]
                                                idx = 0
                                                while idx < mem[_10222]:
                                                    mem[_10222 + idx + 196] = mem[_10222 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_10222] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _6245, address(this.address), 128, mem[_10222 + 164 len mem[_10222] + 32]
                                                else:
                                                    mem[floor32(mem[_10222]) + _10222 + 196] = mem[floor32(mem[_10222]) + _10222 + -(mem[_10222] % 32) + 228 len mem[_10222] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _6245, address(this.address), 128, mem[_10222], mem[_10222 + 196 len floor32(mem[_10222]) + 32]
                                            else:
                                                _10223 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_10223 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_10223 + 36] = _6245
                                                mem[_10223 + 68] = 0
                                                mem[_10223 + 100] = this.address
                                                mem[_10223 + 132] = 128
                                                mem[_10223 + 164] = mem[_10223]
                                                idx = 0
                                                while idx < mem[_10223]:
                                                    mem[_10223 + idx + 196] = mem[_10223 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_10223] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _6245, 0, address(this.address), 128, mem[_10223 + 164 len mem[_10223] + 32]
                                                else:
                                                    mem[floor32(mem[_10223]) + _10223 + 196] = mem[floor32(mem[_10223]) + _10223 + -(mem[_10223] % 32) + 228 len mem[_10223] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _6245, 0, address(this.address), 128, mem[_10223], mem[_10223 + 196 len floor32(mem[_10223]) + 32]
                                        else:
                                            if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                                _10224 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_10224 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_10224 + 36] = 0
                                                mem[_10224 + 68] = _6245
                                                mem[_10224 + 100] = this.address
                                                mem[_10224 + 132] = 128
                                                mem[_10224 + 164] = mem[_10224]
                                                idx = 0
                                                while idx < mem[_10224]:
                                                    mem[_10224 + idx + 196] = mem[_10224 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_10224] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _6245, address(this.address), 128, mem[_10224 + 164 len mem[_10224] + 32]
                                                else:
                                                    mem[floor32(mem[_10224]) + _10224 + 196] = mem[floor32(mem[_10224]) + _10224 + -(mem[_10224] % 32) + 228 len mem[_10224] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _6245, address(this.address), 128, mem[_10224], mem[_10224 + 196 len floor32(mem[_10224]) + 32]
                                            else:
                                                _10225 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_10225 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_10225 + 36] = _6245
                                                mem[_10225 + 68] = 0
                                                mem[_10225 + 100] = this.address
                                                mem[_10225 + 132] = 128
                                                mem[_10225 + 164] = mem[_10225]
                                                idx = 0
                                                while idx < mem[_10225]:
                                                    mem[_10225 + idx + 196] = mem[_10225 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_10225] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _6245, 0, address(this.address), 128, mem[_10225 + 164 len mem[_10225] + 32]
                                                else:
                                                    mem[floor32(mem[_10225]) + _10225 + 196] = mem[floor32(mem[_10225]) + _10225 + -(mem[_10225] % 32) + 228 len mem[_10225] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _6245, 0, address(this.address), 128, mem[_10225], mem[_10225 + 196 len floor32(mem[_10225]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = s + 1
                                        t = 0
                                        u = this.address
                                        continue 
                                    require s < ('cd', 68).length
                                    require s < ('cd', 36).length
                                    require s + 1 < ('cd', 36).length
                                    require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _7197 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    mem[mem[64] + 4] = this.address
                                    mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                            gas gas_remaining wei
                                           args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] >= _7197:
                                        _9065 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require 0 < mem[_9065]
                                        mem[_9065 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                        require 1 < mem[_9065]
                                        mem[_9065 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                        mem[_9065 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_9065 + 100] = _7197
                                        mem[_9065 + 132] = 1
                                        mem[_9065 + 196] = this.address
                                        mem[_9065 + 228] = block.timestamp + 300
                                        mem[_9065 + 164] = 160
                                        mem[_9065 + 260] = mem[_9065]
                                        idx = 0
                                        while idx < 32 * mem[_9065]:
                                            mem[_9065 + idx + 292] = mem[_9065 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                        call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args _7197, 1, 160, address(this.address), block.timestamp + 300, mem[_9065 + 260 len (32 * mem[_9065]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_9065 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = _9065 + ceil32(return_data.size) + 96
                                        require return_data.size >= 32
                                        _14521 = mem[_9065 + 96 len 4], Mask(224, 32, _7197) >> 32
                                        require mem[_9065 + 96 len 4], Mask(224, 32, _7197) >> 32 <= 4294967296
                                        require mem[_9065 + 96 len 4], Mask(224, 32, _7197) >> 32 + 32 <= return_data.size
                                        require mem[mem[_9065 + 96 len 4], Mask(224, 32, _7197) >> 32 + _9065 + 96] <= 4294967296 and mem[_9065 + 96 len 4], Mask(224, 32, _7197) >> 32 + (32 * mem[mem[_9065 + 96 len 4], Mask(224, 32, _7197) >> 32 + _9065 + 96]) + 32 <= return_data.size
                                        mem[_9065 + ceil32(return_data.size) + 96] = mem[mem[_9065 + 96 len 4], Mask(224, 32, _7197) >> 32 + _9065 + 96]
                                        _14911 = mem[_14521 + _9065 + 96]
                                        idx = 0
                                        while idx < 32 * _14911:
                                            mem[_9065 + ceil32(return_data.size) + idx + 128] = mem[_14521 + _9065 + idx + 128]
                                            idx = idx + 32
                                            continue 
                                        mem[64] = (32 * _14911) + _9065 + ceil32(return_data.size) + 128
                                    else:
                                        mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                        mem[mem[64] + 36] = 10000 * _7197
                                        require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                        call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _7197
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _10221 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require 0 < mem[_10221]
                                        mem[_10221 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                        require 1 < mem[_10221]
                                        mem[_10221 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                        mem[_10221 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_10221 + 100] = _7197
                                        mem[_10221 + 132] = 1
                                        mem[_10221 + 196] = this.address
                                        mem[_10221 + 228] = block.timestamp + 300
                                        mem[_10221 + 164] = 160
                                        mem[_10221 + 260] = mem[_10221]
                                        idx = 0
                                        while idx < 32 * mem[_10221]:
                                            mem[_10221 + idx + 292] = mem[_10221 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                        call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args _7197, 1, 160, address(this.address), block.timestamp + 300, mem[_10221 + 260 len (32 * mem[_10221]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_10221 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = _10221 + ceil32(return_data.size) + 96
                                        require return_data.size >= 32
                                        _14523 = mem[_10221 + 96 len 4], Mask(224, 32, _7197) >> 32
                                        require mem[_10221 + 96 len 4], Mask(224, 32, _7197) >> 32 <= 4294967296
                                        require mem[_10221 + 96 len 4], Mask(224, 32, _7197) >> 32 + 32 <= return_data.size
                                        require mem[mem[_10221 + 96 len 4], Mask(224, 32, _7197) >> 32 + _10221 + 96] <= 4294967296 and mem[_10221 + 96 len 4], Mask(224, 32, _7197) >> 32 + (32 * mem[mem[_10221 + 96 len 4], Mask(224, 32, _7197) >> 32 + _10221 + 96]) + 32 <= return_data.size
                                        mem[_10221 + ceil32(return_data.size) + 96] = mem[mem[_10221 + 96 len 4], Mask(224, 32, _7197) >> 32 + _10221 + 96]
                                        _14912 = mem[_14523 + _10221 + 96]
                                        idx = 0
                                        while idx < 32 * _14912:
                                            mem[_10221 + ceil32(return_data.size) + idx + 128] = mem[_14523 + _10221 + idx + 128]
                                            idx = idx + 32
                                            continue 
                                        mem[64] = (32 * _14912) + _10221 + ceil32(return_data.size) + 128
                                else:
                                    if not address(cd[((32 * s) + cd[68] + 36)]):
                                        require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                        _6246 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                        require s < ('cd', 36).length
                                        require 0 < ('cd', 36).length
                                        require s < ('cd', 4).length
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                            revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                        if address(cd[((32 * s) + cd[36] + 36)]) < address(('cd', 36)[0]):
                                            if not address(cd[((32 * s) + cd[36] + 36)]):
                                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                                _10230 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_10230 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_10230 + 36] = 0
                                                mem[_10230 + 68] = _6246
                                                mem[_10230 + 100] = this.address
                                                mem[_10230 + 132] = 128
                                                mem[_10230 + 164] = mem[_10230]
                                                idx = 0
                                                while idx < mem[_10230]:
                                                    mem[_10230 + idx + 196] = mem[_10230 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_10230] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _6246, address(this.address), 128, mem[_10230 + 164 len mem[_10230] + 32]
                                                else:
                                                    mem[floor32(mem[_10230]) + _10230 + 196] = mem[floor32(mem[_10230]) + _10230 + -(mem[_10230] % 32) + 228 len mem[_10230] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _6246, address(this.address), 128, mem[_10230], mem[_10230 + 196 len floor32(mem[_10230]) + 32]
                                            else:
                                                _10231 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_10231 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_10231 + 36] = _6246
                                                mem[_10231 + 68] = 0
                                                mem[_10231 + 100] = this.address
                                                mem[_10231 + 132] = 128
                                                mem[_10231 + 164] = mem[_10231]
                                                idx = 0
                                                while idx < mem[_10231]:
                                                    mem[_10231 + idx + 196] = mem[_10231 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_10231] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _6246, 0, address(this.address), 128, mem[_10231 + 164 len mem[_10231] + 32]
                                                else:
                                                    mem[floor32(mem[_10231]) + _10231 + 196] = mem[floor32(mem[_10231]) + _10231 + -(mem[_10231] % 32) + 228 len mem[_10231] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _6246, 0, address(this.address), 128, mem[_10231], mem[_10231 + 196 len floor32(mem[_10231]) + 32]
                                        else:
                                            if not address(('cd', 36)[0]):
                                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                            if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                                _10232 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_10232 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_10232 + 36] = 0
                                                mem[_10232 + 68] = _6246
                                                mem[_10232 + 100] = this.address
                                                mem[_10232 + 132] = 128
                                                mem[_10232 + 164] = mem[_10232]
                                                idx = 0
                                                while idx < mem[_10232]:
                                                    mem[_10232 + idx + 196] = mem[_10232 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_10232] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _6246, address(this.address), 128, mem[_10232 + 164 len mem[_10232] + 32]
                                                else:
                                                    mem[floor32(mem[_10232]) + _10232 + 196] = mem[floor32(mem[_10232]) + _10232 + -(mem[_10232] % 32) + 228 len mem[_10232] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _6246, address(this.address), 128, mem[_10232], mem[_10232 + 196 len floor32(mem[_10232]) + 32]
                                            else:
                                                _10233 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_10233 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_10233 + 36] = _6246
                                                mem[_10233 + 68] = 0
                                                mem[_10233 + 100] = this.address
                                                mem[_10233 + 132] = 128
                                                mem[_10233 + 164] = mem[_10233]
                                                idx = 0
                                                while idx < mem[_10233]:
                                                    mem[_10233 + idx + 196] = mem[_10233 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_10233] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _6246, 0, address(this.address), 128, mem[_10233 + 164 len mem[_10233] + 32]
                                                else:
                                                    mem[floor32(mem[_10233]) + _10233 + 196] = mem[floor32(mem[_10233]) + _10233 + -(mem[_10233] % 32) + 228 len mem[_10233] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _6246, 0, address(this.address), 128, mem[_10233], mem[_10233 + 196 len floor32(mem[_10233]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = s + 1
                                        t = 0
                                        u = this.address
                                        continue 
                                    require s < ('cd', 68).length
                                    require s < ('cd', 36).length
                                    require 0 < ('cd', 36).length
                                    require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _7198 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    mem[mem[64] + 4] = this.address
                                    mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                            gas gas_remaining wei
                                           args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] >= _7198:
                                        _9070 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require 0 < mem[_9070]
                                        mem[_9070 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                        require 1 < mem[_9070]
                                        mem[_9070 + 64] = address(('cd', 36)[0])
                                        mem[_9070 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_9070 + 100] = _7198
                                        mem[_9070 + 132] = 1
                                        mem[_9070 + 196] = this.address
                                        mem[_9070 + 228] = block.timestamp + 300
                                        mem[_9070 + 164] = 160
                                        mem[_9070 + 260] = mem[_9070]
                                        idx = 0
                                        while idx < 32 * mem[_9070]:
                                            mem[_9070 + idx + 292] = mem[_9070 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                        call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args _7198, 1, 160, address(this.address), block.timestamp + 300, mem[_9070 + 260 len (32 * mem[_9070]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_9070 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = _9070 + ceil32(return_data.size) + 96
                                        require return_data.size >= 32
                                        _14525 = mem[_9070 + 96 len 4], Mask(224, 32, _7198) >> 32
                                        require mem[_9070 + 96 len 4], Mask(224, 32, _7198) >> 32 <= 4294967296
                                        require mem[_9070 + 96 len 4], Mask(224, 32, _7198) >> 32 + 32 <= return_data.size
                                        require mem[mem[_9070 + 96 len 4], Mask(224, 32, _7198) >> 32 + _9070 + 96] <= 4294967296 and mem[_9070 + 96 len 4], Mask(224, 32, _7198) >> 32 + (32 * mem[mem[_9070 + 96 len 4], Mask(224, 32, _7198) >> 32 + _9070 + 96]) + 32 <= return_data.size
                                        mem[_9070 + ceil32(return_data.size) + 96] = mem[mem[_9070 + 96 len 4], Mask(224, 32, _7198) >> 32 + _9070 + 96]
                                        _14913 = mem[_14525 + _9070 + 96]
                                        idx = 0
                                        while idx < 32 * _14913:
                                            mem[_9070 + ceil32(return_data.size) + idx + 128] = mem[_14525 + _9070 + idx + 128]
                                            idx = idx + 32
                                            continue 
                                        mem[64] = (32 * _14913) + _9070 + ceil32(return_data.size) + 128
                                    else:
                                        mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                        mem[mem[64] + 36] = 10000 * _7198
                                        require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                        call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _7198
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _10229 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require 0 < mem[_10229]
                                        mem[_10229 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                        require 1 < mem[_10229]
                                        mem[_10229 + 64] = address(('cd', 36)[0])
                                        mem[_10229 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_10229 + 100] = _7198
                                        mem[_10229 + 132] = 1
                                        mem[_10229 + 196] = this.address
                                        mem[_10229 + 228] = block.timestamp + 300
                                        mem[_10229 + 164] = 160
                                        mem[_10229 + 260] = mem[_10229]
                                        idx = 0
                                        while idx < 32 * mem[_10229]:
                                            mem[_10229 + idx + 292] = mem[_10229 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                        call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args _7198, 1, 160, address(this.address), block.timestamp + 300, mem[_10229 + 260 len (32 * mem[_10229]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_10229 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = _10229 + ceil32(return_data.size) + 96
                                        require return_data.size >= 32
                                        _14527 = mem[_10229 + 96 len 4], Mask(224, 32, _7198) >> 32
                                        require mem[_10229 + 96 len 4], Mask(224, 32, _7198) >> 32 <= 4294967296
                                        require mem[_10229 + 96 len 4], Mask(224, 32, _7198) >> 32 + 32 <= return_data.size
                                        require mem[mem[_10229 + 96 len 4], Mask(224, 32, _7198) >> 32 + _10229 + 96] <= 4294967296 and mem[_10229 + 96 len 4], Mask(224, 32, _7198) >> 32 + (32 * mem[mem[_10229 + 96 len 4], Mask(224, 32, _7198) >> 32 + _10229 + 96]) + 32 <= return_data.size
                                        mem[_10229 + ceil32(return_data.size) + 96] = mem[mem[_10229 + 96 len 4], Mask(224, 32, _7198) >> 32 + _10229 + 96]
                                        _14914 = mem[_14527 + _10229 + 96]
                                        idx = 0
                                        while idx < 32 * _14914:
                                            mem[_10229 + ceil32(return_data.size) + idx + 128] = mem[_14527 + _10229 + idx + 128]
                                            idx = idx + 32
                                            continue 
                                        mem[64] = (32 * _14914) + _10229 + ceil32(return_data.size) + 128
                        else:
                            require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            _4744 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                            mem[mem[64] + 4] = address(cd[((32 * s) + cd[4] + 36)])
                            mem[mem[64] + 36] = _4744
                            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                            call address(cd[((32 * s) + cd[36] + 36)]).0xa9059cbb with:
                                 gas gas_remaining wei
                                args address(cd[((32 * s) + cd[4] + 36)]), _4744
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require s < ('cd', 68).length
                            if not s:
                                if not address(cd[((32 * s) + cd[68] + 36)]):
                                    require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _6244 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    require s < ('cd', 36).length
                                    require s + 1 < ('cd', 36).length
                                    require s < ('cd', 4).length
                                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                    if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                        if not address(cd[((32 * s) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                            _10214 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_10214 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_10214 + 36] = 0
                                            mem[_10214 + 68] = _6244
                                            mem[_10214 + 100] = this.address
                                            mem[_10214 + 132] = 128
                                            mem[_10214 + 164] = mem[_10214]
                                            idx = 0
                                            while idx < mem[_10214]:
                                                mem[_10214 + idx + 196] = mem[_10214 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_10214] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _6244, address(this.address), 128, mem[_10214 + 164 len mem[_10214] + 32]
                                            else:
                                                mem[floor32(mem[_10214]) + _10214 + 196] = mem[floor32(mem[_10214]) + _10214 + -(mem[_10214] % 32) + 228 len mem[_10214] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _6244, address(this.address), 128, mem[_10214], mem[_10214 + 196 len floor32(mem[_10214]) + 32]
                                        else:
                                            _10215 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_10215 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_10215 + 36] = _6244
                                            mem[_10215 + 68] = 0
                                            mem[_10215 + 100] = this.address
                                            mem[_10215 + 132] = 128
                                            mem[_10215 + 164] = mem[_10215]
                                            idx = 0
                                            while idx < mem[_10215]:
                                                mem[_10215 + idx + 196] = mem[_10215 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_10215] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _6244, 0, address(this.address), 128, mem[_10215 + 164 len mem[_10215] + 32]
                                            else:
                                                mem[floor32(mem[_10215]) + _10215 + 196] = mem[floor32(mem[_10215]) + _10215 + -(mem[_10215] % 32) + 228 len mem[_10215] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _6244, 0, address(this.address), 128, mem[_10215], mem[_10215 + 196 len floor32(mem[_10215]) + 32]
                                    else:
                                        if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            _10216 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_10216 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_10216 + 36] = 0
                                            mem[_10216 + 68] = _6244
                                            mem[_10216 + 100] = this.address
                                            mem[_10216 + 132] = 128
                                            mem[_10216 + 164] = mem[_10216]
                                            idx = 0
                                            while idx < mem[_10216]:
                                                mem[_10216 + idx + 196] = mem[_10216 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_10216] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _6244, address(this.address), 128, mem[_10216 + 164 len mem[_10216] + 32]
                                            else:
                                                mem[floor32(mem[_10216]) + _10216 + 196] = mem[floor32(mem[_10216]) + _10216 + -(mem[_10216] % 32) + 228 len mem[_10216] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args 0, _6244, address(this.address), 128, mem[_10216], mem[_10216 + 196 len floor32(mem[_10216]) + 32]
                                        else:
                                            _10217 = mem[64]
                                            mem[64] = mem[64] + 32
                                            mem[_10217 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                            mem[_10217 + 36] = _6244
                                            mem[_10217 + 68] = 0
                                            mem[_10217 + 100] = this.address
                                            mem[_10217 + 132] = 128
                                            mem[_10217 + 164] = mem[_10217]
                                            idx = 0
                                            while idx < mem[_10217]:
                                                mem[_10217 + idx + 196] = mem[_10217 + idx + 32]
                                                idx = idx + 32
                                                continue 
                                            if not mem[_10217] % 32:
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _6244, 0, address(this.address), 128, mem[_10217 + 164 len mem[_10217] + 32]
                                            else:
                                                mem[floor32(mem[_10217]) + _10217 + 196] = mem[floor32(mem[_10217]) + _10217 + -(mem[_10217] % 32) + 228 len mem[_10217] % 32]
                                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args _6244, 0, address(this.address), 128, mem[_10217], mem[_10217 + 196 len floor32(mem[_10217]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    s = s + 1
                                    t = 0
                                    u = this.address
                                    continue 
                                require 0 < ('cd', 68).length
                                require s < ('cd', 36).length
                                require s + 1 < ('cd', 36).length
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = address(('cd', 68)[0])
                                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), address(('cd', 68)[0])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0] >= cd[100]:
                                    _8755 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_8755]
                                    mem[_8755 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_8755]
                                    mem[_8755 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                    mem[_8755 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_8755 + 100] = cd[100]
                                    mem[_8755 + 132] = 1
                                    mem[_8755 + 196] = this.address
                                    mem[_8755 + 228] = block.timestamp + 300
                                    mem[_8755 + 164] = 160
                                    mem[_8755 + 260] = mem[_8755]
                                    idx = 0
                                    while idx < 32 * mem[_8755]:
                                        mem[_8755 + idx + 292] = mem[_8755 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(('cd', 68)[0]))
                                    call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_8755 + 260 len (32 * mem[_8755]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_8755 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _8755 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14517 = mem[_8755 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                                    require mem[_8755 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                                    require mem[_8755 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                                    require mem[mem[_8755 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _8755 + 96] <= 4294967296 and mem[_8755 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_8755 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _8755 + 96]) + 32 <= return_data.size
                                    mem[_8755 + ceil32(return_data.size) + 96] = mem[mem[_8755 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _8755 + 96]
                                    _14909 = mem[_14517 + _8755 + 96]
                                    idx = 0
                                    while idx < 32 * _14909:
                                        mem[_8755 + ceil32(return_data.size) + idx + 128] = mem[_14517 + _8755 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14909) + _8755 + ceil32(return_data.size) + 128
                                else:
                                    mem[mem[64] + 4] = address(('cd', 68)[0])
                                    mem[mem[64] + 36] = 10000 * cd[100]
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(('cd', 68)[0]), 10000 * cd[100]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _9998 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    require 0 < mem[_9998]
                                    mem[_9998 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                    require 1 < mem[_9998]
                                    mem[_9998 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                    mem[_9998 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[_9998 + 100] = cd[100]
                                    mem[_9998 + 132] = 1
                                    mem[_9998 + 196] = this.address
                                    mem[_9998 + 228] = block.timestamp + 300
                                    mem[_9998 + 164] = 160
                                    mem[_9998 + 260] = mem[_9998]
                                    idx = 0
                                    while idx < 32 * mem[_9998]:
                                        mem[_9998 + idx + 292] = mem[_9998 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    require ext_code.size(address(('cd', 68)[0]))
                                    call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_9998 + 260 len (32 * mem[_9998]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_9998 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = _9998 + ceil32(return_data.size) + 96
                                    require return_data.size >= 32
                                    _14519 = mem[_9998 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                                    require mem[_9998 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                                    require mem[_9998 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                                    require mem[mem[_9998 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _9998 + 96] <= 4294967296 and mem[_9998 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_9998 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _9998 + 96]) + 32 <= return_data.size
                                    mem[_9998 + ceil32(return_data.size) + 96] = mem[mem[_9998 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _9998 + 96]
                                    _14910 = mem[_14519 + _9998 + 96]
                                    idx = 0
                                    while idx < 32 * _14910:
                                        mem[_9998 + ceil32(return_data.size) + idx + 128] = mem[_14519 + _9998 + idx + 128]
                                        idx = idx + 32
                                        continue 
                                    mem[64] = (32 * _14910) + _9998 + ceil32(return_data.size) + 128
                            else:
                                if s != ('cd', 36).length - 1:
                                    if not address(cd[((32 * s) + cd[68] + 36)]):
                                        require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                        _6503 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                        require s < ('cd', 36).length
                                        require s + 1 < ('cd', 36).length
                                        require s < ('cd', 4).length
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                        if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                            if not address(cd[((32 * s) + cd[36] + 36)]):
                                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                                _10535 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_10535 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_10535 + 36] = 0
                                                mem[_10535 + 68] = _6503
                                                mem[_10535 + 100] = this.address
                                                mem[_10535 + 132] = 128
                                                mem[_10535 + 164] = mem[_10535]
                                                idx = 0
                                                while idx < mem[_10535]:
                                                    mem[_10535 + idx + 196] = mem[_10535 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_10535] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _6503, address(this.address), 128, mem[_10535 + 164 len mem[_10535] + 32]
                                                else:
                                                    mem[floor32(mem[_10535]) + _10535 + 196] = mem[floor32(mem[_10535]) + _10535 + -(mem[_10535] % 32) + 228 len mem[_10535] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _6503, address(this.address), 128, mem[_10535], mem[_10535 + 196 len floor32(mem[_10535]) + 32]
                                            else:
                                                _10536 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_10536 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_10536 + 36] = _6503
                                                mem[_10536 + 68] = 0
                                                mem[_10536 + 100] = this.address
                                                mem[_10536 + 132] = 128
                                                mem[_10536 + 164] = mem[_10536]
                                                idx = 0
                                                while idx < mem[_10536]:
                                                    mem[_10536 + idx + 196] = mem[_10536 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_10536] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _6503, 0, address(this.address), 128, mem[_10536 + 164 len mem[_10536] + 32]
                                                else:
                                                    mem[floor32(mem[_10536]) + _10536 + 196] = mem[floor32(mem[_10536]) + _10536 + -(mem[_10536] % 32) + 228 len mem[_10536] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _6503, 0, address(this.address), 128, mem[_10536], mem[_10536 + 196 len floor32(mem[_10536]) + 32]
                                        else:
                                            if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                                _10537 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_10537 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_10537 + 36] = 0
                                                mem[_10537 + 68] = _6503
                                                mem[_10537 + 100] = this.address
                                                mem[_10537 + 132] = 128
                                                mem[_10537 + 164] = mem[_10537]
                                                idx = 0
                                                while idx < mem[_10537]:
                                                    mem[_10537 + idx + 196] = mem[_10537 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_10537] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _6503, address(this.address), 128, mem[_10537 + 164 len mem[_10537] + 32]
                                                else:
                                                    mem[floor32(mem[_10537]) + _10537 + 196] = mem[floor32(mem[_10537]) + _10537 + -(mem[_10537] % 32) + 228 len mem[_10537] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _6503, address(this.address), 128, mem[_10537], mem[_10537 + 196 len floor32(mem[_10537]) + 32]
                                            else:
                                                _10538 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_10538 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_10538 + 36] = _6503
                                                mem[_10538 + 68] = 0
                                                mem[_10538 + 100] = this.address
                                                mem[_10538 + 132] = 128
                                                mem[_10538 + 164] = mem[_10538]
                                                idx = 0
                                                while idx < mem[_10538]:
                                                    mem[_10538 + idx + 196] = mem[_10538 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_10538] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _6503, 0, address(this.address), 128, mem[_10538 + 164 len mem[_10538] + 32]
                                                else:
                                                    mem[floor32(mem[_10538]) + _10538 + 196] = mem[floor32(mem[_10538]) + _10538 + -(mem[_10538] % 32) + 228 len mem[_10538] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _6503, 0, address(this.address), 128, mem[_10538], mem[_10538 + 196 len floor32(mem[_10538]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = s + 1
                                        t = 0
                                        u = this.address
                                        continue 
                                    require s < ('cd', 68).length
                                    require s < ('cd', 36).length
                                    require s + 1 < ('cd', 36).length
                                    require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _7442 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    mem[mem[64] + 4] = this.address
                                    mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                            gas gas_remaining wei
                                           args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] >= _7442:
                                        _9402 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require 0 < mem[_9402]
                                        mem[_9402 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                        require 1 < mem[_9402]
                                        mem[_9402 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                        mem[_9402 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_9402 + 100] = _7442
                                        mem[_9402 + 132] = 1
                                        mem[_9402 + 196] = this.address
                                        mem[_9402 + 228] = block.timestamp + 300
                                        mem[_9402 + 164] = 160
                                        mem[_9402 + 260] = mem[_9402]
                                        idx = 0
                                        while idx < 32 * mem[_9402]:
                                            mem[_9402 + idx + 292] = mem[_9402 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                        call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args _7442, 1, 160, address(this.address), block.timestamp + 300, mem[_9402 + 260 len (32 * mem[_9402]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_9402 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = _9402 + ceil32(return_data.size) + 96
                                        require return_data.size >= 32
                                        _14509 = mem[_9402 + 96 len 4], Mask(224, 32, _7442) >> 32
                                        require mem[_9402 + 96 len 4], Mask(224, 32, _7442) >> 32 <= 4294967296
                                        require mem[_9402 + 96 len 4], Mask(224, 32, _7442) >> 32 + 32 <= return_data.size
                                        require mem[mem[_9402 + 96 len 4], Mask(224, 32, _7442) >> 32 + _9402 + 96] <= 4294967296 and mem[_9402 + 96 len 4], Mask(224, 32, _7442) >> 32 + (32 * mem[mem[_9402 + 96 len 4], Mask(224, 32, _7442) >> 32 + _9402 + 96]) + 32 <= return_data.size
                                        mem[_9402 + ceil32(return_data.size) + 96] = mem[mem[_9402 + 96 len 4], Mask(224, 32, _7442) >> 32 + _9402 + 96]
                                        _14905 = mem[_14509 + _9402 + 96]
                                        idx = 0
                                        while idx < 32 * _14905:
                                            mem[_9402 + ceil32(return_data.size) + idx + 128] = mem[_14509 + _9402 + idx + 128]
                                            idx = idx + 32
                                            continue 
                                        mem[64] = (32 * _14905) + _9402 + ceil32(return_data.size) + 128
                                    else:
                                        mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                        mem[mem[64] + 36] = 10000 * _7442
                                        require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                        call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _7442
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _10534 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require 0 < mem[_10534]
                                        mem[_10534 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                        require 1 < mem[_10534]
                                        mem[_10534 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                                        mem[_10534 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_10534 + 100] = _7442
                                        mem[_10534 + 132] = 1
                                        mem[_10534 + 196] = this.address
                                        mem[_10534 + 228] = block.timestamp + 300
                                        mem[_10534 + 164] = 160
                                        mem[_10534 + 260] = mem[_10534]
                                        idx = 0
                                        while idx < 32 * mem[_10534]:
                                            mem[_10534 + idx + 292] = mem[_10534 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                        call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args _7442, 1, 160, address(this.address), block.timestamp + 300, mem[_10534 + 260 len (32 * mem[_10534]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_10534 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = _10534 + ceil32(return_data.size) + 96
                                        require return_data.size >= 32
                                        _14511 = mem[_10534 + 96 len 4], Mask(224, 32, _7442) >> 32
                                        require mem[_10534 + 96 len 4], Mask(224, 32, _7442) >> 32 <= 4294967296
                                        require mem[_10534 + 96 len 4], Mask(224, 32, _7442) >> 32 + 32 <= return_data.size
                                        require mem[mem[_10534 + 96 len 4], Mask(224, 32, _7442) >> 32 + _10534 + 96] <= 4294967296 and mem[_10534 + 96 len 4], Mask(224, 32, _7442) >> 32 + (32 * mem[mem[_10534 + 96 len 4], Mask(224, 32, _7442) >> 32 + _10534 + 96]) + 32 <= return_data.size
                                        mem[_10534 + ceil32(return_data.size) + 96] = mem[mem[_10534 + 96 len 4], Mask(224, 32, _7442) >> 32 + _10534 + 96]
                                        _14906 = mem[_14511 + _10534 + 96]
                                        idx = 0
                                        while idx < 32 * _14906:
                                            mem[_10534 + ceil32(return_data.size) + idx + 128] = mem[_14511 + _10534 + idx + 128]
                                            idx = idx + 32
                                            continue 
                                        mem[64] = (32 * _14906) + _10534 + ceil32(return_data.size) + 128
                                else:
                                    if not address(cd[((32 * s) + cd[68] + 36)]):
                                        require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                        _6504 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                        require s < ('cd', 36).length
                                        require 0 < ('cd', 36).length
                                        require s < ('cd', 4).length
                                        if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                            revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                                        if address(cd[((32 * s) + cd[36] + 36)]) < address(('cd', 36)[0]):
                                            if not address(cd[((32 * s) + cd[36] + 36)]):
                                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                                _10543 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_10543 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_10543 + 36] = 0
                                                mem[_10543 + 68] = _6504
                                                mem[_10543 + 100] = this.address
                                                mem[_10543 + 132] = 128
                                                mem[_10543 + 164] = mem[_10543]
                                                idx = 0
                                                while idx < mem[_10543]:
                                                    mem[_10543 + idx + 196] = mem[_10543 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_10543] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _6504, address(this.address), 128, mem[_10543 + 164 len mem[_10543] + 32]
                                                else:
                                                    mem[floor32(mem[_10543]) + _10543 + 196] = mem[floor32(mem[_10543]) + _10543 + -(mem[_10543] % 32) + 228 len mem[_10543] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _6504, address(this.address), 128, mem[_10543], mem[_10543 + 196 len floor32(mem[_10543]) + 32]
                                            else:
                                                _10544 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_10544 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_10544 + 36] = _6504
                                                mem[_10544 + 68] = 0
                                                mem[_10544 + 100] = this.address
                                                mem[_10544 + 132] = 128
                                                mem[_10544 + 164] = mem[_10544]
                                                idx = 0
                                                while idx < mem[_10544]:
                                                    mem[_10544 + idx + 196] = mem[_10544 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_10544] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _6504, 0, address(this.address), 128, mem[_10544 + 164 len mem[_10544] + 32]
                                                else:
                                                    mem[floor32(mem[_10544]) + _10544 + 196] = mem[floor32(mem[_10544]) + _10544 + -(mem[_10544] % 32) + 228 len mem[_10544] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _6504, 0, address(this.address), 128, mem[_10544], mem[_10544 + 196 len floor32(mem[_10544]) + 32]
                                        else:
                                            if not address(('cd', 36)[0]):
                                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                            if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                                _10545 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_10545 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_10545 + 36] = 0
                                                mem[_10545 + 68] = _6504
                                                mem[_10545 + 100] = this.address
                                                mem[_10545 + 132] = 128
                                                mem[_10545 + 164] = mem[_10545]
                                                idx = 0
                                                while idx < mem[_10545]:
                                                    mem[_10545 + idx + 196] = mem[_10545 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_10545] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _6504, address(this.address), 128, mem[_10545 + 164 len mem[_10545] + 32]
                                                else:
                                                    mem[floor32(mem[_10545]) + _10545 + 196] = mem[floor32(mem[_10545]) + _10545 + -(mem[_10545] % 32) + 228 len mem[_10545] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args 0, _6504, address(this.address), 128, mem[_10545], mem[_10545 + 196 len floor32(mem[_10545]) + 32]
                                            else:
                                                _10546 = mem[64]
                                                mem[64] = mem[64] + 32
                                                mem[_10546 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                                mem[_10546 + 36] = _6504
                                                mem[_10546 + 68] = 0
                                                mem[_10546 + 100] = this.address
                                                mem[_10546 + 132] = 128
                                                mem[_10546 + 164] = mem[_10546]
                                                idx = 0
                                                while idx < mem[_10546]:
                                                    mem[_10546 + idx + 196] = mem[_10546 + idx + 32]
                                                    idx = idx + 32
                                                    continue 
                                                if not mem[_10546] % 32:
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _6504, 0, address(this.address), 128, mem[_10546 + 164 len mem[_10546] + 32]
                                                else:
                                                    mem[floor32(mem[_10546]) + _10546 + 196] = mem[floor32(mem[_10546]) + _10546 + -(mem[_10546] % 32) + 228 len mem[_10546] % 32]
                                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args _6504, 0, address(this.address), 128, mem[_10546], mem[_10546 + 196 len floor32(mem[_10546]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = s + 1
                                        t = 0
                                        u = this.address
                                        continue 
                                    require s < ('cd', 68).length
                                    require s < ('cd', 36).length
                                    require 0 < ('cd', 36).length
                                    require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                                    _7443 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                                    mem[mem[64] + 4] = this.address
                                    mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                    staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                            gas gas_remaining wei
                                           args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] >= _7443:
                                        _9407 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require 0 < mem[_9407]
                                        mem[_9407 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                        require 1 < mem[_9407]
                                        mem[_9407 + 64] = address(('cd', 36)[0])
                                        mem[_9407 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_9407 + 100] = _7443
                                        mem[_9407 + 132] = 1
                                        mem[_9407 + 196] = this.address
                                        mem[_9407 + 228] = block.timestamp + 300
                                        mem[_9407 + 164] = 160
                                        mem[_9407 + 260] = mem[_9407]
                                        idx = 0
                                        while idx < 32 * mem[_9407]:
                                            mem[_9407 + idx + 292] = mem[_9407 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                        call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args _7443, 1, 160, address(this.address), block.timestamp + 300, mem[_9407 + 260 len (32 * mem[_9407]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_9407 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = _9407 + ceil32(return_data.size) + 96
                                        require return_data.size >= 32
                                        _14513 = mem[_9407 + 96 len 4], Mask(224, 32, _7443) >> 32
                                        require mem[_9407 + 96 len 4], Mask(224, 32, _7443) >> 32 <= 4294967296
                                        require mem[_9407 + 96 len 4], Mask(224, 32, _7443) >> 32 + 32 <= return_data.size
                                        require mem[mem[_9407 + 96 len 4], Mask(224, 32, _7443) >> 32 + _9407 + 96] <= 4294967296 and mem[_9407 + 96 len 4], Mask(224, 32, _7443) >> 32 + (32 * mem[mem[_9407 + 96 len 4], Mask(224, 32, _7443) >> 32 + _9407 + 96]) + 32 <= return_data.size
                                        mem[_9407 + ceil32(return_data.size) + 96] = mem[mem[_9407 + 96 len 4], Mask(224, 32, _7443) >> 32 + _9407 + 96]
                                        _14907 = mem[_14513 + _9407 + 96]
                                        idx = 0
                                        while idx < 32 * _14907:
                                            mem[_9407 + ceil32(return_data.size) + idx + 128] = mem[_14513 + _9407 + idx + 128]
                                            idx = idx + 32
                                            continue 
                                        mem[64] = (32 * _14907) + _9407 + ceil32(return_data.size) + 128
                                    else:
                                        mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                                        mem[mem[64] + 36] = 10000 * _7443
                                        require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                                        call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _7443
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _10542 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require 0 < mem[_10542]
                                        mem[_10542 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                                        require 1 < mem[_10542]
                                        mem[_10542 + 64] = address(('cd', 36)[0])
                                        mem[_10542 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_10542 + 100] = _7443
                                        mem[_10542 + 132] = 1
                                        mem[_10542 + 196] = this.address
                                        mem[_10542 + 228] = block.timestamp + 300
                                        mem[_10542 + 164] = 160
                                        mem[_10542 + 260] = mem[_10542]
                                        idx = 0
                                        while idx < 32 * mem[_10542]:
                                            mem[_10542 + idx + 292] = mem[_10542 + idx + 32]
                                            idx = idx + 32
                                            continue 
                                        require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                                        call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args _7443, 1, 160, address(this.address), block.timestamp + 300, mem[_10542 + 260 len (32 * mem[_10542]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_10542 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = _10542 + ceil32(return_data.size) + 96
                                        require return_data.size >= 32
                                        _14515 = mem[_10542 + 96 len 4], Mask(224, 32, _7443) >> 32
                                        require mem[_10542 + 96 len 4], Mask(224, 32, _7443) >> 32 <= 4294967296
                                        require mem[_10542 + 96 len 4], Mask(224, 32, _7443) >> 32 + 32 <= return_data.size
                                        require mem[mem[_10542 + 96 len 4], Mask(224, 32, _7443) >> 32 + _10542 + 96] <= 4294967296 and mem[_10542 + 96 len 4], Mask(224, 32, _7443) >> 32 + (32 * mem[mem[_10542 + 96 len 4], Mask(224, 32, _7443) >> 32 + _10542 + 96]) + 32 <= return_data.size
                                        mem[_10542 + ceil32(return_data.size) + 96] = mem[mem[_10542 + 96 len 4], Mask(224, 32, _7443) >> 32 + _10542 + 96]
                                        _14908 = mem[_14515 + _10542 + 96]
                                        idx = 0
                                        while idx < 32 * _14908:
                                            mem[_10542 + ceil32(return_data.size) + idx + 128] = mem[_14515 + _10542 + idx + 128]
                                            idx = idx + 32
                                            continue 
                                        mem[64] = (32 * _14908) + _10542 + ceil32(return_data.size) + 128
                s = s + 1
                t = 1
                u = this.address
                continue 
            require s + 1 < ('cd', 4).length
            require s < ('cd', 68).length
            if not t:
                if not s:
                    if not address(cd[((32 * s) + cd[68] + 36)]):
                        require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                        _4699 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                        require s < ('cd', 36).length
                        require s + 1 < ('cd', 36).length
                        require s < ('cd', 4).length
                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                            revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                        if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                            if not address(cd[((32 * s) + cd[36] + 36)]):
                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                _6442 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_6442 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_6442 + 36] = 0
                                mem[_6442 + 68] = _4699
                                mem[_6442 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                mem[_6442 + 132] = 128
                                mem[_6442 + 164] = mem[_6442]
                                idx = 0
                                while idx < mem[_6442]:
                                    mem[_6442 + idx + 196] = mem[_6442 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                if not mem[_6442] % 32:
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _4699, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6442 + 164 len mem[_6442] + 32]
                                else:
                                    mem[floor32(mem[_6442]) + _6442 + 196] = mem[floor32(mem[_6442]) + _6442 + -(mem[_6442] % 32) + 228 len mem[_6442] % 32]
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _4699, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6442], mem[_6442 + 196 len floor32(mem[_6442]) + 32]
                            else:
                                _6443 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_6443 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_6443 + 36] = _4699
                                mem[_6443 + 68] = 0
                                mem[_6443 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                mem[_6443 + 132] = 128
                                mem[_6443 + 164] = mem[_6443]
                                idx = 0
                                while idx < mem[_6443]:
                                    mem[_6443 + idx + 196] = mem[_6443 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                if not mem[_6443] % 32:
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _4699, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6443 + 164 len mem[_6443] + 32]
                                else:
                                    mem[floor32(mem[_6443]) + _6443 + 196] = mem[floor32(mem[_6443]) + _6443 + -(mem[_6443] % 32) + 228 len mem[_6443] % 32]
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _4699, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6443], mem[_6443 + 196 len floor32(mem[_6443]) + 32]
                        else:
                            if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                _6444 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_6444 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_6444 + 36] = 0
                                mem[_6444 + 68] = _4699
                                mem[_6444 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                mem[_6444 + 132] = 128
                                mem[_6444 + 164] = mem[_6444]
                                idx = 0
                                while idx < mem[_6444]:
                                    mem[_6444 + idx + 196] = mem[_6444 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                if not mem[_6444] % 32:
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _4699, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6444 + 164 len mem[_6444] + 32]
                                else:
                                    mem[floor32(mem[_6444]) + _6444 + 196] = mem[floor32(mem[_6444]) + _6444 + -(mem[_6444] % 32) + 228 len mem[_6444] % 32]
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _4699, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6444], mem[_6444 + 196 len floor32(mem[_6444]) + 32]
                            else:
                                _6445 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_6445 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_6445 + 36] = _4699
                                mem[_6445 + 68] = 0
                                mem[_6445 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                mem[_6445 + 132] = 128
                                mem[_6445 + 164] = mem[_6445]
                                idx = 0
                                while idx < mem[_6445]:
                                    mem[_6445 + idx + 196] = mem[_6445 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                if not mem[_6445] % 32:
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _4699, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6445 + 164 len mem[_6445] + 32]
                                else:
                                    mem[floor32(mem[_6445]) + _6445 + 196] = mem[floor32(mem[_6445]) + _6445 + -(mem[_6445] % 32) + 228 len mem[_6445] % 32]
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _4699, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6445], mem[_6445 + 196 len floor32(mem[_6445]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        s = s + 1
                        t = 0
                        u = address(cd[((32 * s + 1) + cd[4] + 36)])
                        continue 
                    require 0 < ('cd', 68).length
                    require s < ('cd', 36).length
                    require s + 1 < ('cd', 36).length
                    mem[mem[64] + 4] = this.address
                    mem[mem[64] + 36] = address(('cd', 68)[0])
                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                    staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                            gas gas_remaining wei
                           args address(this.address), address(('cd', 68)[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= cd[100]:
                        _5386 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        require 0 < mem[_5386]
                        mem[_5386 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                        require 1 < mem[_5386]
                        mem[_5386 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                        mem[_5386 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_5386 + 100] = cd[100]
                        mem[_5386 + 132] = 1
                        mem[_5386 + 196] = this.address
                        mem[_5386 + 228] = block.timestamp + 300
                        mem[_5386 + 164] = 160
                        mem[_5386 + 260] = mem[_5386]
                        idx = 0
                        while idx < 32 * mem[_5386]:
                            mem[_5386 + idx + 292] = mem[_5386 + idx + 32]
                            idx = idx + 32
                            continue 
                        require ext_code.size(address(('cd', 68)[0]))
                        call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_5386 + 260 len (32 * mem[_5386]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_5386 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _5386 + ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        _14445 = mem[_5386 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                        require mem[_5386 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                        require mem[_5386 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                        require mem[mem[_5386 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _5386 + 96] <= 4294967296 and mem[_5386 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_5386 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _5386 + 96]) + 32 <= return_data.size
                        mem[_5386 + ceil32(return_data.size) + 96] = mem[mem[_5386 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _5386 + 96]
                        _14873 = mem[_14445 + _5386 + 96]
                        idx = 0
                        while idx < 32 * _14873:
                            mem[_5386 + ceil32(return_data.size) + idx + 128] = mem[_14445 + _5386 + idx + 128]
                            idx = idx + 32
                            continue 
                        mem[64] = (32 * _14873) + _5386 + ceil32(return_data.size) + 128
                    else:
                        mem[mem[64] + 4] = address(('cd', 68)[0])
                        mem[mem[64] + 36] = 10000 * cd[100]
                        require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                        call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(('cd', 68)[0]), 10000 * cd[100]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        _6219 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        require 0 < mem[_6219]
                        mem[_6219 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                        require 1 < mem[_6219]
                        mem[_6219 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                        mem[_6219 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_6219 + 100] = cd[100]
                        mem[_6219 + 132] = 1
                        mem[_6219 + 196] = this.address
                        mem[_6219 + 228] = block.timestamp + 300
                        mem[_6219 + 164] = 160
                        mem[_6219 + 260] = mem[_6219]
                        idx = 0
                        while idx < 32 * mem[_6219]:
                            mem[_6219 + idx + 292] = mem[_6219 + idx + 32]
                            idx = idx + 32
                            continue 
                        require ext_code.size(address(('cd', 68)[0]))
                        call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_6219 + 260 len (32 * mem[_6219]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_6219 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _6219 + ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        _14447 = mem[_6219 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                        require mem[_6219 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                        require mem[_6219 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                        require mem[mem[_6219 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _6219 + 96] <= 4294967296 and mem[_6219 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_6219 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _6219 + 96]) + 32 <= return_data.size
                        mem[_6219 + ceil32(return_data.size) + 96] = mem[mem[_6219 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _6219 + 96]
                        _14874 = mem[_14447 + _6219 + 96]
                        idx = 0
                        while idx < 32 * _14874:
                            mem[_6219 + ceil32(return_data.size) + idx + 128] = mem[_14447 + _6219 + idx + 128]
                            idx = idx + 32
                            continue 
                        mem[64] = (32 * _14874) + _6219 + ceil32(return_data.size) + 128
                else:
                    if s != ('cd', 36).length - 1:
                        if not address(cd[((32 * s) + cd[68] + 36)]):
                            require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            _4739 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                            require s < ('cd', 36).length
                            require s + 1 < ('cd', 36).length
                            require s < ('cd', 4).length
                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                            if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                if not address(cd[((32 * s) + cd[36] + 36)]):
                                    revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                    _6796 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_6796 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_6796 + 36] = 0
                                    mem[_6796 + 68] = _4739
                                    mem[_6796 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    mem[_6796 + 132] = 128
                                    mem[_6796 + 164] = mem[_6796]
                                    t = 0
                                    while t < mem[_6796]:
                                        mem[_6796 + t + 196] = mem[_6796 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_6796] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _4739, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6796 + 164 len mem[_6796] + 32]
                                    else:
                                        mem[floor32(mem[_6796]) + _6796 + 196] = mem[floor32(mem[_6796]) + _6796 + -(mem[_6796] % 32) + 228 len mem[_6796] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _4739, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6796], mem[_6796 + 196 len floor32(mem[_6796]) + 32]
                                else:
                                    _6797 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_6797 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_6797 + 36] = _4739
                                    mem[_6797 + 68] = 0
                                    mem[_6797 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    mem[_6797 + 132] = 128
                                    mem[_6797 + 164] = mem[_6797]
                                    t = 0
                                    while t < mem[_6797]:
                                        mem[_6797 + t + 196] = mem[_6797 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_6797] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _4739, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6797 + 164 len mem[_6797] + 32]
                                    else:
                                        mem[floor32(mem[_6797]) + _6797 + 196] = mem[floor32(mem[_6797]) + _6797 + -(mem[_6797] % 32) + 228 len mem[_6797] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _4739, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6797], mem[_6797 + 196 len floor32(mem[_6797]) + 32]
                            else:
                                if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                    revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                    _6798 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_6798 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_6798 + 36] = 0
                                    mem[_6798 + 68] = _4739
                                    mem[_6798 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    mem[_6798 + 132] = 128
                                    mem[_6798 + 164] = mem[_6798]
                                    t = 0
                                    while t < mem[_6798]:
                                        mem[_6798 + t + 196] = mem[_6798 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_6798] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _4739, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6798 + 164 len mem[_6798] + 32]
                                    else:
                                        mem[floor32(mem[_6798]) + _6798 + 196] = mem[floor32(mem[_6798]) + _6798 + -(mem[_6798] % 32) + 228 len mem[_6798] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _4739, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6798], mem[_6798 + 196 len floor32(mem[_6798]) + 32]
                                else:
                                    _6799 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_6799 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_6799 + 36] = _4739
                                    mem[_6799 + 68] = 0
                                    mem[_6799 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    mem[_6799 + 132] = 128
                                    mem[_6799 + 164] = mem[_6799]
                                    t = 0
                                    while t < mem[_6799]:
                                        mem[_6799 + t + 196] = mem[_6799 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_6799] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _4739, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6799 + 164 len mem[_6799] + 32]
                                    else:
                                        mem[floor32(mem[_6799]) + _6799 + 196] = mem[floor32(mem[_6799]) + _6799 + -(mem[_6799] % 32) + 228 len mem[_6799] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _4739, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6799], mem[_6799 + 196 len floor32(mem[_6799]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            s = s + 1
                            t = 0
                            u = address(cd[((32 * s + 1) + cd[4] + 36)])
                            continue 
                        require s < ('cd', 68).length
                        require s < ('cd', 36).length
                        require s + 1 < ('cd', 36).length
                        require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                        _4928 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                        mem[mem[64] + 4] = this.address
                        mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                        require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                        staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                gas gas_remaining wei
                               args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= _4928:
                            _5740 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            require 0 < mem[_5740]
                            mem[_5740 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                            require 1 < mem[_5740]
                            mem[_5740 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                            mem[_5740 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_5740 + 100] = _4928
                            mem[_5740 + 132] = 1
                            mem[_5740 + 196] = this.address
                            mem[_5740 + 228] = block.timestamp + 300
                            mem[_5740 + 164] = 160
                            mem[_5740 + 260] = mem[_5740]
                            idx = 0
                            while idx < 32 * mem[_5740]:
                                mem[_5740 + idx + 292] = mem[_5740 + idx + 32]
                                idx = idx + 32
                                continue 
                            require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                            call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _4928, 1, 160, address(this.address), block.timestamp + 300, mem[_5740 + 260 len (32 * mem[_5740]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_5740 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _5740 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _14437 = mem[_5740 + 96 len 4], Mask(224, 32, _4928) >> 32
                            require mem[_5740 + 96 len 4], Mask(224, 32, _4928) >> 32 <= 4294967296
                            require mem[_5740 + 96 len 4], Mask(224, 32, _4928) >> 32 + 32 <= return_data.size
                            require mem[mem[_5740 + 96 len 4], Mask(224, 32, _4928) >> 32 + _5740 + 96] <= 4294967296 and mem[_5740 + 96 len 4], Mask(224, 32, _4928) >> 32 + (32 * mem[mem[_5740 + 96 len 4], Mask(224, 32, _4928) >> 32 + _5740 + 96]) + 32 <= return_data.size
                            mem[_5740 + ceil32(return_data.size) + 96] = mem[mem[_5740 + 96 len 4], Mask(224, 32, _4928) >> 32 + _5740 + 96]
                            _14869 = mem[_14437 + _5740 + 96]
                            idx = 0
                            while idx < 32 * _14869:
                                mem[_5740 + ceil32(return_data.size) + idx + 128] = mem[_14437 + _5740 + idx + 128]
                                idx = idx + 32
                                continue 
                            mem[64] = (32 * _14869) + _5740 + ceil32(return_data.size) + 128
                        else:
                            mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                            mem[mem[64] + 36] = 10000 * _4928
                            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                            call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _4928
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            _6795 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            require 0 < mem[_6795]
                            mem[_6795 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                            require 1 < mem[_6795]
                            mem[_6795 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                            mem[_6795 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_6795 + 100] = _4928
                            mem[_6795 + 132] = 1
                            mem[_6795 + 196] = this.address
                            mem[_6795 + 228] = block.timestamp + 300
                            mem[_6795 + 164] = 160
                            mem[_6795 + 260] = mem[_6795]
                            idx = 0
                            while idx < 32 * mem[_6795]:
                                mem[_6795 + idx + 292] = mem[_6795 + idx + 32]
                                idx = idx + 32
                                continue 
                            require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                            call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _4928, 1, 160, address(this.address), block.timestamp + 300, mem[_6795 + 260 len (32 * mem[_6795]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_6795 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _6795 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _14439 = mem[_6795 + 96 len 4], Mask(224, 32, _4928) >> 32
                            require mem[_6795 + 96 len 4], Mask(224, 32, _4928) >> 32 <= 4294967296
                            require mem[_6795 + 96 len 4], Mask(224, 32, _4928) >> 32 + 32 <= return_data.size
                            require mem[mem[_6795 + 96 len 4], Mask(224, 32, _4928) >> 32 + _6795 + 96] <= 4294967296 and mem[_6795 + 96 len 4], Mask(224, 32, _4928) >> 32 + (32 * mem[mem[_6795 + 96 len 4], Mask(224, 32, _4928) >> 32 + _6795 + 96]) + 32 <= return_data.size
                            mem[_6795 + ceil32(return_data.size) + 96] = mem[mem[_6795 + 96 len 4], Mask(224, 32, _4928) >> 32 + _6795 + 96]
                            _14870 = mem[_14439 + _6795 + 96]
                            idx = 0
                            while idx < 32 * _14870:
                                mem[_6795 + ceil32(return_data.size) + idx + 128] = mem[_14439 + _6795 + idx + 128]
                                idx = idx + 32
                                continue 
                            mem[64] = (32 * _14870) + _6795 + ceil32(return_data.size) + 128
                    else:
                        if not address(cd[((32 * s) + cd[68] + 36)]):
                            require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            _4740 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                            require s < ('cd', 36).length
                            require 0 < ('cd', 36).length
                            require s < ('cd', 4).length
                            if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                            if address(cd[((32 * s) + cd[36] + 36)]) < address(('cd', 36)[0]):
                                if not address(cd[((32 * s) + cd[36] + 36)]):
                                    revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                    _6804 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_6804 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_6804 + 36] = 0
                                    mem[_6804 + 68] = _4740
                                    mem[_6804 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    mem[_6804 + 132] = 128
                                    mem[_6804 + 164] = mem[_6804]
                                    t = 0
                                    while t < mem[_6804]:
                                        mem[_6804 + t + 196] = mem[_6804 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_6804] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _4740, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6804 + 164 len mem[_6804] + 32]
                                    else:
                                        mem[floor32(mem[_6804]) + _6804 + 196] = mem[floor32(mem[_6804]) + _6804 + -(mem[_6804] % 32) + 228 len mem[_6804] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _4740, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6804], mem[_6804 + 196 len floor32(mem[_6804]) + 32]
                                else:
                                    _6805 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_6805 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_6805 + 36] = _4740
                                    mem[_6805 + 68] = 0
                                    mem[_6805 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    mem[_6805 + 132] = 128
                                    mem[_6805 + 164] = mem[_6805]
                                    t = 0
                                    while t < mem[_6805]:
                                        mem[_6805 + t + 196] = mem[_6805 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_6805] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _4740, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6805 + 164 len mem[_6805] + 32]
                                    else:
                                        mem[floor32(mem[_6805]) + _6805 + 196] = mem[floor32(mem[_6805]) + _6805 + -(mem[_6805] % 32) + 228 len mem[_6805] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _4740, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6805], mem[_6805 + 196 len floor32(mem[_6805]) + 32]
                            else:
                                if not address(('cd', 36)[0]):
                                    revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                    _6806 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_6806 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_6806 + 36] = 0
                                    mem[_6806 + 68] = _4740
                                    mem[_6806 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    mem[_6806 + 132] = 128
                                    mem[_6806 + 164] = mem[_6806]
                                    t = 0
                                    while t < mem[_6806]:
                                        mem[_6806 + t + 196] = mem[_6806 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_6806] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _4740, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6806 + 164 len mem[_6806] + 32]
                                    else:
                                        mem[floor32(mem[_6806]) + _6806 + 196] = mem[floor32(mem[_6806]) + _6806 + -(mem[_6806] % 32) + 228 len mem[_6806] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _4740, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6806], mem[_6806 + 196 len floor32(mem[_6806]) + 32]
                                else:
                                    _6807 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_6807 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_6807 + 36] = _4740
                                    mem[_6807 + 68] = 0
                                    mem[_6807 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    mem[_6807 + 132] = 128
                                    mem[_6807 + 164] = mem[_6807]
                                    t = 0
                                    while t < mem[_6807]:
                                        mem[_6807 + t + 196] = mem[_6807 + t + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_6807] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _4740, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6807 + 164 len mem[_6807] + 32]
                                    else:
                                        mem[floor32(mem[_6807]) + _6807 + 196] = mem[floor32(mem[_6807]) + _6807 + -(mem[_6807] % 32) + 228 len mem[_6807] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _4740, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_6807], mem[_6807 + 196 len floor32(mem[_6807]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            s = s + 1
                            t = 0
                            u = address(cd[((32 * s + 1) + cd[4] + 36)])
                            continue 
                        require s < ('cd', 68).length
                        require s < ('cd', 36).length
                        require 0 < ('cd', 36).length
                        require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                        _4929 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                        mem[mem[64] + 4] = this.address
                        mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                        require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                        staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                gas gas_remaining wei
                               args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= _4929:
                            _5745 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            require 0 < mem[_5745]
                            mem[_5745 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                            require 1 < mem[_5745]
                            mem[_5745 + 64] = address(('cd', 36)[0])
                            mem[_5745 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_5745 + 100] = _4929
                            mem[_5745 + 132] = 1
                            mem[_5745 + 196] = this.address
                            mem[_5745 + 228] = block.timestamp + 300
                            mem[_5745 + 164] = 160
                            mem[_5745 + 260] = mem[_5745]
                            idx = 0
                            while idx < 32 * mem[_5745]:
                                mem[_5745 + idx + 292] = mem[_5745 + idx + 32]
                                idx = idx + 32
                                continue 
                            require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                            call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _4929, 1, 160, address(this.address), block.timestamp + 300, mem[_5745 + 260 len (32 * mem[_5745]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_5745 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _5745 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _14441 = mem[_5745 + 96 len 4], Mask(224, 32, _4929) >> 32
                            require mem[_5745 + 96 len 4], Mask(224, 32, _4929) >> 32 <= 4294967296
                            require mem[_5745 + 96 len 4], Mask(224, 32, _4929) >> 32 + 32 <= return_data.size
                            require mem[mem[_5745 + 96 len 4], Mask(224, 32, _4929) >> 32 + _5745 + 96] <= 4294967296 and mem[_5745 + 96 len 4], Mask(224, 32, _4929) >> 32 + (32 * mem[mem[_5745 + 96 len 4], Mask(224, 32, _4929) >> 32 + _5745 + 96]) + 32 <= return_data.size
                            mem[_5745 + ceil32(return_data.size) + 96] = mem[mem[_5745 + 96 len 4], Mask(224, 32, _4929) >> 32 + _5745 + 96]
                            _14871 = mem[_14441 + _5745 + 96]
                            idx = 0
                            while idx < 32 * _14871:
                                mem[_5745 + ceil32(return_data.size) + idx + 128] = mem[_14441 + _5745 + idx + 128]
                                idx = idx + 32
                                continue 
                            mem[64] = (32 * _14871) + _5745 + ceil32(return_data.size) + 128
                        else:
                            mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                            mem[mem[64] + 36] = 10000 * _4929
                            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                            call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _4929
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            _6803 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            require 0 < mem[_6803]
                            mem[_6803 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                            require 1 < mem[_6803]
                            mem[_6803 + 64] = address(('cd', 36)[0])
                            mem[_6803 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_6803 + 100] = _4929
                            mem[_6803 + 132] = 1
                            mem[_6803 + 196] = this.address
                            mem[_6803 + 228] = block.timestamp + 300
                            mem[_6803 + 164] = 160
                            mem[_6803 + 260] = mem[_6803]
                            idx = 0
                            while idx < 32 * mem[_6803]:
                                mem[_6803 + idx + 292] = mem[_6803 + idx + 32]
                                idx = idx + 32
                                continue 
                            require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                            call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _4929, 1, 160, address(this.address), block.timestamp + 300, mem[_6803 + 260 len (32 * mem[_6803]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_6803 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _6803 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _14443 = mem[_6803 + 96 len 4], Mask(224, 32, _4929) >> 32
                            require mem[_6803 + 96 len 4], Mask(224, 32, _4929) >> 32 <= 4294967296
                            require mem[_6803 + 96 len 4], Mask(224, 32, _4929) >> 32 + 32 <= return_data.size
                            require mem[mem[_6803 + 96 len 4], Mask(224, 32, _4929) >> 32 + _6803 + 96] <= 4294967296 and mem[_6803 + 96 len 4], Mask(224, 32, _4929) >> 32 + (32 * mem[mem[_6803 + 96 len 4], Mask(224, 32, _4929) >> 32 + _6803 + 96]) + 32 <= return_data.size
                            mem[_6803 + ceil32(return_data.size) + 96] = mem[mem[_6803 + 96 len 4], Mask(224, 32, _4929) >> 32 + _6803 + 96]
                            _14872 = mem[_14443 + _6803 + 96]
                            idx = 0
                            while idx < 32 * _14872:
                                mem[_6803 + ceil32(return_data.size) + idx + 128] = mem[_14443 + _6803 + idx + 128]
                                idx = idx + 32
                                continue 
                            mem[64] = (32 * _14872) + _6803 + ceil32(return_data.size) + 128
                s = s + 1
                t = 1
                u = address(cd[((32 * s + 1) + cd[4] + 36)])
                continue 
            if address(cd[((32 * s) + cd[68] + 36)]):
                require s < ('cd', 68).length
                if not s:
                    if not address(cd[((32 * s) + cd[68] + 36)]):
                        require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                        _4932 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                        require s < ('cd', 36).length
                        require s + 1 < ('cd', 36).length
                        require s < ('cd', 4).length
                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                            revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                        if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                            if not address(cd[((32 * s) + cd[36] + 36)]):
                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                _7685 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_7685 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_7685 + 36] = 0
                                mem[_7685 + 68] = _4932
                                mem[_7685 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                mem[_7685 + 132] = 128
                                mem[_7685 + 164] = mem[_7685]
                                idx = 0
                                while idx < mem[_7685]:
                                    mem[_7685 + idx + 196] = mem[_7685 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                if not mem[_7685] % 32:
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _4932, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_7685 + 164 len mem[_7685] + 32]
                                else:
                                    mem[floor32(mem[_7685]) + _7685 + 196] = mem[floor32(mem[_7685]) + _7685 + -(mem[_7685] % 32) + 228 len mem[_7685] % 32]
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _4932, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_7685], mem[_7685 + 196 len floor32(mem[_7685]) + 32]
                            else:
                                _7686 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_7686 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_7686 + 36] = _4932
                                mem[_7686 + 68] = 0
                                mem[_7686 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                mem[_7686 + 132] = 128
                                mem[_7686 + 164] = mem[_7686]
                                idx = 0
                                while idx < mem[_7686]:
                                    mem[_7686 + idx + 196] = mem[_7686 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                if not mem[_7686] % 32:
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _4932, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_7686 + 164 len mem[_7686] + 32]
                                else:
                                    mem[floor32(mem[_7686]) + _7686 + 196] = mem[floor32(mem[_7686]) + _7686 + -(mem[_7686] % 32) + 228 len mem[_7686] % 32]
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _4932, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_7686], mem[_7686 + 196 len floor32(mem[_7686]) + 32]
                        else:
                            if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                _7687 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_7687 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_7687 + 36] = 0
                                mem[_7687 + 68] = _4932
                                mem[_7687 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                mem[_7687 + 132] = 128
                                mem[_7687 + 164] = mem[_7687]
                                idx = 0
                                while idx < mem[_7687]:
                                    mem[_7687 + idx + 196] = mem[_7687 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                if not mem[_7687] % 32:
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _4932, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_7687 + 164 len mem[_7687] + 32]
                                else:
                                    mem[floor32(mem[_7687]) + _7687 + 196] = mem[floor32(mem[_7687]) + _7687 + -(mem[_7687] % 32) + 228 len mem[_7687] % 32]
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _4932, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_7687], mem[_7687 + 196 len floor32(mem[_7687]) + 32]
                            else:
                                _7688 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_7688 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_7688 + 36] = _4932
                                mem[_7688 + 68] = 0
                                mem[_7688 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                mem[_7688 + 132] = 128
                                mem[_7688 + 164] = mem[_7688]
                                idx = 0
                                while idx < mem[_7688]:
                                    mem[_7688 + idx + 196] = mem[_7688 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                if not mem[_7688] % 32:
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _4932, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_7688 + 164 len mem[_7688] + 32]
                                else:
                                    mem[floor32(mem[_7688]) + _7688 + 196] = mem[floor32(mem[_7688]) + _7688 + -(mem[_7688] % 32) + 228 len mem[_7688] % 32]
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _4932, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_7688], mem[_7688 + 196 len floor32(mem[_7688]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        s = s + 1
                        t = 0
                        u = address(cd[((32 * s + 1) + cd[4] + 36)])
                        continue 
                    require 0 < ('cd', 68).length
                    require s < ('cd', 36).length
                    require s + 1 < ('cd', 36).length
                    mem[mem[64] + 4] = this.address
                    mem[mem[64] + 36] = address(('cd', 68)[0])
                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                    staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                            gas gas_remaining wei
                           args address(this.address), address(('cd', 68)[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= cd[100]:
                        _6222 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        require 0 < mem[_6222]
                        mem[_6222 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                        require 1 < mem[_6222]
                        mem[_6222 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                        mem[_6222 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_6222 + 100] = cd[100]
                        mem[_6222 + 132] = 1
                        mem[_6222 + 196] = this.address
                        mem[_6222 + 228] = block.timestamp + 300
                        mem[_6222 + 164] = 160
                        mem[_6222 + 260] = mem[_6222]
                        idx = 0
                        while idx < 32 * mem[_6222]:
                            mem[_6222 + idx + 292] = mem[_6222 + idx + 32]
                            idx = idx + 32
                            continue 
                        require ext_code.size(address(('cd', 68)[0]))
                        call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_6222 + 260 len (32 * mem[_6222]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_6222 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _6222 + ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        _14457 = mem[_6222 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                        require mem[_6222 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                        require mem[_6222 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                        require mem[mem[_6222 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _6222 + 96] <= 4294967296 and mem[_6222 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_6222 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _6222 + 96]) + 32 <= return_data.size
                        mem[_6222 + ceil32(return_data.size) + 96] = mem[mem[_6222 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _6222 + 96]
                        _14879 = mem[_14457 + _6222 + 96]
                        idx = 0
                        while idx < 32 * _14879:
                            mem[_6222 + ceil32(return_data.size) + idx + 128] = mem[_14457 + _6222 + idx + 128]
                            idx = idx + 32
                            continue 
                        mem[64] = (32 * _14879) + _6222 + ceil32(return_data.size) + 128
                    else:
                        mem[mem[64] + 4] = address(('cd', 68)[0])
                        mem[mem[64] + 36] = 10000 * cd[100]
                        require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                        call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(('cd', 68)[0]), 10000 * cd[100]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        _7409 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        require 0 < mem[_7409]
                        mem[_7409 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                        require 1 < mem[_7409]
                        mem[_7409 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                        mem[_7409 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_7409 + 100] = cd[100]
                        mem[_7409 + 132] = 1
                        mem[_7409 + 196] = this.address
                        mem[_7409 + 228] = block.timestamp + 300
                        mem[_7409 + 164] = 160
                        mem[_7409 + 260] = mem[_7409]
                        idx = 0
                        while idx < 32 * mem[_7409]:
                            mem[_7409 + idx + 292] = mem[_7409 + idx + 32]
                            idx = idx + 32
                            continue 
                        require ext_code.size(address(('cd', 68)[0]))
                        call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_7409 + 260 len (32 * mem[_7409]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_7409 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _7409 + ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        _14459 = mem[_7409 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                        require mem[_7409 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                        require mem[_7409 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                        require mem[mem[_7409 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _7409 + 96] <= 4294967296 and mem[_7409 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_7409 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _7409 + 96]) + 32 <= return_data.size
                        mem[_7409 + ceil32(return_data.size) + 96] = mem[mem[_7409 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _7409 + 96]
                        _14880 = mem[_14459 + _7409 + 96]
                        idx = 0
                        while idx < 32 * _14880:
                            mem[_7409 + ceil32(return_data.size) + idx + 128] = mem[_14459 + _7409 + idx + 128]
                            idx = idx + 32
                            continue 
                        mem[64] = (32 * _14880) + _7409 + ceil32(return_data.size) + 128
                    s = s + 1
                    t = 1
                    u = address(cd[((32 * s + 1) + cd[4] + 36)])
                    continue 
                if s != ('cd', 36).length - 1:
                    if not address(cd[((32 * s) + cd[68] + 36)]):
                        require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                        _5017 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                        require s < ('cd', 36).length
                        require s + 1 < ('cd', 36).length
                        require s < ('cd', 4).length
                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                            revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                        if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                            if not address(cd[((32 * s) + cd[36] + 36)]):
                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                _8069 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8069 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8069 + 36] = 0
                                mem[_8069 + 68] = _5017
                                mem[_8069 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                mem[_8069 + 132] = 128
                                mem[_8069 + 164] = mem[_8069]
                                idx = 0
                                while idx < mem[_8069]:
                                    mem[_8069 + idx + 196] = mem[_8069 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                if not mem[_8069] % 32:
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _5017, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_8069 + 164 len mem[_8069] + 32]
                                else:
                                    mem[floor32(mem[_8069]) + _8069 + 196] = mem[floor32(mem[_8069]) + _8069 + -(mem[_8069] % 32) + 228 len mem[_8069] % 32]
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _5017, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_8069], mem[_8069 + 196 len floor32(mem[_8069]) + 32]
                            else:
                                _8070 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8070 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8070 + 36] = _5017
                                mem[_8070 + 68] = 0
                                mem[_8070 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                mem[_8070 + 132] = 128
                                mem[_8070 + 164] = mem[_8070]
                                idx = 0
                                while idx < mem[_8070]:
                                    mem[_8070 + idx + 196] = mem[_8070 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                if not mem[_8070] % 32:
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _5017, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_8070 + 164 len mem[_8070] + 32]
                                else:
                                    mem[floor32(mem[_8070]) + _8070 + 196] = mem[floor32(mem[_8070]) + _8070 + -(mem[_8070] % 32) + 228 len mem[_8070] % 32]
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _5017, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_8070], mem[_8070 + 196 len floor32(mem[_8070]) + 32]
                        else:
                            if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                _8071 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8071 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8071 + 36] = 0
                                mem[_8071 + 68] = _5017
                                mem[_8071 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                mem[_8071 + 132] = 128
                                mem[_8071 + 164] = mem[_8071]
                                idx = 0
                                while idx < mem[_8071]:
                                    mem[_8071 + idx + 196] = mem[_8071 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                if not mem[_8071] % 32:
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _5017, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_8071 + 164 len mem[_8071] + 32]
                                else:
                                    mem[floor32(mem[_8071]) + _8071 + 196] = mem[floor32(mem[_8071]) + _8071 + -(mem[_8071] % 32) + 228 len mem[_8071] % 32]
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _5017, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_8071], mem[_8071 + 196 len floor32(mem[_8071]) + 32]
                            else:
                                _8072 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8072 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8072 + 36] = _5017
                                mem[_8072 + 68] = 0
                                mem[_8072 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                mem[_8072 + 132] = 128
                                mem[_8072 + 164] = mem[_8072]
                                idx = 0
                                while idx < mem[_8072]:
                                    mem[_8072 + idx + 196] = mem[_8072 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                if not mem[_8072] % 32:
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _5017, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_8072 + 164 len mem[_8072] + 32]
                                else:
                                    mem[floor32(mem[_8072]) + _8072 + 196] = mem[floor32(mem[_8072]) + _8072 + -(mem[_8072] % 32) + 228 len mem[_8072] % 32]
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _5017, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_8072], mem[_8072 + 196 len floor32(mem[_8072]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        s = s + 1
                        t = 0
                        u = address(cd[((32 * s + 1) + cd[4] + 36)])
                        continue 
                    require s < ('cd', 68).length
                    require s < ('cd', 36).length
                    require s + 1 < ('cd', 36).length
                    require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                    _5387 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                    mem[mem[64] + 4] = this.address
                    mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                    staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                            gas gas_remaining wei
                           args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= _5387:
                        _6823 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        require 0 < mem[_6823]
                        mem[_6823 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                        require 1 < mem[_6823]
                        mem[_6823 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                        mem[_6823 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_6823 + 100] = _5387
                        mem[_6823 + 132] = 1
                        mem[_6823 + 196] = this.address
                        mem[_6823 + 228] = block.timestamp + 300
                        mem[_6823 + 164] = 160
                        mem[_6823 + 260] = mem[_6823]
                        idx = 0
                        while idx < 32 * mem[_6823]:
                            mem[_6823 + idx + 292] = mem[_6823 + idx + 32]
                            idx = idx + 32
                            continue 
                        require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                        call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args _5387, 1, 160, address(this.address), block.timestamp + 300, mem[_6823 + 260 len (32 * mem[_6823]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_6823 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _6823 + ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        _14449 = mem[_6823 + 96 len 4], Mask(224, 32, _5387) >> 32
                        require mem[_6823 + 96 len 4], Mask(224, 32, _5387) >> 32 <= 4294967296
                        require mem[_6823 + 96 len 4], Mask(224, 32, _5387) >> 32 + 32 <= return_data.size
                        require mem[mem[_6823 + 96 len 4], Mask(224, 32, _5387) >> 32 + _6823 + 96] <= 4294967296 and mem[_6823 + 96 len 4], Mask(224, 32, _5387) >> 32 + (32 * mem[mem[_6823 + 96 len 4], Mask(224, 32, _5387) >> 32 + _6823 + 96]) + 32 <= return_data.size
                        mem[_6823 + ceil32(return_data.size) + 96] = mem[mem[_6823 + 96 len 4], Mask(224, 32, _5387) >> 32 + _6823 + 96]
                        _14875 = mem[_14449 + _6823 + 96]
                        idx = 0
                        while idx < 32 * _14875:
                            mem[_6823 + ceil32(return_data.size) + idx + 128] = mem[_14449 + _6823 + idx + 128]
                            idx = idx + 32
                            continue 
                        mem[64] = (32 * _14875) + _6823 + ceil32(return_data.size) + 128
                        s = s + 1
                        t = 1
                        u = address(cd[((32 * s + 1) + cd[4] + 36)])
                        continue 
                    mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                    mem[mem[64] + 36] = 10000 * _5387
                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                    call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _5387
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    _8068 = mem[64]
                    mem[mem[64]] = 2
                    mem[64] = mem[64] + 96
                    require 0 < mem[_8068]
                    mem[_8068 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                    require 1 < mem[_8068]
                    mem[_8068 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                    mem[_8068 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_8068 + 100] = _5387
                    mem[_8068 + 132] = 1
                    mem[_8068 + 196] = this.address
                    mem[_8068 + 228] = block.timestamp + 300
                    mem[_8068 + 164] = 160
                    mem[_8068 + 260] = mem[_8068]
                    idx = 0
                    while idx < 32 * mem[_8068]:
                        mem[_8068 + idx + 292] = mem[_8068 + idx + 32]
                        idx = idx + 32
                        continue 
                    require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                    call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                         gas gas_remaining wei
                        args _5387, 1, 160, address(this.address), block.timestamp + 300, mem[_8068 + 260 len (32 * mem[_8068]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_8068 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _8068 + ceil32(return_data.size) + 96
                    require return_data.size >= 32
                    _14451 = mem[_8068 + 96 len 4], Mask(224, 32, _5387) >> 32
                    require mem[_8068 + 96 len 4], Mask(224, 32, _5387) >> 32 <= 4294967296
                    require mem[_8068 + 96 len 4], Mask(224, 32, _5387) >> 32 + 32 <= return_data.size
                    require mem[mem[_8068 + 96 len 4], Mask(224, 32, _5387) >> 32 + _8068 + 96] <= 4294967296 and mem[_8068 + 96 len 4], Mask(224, 32, _5387) >> 32 + (32 * mem[mem[_8068 + 96 len 4], Mask(224, 32, _5387) >> 32 + _8068 + 96]) + 32 <= return_data.size
                    mem[_8068 + ceil32(return_data.size) + 96] = mem[mem[_8068 + 96 len 4], Mask(224, 32, _5387) >> 32 + _8068 + 96]
                    _14876 = mem[_14451 + _8068 + 96]
                    idx = 0
                    while idx < 32 * _14876:
                        mem[_8068 + ceil32(return_data.size) + idx + 128] = mem[_14451 + _8068 + idx + 128]
                        idx = idx + 32
                        continue 
                    mem[64] = (32 * _14876) + _8068 + ceil32(return_data.size) + 128
                    idx = floor32(_14876) + 1
                    t = 1
                    u = address(cd[((32 * floor32(_14876) + 1) + cd[4] + 36)])
                    continue 
                if not address(cd[((32 * s) + cd[68] + 36)]):
                    require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                    _5018 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                    require s < ('cd', 36).length
                    require 0 < ('cd', 36).length
                    require s < ('cd', 4).length
                    if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                        revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                    if address(cd[((32 * s) + cd[36] + 36)]) < address(('cd', 36)[0]):
                        if not address(cd[((32 * s) + cd[36] + 36)]):
                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                            _8077 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_8077 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_8077 + 36] = 0
                            mem[_8077 + 68] = _5018
                            mem[_8077 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                            mem[_8077 + 132] = 128
                            mem[_8077 + 164] = mem[_8077]
                            idx = 0
                            while idx < mem[_8077]:
                                mem[_8077 + idx + 196] = mem[_8077 + idx + 32]
                                idx = idx + 32
                                continue 
                            if not mem[_8077] % 32:
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _5018, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_8077 + 164 len mem[_8077] + 32]
                            else:
                                mem[floor32(mem[_8077]) + _8077 + 196] = mem[floor32(mem[_8077]) + _8077 + -(mem[_8077] % 32) + 228 len mem[_8077] % 32]
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _5018, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_8077], mem[_8077 + 196 len floor32(mem[_8077]) + 32]
                        else:
                            _8078 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_8078 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_8078 + 36] = _5018
                            mem[_8078 + 68] = 0
                            mem[_8078 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                            mem[_8078 + 132] = 128
                            mem[_8078 + 164] = mem[_8078]
                            idx = 0
                            while idx < mem[_8078]:
                                mem[_8078 + idx + 196] = mem[_8078 + idx + 32]
                                idx = idx + 32
                                continue 
                            if not mem[_8078] % 32:
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _5018, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_8078 + 164 len mem[_8078] + 32]
                            else:
                                mem[floor32(mem[_8078]) + _8078 + 196] = mem[floor32(mem[_8078]) + _8078 + -(mem[_8078] % 32) + 228 len mem[_8078] % 32]
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _5018, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_8078], mem[_8078 + 196 len floor32(mem[_8078]) + 32]
                    else:
                        if not address(('cd', 36)[0]):
                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                        if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                            _8079 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_8079 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_8079 + 36] = 0
                            mem[_8079 + 68] = _5018
                            mem[_8079 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                            mem[_8079 + 132] = 128
                            mem[_8079 + 164] = mem[_8079]
                            idx = 0
                            while idx < mem[_8079]:
                                mem[_8079 + idx + 196] = mem[_8079 + idx + 32]
                                idx = idx + 32
                                continue 
                            if not mem[_8079] % 32:
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _5018, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_8079 + 164 len mem[_8079] + 32]
                            else:
                                mem[floor32(mem[_8079]) + _8079 + 196] = mem[floor32(mem[_8079]) + _8079 + -(mem[_8079] % 32) + 228 len mem[_8079] % 32]
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _5018, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_8079], mem[_8079 + 196 len floor32(mem[_8079]) + 32]
                        else:
                            _8080 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_8080 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_8080 + 36] = _5018
                            mem[_8080 + 68] = 0
                            mem[_8080 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                            mem[_8080 + 132] = 128
                            mem[_8080 + 164] = mem[_8080]
                            idx = 0
                            while idx < mem[_8080]:
                                mem[_8080 + idx + 196] = mem[_8080 + idx + 32]
                                idx = idx + 32
                                continue 
                            if not mem[_8080] % 32:
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _5018, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_8080 + 164 len mem[_8080] + 32]
                            else:
                                mem[floor32(mem[_8080]) + _8080 + 196] = mem[floor32(mem[_8080]) + _8080 + -(mem[_8080] % 32) + 228 len mem[_8080] % 32]
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _5018, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_8080], mem[_8080 + 196 len floor32(mem[_8080]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    s = s + 1
                    t = 0
                    u = address(cd[((32 * s + 1) + cd[4] + 36)])
                    continue 
                require s < ('cd', 68).length
                require s < ('cd', 36).length
                require 0 < ('cd', 36).length
                require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                _5388 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                mem[mem[64] + 4] = this.address
                mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                        gas gas_remaining wei
                       args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] >= _5388:
                    _6828 = mem[64]
                    mem[mem[64]] = 2
                    mem[64] = mem[64] + 96
                    require 0 < mem[_6828]
                    mem[_6828 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                    require 1 < mem[_6828]
                    mem[_6828 + 64] = address(('cd', 36)[0])
                    mem[_6828 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_6828 + 100] = _5388
                    mem[_6828 + 132] = 1
                    mem[_6828 + 196] = this.address
                    mem[_6828 + 228] = block.timestamp + 300
                    mem[_6828 + 164] = 160
                    mem[_6828 + 260] = mem[_6828]
                    idx = 0
                    while idx < 32 * mem[_6828]:
                        mem[_6828 + idx + 292] = mem[_6828 + idx + 32]
                        idx = idx + 32
                        continue 
                    require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                    call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                         gas gas_remaining wei
                        args _5388, 1, 160, address(this.address), block.timestamp + 300, mem[_6828 + 260 len (32 * mem[_6828]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_6828 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _6828 + ceil32(return_data.size) + 96
                    require return_data.size >= 32
                    _14453 = mem[_6828 + 96 len 4], Mask(224, 32, _5388) >> 32
                    require mem[_6828 + 96 len 4], Mask(224, 32, _5388) >> 32 <= 4294967296
                    require mem[_6828 + 96 len 4], Mask(224, 32, _5388) >> 32 + 32 <= return_data.size
                    require mem[mem[_6828 + 96 len 4], Mask(224, 32, _5388) >> 32 + _6828 + 96] <= 4294967296 and mem[_6828 + 96 len 4], Mask(224, 32, _5388) >> 32 + (32 * mem[mem[_6828 + 96 len 4], Mask(224, 32, _5388) >> 32 + _6828 + 96]) + 32 <= return_data.size
                    mem[_6828 + ceil32(return_data.size) + 96] = mem[mem[_6828 + 96 len 4], Mask(224, 32, _5388) >> 32 + _6828 + 96]
                    _14877 = mem[_14453 + _6828 + 96]
                    idx = 0
                    while idx < 32 * _14877:
                        mem[_6828 + ceil32(return_data.size) + idx + 128] = mem[_14453 + _6828 + idx + 128]
                        idx = idx + 32
                        continue 
                    mem[64] = (32 * _14877) + _6828 + ceil32(return_data.size) + 128
                    s = s + 1
                    t = 1
                    u = address(cd[((32 * s + 1) + cd[4] + 36)])
                    continue 
                mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                mem[mem[64] + 36] = 10000 * _5388
                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _5388
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                _8076 = mem[64]
                mem[mem[64]] = 2
                mem[64] = mem[64] + 96
                require 0 < mem[_8076]
                mem[_8076 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                require 1 < mem[_8076]
                mem[_8076 + 64] = address(('cd', 36)[0])
                mem[_8076 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                mem[_8076 + 100] = _5388
                mem[_8076 + 132] = 1
                mem[_8076 + 196] = this.address
                mem[_8076 + 228] = block.timestamp + 300
                mem[_8076 + 164] = 160
                mem[_8076 + 260] = mem[_8076]
                idx = 0
                while idx < 32 * mem[_8076]:
                    mem[_8076 + idx + 292] = mem[_8076 + idx + 32]
                    idx = idx + 32
                    continue 
                require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                     gas gas_remaining wei
                    args _5388, 1, 160, address(this.address), block.timestamp + 300, mem[_8076 + 260 len (32 * mem[_8076]) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[_8076 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = _8076 + ceil32(return_data.size) + 96
                require return_data.size >= 32
                _14455 = mem[_8076 + 96 len 4], Mask(224, 32, _5388) >> 32
                require mem[_8076 + 96 len 4], Mask(224, 32, _5388) >> 32 <= 4294967296
                require mem[_8076 + 96 len 4], Mask(224, 32, _5388) >> 32 + 32 <= return_data.size
                require mem[mem[_8076 + 96 len 4], Mask(224, 32, _5388) >> 32 + _8076 + 96] <= 4294967296 and mem[_8076 + 96 len 4], Mask(224, 32, _5388) >> 32 + (32 * mem[mem[_8076 + 96 len 4], Mask(224, 32, _5388) >> 32 + _8076 + 96]) + 32 <= return_data.size
                mem[_8076 + ceil32(return_data.size) + 96] = mem[mem[_8076 + 96 len 4], Mask(224, 32, _5388) >> 32 + _8076 + 96]
                _14878 = mem[_14455 + _8076 + 96]
                idx = 0
                while idx < 32 * _14878:
                    mem[_8076 + ceil32(return_data.size) + idx + 128] = mem[_14455 + _8076 + idx + 128]
                    idx = idx + 32
                    continue 
                mem[64] = (32 * _14878) + _8076 + ceil32(return_data.size) + 128
                idx = floor32(_14878) + 1
                t = 1
                u = address(cd[((32 * floor32(_14878) + 1) + cd[4] + 36)])
                continue 
            require s < ('cd', 36).length
            require s < ('cd', 4).length
            if not s:
                mem[mem[64] + 4] = address(cd[((32 * s) + cd[4] + 36)])
                mem[mem[64] + 36] = cd[100]
                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                call address(cd[((32 * s) + cd[36] + 36)]).0xa9059cbb with:
                     gas gas_remaining wei
                    args address(cd[((32 * s) + cd[4] + 36)]), cd[100]
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require s < ('cd', 68).length
                if not s:
                    if not address(cd[((32 * s) + cd[68] + 36)]):
                        require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                        _6226 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                        require s < ('cd', 36).length
                        require s + 1 < ('cd', 36).length
                        require s < ('cd', 4).length
                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                            revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                        if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                            if not address(cd[((32 * s) + cd[36] + 36)]):
                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                _10200 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_10200 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_10200 + 36] = 0
                                mem[_10200 + 68] = _6226
                                mem[_10200 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                mem[_10200 + 132] = 128
                                mem[_10200 + 164] = mem[_10200]
                                idx = 0
                                while idx < mem[_10200]:
                                    mem[_10200 + idx + 196] = mem[_10200 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                if not mem[_10200] % 32:
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _6226, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10200 + 164 len mem[_10200] + 32]
                                else:
                                    mem[floor32(mem[_10200]) + _10200 + 196] = mem[floor32(mem[_10200]) + _10200 + -(mem[_10200] % 32) + 228 len mem[_10200] % 32]
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _6226, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10200], mem[_10200 + 196 len floor32(mem[_10200]) + 32]
                            else:
                                _10201 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_10201 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_10201 + 36] = _6226
                                mem[_10201 + 68] = 0
                                mem[_10201 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                mem[_10201 + 132] = 128
                                mem[_10201 + 164] = mem[_10201]
                                idx = 0
                                while idx < mem[_10201]:
                                    mem[_10201 + idx + 196] = mem[_10201 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                if not mem[_10201] % 32:
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _6226, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10201 + 164 len mem[_10201] + 32]
                                else:
                                    mem[floor32(mem[_10201]) + _10201 + 196] = mem[floor32(mem[_10201]) + _10201 + -(mem[_10201] % 32) + 228 len mem[_10201] % 32]
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _6226, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10201], mem[_10201 + 196 len floor32(mem[_10201]) + 32]
                        else:
                            if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                _10202 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_10202 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_10202 + 36] = 0
                                mem[_10202 + 68] = _6226
                                mem[_10202 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                mem[_10202 + 132] = 128
                                mem[_10202 + 164] = mem[_10202]
                                idx = 0
                                while idx < mem[_10202]:
                                    mem[_10202 + idx + 196] = mem[_10202 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                if not mem[_10202] % 32:
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _6226, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10202 + 164 len mem[_10202] + 32]
                                else:
                                    mem[floor32(mem[_10202]) + _10202 + 196] = mem[floor32(mem[_10202]) + _10202 + -(mem[_10202] % 32) + 228 len mem[_10202] % 32]
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, _6226, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10202], mem[_10202 + 196 len floor32(mem[_10202]) + 32]
                            else:
                                _10203 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_10203 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_10203 + 36] = _6226
                                mem[_10203 + 68] = 0
                                mem[_10203 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                mem[_10203 + 132] = 128
                                mem[_10203 + 164] = mem[_10203]
                                idx = 0
                                while idx < mem[_10203]:
                                    mem[_10203 + idx + 196] = mem[_10203 + idx + 32]
                                    idx = idx + 32
                                    continue 
                                if not mem[_10203] % 32:
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _6226, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10203 + 164 len mem[_10203] + 32]
                                else:
                                    mem[floor32(mem[_10203]) + _10203 + 196] = mem[floor32(mem[_10203]) + _10203 + -(mem[_10203] % 32) + 228 len mem[_10203] % 32]
                                    require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                    call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args _6226, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10203], mem[_10203 + 196 len floor32(mem[_10203]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        s = s + 1
                        t = 0
                        u = address(cd[((32 * s + 1) + cd[4] + 36)])
                        continue 
                    require 0 < ('cd', 68).length
                    require s < ('cd', 36).length
                    require s + 1 < ('cd', 36).length
                    mem[mem[64] + 4] = this.address
                    mem[mem[64] + 36] = address(('cd', 68)[0])
                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                    staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                            gas gas_remaining wei
                           args address(this.address), address(('cd', 68)[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= cd[100]:
                        _8728 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        require 0 < mem[_8728]
                        mem[_8728 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                        require 1 < mem[_8728]
                        mem[_8728 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                        mem[_8728 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_8728 + 100] = cd[100]
                        mem[_8728 + 132] = 1
                        mem[_8728 + 196] = this.address
                        mem[_8728 + 228] = block.timestamp + 300
                        mem[_8728 + 164] = 160
                        mem[_8728 + 260] = mem[_8728]
                        idx = 0
                        while idx < 32 * mem[_8728]:
                            mem[_8728 + idx + 292] = mem[_8728 + idx + 32]
                            idx = idx + 32
                            continue 
                        require ext_code.size(address(('cd', 68)[0]))
                        call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_8728 + 260 len (32 * mem[_8728]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_8728 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _8728 + ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        _14481 = mem[_8728 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                        require mem[_8728 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                        require mem[_8728 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                        require mem[mem[_8728 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _8728 + 96] <= 4294967296 and mem[_8728 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_8728 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _8728 + 96]) + 32 <= return_data.size
                        mem[_8728 + ceil32(return_data.size) + 96] = mem[mem[_8728 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _8728 + 96]
                        _14891 = mem[_14481 + _8728 + 96]
                        idx = 0
                        while idx < 32 * _14891:
                            mem[_8728 + ceil32(return_data.size) + idx + 128] = mem[_14481 + _8728 + idx + 128]
                            idx = idx + 32
                            continue 
                        mem[64] = (32 * _14891) + _8728 + ceil32(return_data.size) + 128
                    else:
                        mem[mem[64] + 4] = address(('cd', 68)[0])
                        mem[mem[64] + 36] = 10000 * cd[100]
                        require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                        call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(('cd', 68)[0]), 10000 * cd[100]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        _9984 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        require 0 < mem[_9984]
                        mem[_9984 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                        require 1 < mem[_9984]
                        mem[_9984 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                        mem[_9984 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_9984 + 100] = cd[100]
                        mem[_9984 + 132] = 1
                        mem[_9984 + 196] = this.address
                        mem[_9984 + 228] = block.timestamp + 300
                        mem[_9984 + 164] = 160
                        mem[_9984 + 260] = mem[_9984]
                        idx = 0
                        while idx < 32 * mem[_9984]:
                            mem[_9984 + idx + 292] = mem[_9984 + idx + 32]
                            idx = idx + 32
                            continue 
                        require ext_code.size(address(('cd', 68)[0]))
                        call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_9984 + 260 len (32 * mem[_9984]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_9984 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _9984 + ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        _14483 = mem[_9984 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                        require mem[_9984 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                        require mem[_9984 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                        require mem[mem[_9984 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _9984 + 96] <= 4294967296 and mem[_9984 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_9984 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _9984 + 96]) + 32 <= return_data.size
                        mem[_9984 + ceil32(return_data.size) + 96] = mem[mem[_9984 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _9984 + 96]
                        _14892 = mem[_14483 + _9984 + 96]
                        idx = 0
                        while idx < 32 * _14892:
                            mem[_9984 + ceil32(return_data.size) + idx + 128] = mem[_14483 + _9984 + idx + 128]
                            idx = idx + 32
                            continue 
                        mem[64] = (32 * _14892) + _9984 + ceil32(return_data.size) + 128
                else:
                    if s != ('cd', 36).length - 1:
                        if not address(cd[((32 * s) + cd[68] + 36)]):
                            require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            _6458 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                            require s < ('cd', 36).length
                            require s + 1 < ('cd', 36).length
                            require s < ('cd', 4).length
                            if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                            if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                                if not address(cd[((32 * s) + cd[36] + 36)]):
                                    revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                    _10499 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_10499 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_10499 + 36] = 0
                                    mem[_10499 + 68] = _6458
                                    mem[_10499 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    mem[_10499 + 132] = 128
                                    mem[_10499 + 164] = mem[_10499]
                                    idx = 0
                                    while idx < mem[_10499]:
                                        mem[_10499 + idx + 196] = mem[_10499 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    if not mem[_10499] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _6458, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10499 + 164 len mem[_10499] + 32]
                                    else:
                                        mem[floor32(mem[_10499]) + _10499 + 196] = mem[floor32(mem[_10499]) + _10499 + -(mem[_10499] % 32) + 228 len mem[_10499] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _6458, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10499], mem[_10499 + 196 len floor32(mem[_10499]) + 32]
                                else:
                                    _10500 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_10500 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_10500 + 36] = _6458
                                    mem[_10500 + 68] = 0
                                    mem[_10500 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    mem[_10500 + 132] = 128
                                    mem[_10500 + 164] = mem[_10500]
                                    idx = 0
                                    while idx < mem[_10500]:
                                        mem[_10500 + idx + 196] = mem[_10500 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    if not mem[_10500] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _6458, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10500 + 164 len mem[_10500] + 32]
                                    else:
                                        mem[floor32(mem[_10500]) + _10500 + 196] = mem[floor32(mem[_10500]) + _10500 + -(mem[_10500] % 32) + 228 len mem[_10500] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _6458, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10500], mem[_10500 + 196 len floor32(mem[_10500]) + 32]
                            else:
                                if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                                    revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                                    _10501 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_10501 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_10501 + 36] = 0
                                    mem[_10501 + 68] = _6458
                                    mem[_10501 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    mem[_10501 + 132] = 128
                                    mem[_10501 + 164] = mem[_10501]
                                    idx = 0
                                    while idx < mem[_10501]:
                                        mem[_10501 + idx + 196] = mem[_10501 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    if not mem[_10501] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _6458, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10501 + 164 len mem[_10501] + 32]
                                    else:
                                        mem[floor32(mem[_10501]) + _10501 + 196] = mem[floor32(mem[_10501]) + _10501 + -(mem[_10501] % 32) + 228 len mem[_10501] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _6458, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10501], mem[_10501 + 196 len floor32(mem[_10501]) + 32]
                                else:
                                    _10502 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_10502 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_10502 + 36] = _6458
                                    mem[_10502 + 68] = 0
                                    mem[_10502 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    mem[_10502 + 132] = 128
                                    mem[_10502 + 164] = mem[_10502]
                                    idx = 0
                                    while idx < mem[_10502]:
                                        mem[_10502 + idx + 196] = mem[_10502 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    if not mem[_10502] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _6458, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10502 + 164 len mem[_10502] + 32]
                                    else:
                                        mem[floor32(mem[_10502]) + _10502 + 196] = mem[floor32(mem[_10502]) + _10502 + -(mem[_10502] % 32) + 228 len mem[_10502] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _6458, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10502], mem[_10502 + 196 len floor32(mem[_10502]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            s = s + 1
                            t = 0
                            u = address(cd[((32 * s + 1) + cd[4] + 36)])
                            continue 
                        require s < ('cd', 68).length
                        require s < ('cd', 36).length
                        require s + 1 < ('cd', 36).length
                        require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                        _7414 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                        mem[mem[64] + 4] = this.address
                        mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                        require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                        staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                gas gas_remaining wei
                               args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= _7414:
                            _9372 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            require 0 < mem[_9372]
                            mem[_9372 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                            require 1 < mem[_9372]
                            mem[_9372 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                            mem[_9372 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_9372 + 100] = _7414
                            mem[_9372 + 132] = 1
                            mem[_9372 + 196] = this.address
                            mem[_9372 + 228] = block.timestamp + 300
                            mem[_9372 + 164] = 160
                            mem[_9372 + 260] = mem[_9372]
                            idx = 0
                            while idx < 32 * mem[_9372]:
                                mem[_9372 + idx + 292] = mem[_9372 + idx + 32]
                                idx = idx + 32
                                continue 
                            require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                            call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _7414, 1, 160, address(this.address), block.timestamp + 300, mem[_9372 + 260 len (32 * mem[_9372]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_9372 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _9372 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _14473 = mem[_9372 + 96 len 4], Mask(224, 32, _7414) >> 32
                            require mem[_9372 + 96 len 4], Mask(224, 32, _7414) >> 32 <= 4294967296
                            require mem[_9372 + 96 len 4], Mask(224, 32, _7414) >> 32 + 32 <= return_data.size
                            require mem[mem[_9372 + 96 len 4], Mask(224, 32, _7414) >> 32 + _9372 + 96] <= 4294967296 and mem[_9372 + 96 len 4], Mask(224, 32, _7414) >> 32 + (32 * mem[mem[_9372 + 96 len 4], Mask(224, 32, _7414) >> 32 + _9372 + 96]) + 32 <= return_data.size
                            mem[_9372 + ceil32(return_data.size) + 96] = mem[mem[_9372 + 96 len 4], Mask(224, 32, _7414) >> 32 + _9372 + 96]
                            _14887 = mem[_14473 + _9372 + 96]
                            idx = 0
                            while idx < 32 * _14887:
                                mem[_9372 + ceil32(return_data.size) + idx + 128] = mem[_14473 + _9372 + idx + 128]
                                idx = idx + 32
                                continue 
                            mem[64] = (32 * _14887) + _9372 + ceil32(return_data.size) + 128
                        else:
                            mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                            mem[mem[64] + 36] = 10000 * _7414
                            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                            call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _7414
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            _10498 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            require 0 < mem[_10498]
                            mem[_10498 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                            require 1 < mem[_10498]
                            mem[_10498 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                            mem[_10498 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_10498 + 100] = _7414
                            mem[_10498 + 132] = 1
                            mem[_10498 + 196] = this.address
                            mem[_10498 + 228] = block.timestamp + 300
                            mem[_10498 + 164] = 160
                            mem[_10498 + 260] = mem[_10498]
                            idx = 0
                            while idx < 32 * mem[_10498]:
                                mem[_10498 + idx + 292] = mem[_10498 + idx + 32]
                                idx = idx + 32
                                continue 
                            require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                            call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _7414, 1, 160, address(this.address), block.timestamp + 300, mem[_10498 + 260 len (32 * mem[_10498]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_10498 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _10498 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _14475 = mem[_10498 + 96 len 4], Mask(224, 32, _7414) >> 32
                            require mem[_10498 + 96 len 4], Mask(224, 32, _7414) >> 32 <= 4294967296
                            require mem[_10498 + 96 len 4], Mask(224, 32, _7414) >> 32 + 32 <= return_data.size
                            require mem[mem[_10498 + 96 len 4], Mask(224, 32, _7414) >> 32 + _10498 + 96] <= 4294967296 and mem[_10498 + 96 len 4], Mask(224, 32, _7414) >> 32 + (32 * mem[mem[_10498 + 96 len 4], Mask(224, 32, _7414) >> 32 + _10498 + 96]) + 32 <= return_data.size
                            mem[_10498 + ceil32(return_data.size) + 96] = mem[mem[_10498 + 96 len 4], Mask(224, 32, _7414) >> 32 + _10498 + 96]
                            _14888 = mem[_14475 + _10498 + 96]
                            idx = 0
                            while idx < 32 * _14888:
                                mem[_10498 + ceil32(return_data.size) + idx + 128] = mem[_14475 + _10498 + idx + 128]
                                idx = idx + 32
                                continue 
                            mem[64] = (32 * _14888) + _10498 + ceil32(return_data.size) + 128
                    else:
                        if not address(cd[((32 * s) + cd[68] + 36)]):
                            require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                            _6459 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                            require s < ('cd', 36).length
                            require 0 < ('cd', 36).length
                            require s < ('cd', 4).length
                            if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                            if address(cd[((32 * s) + cd[36] + 36)]) < address(('cd', 36)[0]):
                                if not address(cd[((32 * s) + cd[36] + 36)]):
                                    revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                                    _10507 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_10507 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_10507 + 36] = 0
                                    mem[_10507 + 68] = _6459
                                    mem[_10507 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    mem[_10507 + 132] = 128
                                    mem[_10507 + 164] = mem[_10507]
                                    idx = 0
                                    while idx < mem[_10507]:
                                        mem[_10507 + idx + 196] = mem[_10507 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    if not mem[_10507] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _6459, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10507 + 164 len mem[_10507] + 32]
                                    else:
                                        mem[floor32(mem[_10507]) + _10507 + 196] = mem[floor32(mem[_10507]) + _10507 + -(mem[_10507] % 32) + 228 len mem[_10507] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _6459, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10507], mem[_10507 + 196 len floor32(mem[_10507]) + 32]
                                else:
                                    _10508 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_10508 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_10508 + 36] = _6459
                                    mem[_10508 + 68] = 0
                                    mem[_10508 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    mem[_10508 + 132] = 128
                                    mem[_10508 + 164] = mem[_10508]
                                    idx = 0
                                    while idx < mem[_10508]:
                                        mem[_10508 + idx + 196] = mem[_10508 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    if not mem[_10508] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _6459, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10508 + 164 len mem[_10508] + 32]
                                    else:
                                        mem[floor32(mem[_10508]) + _10508 + 196] = mem[floor32(mem[_10508]) + _10508 + -(mem[_10508] % 32) + 228 len mem[_10508] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _6459, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10508], mem[_10508 + 196 len floor32(mem[_10508]) + 32]
                            else:
                                if not address(('cd', 36)[0]):
                                    revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                                if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                                    _10509 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_10509 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_10509 + 36] = 0
                                    mem[_10509 + 68] = _6459
                                    mem[_10509 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    mem[_10509 + 132] = 128
                                    mem[_10509 + 164] = mem[_10509]
                                    idx = 0
                                    while idx < mem[_10509]:
                                        mem[_10509 + idx + 196] = mem[_10509 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    if not mem[_10509] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _6459, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10509 + 164 len mem[_10509] + 32]
                                    else:
                                        mem[floor32(mem[_10509]) + _10509 + 196] = mem[floor32(mem[_10509]) + _10509 + -(mem[_10509] % 32) + 228 len mem[_10509] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, _6459, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10509], mem[_10509 + 196 len floor32(mem[_10509]) + 32]
                                else:
                                    _10510 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_10510 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_10510 + 36] = _6459
                                    mem[_10510 + 68] = 0
                                    mem[_10510 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                                    mem[_10510 + 132] = 128
                                    mem[_10510 + 164] = mem[_10510]
                                    idx = 0
                                    while idx < mem[_10510]:
                                        mem[_10510 + idx + 196] = mem[_10510 + idx + 32]
                                        idx = idx + 32
                                        continue 
                                    if not mem[_10510] % 32:
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _6459, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10510 + 164 len mem[_10510] + 32]
                                    else:
                                        mem[floor32(mem[_10510]) + _10510 + 196] = mem[floor32(mem[_10510]) + _10510 + -(mem[_10510] % 32) + 228 len mem[_10510] % 32]
                                        require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                        call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args _6459, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10510], mem[_10510 + 196 len floor32(mem[_10510]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            s = s + 1
                            t = 0
                            u = address(cd[((32 * s + 1) + cd[4] + 36)])
                            continue 
                        require s < ('cd', 68).length
                        require s < ('cd', 36).length
                        require 0 < ('cd', 36).length
                        require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                        _7415 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                        mem[mem[64] + 4] = this.address
                        mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                        require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                        staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                                gas gas_remaining wei
                               args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= _7415:
                            _9377 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            require 0 < mem[_9377]
                            mem[_9377 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                            require 1 < mem[_9377]
                            mem[_9377 + 64] = address(('cd', 36)[0])
                            mem[_9377 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_9377 + 100] = _7415
                            mem[_9377 + 132] = 1
                            mem[_9377 + 196] = this.address
                            mem[_9377 + 228] = block.timestamp + 300
                            mem[_9377 + 164] = 160
                            mem[_9377 + 260] = mem[_9377]
                            idx = 0
                            while idx < 32 * mem[_9377]:
                                mem[_9377 + idx + 292] = mem[_9377 + idx + 32]
                                idx = idx + 32
                                continue 
                            require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                            call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _7415, 1, 160, address(this.address), block.timestamp + 300, mem[_9377 + 260 len (32 * mem[_9377]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_9377 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _9377 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _14477 = mem[_9377 + 96 len 4], Mask(224, 32, _7415) >> 32
                            require mem[_9377 + 96 len 4], Mask(224, 32, _7415) >> 32 <= 4294967296
                            require mem[_9377 + 96 len 4], Mask(224, 32, _7415) >> 32 + 32 <= return_data.size
                            require mem[mem[_9377 + 96 len 4], Mask(224, 32, _7415) >> 32 + _9377 + 96] <= 4294967296 and mem[_9377 + 96 len 4], Mask(224, 32, _7415) >> 32 + (32 * mem[mem[_9377 + 96 len 4], Mask(224, 32, _7415) >> 32 + _9377 + 96]) + 32 <= return_data.size
                            mem[_9377 + ceil32(return_data.size) + 96] = mem[mem[_9377 + 96 len 4], Mask(224, 32, _7415) >> 32 + _9377 + 96]
                            _14889 = mem[_14477 + _9377 + 96]
                            idx = 0
                            while idx < 32 * _14889:
                                mem[_9377 + ceil32(return_data.size) + idx + 128] = mem[_14477 + _9377 + idx + 128]
                                idx = idx + 32
                                continue 
                            mem[64] = (32 * _14889) + _9377 + ceil32(return_data.size) + 128
                        else:
                            mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                            mem[mem[64] + 36] = 10000 * _7415
                            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                            call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _7415
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            _10506 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            require 0 < mem[_10506]
                            mem[_10506 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                            require 1 < mem[_10506]
                            mem[_10506 + 64] = address(('cd', 36)[0])
                            mem[_10506 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_10506 + 100] = _7415
                            mem[_10506 + 132] = 1
                            mem[_10506 + 196] = this.address
                            mem[_10506 + 228] = block.timestamp + 300
                            mem[_10506 + 164] = 160
                            mem[_10506 + 260] = mem[_10506]
                            idx = 0
                            while idx < 32 * mem[_10506]:
                                mem[_10506 + idx + 292] = mem[_10506 + idx + 32]
                                idx = idx + 32
                                continue 
                            require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                            call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args _7415, 1, 160, address(this.address), block.timestamp + 300, mem[_10506 + 260 len (32 * mem[_10506]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_10506 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _10506 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            _14479 = mem[_10506 + 96 len 4], Mask(224, 32, _7415) >> 32
                            require mem[_10506 + 96 len 4], Mask(224, 32, _7415) >> 32 <= 4294967296
                            require mem[_10506 + 96 len 4], Mask(224, 32, _7415) >> 32 + 32 <= return_data.size
                            require mem[mem[_10506 + 96 len 4], Mask(224, 32, _7415) >> 32 + _10506 + 96] <= 4294967296 and mem[_10506 + 96 len 4], Mask(224, 32, _7415) >> 32 + (32 * mem[mem[_10506 + 96 len 4], Mask(224, 32, _7415) >> 32 + _10506 + 96]) + 32 <= return_data.size
                            mem[_10506 + ceil32(return_data.size) + 96] = mem[mem[_10506 + 96 len 4], Mask(224, 32, _7415) >> 32 + _10506 + 96]
                            _14890 = mem[_14479 + _10506 + 96]
                            idx = 0
                            while idx < 32 * _14890:
                                mem[_10506 + ceil32(return_data.size) + idx + 128] = mem[_14479 + _10506 + idx + 128]
                                idx = idx + 32
                                continue 
                            mem[64] = (32 * _14890) + _10506 + ceil32(return_data.size) + 128
                s = s + 1
                t = 1
                u = address(cd[((32 * s + 1) + cd[4] + 36)])
                continue 
            require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
            _4790 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
            mem[mem[64] + 4] = address(cd[((32 * s) + cd[4] + 36)])
            mem[mem[64] + 36] = _4790
            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
            call address(cd[((32 * s) + cd[36] + 36)]).0xa9059cbb with:
                 gas gas_remaining wei
                args address(cd[((32 * s) + cd[4] + 36)]), _4790
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require s < ('cd', 68).length
            if not s:
                if not address(cd[((32 * s) + cd[68] + 36)]):
                    require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                    _6457 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                    require s < ('cd', 36).length
                    require s + 1 < ('cd', 36).length
                    require s < ('cd', 4).length
                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                        revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                    if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                        if not address(cd[((32 * s) + cd[36] + 36)]):
                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                            _10491 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_10491 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_10491 + 36] = 0
                            mem[_10491 + 68] = _6457
                            mem[_10491 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                            mem[_10491 + 132] = 128
                            mem[_10491 + 164] = mem[_10491]
                            idx = 0
                            while idx < mem[_10491]:
                                mem[_10491 + idx + 196] = mem[_10491 + idx + 32]
                                idx = idx + 32
                                continue 
                            if not mem[_10491] % 32:
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _6457, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10491 + 164 len mem[_10491] + 32]
                            else:
                                mem[floor32(mem[_10491]) + _10491 + 196] = mem[floor32(mem[_10491]) + _10491 + -(mem[_10491] % 32) + 228 len mem[_10491] % 32]
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _6457, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10491], mem[_10491 + 196 len floor32(mem[_10491]) + 32]
                        else:
                            _10492 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_10492 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_10492 + 36] = _6457
                            mem[_10492 + 68] = 0
                            mem[_10492 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                            mem[_10492 + 132] = 128
                            mem[_10492 + 164] = mem[_10492]
                            idx = 0
                            while idx < mem[_10492]:
                                mem[_10492 + idx + 196] = mem[_10492 + idx + 32]
                                idx = idx + 32
                                continue 
                            if not mem[_10492] % 32:
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _6457, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10492 + 164 len mem[_10492] + 32]
                            else:
                                mem[floor32(mem[_10492]) + _10492 + 196] = mem[floor32(mem[_10492]) + _10492 + -(mem[_10492] % 32) + 228 len mem[_10492] % 32]
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _6457, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10492], mem[_10492 + 196 len floor32(mem[_10492]) + 32]
                    else:
                        if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                            _10493 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_10493 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_10493 + 36] = 0
                            mem[_10493 + 68] = _6457
                            mem[_10493 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                            mem[_10493 + 132] = 128
                            mem[_10493 + 164] = mem[_10493]
                            idx = 0
                            while idx < mem[_10493]:
                                mem[_10493 + idx + 196] = mem[_10493 + idx + 32]
                                idx = idx + 32
                                continue 
                            if not mem[_10493] % 32:
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _6457, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10493 + 164 len mem[_10493] + 32]
                            else:
                                mem[floor32(mem[_10493]) + _10493 + 196] = mem[floor32(mem[_10493]) + _10493 + -(mem[_10493] % 32) + 228 len mem[_10493] % 32]
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _6457, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10493], mem[_10493 + 196 len floor32(mem[_10493]) + 32]
                        else:
                            _10494 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_10494 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_10494 + 36] = _6457
                            mem[_10494 + 68] = 0
                            mem[_10494 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                            mem[_10494 + 132] = 128
                            mem[_10494 + 164] = mem[_10494]
                            idx = 0
                            while idx < mem[_10494]:
                                mem[_10494 + idx + 196] = mem[_10494 + idx + 32]
                                idx = idx + 32
                                continue 
                            if not mem[_10494] % 32:
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _6457, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10494 + 164 len mem[_10494] + 32]
                            else:
                                mem[floor32(mem[_10494]) + _10494 + 196] = mem[floor32(mem[_10494]) + _10494 + -(mem[_10494] % 32) + 228 len mem[_10494] % 32]
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _6457, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10494], mem[_10494 + 196 len floor32(mem[_10494]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    s = s + 1
                    t = 0
                    u = address(cd[((32 * s + 1) + cd[4] + 36)])
                    continue 
                require 0 < ('cd', 68).length
                require s < ('cd', 36).length
                require s + 1 < ('cd', 36).length
                mem[mem[64] + 4] = this.address
                mem[mem[64] + 36] = address(('cd', 68)[0])
                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                        gas gas_remaining wei
                       args address(this.address), address(('cd', 68)[0])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] >= cd[100]:
                    _9011 = mem[64]
                    mem[mem[64]] = 2
                    mem[64] = mem[64] + 96
                    require 0 < mem[_9011]
                    mem[_9011 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                    require 1 < mem[_9011]
                    mem[_9011 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                    mem[_9011 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_9011 + 100] = cd[100]
                    mem[_9011 + 132] = 1
                    mem[_9011 + 196] = this.address
                    mem[_9011 + 228] = block.timestamp + 300
                    mem[_9011 + 164] = 160
                    mem[_9011 + 260] = mem[_9011]
                    idx = 0
                    while idx < 32 * mem[_9011]:
                        mem[_9011 + idx + 292] = mem[_9011 + idx + 32]
                        idx = idx + 32
                        continue 
                    require ext_code.size(address(('cd', 68)[0]))
                    call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                         gas gas_remaining wei
                        args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_9011 + 260 len (32 * mem[_9011]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_9011 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _9011 + ceil32(return_data.size) + 96
                    require return_data.size >= 32
                    _14469 = mem[_9011 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                    require mem[_9011 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                    require mem[_9011 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                    require mem[mem[_9011 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _9011 + 96] <= 4294967296 and mem[_9011 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_9011 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _9011 + 96]) + 32 <= return_data.size
                    mem[_9011 + ceil32(return_data.size) + 96] = mem[mem[_9011 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _9011 + 96]
                    _14885 = mem[_14469 + _9011 + 96]
                    idx = 0
                    while idx < 32 * _14885:
                        mem[_9011 + ceil32(return_data.size) + idx + 128] = mem[_14469 + _9011 + idx + 128]
                        idx = idx + 32
                        continue 
                    mem[64] = (32 * _14885) + _9011 + ceil32(return_data.size) + 128
                else:
                    mem[mem[64] + 4] = address(('cd', 68)[0])
                    mem[mem[64] + 36] = 10000 * cd[100]
                    require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                    call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(('cd', 68)[0]), 10000 * cd[100]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    _10197 = mem[64]
                    mem[mem[64]] = 2
                    mem[64] = mem[64] + 96
                    require 0 < mem[_10197]
                    mem[_10197 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                    require 1 < mem[_10197]
                    mem[_10197 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                    mem[_10197 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_10197 + 100] = cd[100]
                    mem[_10197 + 132] = 1
                    mem[_10197 + 196] = this.address
                    mem[_10197 + 228] = block.timestamp + 300
                    mem[_10197 + 164] = 160
                    mem[_10197 + 260] = mem[_10197]
                    idx = 0
                    while idx < 32 * mem[_10197]:
                        mem[_10197 + idx + 292] = mem[_10197 + idx + 32]
                        idx = idx + 32
                        continue 
                    require ext_code.size(address(('cd', 68)[0]))
                    call address(('cd', 68)[0]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                         gas gas_remaining wei
                        args cd[100], 1, 160, address(this.address), block.timestamp + 300, mem[_10197 + 260 len (32 * mem[_10197]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_10197 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _10197 + ceil32(return_data.size) + 96
                    require return_data.size >= 32
                    _14471 = mem[_10197 + 96 len 4], Mask(224, 32, cd[100]) >> 32
                    require mem[_10197 + 96 len 4], Mask(224, 32, cd[100]) >> 32 <= 4294967296
                    require mem[_10197 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + 32 <= return_data.size
                    require mem[mem[_10197 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _10197 + 96] <= 4294967296 and mem[_10197 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + (32 * mem[mem[_10197 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _10197 + 96]) + 32 <= return_data.size
                    mem[_10197 + ceil32(return_data.size) + 96] = mem[mem[_10197 + 96 len 4], Mask(224, 32, cd[100]) >> 32 + _10197 + 96]
                    _14886 = mem[_14471 + _10197 + 96]
                    idx = 0
                    while idx < 32 * _14886:
                        mem[_10197 + ceil32(return_data.size) + idx + 128] = mem[_14471 + _10197 + idx + 128]
                        idx = idx + 32
                        continue 
                    mem[64] = (32 * _14886) + _10197 + ceil32(return_data.size) + 128
                s = s + 1
                t = 1
                u = address(cd[((32 * s + 1) + cd[4] + 36)])
                continue 
            if s != ('cd', 36).length - 1:
                if not address(cd[((32 * s) + cd[68] + 36)]):
                    require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                    _6835 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                    require s < ('cd', 36).length
                    require s + 1 < ('cd', 36).length
                    require s < ('cd', 4).length
                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                        revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                    if address(cd[((32 * s) + cd[36] + 36)]) < address(cd[((32 * s + 1) + cd[36] + 36)]):
                        if not address(cd[((32 * s) + cd[36] + 36)]):
                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                            _10805 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_10805 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_10805 + 36] = 0
                            mem[_10805 + 68] = _6835
                            mem[_10805 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                            mem[_10805 + 132] = 128
                            mem[_10805 + 164] = mem[_10805]
                            idx = 0
                            while idx < mem[_10805]:
                                mem[_10805 + idx + 196] = mem[_10805 + idx + 32]
                                idx = idx + 32
                                continue 
                            if not mem[_10805] % 32:
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _6835, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10805 + 164 len mem[_10805] + 32]
                            else:
                                mem[floor32(mem[_10805]) + _10805 + 196] = mem[floor32(mem[_10805]) + _10805 + -(mem[_10805] % 32) + 228 len mem[_10805] % 32]
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _6835, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10805], mem[_10805 + 196 len floor32(mem[_10805]) + 32]
                        else:
                            _10806 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_10806 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_10806 + 36] = _6835
                            mem[_10806 + 68] = 0
                            mem[_10806 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                            mem[_10806 + 132] = 128
                            mem[_10806 + 164] = mem[_10806]
                            idx = 0
                            while idx < mem[_10806]:
                                mem[_10806 + idx + 196] = mem[_10806 + idx + 32]
                                idx = idx + 32
                                continue 
                            if not mem[_10806] % 32:
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _6835, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10806 + 164 len mem[_10806] + 32]
                            else:
                                mem[floor32(mem[_10806]) + _10806 + 196] = mem[floor32(mem[_10806]) + _10806 + -(mem[_10806] % 32) + 228 len mem[_10806] % 32]
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _6835, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10806], mem[_10806 + 196 len floor32(mem[_10806]) + 32]
                    else:
                        if not address(cd[((32 * s + 1) + cd[36] + 36)]):
                            revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                        if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s + 1) + cd[36] + 36)]):
                            _10807 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_10807 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_10807 + 36] = 0
                            mem[_10807 + 68] = _6835
                            mem[_10807 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                            mem[_10807 + 132] = 128
                            mem[_10807 + 164] = mem[_10807]
                            idx = 0
                            while idx < mem[_10807]:
                                mem[_10807 + idx + 196] = mem[_10807 + idx + 32]
                                idx = idx + 32
                                continue 
                            if not mem[_10807] % 32:
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _6835, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10807 + 164 len mem[_10807] + 32]
                            else:
                                mem[floor32(mem[_10807]) + _10807 + 196] = mem[floor32(mem[_10807]) + _10807 + -(mem[_10807] % 32) + 228 len mem[_10807] % 32]
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, _6835, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10807], mem[_10807 + 196 len floor32(mem[_10807]) + 32]
                        else:
                            _10808 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_10808 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_10808 + 36] = _6835
                            mem[_10808 + 68] = 0
                            mem[_10808 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                            mem[_10808 + 132] = 128
                            mem[_10808 + 164] = mem[_10808]
                            idx = 0
                            while idx < mem[_10808]:
                                mem[_10808 + idx + 196] = mem[_10808 + idx + 32]
                                idx = idx + 32
                                continue 
                            if not mem[_10808] % 32:
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _6835, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10808 + 164 len mem[_10808] + 32]
                            else:
                                mem[floor32(mem[_10808]) + _10808 + 196] = mem[floor32(mem[_10808]) + _10808 + -(mem[_10808] % 32) + 228 len mem[_10808] % 32]
                                require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                                call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args _6835, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10808], mem[_10808 + 196 len floor32(mem[_10808]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    s = s + 1
                    t = 0
                    u = address(cd[((32 * s + 1) + cd[4] + 36)])
                    continue 
                require s < ('cd', 68).length
                require s < ('cd', 36).length
                require s + 1 < ('cd', 36).length
                require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                _7689 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                mem[mem[64] + 4] = this.address
                mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                        gas gas_remaining wei
                       args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] >= _7689:
                    _9716 = mem[64]
                    mem[mem[64]] = 2
                    mem[64] = mem[64] + 96
                    require 0 < mem[_9716]
                    mem[_9716 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                    require 1 < mem[_9716]
                    mem[_9716 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                    mem[_9716 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_9716 + 100] = _7689
                    mem[_9716 + 132] = 1
                    mem[_9716 + 196] = this.address
                    mem[_9716 + 228] = block.timestamp + 300
                    mem[_9716 + 164] = 160
                    mem[_9716 + 260] = mem[_9716]
                    idx = 0
                    while idx < 32 * mem[_9716]:
                        mem[_9716 + idx + 292] = mem[_9716 + idx + 32]
                        idx = idx + 32
                        continue 
                    require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                    call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                         gas gas_remaining wei
                        args _7689, 1, 160, address(this.address), block.timestamp + 300, mem[_9716 + 260 len (32 * mem[_9716]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_9716 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _9716 + ceil32(return_data.size) + 96
                    require return_data.size >= 32
                    _14461 = mem[_9716 + 96 len 4], Mask(224, 32, _7689) >> 32
                    require mem[_9716 + 96 len 4], Mask(224, 32, _7689) >> 32 <= 4294967296
                    require mem[_9716 + 96 len 4], Mask(224, 32, _7689) >> 32 + 32 <= return_data.size
                    require mem[mem[_9716 + 96 len 4], Mask(224, 32, _7689) >> 32 + _9716 + 96] <= 4294967296 and mem[_9716 + 96 len 4], Mask(224, 32, _7689) >> 32 + (32 * mem[mem[_9716 + 96 len 4], Mask(224, 32, _7689) >> 32 + _9716 + 96]) + 32 <= return_data.size
                    mem[_9716 + ceil32(return_data.size) + 96] = mem[mem[_9716 + 96 len 4], Mask(224, 32, _7689) >> 32 + _9716 + 96]
                    _14881 = mem[_14461 + _9716 + 96]
                    idx = 0
                    while idx < 32 * _14881:
                        mem[_9716 + ceil32(return_data.size) + idx + 128] = mem[_14461 + _9716 + idx + 128]
                        idx = idx + 32
                        continue 
                    mem[64] = (32 * _14881) + _9716 + ceil32(return_data.size) + 128
                    s = s + 1
                    t = 1
                    u = address(cd[((32 * s + 1) + cd[4] + 36)])
                    continue 
                mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
                mem[mem[64] + 36] = 10000 * _7689
                require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
                call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _7689
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                _10804 = mem[64]
                mem[mem[64]] = 2
                mem[64] = mem[64] + 96
                require 0 < mem[_10804]
                mem[_10804 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                require 1 < mem[_10804]
                mem[_10804 + 64] = address(cd[((32 * s + 1) + cd[36] + 36)])
                mem[_10804 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                mem[_10804 + 100] = _7689
                mem[_10804 + 132] = 1
                mem[_10804 + 196] = this.address
                mem[_10804 + 228] = block.timestamp + 300
                mem[_10804 + 164] = 160
                mem[_10804 + 260] = mem[_10804]
                _11654 = mem[_10804]
                idx = 0
                while idx < 32 * mem[_10804]:
                    mem[_10804 + idx + 292] = mem[_10804 + idx + 32]
                    idx = idx + 32
                    continue 
                require ext_code.size(address(cd[((Mask(251, 0, mem[_10804]) * 32) + cd[68] + 36)]))
                call address(cd[((Mask(251, 0, mem[_10804]) * 32) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                     gas gas_remaining wei
                    args _7689, 1, 160, address(this.address), block.timestamp + 300, mem[_10804 + 260 len (32 * mem[_10804]) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[_10804 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = _10804 + ceil32(return_data.size) + 96
                require return_data.size >= 32
                _14463 = mem[_10804 + 96 len 4], Mask(224, 32, _7689) >> 32
                require mem[_10804 + 96 len 4], Mask(224, 32, _7689) >> 32 <= 4294967296
                require mem[_10804 + 96 len 4], Mask(224, 32, _7689) >> 32 + 32 <= return_data.size
                require mem[mem[_10804 + 96 len 4], Mask(224, 32, _7689) >> 32 + _10804 + 96] <= 4294967296 and mem[_10804 + 96 len 4], Mask(224, 32, _7689) >> 32 + (32 * mem[mem[_10804 + 96 len 4], Mask(224, 32, _7689) >> 32 + _10804 + 96]) + 32 <= return_data.size
                mem[_10804 + ceil32(return_data.size) + 96] = mem[mem[_10804 + 96 len 4], Mask(224, 32, _7689) >> 32 + _10804 + 96]
                _14882 = mem[_14463 + _10804 + 96]
                idx = 0
                while idx < 32 * _14882:
                    mem[_10804 + ceil32(return_data.size) + idx + 128] = mem[_14463 + _10804 + idx + 128]
                    idx = idx + 32
                    continue 
                mem[64] = (32 * _14882) + _10804 + ceil32(return_data.size) + 128
                idx = floor32(_11654) + 1
                t = 1
                u = address(cd[((32 * floor32(_11654) + 1) + cd[4] + 36)])
                continue 
            if not address(cd[((32 * s) + cd[68] + 36)]):
                require s < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
                _6836 = mem[(32 * s) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
                require s < ('cd', 36).length
                require 0 < ('cd', 36).length
                require s < ('cd', 4).length
                if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                    revert with 0, 32, 37, 0x73556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345, mem[mem[64] + 105 len 27]
                if address(cd[((32 * s) + cd[36] + 36)]) < address(('cd', 36)[0]):
                    if not address(cd[((32 * s) + cd[36] + 36)]):
                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                    if address(cd[((32 * s) + cd[36] + 36)]) == address(cd[((32 * s) + cd[36] + 36)]):
                        _10813 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_10813 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_10813 + 36] = 0
                        mem[_10813 + 68] = _6836
                        mem[_10813 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                        mem[_10813 + 132] = 128
                        mem[_10813 + 164] = mem[_10813]
                        idx = 0
                        while idx < mem[_10813]:
                            mem[_10813 + idx + 196] = mem[_10813 + idx + 32]
                            idx = idx + 32
                            continue 
                        if not mem[_10813] % 32:
                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _6836, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10813 + 164 len mem[_10813] + 32]
                        else:
                            mem[floor32(mem[_10813]) + _10813 + 196] = mem[floor32(mem[_10813]) + _10813 + -(mem[_10813] % 32) + 228 len mem[_10813] % 32]
                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _6836, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10813], mem[_10813 + 196 len floor32(mem[_10813]) + 32]
                    else:
                        _10814 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_10814 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_10814 + 36] = _6836
                        mem[_10814 + 68] = 0
                        mem[_10814 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                        mem[_10814 + 132] = 128
                        mem[_10814 + 164] = mem[_10814]
                        idx = 0
                        while idx < mem[_10814]:
                            mem[_10814 + idx + 196] = mem[_10814 + idx + 32]
                            idx = idx + 32
                            continue 
                        if not mem[_10814] % 32:
                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _6836, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10814 + 164 len mem[_10814] + 32]
                        else:
                            mem[floor32(mem[_10814]) + _10814 + 196] = mem[floor32(mem[_10814]) + _10814 + -(mem[_10814] % 32) + 228 len mem[_10814] % 32]
                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _6836, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10814], mem[_10814 + 196 len floor32(mem[_10814]) + 32]
                else:
                    if not address(('cd', 36)[0]):
                        revert with 0, 'UniswapV2Library: ZERO_ADDRESS'
                    if address(cd[((32 * s) + cd[36] + 36)]) == address(('cd', 36)[0]):
                        _10815 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_10815 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_10815 + 36] = 0
                        mem[_10815 + 68] = _6836
                        mem[_10815 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                        mem[_10815 + 132] = 128
                        mem[_10815 + 164] = mem[_10815]
                        idx = 0
                        while idx < mem[_10815]:
                            mem[_10815 + idx + 196] = mem[_10815 + idx + 32]
                            idx = idx + 32
                            continue 
                        if not mem[_10815] % 32:
                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _6836, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10815 + 164 len mem[_10815] + 32]
                        else:
                            mem[floor32(mem[_10815]) + _10815 + 196] = mem[floor32(mem[_10815]) + _10815 + -(mem[_10815] % 32) + 228 len mem[_10815] % 32]
                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _6836, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10815], mem[_10815 + 196 len floor32(mem[_10815]) + 32]
                    else:
                        _10816 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_10816 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_10816 + 36] = _6836
                        mem[_10816 + 68] = 0
                        mem[_10816 + 100] = address(cd[((32 * s + 1) + cd[4] + 36)])
                        mem[_10816 + 132] = 128
                        mem[_10816 + 164] = mem[_10816]
                        idx = 0
                        while idx < mem[_10816]:
                            mem[_10816 + idx + 196] = mem[_10816 + idx + 32]
                            idx = idx + 32
                            continue 
                        if not mem[_10816] % 32:
                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _6836, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10816 + 164 len mem[_10816] + 32]
                        else:
                            mem[floor32(mem[_10816]) + _10816 + 196] = mem[floor32(mem[_10816]) + _10816 + -(mem[_10816] % 32) + 228 len mem[_10816] % 32]
                            require ext_code.size(address(cd[((32 * s) + cd[4] + 36)]))
                            call address(cd[((32 * s) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args _6836, 0, address(cd[((32 * s + 1) + cd[4] + 36)]), 128, mem[_10816], mem[_10816 + 196 len floor32(mem[_10816]) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                s = s + 1
                t = 0
                u = address(cd[((32 * s + 1) + cd[4] + 36)])
                continue 
            require s < ('cd', 68).length
            require s < ('cd', 36).length
            require 0 < ('cd', 36).length
            require s - 1 < mem[(32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 160]
            _7690 = mem[(32 * s - 1) + (32 * ('cd', 4).length) + (32 * ('cd', 36).length) + 192]
            mem[mem[64] + 4] = this.address
            mem[mem[64] + 36] = address(cd[((32 * s) + cd[68] + 36)])
            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
            staticcall address(cd[((32 * s) + cd[36] + 36)]).0xdd62ed3e with:
                    gas gas_remaining wei
                   args address(this.address), address(cd[((32 * s) + cd[68] + 36)])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] >= _7690:
                _9721 = mem[64]
                mem[mem[64]] = 2
                mem[64] = mem[64] + 96
                require 0 < mem[_9721]
                mem[_9721 + 32] = address(cd[((32 * s) + cd[36] + 36)])
                require 1 < mem[_9721]
                mem[_9721 + 64] = address(('cd', 36)[0])
                mem[_9721 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                mem[_9721 + 100] = _7690
                mem[_9721 + 132] = 1
                mem[_9721 + 196] = this.address
                mem[_9721 + 228] = block.timestamp + 300
                mem[_9721 + 164] = 160
                mem[_9721 + 260] = mem[_9721]
                idx = 0
                while idx < 32 * mem[_9721]:
                    mem[_9721 + idx + 292] = mem[_9721 + idx + 32]
                    idx = idx + 32
                    continue 
                require ext_code.size(address(cd[((32 * s) + cd[68] + 36)]))
                call address(cd[((32 * s) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                     gas gas_remaining wei
                    args _7690, 1, 160, address(this.address), block.timestamp + 300, mem[_9721 + 260 len (32 * mem[_9721]) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[_9721 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = _9721 + ceil32(return_data.size) + 96
                require return_data.size >= 32
                _14465 = mem[_9721 + 96 len 4], Mask(224, 32, _7690) >> 32
                require mem[_9721 + 96 len 4], Mask(224, 32, _7690) >> 32 <= 4294967296
                require mem[_9721 + 96 len 4], Mask(224, 32, _7690) >> 32 + 32 <= return_data.size
                require mem[mem[_9721 + 96 len 4], Mask(224, 32, _7690) >> 32 + _9721 + 96] <= 4294967296 and mem[_9721 + 96 len 4], Mask(224, 32, _7690) >> 32 + (32 * mem[mem[_9721 + 96 len 4], Mask(224, 32, _7690) >> 32 + _9721 + 96]) + 32 <= return_data.size
                mem[_9721 + ceil32(return_data.size) + 96] = mem[mem[_9721 + 96 len 4], Mask(224, 32, _7690) >> 32 + _9721 + 96]
                _14883 = mem[_14465 + _9721 + 96]
                idx = 0
                while idx < 32 * _14883:
                    mem[_9721 + ceil32(return_data.size) + idx + 128] = mem[_14465 + _9721 + idx + 128]
                    idx = idx + 32
                    continue 
                mem[64] = (32 * _14883) + _9721 + ceil32(return_data.size) + 128
                s = s + 1
                t = 1
                u = address(cd[((32 * s + 1) + cd[4] + 36)])
                continue 
            mem[mem[64] + 4] = address(cd[((32 * s) + cd[68] + 36)])
            mem[mem[64] + 36] = 10000 * _7690
            require ext_code.size(address(cd[((32 * s) + cd[36] + 36)]))
            call address(cd[((32 * s) + cd[36] + 36)]).approve(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args address(cd[((32 * s) + cd[68] + 36)]), 10000 * _7690
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            _10812 = mem[64]
            mem[mem[64]] = 2
            mem[64] = mem[64] + 96
            require 0 < mem[_10812]
            mem[_10812 + 32] = address(cd[((32 * s) + cd[36] + 36)])
            require 1 < mem[_10812]
            mem[_10812 + 64] = address(('cd', 36)[0])
            mem[_10812 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
            mem[_10812 + 100] = _7690
            mem[_10812 + 132] = 1
            mem[_10812 + 196] = this.address
            mem[_10812 + 228] = block.timestamp + 300
            mem[_10812 + 164] = 160
            mem[_10812 + 260] = mem[_10812]
            _11666 = mem[_10812]
            idx = 0
            while idx < 32 * mem[_10812]:
                mem[_10812 + idx + 292] = mem[_10812 + idx + 32]
                idx = idx + 32
                continue 
            require ext_code.size(address(cd[((Mask(251, 0, mem[_10812]) * 32) + cd[68] + 36)]))
            call address(cd[((Mask(251, 0, mem[_10812]) * 32) + cd[68] + 36)]).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                 gas gas_remaining wei
                args _7690, 1, 160, address(this.address), block.timestamp + 300, mem[_10812 + 260 len (32 * mem[_10812]) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[_10812 + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = _10812 + ceil32(return_data.size) + 96
            require return_data.size >= 32
            _14467 = mem[_10812 + 96 len 4], Mask(224, 32, _7690) >> 32
            require mem[_10812 + 96 len 4], Mask(224, 32, _7690) >> 32 <= 4294967296
            require mem[_10812 + 96 len 4], Mask(224, 32, _7690) >> 32 + 32 <= return_data.size
            require mem[mem[_10812 + 96 len 4], Mask(224, 32, _7690) >> 32 + _10812 + 96] <= 4294967296 and mem[_10812 + 96 len 4], Mask(224, 32, _7690) >> 32 + (32 * mem[mem[_10812 + 96 len 4], Mask(224, 32, _7690) >> 32 + _10812 + 96]) + 32 <= return_data.size
            mem[_10812 + ceil32(return_data.size) + 96] = mem[mem[_10812 + 96 len 4], Mask(224, 32, _7690) >> 32 + _10812 + 96]
            _14884 = mem[_14467 + _10812 + 96]
            idx = 0
            while idx < 32 * _14884:
                mem[_10812 + ceil32(return_data.size) + idx + 128] = mem[_14467 + _10812 + idx + 128]
                idx = idx + 32
                continue 
            mem[64] = (32 * _14884) + _10812 + ceil32(return_data.size) + 128
            idx = floor32(_11666) + 1
            t = 1
            u = address(cd[((32 * floor32(_11666) + 1) + cd[4] + 36)])
            continue 
}



}
